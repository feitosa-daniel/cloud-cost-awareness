{"no_of_repos": 1278, "repositories": [{"name": "https://github.com/tkhoa2711/terraform-digitalocean.git", "commits": [{"id": "a86d89369aaf5a20c1e4d8415a8a771aa7de7d10", "msg": "provision a droplet with cheapest price", "date": "2020-03-29 16:02:32+11:00", "modified_files": ["main.tf", "outputs.tf", "variable.tf"]}]}, {"name": "https://github.com/zubyranks/terraform-project-lien.git", "commits": [{"id": "e1240f3b16ad4cb9ebfb915e5897619818714afc", "msg": "Added billing API & changed folder-display name", "date": "2021-08-02 05:49:33-04:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "ac50121fb0c604af30cf8e5c70309b3ef0b0f61e", "msg": "Added billingAccountUser @ Org level to SA", "date": "2021-08-02 06:05:55-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/ta8293077/tf-repo1.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/blinkist/terraform-aws-airship-ecs-cluster.git", "commits": [{"id": "d7aa659971bee1be873d3dda92e30443556f52df", "msg": "Removed the default use of detailed monitoring. (#17)\n\n* Reduces CloudWatch costs for metrics by 80%", "date": "2019-09-16 10:14:51+02:00", "modified_files": ["main.tf", "main.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/apfm-actions/terraform-lambda-action.git", "commits": [{"id": "862e6570f41564bf52d4e1dc7d2c1bed77ce8cea", "msg": "Initial terraform files, and dockerfile to add lambda payload into image", "date": "2020-05-11 12:00:39-07:00", "modified_files": ["Dockerfile", "action.yaml", "main.tf", "output.tf", "providers.tf", "variables.tf"]}]}, {"name": "https://github.com/MiravAcademy/terraform-app-module.git", "commits": [{"id": "8dfe4f761bdb3cabf595d008ed6d16ec30b90c4a", "msg": "payroll app module", "date": "2022-01-18 13:29:16+05:18", "modified_files": ["dynamodb.tf", "ec2_instance.tf", "providers.tf", "s3bucket.tf", "terraform.tf", "variables.tf", "main.tf", "main.tf"]}]}, {"name": "https://github.com/stealthHat/k8s-terraform.git", "commits": [{"id": "681a3f8b4942be495b3f2528fb9ee40d7a4eb08a", "msg": "nat gateway is verry expensive", "date": "2020-11-07 13:09:32-03:00", "modified_files": ["main.tf", "main.tf"]}]}, {"name": "https://github.com/MH4GF/terraform-aws.git", "commits": [{"id": "4e8b002593467210e48e46ce8d0ac9b24a3027ac", "msg": "Add: BillingAlarm to slack", "date": "2021-10-20 22:30:04+09:00", "modified_files": ["cloudwatch.tf", "provider.tf", "sns.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-aws-codebuild-container.git", "commits": [{"id": "4a00ffcbf9576d7e5febdbdf94a31d4735fc8035", "msg": "costs", "date": "2021-05-19 13:02:12+01:00", "modified_files": ["Dockerfile", "aws_kms_key.codebuild.tf", "infracost-usage.yml", "module.container.tf", "module.codebuild.tf", "module.ecr.tf"]}, {"id": "43c1d8f2cd1c131ed16e3ba03b20a3bb8f2b634d", "msg": "costs", "date": "2021-05-19 13:10:59+01:00", "modified_files": ["README.md", "Dockerfile", "aws_kms_key.codebuild.tf", "module.ecr.tf"]}]}, {"name": "https://github.com/nikkaushal/terraform-payment.git", "commits": [{"id": "8dda365513255ed95f3be2f2d7a597b5508f01e0", "msg": "payment", "date": "2021-01-25 20:19:44-05:00", "modified_files": ["Makefile", "README.md", "asg.tf", "dev.tfvars", "prod.tfvars", "data.tf", "dev.tfvars", "outputs.tf", "provider.tf", "state.tf", "vars.tf"]}, {"id": "df7e79d3bbed9a0228d44d937f8f62544fc81ba9", "msg": "terraform-payment", "date": "2021-03-19 17:25:51-04:00", "modified_files": ["asg.tf", "vars.tf"]}, {"id": "8e7b99cdfd539857d2c8ac40e00759302b1dbdf3", "msg": "TF payment", "date": "2021-05-04 20:46:38-04:00", "modified_files": ["asg.tf", "dev.tfvars", "vars.tf"]}]}, {"name": "https://github.com/dannysievers/gcp-project.git", "commits": [{"id": "88303c62ab59b1e7a538289112cf19354a8ed05f", "msg": "adjusting billing account to reflect the id that needs to be passed", "date": "2019-11-20 15:21:48-06:00", "modified_files": ["project.tf", "variables.tf"]}]}, {"name": "https://github.com/thomastodon/jabujabu.git", "commits": [{"id": "02210a3d3ba4a770c29623825b7f54f3ff33f3c7", "msg": "Make the concourse cluster cheaper\n\n- no longer uses a load balancer\n- no longer uses more expensive VMs", "date": "2018-01-14 14:21:26-05:00", "modified_files": [".gitignore", "README.md", "cloud-config.yml", "concourse.tf", "concourse.yml", "main.tf"]}]}, {"name": "https://github.com/hmcts/launchdarkly-terraform.git", "commits": [{"id": "90ba75a79dc05fe8f12edc0a80831e3148761dd5", "msg": "Adding Fees & Pay", "date": "2020-05-27 15:36:22+01:00", "modified_files": ["terraform.tfvars"]}]}, {"name": "https://github.com/sailthru/terraform-kubernetes-ambassador.git", "commits": [{"id": "c195fb5a78412f9c2f725f8d0e6e72c606ca7e7d", "msg": "Set resource requests/limits for statsd sidecar\n\nNeed this for the autoscaler to work correctly. Generally pods should\nalways include resource requests/limits for Kubernetes to be able to\nschedule workloads efficiently.", "date": "2020-06-16 12:11:02+12:00", "modified_files": ["daemonset.tf", "variables.tf"]}]}, {"name": "https://github.com/tooxie/terraform-workshop.git", "commits": [{"id": "002bcce28e46728714fa1e0d20bec6f2559caba2", "msg": "Add prod var\n\nWhat if we want to use less (or cheaper) infrastructure for non-prod systems?", "date": "2019-04-22 17:46:07-03:00", "modified_files": ["default.auto.tfvars", "ec2_node.tf", "variables.tf"]}]}, {"name": "https://github.com/deptno/terraform-aws-modules.git", "commits": [{"id": "49f447bdbb3cf23499e8194e78f852ea1e256d3a", "msg": "fix: dynamodb billing mode", "date": "2019-09-10 22:22:23+09:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/beaulabs/terraform_aws_ec2_instance.git", "commits": [{"id": "d6df68da5ae58fb5c650c6be15d9d8e676a129db", "msg": "a more cheaper instance", "date": "2019-07-16 09:49:42-07:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/aws-observability/aws-otel-test-framework.git", "commits": [{"id": "c928fe0a05d1e9b8f1ecb1a7dacffecc2800e038", "msg": "Fix dynamo DB options and change go X-ray sample app to public (#525)\n\n* fix billing mode write capacity and change xray receiver to public\r\n\r\n* fix billing mode write capacity and change xray receiver to public\r\n\r\n* fix format for dynamo db", "date": "2022-01-21 13:24:41-05:00", "modified_files": ["backend.tf", "parameters.tfvars"]}]}, {"name": "https://github.com/DoctDocs/doctdocs-infra.git", "commits": [{"id": "05fc778ed2863fe9755eef8895d8451650468f5f", "msg": "AWS billing module", "date": "2019-12-24 02:03:53+01:00", "modified_files": ["budget.tf", "input.tf"]}]}, {"name": "https://github.com/higef/hcloud-tf-kozak-launcher.git", "commits": [{"id": "b6aeac8dfb61a4b34492d5f14a63a7b2059da29c", "msg": "cost calc added", "date": "2022-02-28 19:54:35+02:00", "modified_files": ["outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/ministryofjustice/opg-metrics.git", "commits": [{"id": "01f5374775ffa83356e6446b7513153f242783c8", "msg": "UML-2084 - Create api key for costs (#41)\n\n* create an api key for costs\r\n\r\n* lockfile\r\n\r\n* allow management to decrypt", "date": "2022-02-08 10:40:35+00:00", "modified_files": [".terraform.lock.hcl", "api-keys.tf", "kms.tf"]}]}, {"name": "https://github.com/coreos/tectonic-installer.git", "commits": [{"id": "256ba5e3929d3bb0e1a195d93c02813a5917208c", "msg": "Bump Kubernetes/Tectonic versions (#79)\n\n* tectonic: update Nginx Ingress image\r\n\r\n* Allows IPv6 DNS resolvers and fixes other issues\r\n* Remove nginx template override config map, previously needed on AWS\r\nto enable port redirection (now uses an annotation on ingress obj)\r\n* https://github.com/kubernetes/ingress/blob/master/controllers/nginx/Changelog.md\r\n\r\n* tectonic: bump KVO/TCO\r\n\r\nChanges for TCO:\r\n  - Block upgrade for version < 1.5.2-tectonic.2.\r\n  - Remove 'rawURL' support.\r\n\r\nChanges for KVO:\r\n  - Add components mapping for 1.5.4+tectonic.1.\r\n  - Add node-agent, checkpointer and tectonic-stats-emmiter into the mapping.\r\n  - Add support for updating the entire manifest during upgrade.\r\n\r\nOther changes:\r\n  - Add 'selector' in the deployments to fix the payload so that\r\n    1.5.2-tectonic.2 can upgrade to this payload.\r\n\r\n* modules/bootkube: add kubelet client cert flags to API server\r\n\r\nNotably fixes `kubectl logs`\r\n\r\n* tectonic: bump console to v1.1.1", "date": "2017-03-20 12:45:15-07:00", "modified_files": ["config.tf", "kube-apiserver.yaml", "daemonset.yaml", "service.yaml", "ingress.yaml", "configmap.yaml", "deployment.yaml", "service.yaml", "kube-version-operator.yaml", "tectonic-channel-operator.yaml", "tectonic.sh"]}, {"id": "d3c889d73a3c8b0a48934dd6f338b87da0115b3f", "msg": "*.*: Add 'make payload'\n\nModify the 'make-update-payload.sh' to use terraform to populate the\nassets first, then generate the payload.", "date": "2017-04-27 19:28:02-07:00", "modified_files": ["Makefile", "tectonic-channel-operator.yaml", "assets.tf", "awsutil.sh", "config.tf", "make-update-payload.sh", "payload.json", "publish-payload.sh", "upload-payload.sh"]}, {"id": "f674e33023e0e32aefd18cea97449e4502994dae", "msg": "modules/update-payload/*: Add cluo into tco's payload.", "date": "2017-05-03 16:23:37-07:00", "modified_files": ["assets.tf", "make-update-payload.sh", "payload.json"]}, {"id": "f91ef619e12b790748753d9afbc79ef2d4eee7d2", "msg": "Update KVO to v1.6.4-kvo.3 (#874)\n\nUpdate KVO to v1.6.4-kvo.3\r\n\r\nAlso generate a new update-payload.", "date": "2017-05-30 12:22:35-07:00", "modified_files": ["config.tf", "kube-version-operator.yaml", "payload.json"]}, {"id": "7fd24aaf4ff09982992edcedddc5f8046fa28ba4", "msg": "update-payload: Fix \"make payload\".\n\nNeed to define the variales otherwise the `make payload` command will\nfail.\n\nA follow-up PR should move those tectonic operators into a sub-directory\nso we don't need to maintain this in the future.", "date": "2017-06-19 13:52:23-07:00", "modified_files": ["assets.tf"]}, {"id": "4e7f5f4b37b1ae7bc6a64a6863d1ff1668168776", "msg": "updater: Move operators and appversions into subdirectories.\n\nThis helps to clean up the 'make payload' scripts.", "date": "2017-06-27 12:50:47-07:00", "modified_files": ["app-version-kubernetes.yaml", "app-version-tectonic-cluster.yaml", "app-version-tectonic-etcd.yaml", "app-version-tectonic-monitoring.yaml", "cluster-config.yaml", "container-linux-update-operator.yaml", "kube-version-operator.yaml", "tectonic-channel-operator.yaml", "tectonic-etcd-operator.yaml", "tectonic-prometheus-operator.yaml", "tectonic.sh", "assets.tf", "make-update-payload.sh", "payload.json"]}, {"id": "6acbf2c17a0aa2e55b8e8142fe87d1a8b3bfae4e", "msg": "modules/update-payload: Fix appversion for tectonic-etcd.", "date": "2017-06-27 13:07:48-07:00", "modified_files": ["config.tf", "assets.tf", "assets.tf", "payload.json"]}, {"id": "75dff4c055b0f535ac1ad2e26e62a3d92eb0aad9", "msg": "config.tf/payload.json: Bump kvo to v1.6.7.", "date": "2017-07-06 17:03:38-07:00", "modified_files": ["config.tf", "payload.json"]}, {"id": "34db444369fbb4eb06a25f4a155147027bb0a3d6", "msg": "modules/bootkube: generate etcd tls zip content and reuse in aws\n\nCurrently when distributing all keys via userdata we hit the AWS limit\nof 19k.\n\nThis solves it by distributing zipped content reducing the userdata\npayload to 14k.", "date": "2017-07-10 15:11:14+02:00", "modified_files": ["ignition.tf", "variables.tf", "assets.tf", "outputs.tf", "main.tf"]}, {"id": "23fc5aeb7ad1474268af80708507c92d7356e5e9", "msg": "Fix undefined variables in upload-payload/assets.tf.\n\nAlso plans to add a check in jenkins job for each PR so 'make payload'\nwon't get broken.", "date": "2017-07-24 15:11:24-07:00", "modified_files": ["assets.tf"]}, {"id": "4835a24980fa021ebbf9ba926e85a9b654d5421a", "msg": "config.tf, payload.json: Bump TCO to 0.4.0.\n\nCHANGELOG:\n- Add support to get a specific version of payload\n- Add support to list all payloads in order\n- Bump operator client\n- Refactor on TCO and allow TCO to upgrade through every intermediate versions\n- Allow TCO to upgrade across minor versions", "date": "2017-07-26 17:51:58-07:00", "modified_files": ["config.tf", "payload.json"]}, {"id": "17ba2c7a09c96bac2e056c79677e93adaaf7eba1", "msg": "kvo: v1.7.1-kvo.4 & regenerate update payload.", "date": "2017-08-03 17:47:57-07:00", "modified_files": ["config.tf", "payload.json"]}, {"id": "496a752be5d86248ce6c96e2ef807217f4c4cdf0", "msg": "*: Add or migrate to using the tectonic-cluo-operator\n\n* tectonic-cluo-operator will manage the CLUO v0.3.0 update-operator\n(coordinator) deployment and update-agent daemonset\n* update-operator will stop managing the update-agent daemonset\n* update-operator will auto-label Container Linux nodes\n* update-agent will node select for the CLUO agent=true label\n* Generate update payload for tectonic-cluo-operator", "date": "2017-08-09 15:39:29-07:00", "modified_files": ["config.tf", "assets.tf", "app-version-tectonic-cluo.yaml", "container-linux-update-operator.yaml", "tectonic-cluo-operator.yaml", "tectonic.sh", "assets.tf", "make-update-payload.sh", "payload.json"]}, {"id": "8c1ad79746f4d219cae065be1029940cfd6e988d", "msg": "config.tf, payload.json: Bump TCO and KVO.\n\nTCO: Fix and improve log lines, fix migration.\nKVO: Fix deployment/daemonset upgrade for 'stategy:replace'.", "date": "2017-08-22 19:06:38-07:00", "modified_files": ["config.tf", "payload.json"]}, {"id": "8a1b6ce00b6b0ce69d09d977857d9a5dec7f5890", "msg": "Bump Hyperkube to 1.7.5 (and all the related versions). (#1912)\n\n* Bump Hyperkube to 1.7.5 (and all the related versions).\r\n\r\n* Update payload", "date": "2017-09-18 11:37:28+02:00", "modified_files": ["config.tf", "payload.json"]}, {"id": "4e25dda17e95d0da8becd962a9d41385dfccb2a0", "msg": "config.tf: bump kvo, node-agent, and tco versions.\n\n- kvo: v1.7.5-kvo.5\n- node-agent: v1.7.5-kvo.3\n- tco: v0.5.4\n\nAlso regenerate the update payload to match.", "date": "2017-09-19 16:46:20-07:00", "modified_files": ["config.tf"]}, {"id": "8ae81bba41ec93509f21ea92fcc15f1a06f84fd3", "msg": "config.tf: Bump tectonic version to 1.8.\n\nThis is a placeholder so that the release automation job can generate\na new payload which then nightly upgrade test job can upgrade to from\nthe last release.\n\nIdeally this should be down automatically when we cut a release branch.", "date": "2017-10-25 15:31:15-07:00", "modified_files": ["config.tf"]}]}, {"name": "https://github.com/dwp/dataworks-aws-kickstart-adg.git", "commits": [{"id": "397e94568f5705f5065652974687b231d2bacdaf", "msg": "Restructring code (#19)\n\n* Add changes related grant application and payment\r\n\r\n* Add changes related grant application and payment\r\n\r\n* Fix the issue where e2e_test_flg is not sensed correctly in the code\r\n\r\n* Add Changes related to it\r\n\r\n* byuc-383 add code for grant applications\r\n\r\n* Add inital changes for grant application and payment module\r\n\r\n* Add modified githooks\r\n\r\n* Add new job for development\r\n\r\n* Change Last process date into string from datetime class\r\n\r\n* Add changes related grant application\r\n\r\n* convert boolean values to string\r\n\r\n* convert boolean values to string\r\n\r\n* changed the published location\r\n\r\n* update the json record layout\r\n\r\n* Remove test and other modules\r\n\r\n* Change the CI pipeline based on new code structure\r\n\r\n* Removed the test jobs from the group\r\n\r\n* remove sonarcloud quality gate error", "date": "2021-04-13 09:30:11+01:00", "modified_files": [".githooks", "groups.yml", "development.yml", "generate-test-data.yml", "start-cluster.yml", "meta.yml", "cloudwatch_event_rule.tf", "cluster_config.tf", "steps.yaml.tpl", "ebs.tf", "local.tf", "security_groups.tf", "sns_topics.tf", "src_connection_IAM.tf", "steps.tf", "__init__.py", "spark_utils.py", "utils.py", "__init__.py", "__main__.py", "__init__.py", "__main__.py", "__main__.py", "main.py", "variables.tf"]}, {"id": "dee313b4acb08a052dae842cc573f68c108a25db", "msg": "Update the kickstarter data pipeline for payment module (#50)\n\n* Payment updates\r\n\r\n* Payment updates\r\n\r\n* Update the kickstarter data pipeline for payment module\r\n\r\n* terraform local remove payment\r\n\r\nCo-authored-by: kamal sapkota <kamal.sapkota@engineering.digital.dwp.gov.uk>", "date": "2021-08-10 17:31:35+01:00", "modified_files": ["cloudwatch_event_rule.tf", "cluster_config.tf", "step_without_payment.yaml.tpl", "steps_with_payment.yaml.tpl", "local.tf", "src_connection_IAM.tf", "utils.py", "variables.tf"]}, {"id": "d7b6c8f278e24c173a82470b036570d4e8c3bdd0", "msg": "restore e2e test in dev,qa and set cluster to run  payment module in production (#61)", "date": "2021-09-22 16:33:41+01:00", "modified_files": ["development.yml", "qa.yml", "cloudwatch_event_rule.tf", "local.tf"]}, {"id": "a095b0c4d103e972a6caae0196ca22623577b9d4", "msg": "Fix for payments module (#62)", "date": "2021-09-22 19:01:35+01:00", "modified_files": ["cluster_config.tf"]}]}, {"name": "https://github.com/ken-matsui/poac-infrastructure.git", "commits": [{"id": "02c710b8259f493c475021fc9eac23b871305ae6", "msg": "cost reduction\nhttps://aws.amazon.com/about-aws/whats-new/2017/06/amazon-rds-enables-encryption-at-rest-for-additional-t2-instance-types", "date": "2018-04-23 14:48:39+09:00", "modified_files": ["cluster.yaml", "rds.tf"]}]}, {"name": "https://github.com/chad-russell-git/terraform-oci-cis-landing-zone.git", "commits": [{"id": "6a696dfa2dd5716a65b10fc3277cd9e994b8b30a", "msg": "cost tracking tag set to true", "date": "2021-07-13 17:16:25-03:00", "modified_files": ["mon_tags.tf"]}, {"id": "e6fce932c806b12eeda73846bcaeac0a7403744d", "msg": "File naming updated: using cost not gov", "date": "2021-11-02 09:28:12-07:00", "modified_files": ["cost_budget.tf", "README.md", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "7247909ecd98c2d511316392f22cb3877f05250b", "msg": "added policies for cost management", "date": "2021-11-02 14:13:56-07:00", "modified_files": ["iam_policies.tf", "locals.tf"]}]}, {"name": "https://github.com/jamesvsshark/twenty-nineteen-iac.git", "commits": [{"id": "517611bacd704223bb6a4f37918e0c186f8b1fef", "msg": "Merged in remove-keys-from-main (pull request #1)\n\nuse backend config via pipeline\n\n* use backend config via pipeline\n\n* fix typo in env var name\n\nApproved-by: James Simoes <james@pocostud.io>", "date": "2019-04-23 16:14:40+00:00", "modified_files": ["bitbucket-pipelines.yml", "main.tf"]}]}, {"name": "https://github.com/ralwani/sap-oracle.git", "commits": [{"id": "1ee50dc175053dc280db5d0321be309eda89d8ab", "msg": "MVP Release (#1195)\n\nThis release includes the first version of the Ansible playbooks that can be used to configure the Virtual machines and install SAP Hana. The repository also contains a sample Bill of Material that can be used to download the required SAP software.", "date": "2021-07-01 19:56:06+03:00", "modified_files": [".gitignore", "README.MD", "azure-pipelines-cleanup.yaml", "create-saplandscape-steps.yml", "create-saplib-steps.yml", "create-sapsystem-steps.yml", "add-agent-to-deployer-nsg.yml", "prepare-agent.yml", "remove-agent-from-deployer-nsg.yml", "tf-release.yml", "tf-saplandscape-test.yml", "tf-sapsystem-test.yml", "CONTRIBUTING.md", "main.tf", "README.MD", "a.out", "contributions.MD", "HANA_2_00_055_v0001ms.yaml", "Screen Shot 2021-03-25 at 12.07.48 AM.png", "myDownloadBasketFiles.txt", "HANA_2_00_055_v0002ms.yaml", "myDownloadBasketFiles.txt", "NW75SPS20_v0001ms.yaml", "MP_Excel_1001194237_20210513_SWC.xls", "MP_Plan_1001194237_20210513_.pdf", "MP_Stack_1001194237_20210513_.txt", "MP_Stack_1001194237_20210513_.xml", "from MP_PLAN_PDF_DownloadBasketFiles.txt", "from MP_PLAN_PDF_DownloadBasketFiles_urls.txt", "myDownloadBasketFiles.txt", "NW75SPS20_v0002ms.yaml", "From_PDF_Selected_Downloads.txt", "From_PDF_myDownloadBasketFiles.txt", "MP_Excel_1001194237_20210513_SWC.xls", "MP_Plan_1001194237_20210513_.pdf", "MP_Stack_1001194237_20210513_.txt", "MP_Stack_1001194237_20210513_.xml", "myDownloadBasketFiles.txt", "S41909SPS03_v0001ms.yaml", "MP_Excel_2001100478_20210324_SWC.xls", "MP_Plan_2001100478_20210324_.pdf", "MP_Stack_2001100478_20210324_.txt", "MP_Stack_2001100478_20210324_.xml", "myDownloadBasketFiles.txt", "S41909SPS03_v0001ms-app-inifile-param.j2", "S41909SPS03_v0001ms-dbload-inifile-param.j2", "S41909SPS03_v0001ms-pas-inifile-param.j2", "S41909SPS03_v0001ms-scs-inifile-param.j2", "S41909SPS03_v0001ms-web-inifile-param.j2", "app-inifile-param", "dbload-inifile.param", "pas-inifile.param", "scs-inifile.param", "web-inifile-param", "S41909SPS03_v0002ms.yaml", "MP_Excel_2001100478_20210324_SWC.xls", "MP_Plan_2001100478_20210324_.pdf", "MP_Stack_2001100478_20210324_.txt", "MP_Stack_2001100478_20210324_.xml", "myDownloadBasketFiles.txt", "S41909SPS03_v0002ms-app-inifile-param.j2", "S41909SPS03_v0002ms-dbload-inifile-param.j2", "S41909SPS03_v0002ms-pas-inifile-param.j2", "S41909SPS03_v0002ms-scs-inifile-param.j2", "S41909SPS03_v0003ms.yaml", "MP_Excel_2001100478_20210324_SWC.xls", "MP_Plan_2001100478_20210324_.pdf", "MP_Stack_2001100478_20210324_.txt", "MP_Stack_2001100478_20210324_.xml", "myDownloadBasketFiles.txt", "S41909SPS03_v0003ms-app-inifile-param.j2", "S41909SPS03_v0003ms-dbload-inifile-param.j2", "S41909SPS03_v0003ms-pas-inifile-param.j2", "S41909SPS03_v0003ms-scs-inifile-param.j2", "S41909SPS03_v0003ms-web-inifile-param.j2", "app-inifile-param", "dbload-inifile.param", "pas-inifile.param", "scs-inifile.param", "web-inifile-param", "SOLMAN72FPS12_v0001ms.yaml", "MP_Excel_2001140886_2021061_SWC.xls", "MP_Plan_2001140886_2021061_.pdf", "MP_Stack_2001140886_2021061_.txt", "MP_Stack_2001140886_2021061_.xml", "from MP_PLAN_PDF_DownloadBasketFiles.txt", "from MP_PLAN_PDF_DownloadBasketFiles_urls.txt", "myDownloadBasketFiles.txt", "readme.md", "X00-example.sh", "_dev_guide.md", "get-sshkey.sh", "all.yml", "azure_keyvault_secret.py", "pb_get-keyvault-secret.yaml", "pb_get-sshkey.yaml", "playbook_00_transition_start_for_sap_install_refactor.yaml", "playbook_01_os_base_config.yaml", "playbook_02_os_sap_specific_config.yaml", "playbook_03_bom_processing.yaml", "playbook_04_00_00_hana_db_install.yaml", "playbook_05_00_00_sap_scs_install.yaml", "playbook_05_01_sap_dbload.yaml", "playbook_05_02_sap_pas_install.yaml", "playbook_05_03_sap_app_install.yaml", "playbook_05_04_sap_web_install.yaml", "playbook_06_00_00_pacemaker.yaml", "playbook_06_00_01_pacemaker_scs.yaml", "playbook_06_00_03_pacemaker_hana.yaml", "playbook_bom_downloader.yaml", "playbook_bom_validator.yaml", "readme.md", "refactor-notes.md", "refactor-template.md", "refactor_output_json.md", "retire_playbook_install_scs.yml", "retire_playbook_process_bom.yml", "readme.md", "main.yaml", "HANA_2_00_055_v1_install.rsp.j2", "HANA_2_00_055_v1_install.rsp.xml.j2", "readme.md", "main.yaml", "main.yaml", "main.yaml", "main.yml", "main.yml", "setup_user_sudoers.yml", "sudoers_admin_no_password.j2", "sudoers_admin_password_required.j2", "sudoers_default.yml", "issue", "motd", "main.yaml", "main.yaml", "main.yaml", "main.yaml", "os-services.yaml", "main.yml", "main.yml", "main.yml", "main.yaml", "main.yaml", "os-packages.yaml", "main.yml", "volume_groups.j2", "main.yaml", "main.yml", "main.yaml", "main.yaml", "parameters.yaml", "main.yaml", "sap-packages.yaml", "2.10.0.yaml", "main.yaml", "hosts.block", "readme.md", "main.yaml", "pre_checks.yaml", "hosts.j2", "main.yml", "redhat-7-os_config.yml", "suse-12-os_config.yml", "readme.md", "main.yaml", "main.yaml", "main.yaml", "main.yaml", "bom_validator.yaml", "main.yaml", "pre_checks.yaml", "readme.md", "bom_processor.yaml", "main.yaml", "pre_checks.yaml", "bom-register.yaml", "bom-template.yaml", "main.yaml", "main.yaml", "main.yaml", "main.yaml", "main.yaml", "readme.md", "configure.yml", "main.yml", "redhat.yml", "suse.yml", "main.yml", "refactor.md", "refactor.md", "ensure-bom.yml", "main.yml", "pre_checks.yml", "refactor.md", "hostname_validation.yml", "main.yml", "configure.yml", "main.yml", "refactor.md", "refactor.md", "README.md", "main.yml", "refactor.md", "download_media.yml", "iterate_bom.yml", "main.yml", "pre_checks.yml", "main.yml", "main.yml", "install_scs.yml", "main.yml", "pre_checks.yml", "refactor.md", "configure.yml", "main.yml", "sap_playbook.yml", "test_keyvault.yaml", "test_menu.sh", "validator_test_menu.sh", "admin-accounts.yml", "ansible-input-api.yaml", "disks_config.yml", "ha-packages.yaml", "packages.yml", "sap-disks.yaml", "anydb_sizes.json", "app_sizes.json", "hdb_sizes.json", "version.txt", "deploy_utils.sh", "install_deployer.sh", "install_library.sh", "install_workloadzone.sh", "installer.sh", "prepare_region.sh", ".gitignore", "helper_functions.ps1", "new_deploymentregion.ps1", "new_sapdeployer.ps1", "new_sapdeployment.ps1", "new_saplibrary.ps1", "new_sapworkloadzone.ps1", "read_template.ps1", "remove_deploymentregion.ps1", "remove_sapsystem.ps1", "set_secrets.ps1", "types.ps1", "SAPDeploymentUtilities.psd1", "SAPDeploymentUtilities.psm1", "README.md", "SAPDeploymentUtilities.build.ps1", "SAPDeploymentUtilities.psd1", "SAPDeploymentUtilities.psm1", "remove_region.sh", "remover.sh", "set_secrets.sh", "validate.sh", "deployer.json", "deployer_full.json", "deployer_init.sh", "deployer_scp.tmpl", "module.tf", "output.tf", "providers.tf", "scripts.tf", "variables_global.tf", "variables_local.tf", "imports.tf", "module.tf", "output.tf", "providers.tf", "saplibrary.json", "saplibrary_full.json", "variables_global.tf", "variables_local.tf", "deployer.json", "deployer_full.json", "module.tf", "output.tf", "providers.tf", "variables_global.tf", "variables_local.tf", "imports.tf", "module.tf", "output.tf", "providers.tf", "saplandscape.json", "saplandscape_full.json", "variables_global.tf", "variables_local.tf", "imports.tf", "module.tf", "output.tf", "providers.tf", "saplibrary_full.json", "variables_global.tf", "variables_local.tf", "imports.tf", "module.tf", "output.tf", "providers.tf", "sapsystem.json", "variables_global.tf", "variables_local.tf", "configure-deployer.tf", "firewall.tf", "infrastructure.tf", "key_vault.tf", "nsg-mgmt.tf", "output.tf", "variables_local.tf", "vm-deployer.tf", "infrastructure.tf", "iscsi.tf", "key_vault_sap_landscape.tf", "outputs.tf", "providers.tf", "subnets.tf", "variables_global.tf", "variables_local.tf", "configuration_output.tf", "key_vault.tf", "output.tf", "storage_accounts.tf", "variables_local.tf", "output.tf", "ppg-avset.tf", "resourcegroup.tf", "variables_local.tf", "infrastructure.tf", "outputs.tf", "providers.tf", "variables_local.tf", "vm-anydb.tf", "vm-observer.tf", "infrastructure.tf", "nsg-app-subnet.tf", "nsg-webdisp.tf", "outputs.tf", "providers.tf", "variables_local.tf", "vm-app.tf", "vm-scs.tf", "vm-webdisp.tf", "infrastructure.tf", "key_vault_sap_system.tf", "nsgs.tf", "outputs.tf", "providers.tf", "variables_local.tf", "vm-anchor.tf", "infrastructure.tf", "outputs.tf", "providers.tf", "variables_local.tf", "vm-hdb.tf", "ansible_inventory_new.yml.tmpl", "inventory.tf", "outputs.tf", "providers.tf", "sap-parameters.yml.tmpl", "variables_local.tf", "Changing_the_naming_convention.md", "Deployment_folder_structure.md", "Deployment_scripts.md", "Folderstructure.png", "Getting_started_with_the_SAP_Deployment_Automation_bash.md", "Getting_started_with_the_SAP_Deployment_Automation_cloudshell.md", "Getting_started_with_the_SAP_Deployment_Automation_pwsh.md", "SPN.md", "Using_custom_disk_sizing.md", "X00-db-sizing.json", "MGMT-EUS2-DEP01-INFRASTRUCTURE.json", "MGMT-WEEU-DEP00-INFRASTRUCTURE.json", "DEV-NOEU-SAP02-INFRASTRUCTURE.json", "DEV-WEEU-SAP01-INFRASTRUCTURE.json", "PROD-WUS2-SAP04-INFRASTRUCTURE.json", "QA-EUS2-SAP03-INFRASTRUCTURE.json", "MGMT-EUS2-SAP_LIBRARY.json", "MGMT-NOEU-SAP_LIBRARY.json", "MGMT-WEEU-SAP_LIBRARY.json", "MGMT-WUS2-SAP_LIBRARY.json", "README.md", "README.md", "DEV-NOEU-SAP02-X02.json", "DEV-WEEU-SAP01-WIN.json", "DEV-WEEU-SAP01-X00.json", "PROD-WUS2-SAP04-X03.json", "PROD-WUS2-SAP04-X04.json", "X04-Disk_sizes.json", "QA-EUS2-SAP03-X01.json", "SAP_DevOps_strategy.png", "SAP_DevOps_strategy_full.png", "SAP_estate.png", "customer_requirements.md", "glossary.md", "readme.md", "sample_deployments.md", "configuration-deployer.md", "configuration-sap_deployment_unit.md", "configuration-sap_landscape.md", "configuration-sap_library.md", "configuration-sap_workloadzone.md", "readme.md", "acquire-media.md", "deploy-sid.md", "prepare-bom.md", "prepare-full-app-bom.md", "prepare-ini.md", "prepare-sap-library.md", "bom-validation.md", "define-sap-system.md", "process-bom.md", "bom_generation_and_validation.svg", "bom_processing.svg", "manual_hana_deployment.svg", "scs_deployment.svg", "system_deployment.svg", "deploy-system-infrastructure.md", "bom.yml", "MP_Excel_1001059086_20201023_SWC.xls", "MP_Plan_1001059086_20201023_.pdf", "MP_Stack_1001059086_20201023_.txt", "MP_Stack_1001059086_20201023_.xml", "downloadbasket.json", "myDownloadBasketFiles.txt", "bom.yml", "myDownloadBasketFiles.txt", "bom.yml", "myDownloadBasketFiles.txt", "S4HANA_1809_SP5_v001.inifile.params", "bom.yml", "MP_Excel_1001080495_20201123_SWC.xls", "MP_Plan_1001080495_20201123_.pdf", "MP_Stack_1001080495_20201123_.txt", "MP_Stack_1001080495_20201123_.xml", "downloadbasket.json", "myDownloadBasketFiles.txt", "bom.yml", "MP_Excel_2001018560_2020112_SWC.xls", "MP_Plan_2001018560_2020112_.pdf", "MP_Stack_2001018560_2020112_.txt", "MP_Stack_2001018560_2020112_.xml", "downloadbasket.json", "myDownloadBasketFiles.txt", "tempworkfile", "bom.yml", "MP_Excel_1001084693_20201130_SWC.xls", "MP_Plan_1001084693_20201130_.pdf", "MP_Stack_1001084693_20201130_.txt", "MP_Stack_1001084693_20201130_.xml", "downloadBasket.json", "myDownloadBasketFiles.txt", "bom.yml", "bom_with_errors.yml", "MP_Excel_2001017452_20201030_SWC.xls", "MP_Plan_2001017452_20201030_.pdf", "MP_Stack_2001017452_20201030_.txt", "MP_Stack_2001017452_20201030_.xml", "downloadbasket.json", "myDownloadBasketFiles.txt", "acquire-media.md", "deploy-sid.md", "prepare-bom.md", "prepare-ini.md", "prepare-sap-library.md", "postman-basic-auth.png", "postman-new-request.png", "postman-save-raw-json.png", "postman-set-request-url.png", "sap-download-basket-json.png", "sap-hana-database-2.0.png", "sap-hana.png", "sap-imdb-server20.png", "sap-lcapps.png", "sap-sapcar.png", "sap-software-component.png", "sap-sp-feature-stack.png", "sap-sp-stack.png", "sap-target-system.png", "sap-xls-download-basket-xml.png", "sap-xls-download-basket.png", "readme.md", "tasks.md", "readme.md", "product_documentation-capabilities.md", "product_documentation-deployer.md", "product_documentation-features.md", "product_documentation-key_vault.md", "product_documentation-sap-workload_vnet.md", "product_documentation-sap-workloadzone.md", "product_documentation-sap_deployment_unit.md", "product_documentation-sap_library.md", "product_documentation.md", "standards-naming.md", "01-spn.md", "02-prepare-environment.md", "03-workload-zone.md", "04-sdu.md", "99-cleanup.md", "Block1.png", "Block2.png", "Block3.png", "Block4.png", "Block5a.png", "Block5b.png", "BlockOverview.png", "CloudShell1.png", "CloudShell2.png", "CloudShell3.png", "Outputs-Deployer.png", "Reinitialize1.png", "Reinitialize2.png", "overview.md", "NP-EUS2-DEP00-INFRASTRUCTURE.json", "NP-EUS2-SAP00-INFRASTRUCTURE.json", "NP-EUS2-SAP00-X00.json", "NP-EUS2-SAP_LIBRARY.json", "01-bootstrap-deployer.md", "02-spn.md", "03-bootstrap-library.md", "04-reinitialize.md", "05-workload-vnet.md", "06-sdu.md", "99-cleanup.md", "Block1.png", "Block2.png", "Block3.png", "Block4.png", "Block5a.png", "Block5b.png", "BlockOverview.png", "CloudShell1.png", "CloudShell2.png", "CloudShell3.png", "Outputs-Deployer.png", "Reinitialize1.png", "Reinitialize2.png", "overview.md", "DEMO-EUS2-DEP00-INFRASTRUCTURE.json", "DEMO-EUS2-SAP00-INFRASTRUCTURE.json", "DEMO-EUS2-SAP00-X00.json", "DEMO-EUS2-SAP_LIBRARY.json", "01-ansible.md", "overview.md", "01-ansible-download.md", "readme.md", "01-bootstrap-deployer.md", "03-bootstrap-library.md", "04-reinitialize.md", "05-workload-vnet.md", "06-sdu.md", "NP-EUS2-DEP00-INFRASTRUCTURE.json", "NP-EUS2-SAP0-INFRASTRUCTURE.json", "NP-EUS2-SAP0-X01.json", "NP-EUS2-SAP0-X02.json", "workshops.md", "SAP_custo.png", "SAP_estate.png", "UnicornSAPBlack64x64.png", "infra_custo.png", "details required from customer.md", "glossary.md", "readme.md", "table_of_contents.md", "Deployer.png", "Library.png", "SAP-Automation_Process.png", "SAP_estate.png", "SAP_estate_full.png", "Workload_zone.png", "clustered-hana-instance-architecture.png", "single-node-instance-architecture.png", "system.png", "ansible_sample_hostvars.md", "enable-kdump.sh", ".yamllint.yml", "check_bom.sh", "check_bom.yml", "generate_bom.sh", "validate_dict.yml"]}]}, {"name": "https://github.com/ministryofjustice/modernisation-platform.git", "commits": [{"id": "bc346a5604045d29b4b427c926f3e70d69440698", "msg": "enable PITR to squash CKV_AWS_28\n\nEnables continuous backups. In this case the cost is negligeable due to low volumes of data being stored in this data base. https://aws.amazon.com/dynamodb/pricing/on-demand/", "date": "2021-08-26 08:33:36+01:00", "modified_files": ["dynamodb.tf"]}]}, {"name": "https://github.com/guilhermerenew/infra-cost.git", "commits": [{"id": "20b30529073ee6ed470261afb3e05c76e404b140", "msg": "include infracost.yaml file", "date": "2021-03-07 15:19:19-03:00", "modified_files": ["infracost-usage.yml", ".terraform.lock.hcl", "main.tf"]}, {"id": "ba858d94e29d03e3e81533df8cd8bc85b9f176f1", "msg": "mega-fix for adjustments in costing", "date": "2021-10-23 22:30:47-03:00", "modified_files": ["infracost.yml", "infracost-usage.yml", "main.tf"]}]}, {"name": "https://github.com/UriKatsirPrivate/gcp-landing-zone.git", "commits": [{"id": "0160ab1f89489abec4120ef4102bf5964b0af2fe", "msg": "Use billing account with variable", "date": "2020-04-04 17:03:57+03:00", "modified_files": ["main.tf", "main.tf", "variables.tf", "variables.tf"]}, {"id": "2d5dbcd0ca7ac5d5e2dd8971b40fce5206907e97", "msg": "billing logs project", "date": "2022-02-13 09:08:28+02:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/AJarombek/global-aws-infrastructure.git", "commits": [{"id": "4a89f4b8235961275fa0e6aaf20848f2b8b7e733", "msg": "budget alarms for high costs, budget & cloudtrail tests", "date": "2021-02-10 17:38:26-05:00", "modified_files": ["README.md", "main.tf", "README.md", "testBudgets.py", "testCloudTrail.py"]}, {"id": "61e07012be3f140daf18d33b3be19c80147f12f2", "msg": "daily cost lambda infrastructure", "date": "2021-07-17 16:31:47-04:00", "modified_files": ["lambda.py", "main.tf"]}]}, {"name": "https://github.com/gudlyf/TerraformOpenVPN.git", "commits": [{"id": "be1245d8634025277ba79a4155ee88d7eaffcdfb", "msg": "- Updated Ubuntu to 16.04\n- Instance type is not t3.nano (cheaper)\n- terraform fmt\n- Modifications to userdata.sh to adhere to new Ubuntu version, DNS\nchanges, and handling of apt upgrade without CLI.", "date": "2019-04-19 13:00:22-04:00", "modified_files": ["ec2.tf", "main.tf", "sg.tf", "terraform.tfvars", "userdata.sh", "variables.tf"]}, {"id": "4bc861c153b65a2d7c0d5f3fac30ab72b0fc6942", "msg": "Updated VM size to B2s to reduce cost\n\nUpdated from A0 to B2s to reduce cost", "date": "2020-12-13 08:31:09+08:00", "modified_files": ["instance.tf"]}]}, {"name": "https://github.com/y-myk/terraform.git", "commits": [{"id": "451b4a7323cebfef851a3fce9c00c48227a54aa3", "msg": "modified RG variable value in Azure/standalone/3NIC/PAYG/variables.tf", "date": "2021-07-10 14:51:08+01:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/DuckbillGroup/onboarding-cft.git", "commits": [{"id": "10f8574b6cd68c389be9ac723902fd5ab0d1593b", "msg": "Change AWS account to new duckbill-production account.", "date": "2020-02-21 08:18:17-08:00", "modified_files": ["duckbill-cft-iam-role.yml", "duckbill-cft-iam-role.tf"]}]}, {"name": "https://github.com/cloudchacho/terraform-google-hedwig-subscription.git", "commits": [{"id": "ab8808de2e078c572e9d88fdc57ff91b8e4acc36", "msg": "Remove dataflow since that pattern is prohibitively expensive (#3)", "date": "2019-06-06 11:54:58-07:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/ohoareau/terraform-modules.git", "commits": [{"id": "d066b8dfa3b03df200afa9a521126a83884cdfb3", "msg": "dynamodb: read/write capacities to 0 if pay per request billing mode", "date": "2020-02-12 17:31:18+01:00", "modified_files": ["main.tf"]}, {"id": "531b6bd1a2d661792deb7caf2303effdc5f6818a", "msg": "feat(lambda-api-payment): creation", "date": "2021-02-22 21:51:55+01:00", "modified_files": ["README.md", "main.tf", "outputs.tf", "providers.tf", "variables.tf", "Makefile", "README.md", "index.js", "uuid", "LICENSE.md", "README.md", "index.d.ts", "index.d.ts.map", "index.js", "cloudfront.d.ts", "cloudfront.d.ts.map", "cloudfront.js", "codepipeline.d.ts", "codepipeline.d.ts.map", "codepipeline.js", "cognito.d.ts", "cognito.d.ts.map", "cognito.js", "dynamodb.d.ts", "dynamodb.d.ts.map", "dynamodb.js", "index.d.ts", "index.d.ts.map", "index.js", "lambda.d.ts", "lambda.d.ts.map", "lambda.js", "s3.d.ts", "s3.d.ts.map", "s3.js", "ses.d.ts", "ses.d.ts.map", "ses.js", "sfn.d.ts", "sfn.d.ts.map", "sfn.js", "sns.d.ts", "sns.d.ts.map", "sns.js", "sqs.d.ts", "sqs.d.ts.map", "sqs.js", "uuid", "package.json", "LICENSE.md", "README.md", "AbstractError.d.ts", "AbstractError.d.ts.map", "AbstractError.js", "InvokeError.d.ts", "InvokeError.d.ts.map", "InvokeError.js", "SerializableErrorInterface.d.ts", "SerializableErrorInterface.d.ts.map", "SerializableErrorInterface.js", "index.d.ts", "index.d.ts.map", "index.js", "package.json", "LICENSE.md", "README.md", "default-rules.d.ts", "default-rules.d.ts.map", "default-rules.js", "index.d.ts", "index.d.ts.map", "index.js", "order.d.ts", "order.d.ts.map", "order.js", "webhook.d.ts", "webhook.d.ts.map", "webhook.js", "package.json", "LICENSE.md", "README.md", "index.d.ts", "index.d.ts.map", "index.js", "buffer.d.ts", "buffer.d.ts.map", "buffer.js", "http.d.ts", "http.d.ts.map", "http.js", "httpError.d.ts", "httpError.d.ts.map", "httpError.js", "httpNotFound.d.ts", "httpNotFound.d.ts.map", "httpNotFound.js", "httpOk.d.ts", "httpOk.d.ts.map", "httpOk.js", "index.d.ts", "index.d.ts.map", "index.js", "redirect.d.ts", "redirect.d.ts.map", "redirect.js", "staticFile.d.ts", "staticFile.d.ts.map", "staticFile.js", "types.d.ts", "types.d.ts.map", "types.js", "createRouterHandler.d.ts", "createRouterHandler.d.ts.map", "createRouterHandler.js", "getLambdaConfig.d.ts", "getLambdaConfig.d.ts.map", "getLambdaConfig.js", "getRequestInfosFromEvent.d.ts", "getRequestInfosFromEvent.d.ts.map", "getRequestInfosFromEvent.js", "index.d.ts", "index.d.ts.map", "index.js", "package.json", "CHANGELOG.md", "CONTRIBUTING.md", "LICENSE.md", "README.md", "uuid", "index.js", "md5.js", "nil.js", "parse.js", "regex.js", "rng.js", "sha1.js", "stringify.js", "v1.js", "v3.js", "v35.js", "v4.js", "v5.js", "validate.js", "version.js", "index.js", "md5.js", "nil.js", "parse.js", "regex.js", "rng.js", "sha1.js", "stringify.js", "v1.js", "v3.js", "v35.js", "v4.js", "v5.js", "validate.js", "version.js", "index.js", "md5-browser.js", "md5.js", "nil.js", "parse.js", "regex.js", "rng-browser.js", "rng.js", "sha1-browser.js", "sha1.js", "stringify.js", "uuid.min.js", "uuidNIL.min.js", "uuidParse.min.js", "uuidStringify.min.js", "uuidValidate.min.js", "uuidVersion.min.js", "uuidv1.min.js", "uuidv3.min.js", "uuidv4.min.js", "uuidv5.min.js", "uuid-bin.js", "v1.js", "v3.js", "v35.js", "v4.js", "v5.js", "validate.js", "version.js", "package.json", "wrapper.mjs", "package.json", "android-chrome-192x192.png", "android-chrome-512x512.png", "apple-touch-icon.png", "favicon-16x16.png", "favicon-32x32.png", "favicon.ico", "yarn.lock", "main.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/albclim/PayHub.git", "commits": [{"id": "12ae91e7575102c9a3229f54416ffa010d141b1e", "msg": "Payhub v1\n\nChanges on v1", "date": "2020-05-31 22:53:34+02:00", "modified_files": [".gitignore", "terraform.tfstate", "00_COMMANDS.txt", "01_tfvars.json", "02_vars.tf", "03_MAIN.tf", "03_vpc_MAIN.tf", "10_load_balancer.tf", "11_autoscaling.tf", "12_routing.tf", "13_API_lambda.tf", "31_PRI.tf", "32_ISO.tf", "33_API.tf", "34_DIF.tf", "35_BACK.tf", "40_ecs_data.tf", "41_ecs_PRI.tf", "42_ecs_ISO.tf", "43_ecs_API.tf", "44_ecs_DIF.tf", "45_ecs_BACK.tf", "46_ecs_WEBSERV.tf", "50_index.js", "51_Sec_Group.tf", "52_directory_services.tf", "53_rds.tf", "Ubuntu.yml", "DSC-Win.ps1", "terraform.tfstate", "iis-config.ps1", "win16-config.ps1", "RDSYS-KEY.pem"]}]}, {"name": "https://github.com/freeyourscience/infrastructure.git", "commits": [{"id": "5dc65e8155bbbd0b92366cefe7edc46e534db9ba", "msg": "add domainmapping to dev.paywall.lol #11", "date": "2020-12-11 18:29:55+00:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "abef03ad6e92a62681a1e00fb2dc9402073a6722", "msg": "enable cloudbilling service #11", "date": "2021-01-10 12:52:53+00:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/FXinnovation/fx-terraform-module-multi-template.git", "commits": [{"id": "8b3a9993d15ebd2e6a1457a612e4ba9d7748fd0d", "msg": "fix: get rid of example disabled\n\nas discussed with @user  we don't need the 'disabled' example\nanymore.", "date": "2021-03-10 15:48:55-05:00", "modified_files": ["README.md", "deploy.tf", "outputs.tf", "providers.tf", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/structurefall/jamulus-builder.git", "commits": [{"id": "7190744187e0aed2df8ce84f2a944294d6d4fc5b", "msg": "Redid networking ton one subnet to eliminate costly NAT, added SSH in", "date": "2020-05-10 16:37:28-07:00", "modified_files": ["autoscaler.tf", "loadbalancer.tf", "network.tf", "security_groups.tf", "variables.tf"]}]}, {"name": "https://github.com/alphagov/govuk-aws.git", "commits": [{"id": "6a801ca187afd2066df0b9ab9e5c6afc4e01dd46", "msg": "Add lifecycle rules to database backups\n\nAdd lifecycle rules to our database backups. In line with what we\ncurrently do, keep backups for 3 months, but move them to lower storage\ncosts after 30 and 60 days respectively.\n\nWith mongodb, keep \"regular\" backups to 7 days so we have point in time\nbackups that go back 7 days. Keep \"daily\" backups for 90 days.", "date": "2017-10-31 11:21:13+00:00", "modified_files": ["main.tf"]}, {"id": "6488091456429ed61264b9cad841eeb6bf871e32", "msg": "Use all of available glacier time for backups\n\nGlacier charges an [early delete\nfee](https://aws.amazon.com/premiumsupport/knowledge-center/glacier-early-delete-fees/)\nfor deleting objects which are stored for less than 90 days. This\nappears to be calculated by charging you for 90 days of storage\nregardless of the length of time things are stored in glacier, and\ncalling this an early deletion fee. This is a footnote on the [pricing\npage](https://aws.amazon.com/glacier/pricing/) which reads\n\n> Glacier archives have a minimum 90 days of storage, and archives\n> deleted before 90 days incur a pro-rated charge equal to the storage\n> charge for the remaining days\n\nWe may as well make use of this\nadditional time as we are already paying for it through the early\ndeletion fee.", "date": "2017-11-07 15:35:45+00:00", "modified_files": ["main.tf"]}, {"id": "6cfda6ada5137b232ff442ae9f2aedc8520ee1b4", "msg": "Move from m4.large to m5.large\n\nThe new gen have more CPU and are cheaper.\n\n           ECPU\nm4.large   6.5  8  EBS Only  $0.111 per Hour\nm5.large   10   8  EBS Only  $0.107 per Hour", "date": "2017-11-30 13:52:52+00:00", "modified_files": ["main.tf", "main.tf", "main.tf", "main.tf", "main.tf", "main.tf", "main.tf", "main.tf"]}, {"id": "aeb3bfbe393cdfc02e62b812843ed75cf5f245e4", "msg": "Move from m4.xlarge to m5.xlarge\n\nThe new gen have more CPU and are cheaper.", "date": "2017-11-30 13:57:19+00:00", "modified_files": ["main.tf", "main.tf", "main.tf"]}, {"id": "5fa5da9756f12559b490217dd5b173db48e7f2a9", "msg": "Resize graphite machine type\n\nUpdate machine type to m5.xlarge. It should be cheaper, we tried to\nresize it before but it didn't work because of disk labels. Trying again\nafter the 'Device' tag was added to the EBS volume.", "date": "2018-01-08 11:29:22+00:00", "modified_files": ["main.tf"]}, {"id": "2ee1ff690416016dfed50dab6f516559f2270bf9", "msg": "Make our monitoring instances m5.large instead of t2\n\nThe monitoring instance that runs Icinga and Smokey in Integration has\nbegun running out of CPU credits. This is making it difficult to\ndiagnose problems elsewhere in the stack. Making it an m5.large costs\n~$77pcm instead of ~$36pcm, and doubles the RAM.", "date": "2018-04-16 09:59:01+01:00", "modified_files": ["main.tf"]}, {"id": "16fcdb9f70e58ac5a1c1ab056f63a4eba751e3e4", "msg": "Email Alert API Archive Project\n\nTrello: https://trello.com/c/FM3MCuAl/255-investigate-email-alert-api-database-size-and-push-email-archives-to-s3\n\nThis creates an S3 bucket which can be accessed to store archive data\nfrom Email Alert API. Currently we have a large PostgreSQL database\nstoring this information which is not efficient.\n\nThe intention is to store this in S3 and then access it via Athena.", "date": "2018-06-27 17:28:23+01:00", "modified_files": ["email_alert_api_s3_writer_policy.tpl", "README.md", "integration.govuk.backend", "main.tf", "production.govuk.backend", "remote_state.tf", "staging.govuk.backend", "test.govuk.backend"]}, {"id": "19d187e4a29147cbcf1cfae456cfcbfa8ad52b45", "msg": "Increase PostgreSQL primary DB to next instance class\n\nThis commit increases the PostgreSQL primary DB instances to the next instance class to provide more CPUs and RAM. This is due to CKAN now using this database, resuting in increased load. The instances are changed from M4 to M5 since they have improved performance and are cheaper for the equivalent instances than M4.\n\nThe changes will be made during the next maintenance window, which is Monday 4-6am, since `apply_immediately` is not set and defaults to `false`.", "date": "2019-02-07 09:51:39+00:00", "modified_files": ["main.tf"]}, {"id": "5d30d7d7ca658bed21677b1aa56c72a0e0cd737b", "msg": "Upgrade data-science-2 instance type tp p3.8xlarge\n\nThis commit upgrades the `data-science-2` EC2 instance type from `p3.2xlarge` to `p3.8xlarge`.\n\nThis instance is being used to evaulate the implementation of a GraphSAGE algorithm which will be used to generate related links for content pages across GOV.UK. To perform this evaluation, it is necessary to run the algorithm against a set of sample data.\n\nCurrently on the `p3.2xlarge` instance, it takes approximately 20 minutes to evaluate one page of the sample data (one content item) using the algorithm. By switching the instance type to `p3.8xlarge`, we roughly estimate that this time can be brought down to 5 minutes per page of the sample data.\n\nBy speeding up the evaluation process, we will be able to determine the suitability of the algorithm for the purpose of generating related links and will then productionise the process to be able to evaluate ~200K content items for the actual A/B test.\n\nIn terms of cost (at the time of writing), the `p3.8xlarge` is priced at $12.24/hr; we anticipate that we will need up to 8 hours of compute time, which would result in a total cost of $97.92. In comparison, the `p3.2xlarge` currently costs $3.06/hr - this would result in the same total cost of $97.92 as we anticipate it would take up to four times as long to completely evaluate our sample data.", "date": "2019-02-19 12:04:31+00:00", "modified_files": ["main.tf"]}, {"id": "fbd513a3c74bf20ecdb67a4243d30356e8b86a01", "msg": "Bump the search instance size from t2 to c5\n\n- We have been seeing search-api instances run out of CPU credits. At\nthe moment they are manually set to be \"unlimited\".\n- Using c5 removes CPU credits. As we seem to be using burst mode 30-40\npercent of the time, this change should not increase cost.\n\nsolo: @schmie", "date": "2019-05-15 10:30:10+01:00", "modified_files": ["main.tf"]}, {"id": "74fe1ac392549eb3aad67d239310b92cc9f0dd10", "msg": "Update app-elasticsearch5 for Training environment\n\nAdd backend to build app-elasticsearch5 in the Training environment.\n\nAdd parameters to select which domain to use with the DNS records (Training\ndoes not use the stack domain).\n\nTraining elasticsearch runs with with fewer instances and t2.smalls to save\non costs.", "date": "2019-05-21 12:35:34+01:00", "modified_files": ["README.md", "main.tf", "training.govuk.backend"]}, {"id": "b562f2b6a0c2d7bc8944bd8fe15748cfd9bbbfb2", "msg": "adds lambda processor to filter waf log stream\n\nthe waf firehose stream contains entries for every single request\npassing through the acl rule, which is basically every single request\nthrough gov.uk that didn't hit the CDN. We are also shipping these\nlogs for all environments which are doing traffic replay so we have\ncompounded the volume.\n\nSplunk costs money, we shouldn't waste money on logs that are of little\nvalue.\n\nWe are really only interested in things that have been matched and\nBLOCKED or explicitly ALLOWED by a rule, so we add a lambda to filter\nout all logs records that were ALLOWED by the default rule (ie normal\nperfectly fine requests).\n\nThe lambda is triggered by records passing through the firehose on the\nway to splunk.", "date": "2019-07-18 18:16:48+01:00", "modified_files": [".gitignore", "README.md", "lambda.js", "waf.tf"]}, {"id": "48cf6335192bd925c6ec46d2e80d59318c2b8d5a", "msg": "Migrate Licensify Frontend to AWS\n\nWe are moving Licensify from UKCloud to AWS so we can save costs.\nThis commit adds the infrastructure we need for Licensify Frontend,\nwhich is as follows:\n- A new autoscaling group\n- A new public facing load balancer\n- A new internal loadbalancer\n- A new security group\n- New service records", "date": "2019-08-07 11:25:24+01:00", "modified_files": ["README.md", "integration.blue.backend", "main.tf", "production.blue.backend", "remote_state.tf", "staging.blue.backend", "user_data_snippets.tf", "README.md", "main.tf", "README.md", "licensify-frontend.tf", "outputs.tf"]}, {"id": "d29ca713d4d8e26283ac6d693a28cdd0d56bfb1b", "msg": "remove duplicated cloudtrail logging/monitoring\n\nGDS enabled organisation wide cloudtrail logging/monitoring some time\nago which stores all CloudTrail events from all accounts in an immutable\nbucket which are indexed by splunk and monitored by Cyber.\n\nAWS give you the first CloudTrail in the account for free, but charge a\nnon-trival amount for subsequent trails.\n\nTo reduce costs we remove this old trail, and will rely on the org-wide\ntrails.\n\nNOTE: we have to leave the bucket existing for now, but with the\nforce_destroy flag set, so that it can be cleaned up with a subsequent\nterraform run", "date": "2019-08-12 11:59:46+01:00", "modified_files": ["README.md", "main.tf", "cloudtrail_assume_policy.json", "cloudtrail_cloudwatch_logs_policy.tpl", "cloudtrail_s3_policy.tpl", "README.md", "main.tf"]}, {"id": "b81fcca8a89569d04c7ecd8a74fca04b76648265", "msg": "Disable Unnecessary Replication in Integration for S3 Buckets To Save Costs\n\nDisable replication of the govuk-integration-content-publisher-activestorage\nS3 bucket, as it is not needed.\n\nDisable replicaiton of the govuk-integration-artefact S3 bucket, as it is not\nneeded.\n\nAdd lifecycle rules to buckets to ensure old objects are permanently deleted.", "date": "2019-11-15 15:17:09+00:00", "modified_files": ["README.md", "main.tf", "README.md", "main.tf"]}, {"id": "e91c7912b25beb51199ccfff2414668bcc69186e", "msg": "Change instance type to r4.2xlarge\n\nThe Knowledge Graph is running out of memory on start-up when it generates the data it needs. Changing the instance type from `m5.2xlarge` to `r4.2xlarge` doubles the amount of RAM available (from 32GB to 64GB), whilst minimally increasing cost.", "date": "2020-01-31 15:24:34+00:00", "modified_files": ["main.tf"]}, {"id": "ef79a5aec29133d4c479652863c61f943fbdb42b", "msg": "postgresql: Bump production database instance size to db.m5.8xlarge\n\n- We're seeing spiky CPU usage, going up to 99%, when scheduled\n  publishing occurs at 0930, and emails are sent out at various points\n  during the day.\n- Tuning the apps would take longer and maybe not even be feasible as\n  scheduled publishing has to happen, and so does sending urgent emails.\n- We could investigate splitting the databases out into\n  `publishing-api-postgresql` and `email-alert-api-postgresql`, but we\n  attempted that before and [resolved to not do\n  it](https://github.com/alphagov/govuk-aws/commit/c51e8bbf879dd867b73bec4f71ba7271703e1909)\n  (also for\n  [publishing-api](https://github.com/alphagov/govuk-aws/pull/1086/commits/3f7cc071b4361e5df15ac1dfb2a1e3c565bb8678)).\n- According to\n  https://www.ec2instances.info/rds/?region=eu-west-1&cost_duration=monthly,\n  base cost for the old instance type is ~$1150/month. The bigger\n  instance type specified here costs ~$2300/month. That's an increase of\n  $1150 / month, or  $13,800 / year.", "date": "2020-02-28 11:57:17+00:00", "modified_files": ["main.tf"]}, {"id": "6283dd7b80fd26ff09d242555a6e56c2eb75471b", "msg": "postgres: Increase instance size to db.m5.12xlarge\n\n- We're using too old a Postgres version (9.6.old-patch) for Amazon to\n  let us use `db.m5.8xlarge`:\n\n```\n* module.postgresql-primary_rds_instance.aws_db_instance.db_instance: 1 error occurred:\n* aws_db_instance.db_instance: Error modifying DB Instance blue-postgresql-primary: InvalidParameterCombination: RDS does not support creating a DB instance with the following combination: DBInstanceClass=db.m5.8xlarge, Engine=postgres, EngineVersion=9.6.11, LicenseModel=postgresql-license. For supported combinations of instance class and database engine version, see the documentation.\n```\n\n- Instead, we're upgrading to the next unrestricted database instance.\n  This costs an extra $2254/month compared to what we have _now_\n  (`db.m5.4xlarge`)", "date": "2020-03-16 15:35:19+00:00", "modified_files": ["README.md", "main.tf"]}, {"id": "b4094f63c5d4a216ed7ade1a51ea3653222cf222", "msg": "Configure memcached_instance_type\n\nWe probably want to use a smaller memcached instance in integration (and\nlower environments), as the default costs about $2k / year.\n\nWe'll raise a govuk-aws-data PR to set this to cache.t3.small in\nintegration.", "date": "2020-12-22 15:39:29+00:00", "modified_files": ["README.md", "main.tf"]}, {"id": "f844cd8e254b161bebef04101f8ce177bcd0840c", "msg": "Add lifecycle rules within govuk-data-infrastructure-integration bucket\n\nThis commit adds lifecycle rules within the `govuk-data-infrastructure-integration` bucket to keep only the last 30 days of data. This is necessary as we currently hold more data which is never used, so by only keeping the most recent month's worth of data we can reduce costs and remove noise.", "date": "2021-01-06 15:53:43+00:00", "modified_files": ["main.tf"]}, {"id": "e5aba1be775a88cc7da6cd9e9c637f2272c7490e", "msg": "Set deadlock_timeout PostgreSQL parameter\n\nThis setting is the timeout which is used by PostgreSQL to detect\ndeadlocks when running queries. The documentation for this option is:\n\n> This is the amount of time, in milliseconds, to wait on a lock before\n> checking to see if there is a deadlock condition. The check for deadlock\n> is relatively expensive, so the server doesn't run it every time it waits\n> for a lock. We optimistically assume that deadlocks are not common in\n> production applications and just wait on the lock for a while before\n> checking for a deadlock. Increasing this value reduces the amount of time\n> wasted in needless deadlock checks, but slows down reporting of real\n> deadlock errors. The default is one second (1s), which is probably about\n> the smallest value you would want in practice. On a heavily loaded server\n> you might want to raise it. Ideally the setting should exceed your typical\n> transaction time, so as to improve the odds that a lock will be released\n> before the waiter decides to check for deadlock. Only superusers can\n> change this setting.\n\nThis change might be a more contentious, or less scientific.\n\nThe main motivation behind this is to increase the time before we get\nlogs about queries waiting for locks (see\n5af25cdb8a99ae5873b21c823300cd3e5ead883f). By increasing this threshold\nI'm hoping we'll avoid getting lots of noise in our logs about queries\nwhich are only waiting for a second whereas we're more interested (at\nthe moment) in the queries which seem to be waiting for much longer.\n\nAfter reading the documentation for `deadlock_timeout` I started to\nthink that the default of 1 second is perhaps quite small for the sorts\nof query durations we often get (especially Email Alert API and\nPublishing API). The documentation says this setting should exceed our\ntypical transaction time, and although I have no doubt that our average\ntransaction time is well below 1 second, we often have transactions\nwhich can take a long time to run. Checking for deadlocks is relatively\nexpensive so increasing this setting will reduce the potentially wasted\ntime spent looking for deadlocks in our long running queries.\n\nWe experience deadlocks pretty infrequently (looking through our most\nrecent logs I couldn't find an example of one being found) so I don't\nfeel like there are any major downsides to increasing the timeout from 1\nsecond to 2.5 seconds.", "date": "2021-01-07 13:06:30+00:00", "modified_files": ["main.tf", "main.tf", "main.tf"]}, {"id": "806b1a2a47f2f4e580e524b2cf8cc5928749d972", "msg": "Make Prometheus storage volume configurable and upgrade to gp3.\n\nThis enables us to add more timeseries storage space in prod, which was\nrunning out.\n\ngp3 is cheaper and faster, so no reason not to use it.", "date": "2021-07-06 18:01:03+01:00", "modified_files": ["main.tf"]}, {"id": "8d7d2ebe0dbe9ebf8009572d1d710c4700cf245e", "msg": "Use cheaper and faster gp3 storage for CI agent EBS volumes.\n\ngp3 is 20% cheaper than gp2 and includes 3000 IOPS at any size instead\nof 3 IOPS/GB. This should speed up builds at least a bit.\n\nWhile we're there, define the values once instead of copy-pasting.", "date": "2021-11-03 16:31:21+00:00", "modified_files": ["README.md", "main.tf"]}]}, {"name": "https://github.com/vmware-archive/terraforming-aws.git", "commits": [{"id": "c48e8a3659d66c5fd52c2aca82e816e8ced0f7e7", "msg": "Add broader tagging support\n\nAdd broader tagging support with support for default tags\nalong with user specified tags. This allows customers to utilize\nAWS tagging best practices and enables them to track deployments\nby environment, team, release, etc. These tags can be used then\nfor tracking billing by environment - for showback internally -\nor for simply tracking resource usage across teams and environments.", "date": "2018-04-09 17:27:57-06:00", "modified_files": ["README.md", "buckets.tf", "dns.tf", "elb.tf", "internet_gateway.tf", "modules.tf", "nat.tf", "bucket.tf", "instance.tf", "optional_instance.tf", "security_group.tf", "variables.tf", "rds.tf", "security_groups.tf", "subnets.tf", "tags.tf", "variables.tf", "vpc.tf"]}]}, {"name": "https://github.com/joshuaspence/infrastructure.git", "commits": [{"id": "d8e1979ea7954076f64ab4d3337b95f14a06fc31", "msg": "Use a single NAT gateway\n\nNAT gateways are expensive ($0.059/hour) so let's use less of them.", "date": "2019-09-27 13:20:04+10:00", "modified_files": ["vpc.tf"]}, {"id": "b9b9465314e3b5ada78340d06b90703136cdf3dc", "msg": "Remove VPC NAT gateway\n\nThis is a temporary measure to cut down on costs.", "date": "2019-10-17 18:43:08+11:00", "modified_files": ["terraform.tfvars"]}, {"id": "0cea1cf84859055ff5107fc8d8514475e7036bee", "msg": "Remove EKS cluster\n\nUse Minikube instead of EKS because EKS is expensive.", "date": "2019-10-31 11:24:50+11:00", "modified_files": ["eks.tf", "helm.tf", "provider.tf", "terraform.tfvars", "tiller.tf", "vpc.tf"]}]}, {"name": "https://github.com/openinfrastructure/terraform-google-gitlab-runner.git", "commits": [{"id": "8429375df72b04cc6fedc1ebb5f2c2e4ba18b9f2", "msg": "Add preemptible feature flag, default to true\n\nCreate preemptible instances by default to reduce cost.  The managed\ninstance group will recreate preempted instances.\n\nSee: https://cloud.google.com/compute/docs/instances/preemptible", "date": "2019-10-04 13:56:56-07:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/codeopensrc/workbench.git", "commits": [{"id": "d5b153510c7ed139b7a2f484d354ae36f80f95e2", "msg": "Add custom var & init options to apps. More granular dns & ssl handling for apps. Add btcpay server template. Add wekan template. Some QoL adjustments.", "date": "2021-02-24 20:14:41-08:00", "modified_files": ["apps.tf", "credentials.tf", "main.tf", "vars.tf", "aws_resources.tf", "aws_route53.tf", "aws_security_groups.tf", "vars.tf", "main.tf", "aws_route53.tf", "do_resources.tf", "do_vpc.tf", "vars.tf", "main.tf", "letsencrypt.tmpl", "letsencrypt_vars.tmpl", "main.tf", "vars.tf", "main.tf", "btcpay.tmpl"]}, {"id": "275797e8ed427bdcf121081f76b0a11a5d91a550", "msg": "Better service admin and system migration\n\nUpdate gitlab from 14.2.3 to 14.3.0.\nAdd sendgrid support for smtp gitlab config.\nAdd support for misc cname aliases.\nOmit gitlab runner token if not importing gitlab.\nForce cert renewal on adding/rming domains. Fixes #17.\nUpdate consul kv applist on new services in additional_ssl.\nRemove external project list of remote mirrors when importing\n  into non-default workspace.\nDowngrade kubernetes version to v1.20, version that gitlab supports.\nAdd configure smtp file/step for handling outgoing emails.\nAdd reboot env step to trigger pipelines for projects on external\n  project list, intended for system migration.\nBetter handle nginx config for additional_domains.\nRedirect root domain to www by default. Fixes #18.\nClear gitlab clusters on import by default (uses -r flag on addCluster).\nMore efficient backup of gitlab when doing version backup.\n\nChangelog: massive\nFixes: #17\nFixes: #18", "date": "2021-10-02 12:54:29-07:00", "modified_files": ["credentials.tf", "main.tf", "vars.tf", "aws_resources.tf", "aws_route53.tf", "vars.tf", "do_dns.tf", "do_resources.tf", "vars.tf", "main.tf", "letsencrypt_vars.tmpl", "main.tf", "vars.tf", "main.tf", "kube_services.tmpl", "mainproxy.tmpl", "init.sh", "install_docker.sh", "addClusterToGitlab.sh", "createClusterAccounts.sh", "nginxKubeProxy.sh", "Dockerfile-k8s", "backupGitlab.sh", "configureSMTP.sh", "createGroupToken.sh"]}, {"id": "7224913c9db59e4d273300b9822813f156af7b5f", "msg": "Add clustering/replication logic for mongo\n\nIf 3 more more DB servers and using mongo, configure replication servers\nMore efficient playbook running logic depending on scaling up or down\nAdjust where kube-cluster-endpoint provisioned\nGenerate new kube join token on scaling, in case token expires\n\nAddresses: #40", "date": "2021-12-05 01:32:32-08:00", "modified_files": ["main.tf", "scratchpad.yml", "outputs.tf", "clusterdb.tf", "clusterdb.yml", "clusterdb_rm.yml", "consul.tf", "consul_rm.yml", "cron.tf", "outputs.tf", "gpg_upload.yml", "init.tf", "init.yml", "kubernetes.yml", "install_mongo.sh"]}]}, {"name": "https://github.com/ashlineldridge/k1s.git", "commits": [{"id": "b3ce4f9a0836d233ac516677199436a3b26eba47", "msg": "Made make list pretty; Made Makefile more efficient", "date": "2020-06-07 10:21:48+10:00", "modified_files": ["Makefile", "backend.tf", "common.tf", "outputs.tf", "providers.tf", "outputs.sh", "list.sh", "roll.sh"]}]}, {"name": "https://github.com/zoitech/terraform-aws-saml.git", "commits": [{"id": "d8afd74c95a1667d23f67ad541a7904224943874", "msg": "#6 updated config to terraform 0.12\n#7 added two optional roles for billing + logging\n#8 changed list variables to list of maps/objects and moved to locals.tf", "date": "2019-10-29 17:10:17+01:00", "modified_files": ["data.tf", "iam_providers.tf", "iam_roles.tf", "locals.tf", "outputs.tf", "variables.tf"]}, {"id": "eb25af11bea63ef2c14e6c9cbbba4d9a999ca18f", "msg": "#10 Make billing and logging role independent from one another", "date": "2019-11-06 08:49:38+01:00", "modified_files": ["locals.tf", "variables.tf"]}, {"id": "357fd87b4bb99cb614864376bc7ebe7ede612a15", "msg": "Add create_billing_role and create_logging_role vars\n\nThis module is currently broken without these 2 variables defined.", "date": "2020-02-07 10:57:12-05:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/koshkin-ccna/afac.git", "commits": [{"id": "6a6f4dbea04da76fd6e8417c04a88501b8b68c52", "msg": "Add AWS SNS billing topic", "date": "2022-01-04 00:10:59+01:00", "modified_files": ["alarm_billing.tf", "README.md", "alarm_billing.tf", "backend.tf", "variables.tf"]}]}, {"name": "https://github.com/clingen-data-model/architecture.git", "commits": [{"id": "d5eb8b28eb0e43d148263a8e559c699f0fa4021d", "msg": "add a bucket label for cost reporting purposes", "date": "2021-11-23 13:46:15-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/dexterchan/Terraform_Webserver.git", "commits": [{"id": "af5af0b8e6a59a9c5879fde7eaaa86d694c2bfa2", "msg": "reduce cost by reducing vpc endpoint deployment to one subnet only", "date": "2020-08-27 15:23:11+08:00", "modified_files": ["ecs_ec2_launch.tf", "variables.tf", "vpc-endpoint.tf", "profile1.auto.tfvars", "ecs_fargate_launch.tf", "variables.tf", "vpc-endpoint.tf", "profilefargte.auto.tfvars"]}]}, {"name": "https://github.com/ONSdigital/eq-terraform-dynamodb.git", "commits": [{"id": "40eb651a50d0dfd5cf047ef62c8a6259c1c66e02", "msg": "Set billing_mode to PAY_PER_REQUEST", "date": "2018-12-10 16:38:49+00:00", "modified_files": ["aws.tf", "eq_session.tf", "global_vars.tf", "questionnaire_state.tf", "submitted_responses.tf", "used_jti_claim.tf"]}]}, {"name": "https://github.com/DoSomething/infrastructure.git", "commits": [{"id": "a2dbfe25699f574b5ad4540063e4208ea8b04b4e", "msg": "Removing provisioned IOPS from testing to get back to cheaper storage options.", "date": "2019-02-12 16:39:42-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/graymeta/terraform-aws-platform.git", "commits": [{"id": "de69c52034332ae4cf5b7e9013cf0cfe691fba6f", "msg": "GP-801: make bcrypt cost configurable", "date": "2018-11-29 14:42:19-08:00", "modified_files": ["main.tf", "auto_scaling.tf", "userdata.tpl", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/wri/gfw-aws-core-infrastructure.git", "commits": [{"id": "0c201a731a3f9a85b9526d0d851016fa16c490e8", "msg": "rename policy templates, make data lake public, requester pays", "date": "2020-03-19 15:53:37-04:00", "modified_files": ["data.tf", "main.tf", "redirect_latest_tile_cache.zip", "bucket_policy_public_read.json.tpl", "bucket_policy_role_read.json.tpl", "bucket_policy_role_write.json.tpl", "iam_policy_s3_read.json.tpl", "iam_policy_s3_write.json.tpl", "iam_policy_secrets_read.json.tpl", "s3_aws.json.tpl", "storage.tf"]}, {"id": "eeb5154031f8491ae812ba96f8421f5deb51539a", "msg": "Set request payer to BucketOwner on data lake", "date": "2020-03-23 14:09:44-04:00", "modified_files": ["storage.tf"]}, {"id": "f2797ff0a9ba8543369528337dd73f7fecdf49d9", "msg": "change all buckets to requester pays", "date": "2021-04-28 11:22:18-04:00", "modified_files": ["main.tf"]}, {"id": "6fec6e1e3ae7b8129d60289415462ed7f43cd3f5", "msg": "change pipeline bucket back to requester_pays = False", "date": "2021-04-28 21:41:43-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/FXinnovation/fx-terraform-module-aws-bucket-s3.git", "commits": [{"id": "fc925fdd9e49d035a495a27d0ff735e0789c6c29", "msg": "breaking: terraform 0.12 upgrade and new features\n\nAdapting this to terraform 0.12 is breaking, it will allow for more\nreadable code altogether and more options.\n\nThe following features are added:\n* bucket access blocs\n* bucket logging\n* bucket versionning\n* bucket static website\n* bucket lifecycle rules\n* bucket CORS\n* region\n* force_destroy\n* request_payer\n* Update Jenkinsfile for terraform 0.12\n\nCreated single examples for faster CI tests", "date": "2020-01-22 09:43:42-05:00", "modified_files": ["AUTHORS", "CHANGELOG.md", "Jenkinsfile", "README.md", "README.md", "outputs.tf", "variables.tf", "README.md", "bucket-policies-outputs.tf", "bucket-policies.tf", "deploy.tf", "disabled-outputs.tf", "disabled.tf", "external-kms-no-policies-outputs.tf", "external-kms-no-policies.tf", "logging-outputs.tf", "logging.tf", "object-lock-outputs.tf", "object-lock.tf", "standard-versionned-outputs.tf", "standard-versionned.tf", "static-website-outputs.tf", "static-website.tf", "variables.tf", "versions.tf", "README.md", "outputs.tf", "variables.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "README.md", "main.tf", "outputs.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/bulentyuce/OkeTerraform.git", "commits": [{"id": "c8a4fb6ce93da19d7de47269b930181e1d613c92", "msg": "Fixed incorrect K8s version in terraform.tfvars.example (#204)\n\nSigned-off-by: noel_dcosta <noel.dcosta@oracle.com>", "date": "2020-08-21 13:41:47+05:18", "modified_files": ["terraform.tfvars.example"]}, {"id": "1832f41f74a45cbcb64f9656f15941167ada6267", "msg": "Allow public ingress from anywhere to ports 80 and 443 (#205)\n\n* Allow public ingress from anywhere to ports 80 and 443\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>\r\n\r\n* Support to specify custom list of destination ports for public LB security list\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>\r\n\r\n* updated docs for public_lb_ports\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>\r\n\r\n* Updated order of variables\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>\r\n\r\n* Set variable type for public_lb_ports\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>\r\n\r\n* Updated terraform options doc\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>", "date": "2020-09-04 14:48:11+05:18", "modified_files": ["configuration.adoc", "terraformoptions.adoc", "main.tf", "security.tf", "variables.tf", "terraform.tfvars.example", "variables.tf"]}]}, {"name": "https://github.com/hashicorp/terraform-azurerm-terraform-enterprise.git", "commits": [{"id": "b2fe861f1949f5f9f5bad0b4ca4ee6b6cb65485f", "msg": "Scale down default Redis size\n\nThe P3 size has 26GB of cache and costs $1485.17 per month. The P1 has 6GB of cache and costs $370.96 per month. The 6GB size is more than enough for intense workloads.", "date": "2022-01-12 23:55:31-05:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/Ivani451/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/ivandelic/oci-devops-functions-blue-green.git", "commits": [{"id": "5fd4ef027f71feb5ca2236145f847c0966a803bf", "msg": "Adding RM fn payload", "date": "2022-01-28 17:04:51+01:00", "modified_files": ["build_spec.yml", "func.py", "payload.json", "devops.tf", "variables.tf", "main.tf"]}]}, {"name": "https://github.com/offensive-terraform/terraform-aws-ebs-snapshot-publicly-exposed.git", "commits": [{"id": "e101857d7e7c7747fd94eda107624ab9a6285860", "msg": "Remove provider and update payload path", "date": "2020-09-16 01:20:38-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/MartinFeineis/terraform.git", "commits": [{"id": "359ba426393c78b78695797f9bdd6a08c0455720", "msg": "added billing", "date": "2021-01-17 21:56:09-05:00", "modified_files": ["main.tf", "main.tf"]}]}, {"name": "https://github.com/IanDCarroll/StookyBill.git", "commits": [{"id": "c17976719cd41a370d2af34b0e9d9071a82b9cc3", "msg": "Terraform creates infra with empty ECS container to house stookybill\n  - might need the default route table defined to allow public internet to reach stookybill\n  - might not", "date": "2021-08-20 10:43:44-07:00", "modified_files": ["README.md", "main.tf"]}]}, {"name": "https://github.com/stuartellis/stuartellis-org-tf-modules.git", "commits": [{"id": "39a9cabac6765c75591ba258fef0d10ba7ae0f9e", "msg": "Add module for billing alerts", "date": "2021-06-06 17:08:27+01:00", "modified_files": ["main.tf", "variables.tf", "outputs.tf"]}]}, {"name": "https://github.com/greenbrian/musical-spork.git", "commits": [{"id": "24c07bfd5c31438fff6374e9ba3d577e6402d777", "msg": "f-centos-7 - Support for cheaper CentOS 7/t3 instances, visibility fixes (#23)\n\n* Adding support for CentOS 7(cheaper), moved to t3 instances(cheaper) for non t2.micro(free-tier), hostnaming/display name visibility improvements\r\n\r\n* Fixing ami name change typo, fixing docker consul dns configuration", "date": "2018-10-05 09:57:04-05:00", "modified_files": ["README.md", "packer.json", "centos-7.sh", "el7.sh", "rhel.sh", "setup.sh", "main.tf", "variables.tf", "main.tf", "variables.tf", "init-client.tpl", "main.tf", "variables.tf", "init-cluster.tpl", "variables.tf", "main.tf", "database.tpl", "main.tf", "variables.tf", "terraform.tfvars.example", "variables.tf"]}]}, {"name": "https://github.com/fahdr/asz-dbz.git", "commits": [{"id": "f5b50d8dfbec87dba0b824369021dc6b22058840", "msg": "Choosing only availabilty zone for cost optimaization", "date": "2021-05-15 08:35:49-07:00", "modified_files": ["eks.tf", "iam.tf", "ingress.tf", "network.tf"]}]}, {"name": "https://github.com/kmalkin/tf-aws-pi-hole.git", "commits": [{"id": "066049972b995fb019bf29be7f0f307064a2f00e", "msg": "Feature/fr 0001 open vpn bolt on (#13)\n\n* FR-0001: split out open vpn into module. made pihole a module. and have gone down the split ec2 isntance route for the most diverse options\r\n\r\n* FR-0001: removed the unfinished iam user as its just creating cost / confusion issues.\r\n\r\n* FR-0001: added additional tags values which will be mapped through to every resource later\r\n\r\n* FR-0001: completed new ec2 instance for openvpn . just need to check open vpn installation config to see how easy it is to install via user data\r\n\r\n* FR-0001: added remapped proper outputs. updated Readmes\r\n\r\n* FR-0001: added remapped proper outputs. updated Readmes\r\n\r\n* FR-0001: added segragated isolated module for backend config should someone want it\r\n\r\n* FR-0001: removed hardcoded backend state config. will be using it locally for my use. but as in README not enforcing it yet\r\n\r\n* FR-0001: added my tfvars to ignore\r\n\r\n* FR-0001: added more tags for id\r\n\r\n* FR-0001: added cert identifiers to ignore incase someone downloads and forgets to move them\r\n\r\n* FR-0001: added ovpn certs to ignore to stop accidental commital if using the vpn version\r\n\r\n* FR-0001: setup the config user data for the openvpn install\r\n\r\n* FR-0001: added new files for remote state vs non remote state. so its easier to choose without much effort\r\n\r\n* FR-0001: added new files for remote state vs non remote state. so its easier to choose without much effort\r\n\r\n* FR-0001: added ovpn certs to ignore to stop accidental commital if using the vpn version and fixed user data\r\n\r\n* FR-0001: adding addtional sg group so that the openvpn instance can actually access the dns server ports in pi hole instance\r\n\r\n* FR-0001: adding addtional sg group so that the openvpn instance can actually access the dns server ports in pi hole instance\r\n\r\n* FR-0001: adding addtional sg group so that the openvpn instance can actually access the dns server ports in pi hole instance\r\n\r\n* FR-0001: adding addtional sg group so that the openvpn instance can actually access the dns server ports in pi hole instance\r\n\r\n* FR-0001: adding addtional sg group so that the openvpn instance can actually access the dns server ports in pi hole instance\r\n\r\n* FR-0001: adding addtional sg group so that the openvpn instance can actually access the dns server ports in pi hole instance\r\n\r\n* FR-0001: adding addtional sg group so that the openvpn instance can actually access the dns server ports in pi hole instance\r\n\r\n* FR-0001: updated readme\r\n\r\n* FR-0001: halved the volume requirements. They were using 8% of the 20GB .. so it seemed like too much and might as well be smaller volumes\r\n\r\n* FR-0001: halved the volume requirements. They were using 8% of the 20GB .. so it seemed like too much and might as well be smaller volumes\r\n\r\n* FR-0001: halved the volume requirements. They were using 8% of the 20GB .. so it seemed like too much and might as well be smaller volumes\r\n\r\n* FR-0001: adding all info to changelog\r\n\r\n* FR-0001: adding all info to changelog and fixed the locking table\r\n\r\n* FR-0001: adding all info to changelog and fixed the locking table\r\n\r\n* FR-0001: re-added port 80/443 as i forgot they were there for pi hole admin access due to their original names.\r\n\r\n* FR-0001: making modules optional\r\n\r\n* FR-0001: making modules optional\r\n\r\n* FR-0001: making modules optional, precommit updates and some refactoring\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: single instance install should now be completely automatic and even configure itself to vpn push traffic through the pihole.\r\n\r\n* FR-0001: precommit stuff\r\n\r\n* FR-0001: fixed an issue with the userdata... now the single instance install works completely without manual intervention\r\n\r\n* FR-0001: fixed an issue with the userdata... now the single instance install works completely without manual intervention\r\n\r\n* FR-0001: single instance install should now be completely automatic and even configure itself to vpn push traffic through the pihole.\r\n\r\n* FR-0001: single instance install should now be completely automatic and even configure itself to vpn push traffic through the pihole.\r\n\r\n* FR-0001: single instance install should now be completely automatic and even configure itself to vpn push traffic through the pihole.\r\n\r\n* FR-0001: added vars for hostnames, ami ids, volume allocations and instance type\r\n\r\n* FR-0001: added hooks for self populating README's from the tf-docs hooks\r\n\r\n* FR-0001: added hooks for self populating README's from the tf-docs hooks\r\n\r\n* FR-0001: added hooks for self populating README's from the tf-docs hooks\r\n\r\n* FR-0001: updated tools\r\n\r\n* FR-0001: updated changlog and readme\r\n\r\n* FR-0001: updated changlog and readme\r\n\r\nCo-authored-by: Karl Malkin <kmalkin@williamhill.co.uk>", "date": "2020-10-09 10:09:40+01:00", "modified_files": [".gitignore", ".pre-commit-config.yaml", ".tool-versions", "CHANGELOG.md", "CONTRIBUTION.md", "README.md", "README.md", "asg.tg", "README.md", "dynamodb.tf", "outputs.tf", "s3.tf", "variables.tf", "versions.tf", "ec2.tf", "iam.tf", "README.md", "outputs.tf", "pi-hole-management.policy", "policy.tf", "role.tf", "user.tf", "variables.tf", "main.tf", "outputs.tf", "default.tfvars", "README.md", "README.md", "ec2.tf", "outputs.tf", "sg.tf", "variables.tf", "setup.tf", "README.md", "additional_cross_instance_rules.tf", "variables.tf", "open-vpn-init.tpl", "open-vpn-pi-hole-joint-init.tpl", "pi-hole-init.tpl", "variables.tf", "r53.tf", "s3.tf", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/poseidon/terraform-google-kubernetes.git", "commits": [{"id": "05b0af7e929f965b1494b36b61e5deb86af809cd", "msg": "Change kube-apiserver port from 443 to 6443\n\n* Adjust firewall rules, security groups, cloud load balancers,\nand generated kubeconfig's\n* Facilitates some future simplifications and cost reductions\n* Bare-Metal users who exposed kube-apiserver on a WAN via their\nrouter or load balancer will need to adjust its configuration.\nThis is uncommon, most apiserver are on LAN and/or behind VPN\nso no routing infrastructure is configured with the port number", "date": "2018-06-18 21:57:58-07:00", "modified_files": ["bootkube.tf"]}, {"id": "189d96ce0f96c107ebf62dbaf73734e6fd20883a", "msg": "Use global HTTP/TCP proxy load balancing for Ingress on GCP\n\n* Switch Ingress from regional network load balancers to global\nHTTP/TCP Proxy load balancing\n* Reduce cost by ~$19/month per cluster. Google bills the first 5\nglobal and regional forwarding rules separately. Typhoon clusters now\nuse 3 global and 0 regional forwarding rules.\n* Worker pools no longer include an extraneous load balancer. Remove\nworker module's `ingress_static_ip` output.\n* Add `ingress_static_ipv4` output variable\n* Add `worker_instance_group` output to allow custom global load\nbalancing\n* Deprecate `controllers_ipv4_public` module output\n* Deprecate `ingress_static_ip` module output. Use `ingress_static_ipv4`", "date": "2018-05-06 23:21:53-07:00", "modified_files": ["ingress.tf", "network.tf", "outputs.tf", "ingress.tf", "outputs.tf", "workers.tf"]}, {"id": "71ef78817a8b795d89cba00055e3527799638d50", "msg": "Add Google Cloud worker instances to a target pool\n\n* Background: A managed instance group of workers is used in backend\nservices for global load balancing (HTTP/HTTPS Ingress) and output\nfor custom global load balancing use cases\n* Add worker instances to a target pool load balancing TCP/UDP\napplications (NodePort or proxied). Output as `worker_target_pool`\n* Health check for workers with a healthy Ingress controller. Forward\nrules (regional) to target pools don't support different external and\ninternal ports so choosing nodes with Ingress allows proxying as a\nworkaround\n* A target pool is a logical grouping only. It doesn't add costs to\nclusters or worker pools", "date": "2019-03-30 15:12:55-07:00", "modified_files": ["network.tf", "outputs.tf", "outputs.tf", "target_pool.tf", "workers.tf"]}]}, {"name": "https://github.com/rotemavni/smart_terravni.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/zner0L/serverless-donations.git", "commits": [{"id": "a94976273d1b47c8b9afa17d4a4fbd46d795b2a6", "msg": "Added support for paysafecard", "date": "2018-11-18 11:04:05+02:00", "modified_files": [".gitignore", "index.js", "package.json", "main.tf", "variables.tf"]}, {"id": "7b35d5fcef1aad5cecb1165214a4142cbaf47f44", "msg": "Implented CoinGate as Payment Provider", "date": "2018-11-23 20:34:42+02:00", "modified_files": ["index.js", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/cmendible/azure.samples.git", "commits": [{"id": "9b683139ad51a651121a9ad5a98893dd0bccc074", "msg": "kubecost", "date": "2021-04-30 10:27:07+02:00", "modified_files": ["README.md", "kubecost.tf", "main.tf", "providers.tf", "variables.tf"]}, {"id": "649f28bb5c1b1cd52dde05d7a1ac5c90c89ce1a8", "msg": "updated to kubecost 1.91.2", "date": "2022-04-04 14:19:07+02:00", "modified_files": [".terraform.lock.hcl", "kubecost.tf", "main.tf", "providers.tf"]}]}, {"name": "https://github.com/felixonmars/installer.git", "commits": [{"id": "256ba5e3929d3bb0e1a195d93c02813a5917208c", "msg": "Bump Kubernetes/Tectonic versions (#79)\n\n* tectonic: update Nginx Ingress image\r\n\r\n* Allows IPv6 DNS resolvers and fixes other issues\r\n* Remove nginx template override config map, previously needed on AWS\r\nto enable port redirection (now uses an annotation on ingress obj)\r\n* https://github.com/kubernetes/ingress/blob/master/controllers/nginx/Changelog.md\r\n\r\n* tectonic: bump KVO/TCO\r\n\r\nChanges for TCO:\r\n  - Block upgrade for version < 1.5.2-tectonic.2.\r\n  - Remove 'rawURL' support.\r\n\r\nChanges for KVO:\r\n  - Add components mapping for 1.5.4+tectonic.1.\r\n  - Add node-agent, checkpointer and tectonic-stats-emmiter into the mapping.\r\n  - Add support for updating the entire manifest during upgrade.\r\n\r\nOther changes:\r\n  - Add 'selector' in the deployments to fix the payload so that\r\n    1.5.2-tectonic.2 can upgrade to this payload.\r\n\r\n* modules/bootkube: add kubelet client cert flags to API server\r\n\r\nNotably fixes `kubectl logs`\r\n\r\n* tectonic: bump console to v1.1.1", "date": "2017-03-20 12:45:15-07:00", "modified_files": ["config.tf", "kube-apiserver.yaml", "daemonset.yaml", "service.yaml", "ingress.yaml", "configmap.yaml", "deployment.yaml", "service.yaml", "kube-version-operator.yaml", "tectonic-channel-operator.yaml", "tectonic.sh"]}, {"id": "d3c889d73a3c8b0a48934dd6f338b87da0115b3f", "msg": "*.*: Add 'make payload'\n\nModify the 'make-update-payload.sh' to use terraform to populate the\nassets first, then generate the payload.", "date": "2017-04-27 19:28:02-07:00", "modified_files": ["Makefile", "tectonic-channel-operator.yaml", "assets.tf", "awsutil.sh", "config.tf", "make-update-payload.sh", "payload.json", "publish-payload.sh", "upload-payload.sh"]}, {"id": "f674e33023e0e32aefd18cea97449e4502994dae", "msg": "modules/update-payload/*: Add cluo into tco's payload.", "date": "2017-05-03 16:23:37-07:00", "modified_files": ["assets.tf", "make-update-payload.sh", "payload.json"]}, {"id": "f91ef619e12b790748753d9afbc79ef2d4eee7d2", "msg": "Update KVO to v1.6.4-kvo.3 (#874)\n\nUpdate KVO to v1.6.4-kvo.3\r\n\r\nAlso generate a new update-payload.", "date": "2017-05-30 12:22:35-07:00", "modified_files": ["config.tf", "kube-version-operator.yaml", "payload.json"]}, {"id": "7fd24aaf4ff09982992edcedddc5f8046fa28ba4", "msg": "update-payload: Fix \"make payload\".\n\nNeed to define the variales otherwise the `make payload` command will\nfail.\n\nA follow-up PR should move those tectonic operators into a sub-directory\nso we don't need to maintain this in the future.", "date": "2017-06-19 13:52:23-07:00", "modified_files": ["assets.tf"]}, {"id": "4e7f5f4b37b1ae7bc6a64a6863d1ff1668168776", "msg": "updater: Move operators and appversions into subdirectories.\n\nThis helps to clean up the 'make payload' scripts.", "date": "2017-06-27 12:50:47-07:00", "modified_files": ["app-version-kubernetes.yaml", "app-version-tectonic-cluster.yaml", "app-version-tectonic-etcd.yaml", "app-version-tectonic-monitoring.yaml", "cluster-config.yaml", "container-linux-update-operator.yaml", "kube-version-operator.yaml", "tectonic-channel-operator.yaml", "tectonic-etcd-operator.yaml", "tectonic-prometheus-operator.yaml", "tectonic.sh", "assets.tf", "make-update-payload.sh", "payload.json"]}, {"id": "6acbf2c17a0aa2e55b8e8142fe87d1a8b3bfae4e", "msg": "modules/update-payload: Fix appversion for tectonic-etcd.", "date": "2017-06-27 13:07:48-07:00", "modified_files": ["config.tf", "assets.tf", "assets.tf", "payload.json"]}, {"id": "75dff4c055b0f535ac1ad2e26e62a3d92eb0aad9", "msg": "config.tf/payload.json: Bump kvo to v1.6.7.", "date": "2017-07-06 17:03:38-07:00", "modified_files": ["config.tf", "payload.json"]}, {"id": "34db444369fbb4eb06a25f4a155147027bb0a3d6", "msg": "modules/bootkube: generate etcd tls zip content and reuse in aws\n\nCurrently when distributing all keys via userdata we hit the AWS limit\nof 19k.\n\nThis solves it by distributing zipped content reducing the userdata\npayload to 14k.", "date": "2017-07-10 15:11:14+02:00", "modified_files": ["ignition.tf", "variables.tf", "assets.tf", "outputs.tf", "main.tf"]}, {"id": "23fc5aeb7ad1474268af80708507c92d7356e5e9", "msg": "Fix undefined variables in upload-payload/assets.tf.\n\nAlso plans to add a check in jenkins job for each PR so 'make payload'\nwon't get broken.", "date": "2017-07-24 15:11:24-07:00", "modified_files": ["assets.tf"]}, {"id": "4835a24980fa021ebbf9ba926e85a9b654d5421a", "msg": "config.tf, payload.json: Bump TCO to 0.4.0.\n\nCHANGELOG:\n- Add support to get a specific version of payload\n- Add support to list all payloads in order\n- Bump operator client\n- Refactor on TCO and allow TCO to upgrade through every intermediate versions\n- Allow TCO to upgrade across minor versions", "date": "2017-07-26 17:51:58-07:00", "modified_files": ["config.tf", "payload.json"]}, {"id": "17ba2c7a09c96bac2e056c79677e93adaaf7eba1", "msg": "kvo: v1.7.1-kvo.4 & regenerate update payload.", "date": "2017-08-03 17:47:57-07:00", "modified_files": ["config.tf", "payload.json"]}, {"id": "496a752be5d86248ce6c96e2ef807217f4c4cdf0", "msg": "*: Add or migrate to using the tectonic-cluo-operator\n\n* tectonic-cluo-operator will manage the CLUO v0.3.0 update-operator\n(coordinator) deployment and update-agent daemonset\n* update-operator will stop managing the update-agent daemonset\n* update-operator will auto-label Container Linux nodes\n* update-agent will node select for the CLUO agent=true label\n* Generate update payload for tectonic-cluo-operator", "date": "2017-08-09 15:39:29-07:00", "modified_files": ["config.tf", "assets.tf", "app-version-tectonic-cluo.yaml", "container-linux-update-operator.yaml", "tectonic-cluo-operator.yaml", "tectonic.sh", "assets.tf", "make-update-payload.sh", "payload.json"]}, {"id": "8c1ad79746f4d219cae065be1029940cfd6e988d", "msg": "config.tf, payload.json: Bump TCO and KVO.\n\nTCO: Fix and improve log lines, fix migration.\nKVO: Fix deployment/daemonset upgrade for 'stategy:replace'.", "date": "2017-08-22 19:06:38-07:00", "modified_files": ["config.tf", "payload.json"]}, {"id": "8a1b6ce00b6b0ce69d09d977857d9a5dec7f5890", "msg": "Bump Hyperkube to 1.7.5 (and all the related versions). (#1912)\n\n* Bump Hyperkube to 1.7.5 (and all the related versions).\r\n\r\n* Update payload", "date": "2017-09-18 11:37:28+02:00", "modified_files": ["config.tf", "payload.json"]}, {"id": "4e25dda17e95d0da8becd962a9d41385dfccb2a0", "msg": "config.tf: bump kvo, node-agent, and tco versions.\n\n- kvo: v1.7.5-kvo.5\n- node-agent: v1.7.5-kvo.3\n- tco: v0.5.4\n\nAlso regenerate the update payload to match.", "date": "2017-09-19 16:46:20-07:00", "modified_files": ["config.tf"]}, {"id": "8ae81bba41ec93509f21ea92fcc15f1a06f84fd3", "msg": "config.tf: Bump tectonic version to 1.8.\n\nThis is a placeholder so that the release automation job can generate\na new payload which then nightly upgrade test job can upgrade to from\nthe last release.\n\nIdeally this should be down automatically when we cut a release branch.", "date": "2017-10-25 15:31:15-07:00", "modified_files": ["config.tf"]}, {"id": "1a4eaa1ede4f0faeca95edaa85307e1c59e9904c", "msg": "modules/update-payload: fix payload gen failure introduced by #2465\n\nNightly release build https://jenkins-tectonic-installer.prod.coreos.systems/job/tectonic-release-automation/job/build-tectonic/job/master/34/ revealed that the payload generation broke:\n\n* resource 'template_dir.payload_appversions' config: unknown variable referenced: 'versions'. define it with 'variable' blocks", "date": "2017-12-01 15:21:49+01:00", "modified_files": ["assets.tf"]}, {"id": "e7294b8d2c69ec70381fd81aae5562a325a49c8d", "msg": "Revert \"modules/update-payload: fix payload gen failure introduced by #2465\"", "date": "2017-12-05 00:08:18+01:00", "modified_files": ["assets.tf"]}, {"id": "a98e259863fd72dcab44ac17b5490b2306f37c26", "msg": "modules/update-payload/assets.tf: remove kubernetes addon", "date": "2017-12-05 12:02:32+01:00", "modified_files": ["assets.tf"]}, {"id": "6a4355a02ff6104a840983483cac71acd5bc6cb5", "msg": "modules/update-payload: repair payload generation after #2486", "date": "2017-12-15 17:53:25+01:00", "modified_files": ["assets.tf"]}, {"id": "c8ca592592d9eaaf12787e29ebaaa75721e92d66", "msg": "*.*: Add TUO into the installation and payload.\n\nThis PR will remove console, dex, ingress, tectonic-config and stats-emmiter\nInstead it will use the tectonic-utility-operator to install them.", "date": "2017-12-11 16:37:30-08:00", "modified_files": ["config.tf", "assets.tf", "config.yaml", "deployment.yaml", "service.yaml", "configmap.yaml", "deployment.yaml", "services.yaml", "configmap.yaml", "deployment.yaml", "service.yaml", "daemonset.yaml", "service.yaml", "ingress.yaml", "deployment.yaml", "service.yaml", "stats-emitter.yaml", "app-version-tectonic-utility.yaml", "tectonic-utility-operator.yaml", "tectonic.sh", "assets.tf"]}, {"id": "a12018001a9af18a999c0214880f099ad5af7bc2", "msg": "module/update-payload: Include TNO and its appversion into the payload.\n\nA follow up PR to the release automation repo is required to fully\nupdate the payload.", "date": "2018-01-16 18:08:07-08:00", "modified_files": ["app-version-tectonic-network.yaml", "tectonic-network-operator.yaml", "assets.tf"]}, {"id": "88ee02c4820bee45afbfb4c32d784ef2dafc95e3", "msg": "Moved update-payload module to tectonic-release-automation repo", "date": "2018-04-03 14:59:19-07:00", "modified_files": [".gitignore", "BUILD.bazel", "assets.tf", "config.tf"]}]}, {"name": "https://github.com/CloudWright/terraform-google-cloudwright-deployment-zone.git", "commits": [{"id": "1eee873bf77bb20c20a3e5db2ccda7799576d5ee", "msg": "remove key rotation period (accumulates keys forever that are kind of expensive)", "date": "2020-04-06 10:03:32-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/austin1237/clip-stitcher.git", "commits": [{"id": "4eed76f9bfd4f93181660178ea689d98cd6d66d5", "msg": "removed private subnet/nat to reduce cost", "date": "2018-02-22 15:07:36-07:00", "modified_files": ["fargaterunner.zip", "main.go", "main.tf", "main.tf", "main.tf", "outputs.tf"]}]}, {"name": "https://github.com/ockev/TFC_Demo.git", "commits": [{"id": "44f481fe3891409426274309087f8477c55dd2ca", "msg": "added bill tag", "date": "2021-09-22 09:51:34-04:00", "modified_files": ["compute.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-aws-budget.git", "commits": [{"id": "fb874c1f7c517f560631bfe1eac6c8a492de77de", "msg": "add cost filters too", "date": "2020-01-07 11:06:37+00:00", "modified_files": ["README.md", "aws_budget.ec2-half.tf", "aws_budget.ec2.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/giantswarm/giantnetes-terraform.git", "commits": [{"id": "53ed24b573947c73ea9f0f4f8b477c44b7de2d54", "msg": "Use cheaper resources by default (#97)\n\n* Use cheaper resources by defalt\r\n\r\n* Fix worker vm size", "date": "2018-05-25 15:25:39+02:00", "modified_files": ["bastion.tf", "variables.tf", "master-as.tf", "variables.tf", "variables.tf", "vault.tf", "variables.tf", "worker-as.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/cloudfoundry/bosh-cpi-certification.git", "commits": [{"id": "3f06948fcff235cc01f0a480c3f3095aaab0c337", "msg": "Hygiene: `terraform fmt`\n\n`terraform fmt` is a double-edged sword: it makes terraform files pretty\nat the expense of git history.\n\n```bash\nfind . -name \\*.tf -print | xargs -n 1 terraform fmt\n```", "date": "2022-04-08 11:22:05-07:00", "modified_files": ["terraform.tf", "template.tf", "terraform.tf", "terraform.tf"]}]}, {"name": "https://github.com/kathputli/terraform-aws.git", "commits": [{"id": "321b1aee88f7d15dafe46aede2b86ced70061025", "msg": "Add support for spot-fleet bootstrap\n\nThis allows using a spot fleet to create the bootstrap instance.  When instance\nprices are low, this can result in savings over the on-demand cost of a\nt2.small instance (amazing, to be honest), and the bootstrap server is probably\nOK to handle the possible termination and re-creation that can occur with spot\ninstances.\n\nA new set of variables are added to control if we should use this, and what\nprice to set.  We also need a variable to control the expiration time, since we\ncan't compute it ourselves (at least, not easily).\n\nBUG: Setting \"associate_public_ip_address\", while not having any real effect in\nour config (because we set that previously at the subnet level) causes\nTerraform to generate a config that fails to run.  This needs to be reported.\n\nTODO: Make multiple launch configurations for different subnet/instance-type\ncombinations.", "date": "2017-01-05 00:58:12-08:00", "modified_files": ["bootstrap.tf", "variables.tf"]}]}, {"name": "https://github.com/lebergarrett/garrettleber-backend.git", "commits": [{"id": "a610049b5095874382cb904f5a22f7202691e9c6", "msg": "Was previously trying to reference hash of payload and layer when intending to reference zip, also added upload of zip files to Actions workflow", "date": "2021-04-02 13:56:55-04:00", "modified_files": ["terraform-deploy.yml", "lambda_deploy.tf"]}]}, {"name": "https://github.com/jinnuT/terraform.git", "commits": [{"id": "8be14fe7bf0a888c6918e03ff9fb1232429acb47", "msg": "just checking the output of attributes to see [aws_spot_instance_request.cheap_worker.*.spot_instance_id]", "date": "2021-07-27 11:23:24-07:00", "modified_files": ["ec2.tf"]}]}, {"name": "https://github.com/CHQA-IAC/IAC-repo.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/ravi-devarakonda/tf4oci.git", "commits": [{"id": "758ecc6396c7f984421a2286431e19c2d5694d64", "msg": "add new projects makefile and costgov", "date": "2020-07-14 23:17:48+05:18", "modified_files": ["makefile", "provider.tf", "adb.tf", "instance.tf", "local.tf", "schema.yaml", "variables.tf", "vcn.tf", "makefile", "data.tf", "main.tf", "provider.tf", "variables.tf"]}, {"id": "2ef26dbc989dc48a2937a7a2d70532c6d018556a", "msg": "moved costgov out", "date": "2020-09-20 17:13:15+00:00", "modified_files": ["adb.tf", "instance.tf", "schema.yaml", "variables.tf", "vcn.tf"]}]}, {"name": "https://github.com/sgordon46/terragoat-integrated.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/lerna-stack/lerna-terraform.git", "commits": [{"id": "768e11214608b0433adc3e8afa25492361b677b7", "msg": "Support lerna-sample-payment-app as a default example application", "date": "2021-02-09 15:32:25+09:00", "modified_files": ["README.md", "README_lerna-sample-payment-app.md", "facility-lerna-stack-ec2.tf", "facility-lerna-stack.tf", "facility-mock-server.tf.orig", "lerna-sample-payment-app.cql", "terraform.tfvars.example", "variables.tf"]}, {"id": "875ec2a877a4fc88f7ecea6fa5364e8e81afec55", "msg": "examples/aws_ec2 only supports lerna-sample-payment-app", "date": "2021-03-15 14:27:12+09:00", "modified_files": ["\u5404\u30b5\u30fc\u30d3\u30b9\u306e\u8d77\u52d5\u3068\u518d\u8d77\u52d5.md", "README.md", "README_lerna-sample-payment-app.md", "terraform.tfvars.example", "variables.tf"]}, {"id": "db9ac57f0b4f8091ad8410794b23eba406dc3f52", "msg": "Reconcile an application configuration to work on RHEL7\n\nSet a hostname config explicitly for Kamon.\nIt cannot be resolved automatically on Lerna Stack with RHEL7.\n\n```\nlerna-sample-payment-app[30861]: Caused by: java.net.UnknownHostException: ip-10-0-1-51.ap-northeast-1.compute.internal: ip-10-0-1-51.ap-northeast-1.compute.internal: Name or service not known\nlerna-sample-payment-app[30861]: at java.net.InetAddress.getLocalHost(InetAddress.java:1506)\nlerna-sample-payment-app[30861]: at kamon.Environment$.$anonfun$fromConfig$2(Environment.scala:37)\nlerna-sample-payment-app[30861]: at kamon.Environment$.readValueOrGenerate(Environment.scala:49)\nlerna-sample-payment-app[30861]: at kamon.Environment$.fromConfig(Environment.scala:37)\nlerna-sample-payment-app[30861]: at kamon.Kamon$.<init>(Kamon.scala:36)\nlerna-sample-payment-app[30861]: at kamon.Kamon$.<clinit>(Kamon.scala)\nlerna-sample-payment-app[30861]: ... 104 more\nlerna-sample-payment-app[30861]: Caused by: java.net.UnknownHostException: ip-10-0-1-51.ap-northeast-1.compute.internal: Name or service not known\nlerna-sample-payment-app[30861]: at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)\nlerna-sample-payment-app[30861]: at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\nlerna-sample-payment-app[30861]: at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\nlerna-sample-payment-app[30861]: at java.net.InetAddress.getLocalHost(InetAddress.java:1501)\nlerna-sample-payment-app[30861]: ... 109 more\n```", "date": "2021-03-29 13:22:12+09:00", "modified_files": ["facility-lerna-stack.tf"]}]}, {"name": "https://github.com/Geeks-Academy/terraform.git", "commits": [{"id": "f794850346e834cfd416972ba37d395d15340a75", "msg": "POPS-78 - Create IAM role for aws_costs lambda", "date": "2021-02-28 17:20:49+01:00", "modified_files": ["aws_costs_lambda.tf"]}, {"id": "9eb2734869767836db85cce4478354d4106f3de1", "msg": "POPS-78 - Create IAM role for aws_costs lambda", "date": "2021-02-28 17:22:50+01:00", "modified_files": ["update_private_route53.tf", "update_public_route53.tf", "variables.tf", "update_private_route53.py", "update_private_route53.zip", "update_route53.py", "update_route53.zip", "outputs.tf"]}, {"id": "f8c3bf74a60784b3e5624a7305f4131978bb8514", "msg": "POPS-78 - AWS costs lambda", "date": "2021-02-28 17:39:33+01:00", "modified_files": ["aws_costs.py", "aws_costs.zip", "aws_costs.tf", "main.tf"]}]}, {"name": "https://github.com/dbqa7/tf.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/public-transport/infrastructure.git", "commits": [{"id": "64bfc57cef180a90c4dfe91801e7e1a4c66c3151", "msg": "add second node, switch to monthly billing", "date": "2021-10-24 10:54:25+02:00", "modified_files": ["ovh.tf"]}]}, {"name": "https://github.com/cn-terraform/terraform-aws-ec2-asg.git", "commits": [{"id": "984693c9d124dabef203db09be1ae987d5fb415f", "msg": "Add infracost (#1)\n\n* Add infracost\r\n\r\n* Fix terraform plan\r\n\r\n* Fix terraform plan", "date": "2021-11-04 10:30:47+00:00", "modified_files": ["pipeline.yml", ".terraform.lock.hcl", "variables.tf"]}]}, {"name": "https://github.com/IncredibleHolg/infra-aws-code.git", "commits": [{"id": "70904707a36ff8e5167e695de3529d8318911ba4", "msg": "cost update", "date": "2022-02-12 11:35:47+01:00", "modified_files": ["efs.tf", "variables.tf"]}]}, {"name": "https://github.com/IoT-Data-Marketplace/mp-infrastructure.git", "commits": [{"id": "5afcf39a85fc972eb9bb3486e5dc8aeeba77d3ee", "msg": "removing the vpn since it is too expensive and enabling cluster api public access", "date": "2020-04-22 22:30:44+02:00", "modified_files": ["2-config.tf", "5-networking.tf", "8-cluster.tf", "3-namesapce-pvc.tf", "6-kubernetes-dashboard.tf", "namespace.yaml"]}]}, {"name": "https://github.com/broadinstitute/tgg-terraform-modules.git", "commits": [{"id": "5058ae0858bedce1e4067e0241c9a78bfa3e3edc", "msg": "adds a tf module for deploying a cost monitoring script", "date": "2021-06-23 15:24:22-04:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/mdcurran/terraform-infrastructure.git", "commits": [{"id": "d7f24bafaa9f80e9d3e834dc34b8fbe950a6c437", "msg": "Stop hosting in GCP as it's very expensive", "date": "2022-02-27 19:39:10+00:00", "modified_files": ["mdcurran.xyz.tf"]}]}, {"name": "https://github.com/LeoPrivate/terraform-ansible-poc.git", "commits": [{"id": "9431838fd13add0142417c8683fb912f608dc938", "msg": "terraform: change billing method for dynamodb table", "date": "2020-03-31 16:57:29+02:00", "modified_files": ["storage.tf"]}]}, {"name": "https://github.com/ocilabs/core_dev.git", "commits": [{"id": "a8a3932d920c8e4480654a497d30f49132ab78a7", "msg": "cost tracking tags", "date": "2022-04-18 06:55:34+02:00", "modified_files": ["input.tf", "resident.tf", "budgets.json", "controls.json", "controls.orig", "tags.json"]}]}, {"name": "https://github.com/zehavit12/tergot2.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/ministryofjustice/cloud-platform-infrastructure.git", "commits": [{"id": "e5dd13d33c1e927f932971d067d8f70e9041b5f3", "msg": "Reduce live-1 worker node instance size\n\nThis changes the worker nodes from r5.2xlarge to\nr5.xlarge\n\nThis change should still leave plenty of extra\ncapacity to accomodate some growth, while saving\nthe MoJ almost $5,000/month in AWS hosting costs.\n\nNB: After merging this change, we need to do a\nkops update and rolling update of the cluster,\nbefore the change takes effect.", "date": "2019-12-16 14:14:28+00:00", "modified_files": ["live-1.yaml", "variables.tf"]}, {"id": "fdd3a7dcb787a6a24e34b93a6aa124c94e93cb0e", "msg": "Cheaper Prometheus storage for test clusters. (#1452)", "date": "2022-01-10 15:53:40+00:00", "modified_files": ["components.tf"]}]}, {"name": "https://github.com/ministryofjustice/cloud-platform-terraform-elasticache-cluster.git", "commits": [{"id": "ddcc1a8abc1d29e8e32ed3c2e92ed9755dd17014", "msg": "Add \"namespace\" tag to created Elasticache cluster\n\nFor cost allocation.", "date": "2020-10-16 14:22:41+01:00", "modified_files": ["elasticache.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/dotancohen81/Rancher.git", "commits": [{"id": "90944271b4e8bd46e3d42ac64bc4964a33a8fdc3", "msg": "Updated server from t2 to t3\n\nDue to better performance and cost savings updating from t2 to t3.", "date": "2018-10-11 11:26:37-05:00", "modified_files": ["terraform.tfvars.example"]}]}, {"name": "https://github.com/openregister/deployment.git", "commits": [{"id": "fc7714e28a63264d1a835155f1c04b9237429567", "msg": "CloudFront Invalidation Lambdas  (#525)\n\nContext\r\nReduce latency of update visibility on CDN\r\n\r\nChanges proposed in this pull request\r\nThe approach is similar to that taken for tracking API Keys:\r\n\r\nLamda@Edge parses Origin Request POSTs and writes metadata to CloudWatch Logs\r\nA second Lambda consumes these logs and triggers a CloudFront Invalidation Request against a list of paths\r\nGuidance to review\r\nThe Lambdas are deployed on *.test.openregister.org so you can test the flow by POSTing to load-rsf in this environment.\r\nNote that a limitation of Origin Requests is that they have not been processed, so we trigger an invalidation request even if the POST is not accepted by ORJ. (This is a trade-off as intercepting at this point in the request-response cycle allows us to access the POST body which may be useful data for downstream consumers.\r\n\r\nPaired with @user \n\r\n\r\n* add post logger WIP\r\n\r\n* Log event and add test request for post logger lambda\r\n\r\n* (WIP) add a lambda to listen for log events and clear the cache\r\n\r\n* Wait for createInvalidation to complete before exiting lambda\r\n\r\nThe handler is an async function, so we can use `await` to\r\nkeep it going until the callbacks have completed.\r\n\r\nWithout this, the lambda was terminating without running the callbacks.\r\n\r\n* add host to payload\r\n\r\n* terraform lamdba@edge\r\n\r\n* update error message\r\n\r\n* comment out logging of full event\r\n\r\n* add terraform for cache-invalidator lambda\r\n\r\n* upgrade node version and assorted tweaks\r\n\r\n* remove unused arguments\r\n\r\n* simplify promise\r\n\r\n* Add new cache behaviour for /load-rsf\r\n\r\nThe new cache behaviour uses the /load-rsf path pattern and\r\nassociates the new lambda@edge function for logging load-rsf\r\nrequests.\r\n\r\nThe default cache behaviour should stay the same - it will be called\r\nif the additional cache behaviour isn't matched (i.e. all requests\r\nexcept for /load-rsf).\r\n\r\n* add post logger WIP\r\n\r\n* Log event and add test request for post logger lambda\r\n\r\n* (WIP) add a lambda to listen for log events and clear the cache\r\n\r\n* Wait for createInvalidation to complete before exiting lambda\r\n\r\nThe handler is an async function, so we can use `await` to\r\nkeep it going until the callbacks have completed.\r\n\r\nWithout this, the lambda was terminating without running the callbacks.\r\n\r\n* add host to payload\r\n\r\n* terraform lamdba@edge\r\n\r\n* update error message\r\n\r\n* comment out logging of full event\r\n\r\n* add terraform for cache-invalidator lambda\r\n\r\n* upgrade node version and assorted tweaks\r\n\r\n* remove unused arguments\r\n\r\n* simplify promise\r\n\r\n* add template and readme to run lambdas locally\r\n\r\n* use master branch for link\r\n\r\n* update test event to include host\r\n\r\n* Update cache invalidator to resolve register.gov.uk distribution ID\r\n\r\nFor Beta registers we need to match the incoming request to register-name.beta.openregister.org to the cached cloudfront distribution associated with register-name.register.gov.uk\r\n\r\n* xo linting wip\r\n\r\n* update template to reflect renamed files\r\n\r\n* xo lint fixes\r\n\r\n* xo lint\r\n\r\n* read host from event\r\n\r\n* update caller reference\r\n\r\n* revert whitespace changes\r\n\r\n* add cloudwatch alarms\r\n\r\n* add statistic setting to alarms\r\n\r\n* fix terraform variable name\r\n\r\n* We cannot only allow POST method\r\n\r\nWe have to choose one of the three options as described in: https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_AllowedMethods.html\r\n\r\n* cached_methods is required\r\n\r\n* fix alarm region\r\n\r\n* remove body from payload\r\n\r\n* Fix alarm for lambda@edge\r\n\r\nWe need to replicate the alarm in each region for lambda@edge\r\n\r\n* fix path in readme\r\n\r\n* add requirements.txt and virtual env instructions to readme\r\n\r\n* use try catch instead of nested promise\r\n\r\n* fix list distributions argument\r\n\r\n* use object destructing (xo linter)\r\n\r\n* spacing (xo linter)", "date": "2018-09-14 10:28:43+01:00", "modified_files": ["lambda-edge-lambdas.tf", "main.tf", "README.md", "example_event.json", "lambda.js", "module.tf", "package.json", "variables.tf", "example_request.json", "lambda.js", "package.json", "requirements.txt", "template.yml", "Makefile", "paas_cdn.tf"]}]}, {"name": "https://github.com/cisagov/cyhy_amis.git", "commits": [{"id": "4e67a501bb3f5187a3e9af523921ac62b8a88469", "msg": "Change code to use the cheaper r4.xlarge instances type.\n\nI watched the memory consumption while running BOD scanning, and it\nappears to consume about 13GB.  I could probably get by with 16GB of\nRAM, but this is an economical option that has almost 32GB of RAM.", "date": "2018-08-13 12:30:25-04:00", "modified_files": ["bod_docker_ec2.tf"]}, {"id": "7b8d9247a679295e0e1791b13d6c437c473e44b8", "msg": "Upgrade volumes from gp2 to gp3\n\ngp3 is 20% cheaper, and the baseline configuration offers better\nperformance than gp2 for volumes smaller than 2TB.  It also allows the\nvolume size and IOPS to be configured separately, whereas the two are\nintertwined with gp2.\n\nAlso remove delete_on_termination lines from root volume configs.\ndelete_on_termination = true is the default, so there is no need to\nspecify it.", "date": "2021-10-26 16:59:06-04:00", "modified_files": ["bod_bastion_ec2.tf", "bod_docker_ec2.tf", "cyhy_bastion_ec2.tf", "cyhy_dashboard_ec2.tf", "cyhy_mongo_ec2.tf", "cyhy_nessus_ec2.tf", "cyhy_nmap_ec2.tf", "cyhy_reporter_ec2.tf", "mgmt_bastion_ec2.tf", "mgmt_nessus_ec2.tf", "nessus_ec2.tf"]}]}, {"name": "https://github.com/KryptionX/aws-instance-test.git", "commits": [{"id": "ac17032d50a43c82d73e1d5628ad8888c1f43813", "msg": "p4d.24xlarge cost test", "date": "2021-02-02 14:03:06-07:00", "modified_files": ["main.tf"]}, {"id": "af1ebe0c776502fa4505ef43acfc5831eb07eec5", "msg": "p4d.24xlarge cost test", "date": "2021-02-02 14:05:47-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/virmis/tfactions.git", "commits": [{"id": "52c108e785320d667b1de5717f342c2e517b1d3c", "msg": "added full path to function payload", "date": "2020-08-02 19:57:55+03:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/mnovelo82/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/fairbanksio/tf-iac-cluster.git", "commits": [{"id": "7aeeff8024a766a7eb1ef85d4b0e15479cecb9b5", "msg": "Add paypal-sandbox-dashboard", "date": "2020-08-03 18:35:28-05:00", "modified_files": ["resources.tf"]}]}, {"name": "https://github.com/olliefr/aws-terraform-cloud1.git", "commits": [{"id": "bf753832a519b0649f8d58d93aa643afe3f94fc7", "msg": "Change DynamoDB billing to \"on demand\"", "date": "2020-08-31 09:41:44+01:00", "modified_files": ["example.tf"]}]}, {"name": "https://github.com/InvictrixRom/website-infrastructure.git", "commits": [{"id": "09e400452c1bde25fe393dd56c2fd608b84a18ac", "msg": "Update infrastructure to be more cost-effective", "date": "2018-10-28 02:29:05-05:00", "modified_files": ["main.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "outputs.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "main.tf", "outputs.tf", "outputs.tf", "state.tf"]}, {"id": "d51caa0c810f6d5ad6f0846a317ec2432835aad7", "msg": "Revert \"Update infrastructure to be more cost-effective\"\n\nThis reverts commit 09e400452c1bde25fe393dd56c2fd608b84a18ac.", "date": "2018-10-28 14:36:12-05:00", "modified_files": ["main.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "outputs.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "main.tf", "outputs.tf", "outputs.tf", "state.tf"]}, {"id": "44d66328ea4467d05d7fb8092631aff5afbd8b26", "msg": "Cost saving: Against my best practices\n\nSecurity groups are more than enough to secure the instance, but best practice says you should subnet it and keep the load balancer in the public subnet.\n\nSadly this requires a NAT gateway but it costs nearly 15 bucks a month on it's own.\n\nThis nearly halfs monthly charges", "date": "2018-10-28 15:12:24-05:00", "modified_files": ["main.tf", "main.tf", "outputs.tf"]}]}, {"name": "https://github.com/DanTulovsky/wetsnow-tf0.git", "commits": [{"id": "8f19ec155db664da961ab522cc0267e93970cb8d", "msg": "kubecost", "date": "2022-04-18 11:24:50-04:00", "modified_files": ["externalDependencies.xml", "markdown.xml", "misc.xml", "workspace.xml", "apps.tf", "terraform.auto.tfvars", "values.yaml", "main.tf", "providers.tf", "variables.tf", "values.yaml"]}, {"id": "1d1a2a95157812c6cef36fb970cda96b6f979138", "msg": "add kubecost", "date": "2022-04-19 20:58:24-04:00", "modified_files": ["workspace.xml", "10-ambassador-maps.yaml", "main.tf", "managed-certs.tf"]}, {"id": "56abc7af2c39abb96675a1dee2e63a9055997cc0", "msg": "add kubecost", "date": "2022-04-19 21:02:07-04:00", "modified_files": ["workspace.xml", "managed-certs.tf"]}]}, {"name": "https://github.com/tjpotenza/kubernetes-modules.git", "commits": [{"id": "d750e25615e7e37914119cb257fbd9c7fad3a52a", "msg": "Begin to decouple the workers from requiring a static DNS address, so I can run the control plane in an ASG without paying for an NLB.", "date": "2021-03-08 20:53:43-05:00", "modified_files": ["dns.tf", "instances.tf", "locals.tf", "outputs.tf", "target_group.tf", "user_data.tf", "etcd.sh", "graceful-shutdown.sh", "userdata.tf", "variables.tf", "main.tf", "user_data.tf", "discover-control-plane.sh", "install.sh"]}]}, {"name": "https://github.com/Wood1216L/New_Project2.git", "commits": [{"id": "e1706ae908694d79bece2ff032f1c75f0a66d0cb", "msg": "contact.tf and payment.tf", "date": "2022-01-11 22:12:42-05:00", "modified_files": ["contact.tf", "payment.tf"]}]}, {"name": "https://github.com/Harmelodic/automation-infrastructure.git", "commits": [{"id": "8b563a7d3c7d90ddd2359500d9781547347cc56a", "msg": "Removing infra because I'm not using it and it costs", "date": "2022-01-30 12:44:45+01:00", "modified_files": ["database.tf", "gke.tf", "node_pool.tf"]}, {"id": "547d79dbbde082381b342f4c57b5ff632460f345", "msg": "Enable cloudbilling", "date": "2022-04-18 11:45:18+02:00", "modified_files": ["automation-project.tf"]}, {"id": "698a7faa6c4be617ae93e678fea19004ad62c3de", "msg": "Giving automation more permissions for handling basic billing and organisational stuff", "date": "2022-04-18 12:06:04+02:00", "modified_files": ["automation-service-account.tf"]}, {"id": "1fa32f877cc273d91704efc0cc780a02a81b071b", "msg": "adjusting billing perms", "date": "2022-04-18 12:20:07+02:00", "modified_files": ["automation-service-account.tf"]}, {"id": "36edb9e2186f9467d36a6233154c4ed15320148d", "msg": "Giving automation sa billing user role for handling billing resource associations", "date": "2022-04-18 14:26:43+02:00", "modified_files": ["automation-service-account.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-aws-vpc-peering.git", "commits": [{"id": "d7614ed3b24e7d6ed1a666abf928ea1e18ac3b14", "msg": "costs", "date": "2021-05-28 16:37:11+01:00", "modified_files": ["compare.yml", "master.yml", "pull_request.yml", "aws_route.accepter.tf", "aws_route.requester.tf", "module.peer.tf"]}]}, {"name": "https://github.com/garylb2/terraform-example-patterns.git", "commits": [{"id": "6de6d83d930bd9459e1cf8c311fa7b45c3f90987", "msg": "Removed extraneous global secondary indices that just cost money", "date": "2019-11-06 14:43:22-06:00", "modified_files": ["dynamodb.tf", "dynamodb.tf", "main.tf", "main.tf", "main.tf", "main.tf"]}]}, {"name": "https://github.com/ChicagoWorldcon/infrastructure.git", "commits": [{"id": "b0cdc85d49e5197adab073011f2e4ea6cdcad2b8", "msg": "Manage namecheap NS records automatically", "date": "2020-12-30 12:44:56-08:00", "modified_files": [".terraform.lock.hcl", "main.tf", "variables.tf", "versions.tf", "providers.tf", "main.tf", "versions.tf"]}, {"id": "658cfe319c539da2a411e2d55e52f1cb63cbf88b", "msg": "Upgrade namecheap provider to 2.0.1", "date": "2021-08-12 21:51:01-07:00", "modified_files": [".terraform.lock.hcl", "main.tf", "versions.tf", "providers.tf", "main.tf", "versions.tf"]}, {"id": "403f2b871c3918fca4ba0697a0eff225718bc44a", "msg": "chore: factor out namecheap into its own project", "date": "2022-02-19 16:11:54-08:00", "modified_files": ["README.md", "main.tf", "versions.tf", "providers.tf", "main.tf", "versions.tf"]}]}, {"name": "https://github.com/gstimac/terralab.git", "commits": [{"id": "7696353632379532ab7006f9eda39fbf14e25532", "msg": "fix: cheap AKS with basic sku lb", "date": "2022-04-23 23:13:03+02:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/naciriii/terraform-ec2-gitlab-runner.git", "commits": [{"id": "f8af6bc22bd3d827566e7e65deb63c13cdaf6031", "msg": "Use aws spot instances\n\n- Reduce cost and use persistent spot instances requests to get cheaper instances/hour\n- Expose module output to root output", "date": "2020-06-29 16:52:01+01:00", "modified_files": ["main.tf", "output.tf", "main.tf", "output.tf"]}]}, {"name": "https://github.com/tranquilitybase-io/tb-gcp-bootstrap.git", "commits": [{"id": "0326c44ae97f318cccba75c77eea835e0744bc58", "msg": "refactored billing to resource", "date": "2021-01-13 11:02:47+00:00", "modified_files": ["iam.tf"]}, {"id": "06262f39987f146fea006356afd54e31db457962", "msg": "disabled unneeded billing", "date": "2021-01-14 14:46:38+00:00", "modified_files": ["iam.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-aws-codepipeline.git", "commits": [{"id": "cf842d48df037476a754b221f7b4115bb4f5ddf1", "msg": "costs", "date": "2021-05-19 22:27:47+01:00", "modified_files": ["aws_s3_bucket.codepipeline.tf", "examplea.auto.tfvars", "infracost-usage.yml", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/krishna98967/git-terraform-testing.git", "commits": [{"id": "c43879ecfe7c90b5dc08e8550f41384e792bc1ff", "msg": "adding costcenter", "date": "2022-03-17 12:49:45+00:00", "modified_files": ["vpc.tf"]}, {"id": "06f31b01efdc7920a0072bb75bc5420c93f36bc1", "msg": "changing costcenter", "date": "2022-03-17 18:16:53+05:18", "modified_files": ["vpc.tf"]}]}, {"name": "https://github.com/kscastro/localstack-with-terraform.git", "commits": [{"id": "7f9098f2b94298e18b02b3c0e481ad3c0c3c7642", "msg": "infracost", "date": "2022-02-10 22:59:24-03:00", "modified_files": ["infracost.yml", "iam-role.tf"]}, {"id": "7206b5466a22738a582e2f6e5729efa16c9d55bf", "msg": "infracost", "date": "2022-02-10 23:01:28-03:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/bridgecrew-demo/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/Andrew-Klaas/aws-simple.git", "commits": [{"id": "1020a873e18b2cc0fe0e2933c196c7322e37dc08", "msg": "Updating billing-id", "date": "2018-01-31 06:31:53-06:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/Arkoprabho/TerraformTutorial.git", "commits": [{"id": "ba317d7e402f014589e230fad8c7384016211ba2", "msg": "MODIFY: Change billing_mode to PAY_PER_REQUEST", "date": "2021-04-26 22:50:00+05:18", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/gordonmurray/terraform_aws_rds_secrets_manager.git", "commits": [{"id": "996c824e4d662e3b37d3172871ce492a67731eae", "msg": "Added cost estimate using infracost", "date": "2020-08-31 21:08:43+01:00", "modified_files": [".gitignore", "README.md", "main.tf", "secrets_manager.tf"]}]}, {"name": "https://github.com/uk-gov-mirror/ministryofjustice.digital-studio-infra.git", "commits": [{"id": "d5004a76b6db38743976135735c292bc0d21c58f", "msg": "NN-2006 Enable Pay for Moorland on stage and pre prod (#351)", "date": "2019-06-19 10:55:24+01:00", "modified_files": ["vars.tf", "vars.tf"]}, {"id": "2eeca0c19cf35744a714f2083fc0396d2a803d68", "msg": "Turn on prod pay for prisonstaffhub (#356)", "date": "2019-06-27 16:01:50+01:00", "modified_files": ["vars.tf"]}, {"id": "3d11e6cab31ae38c618c942762244fc00d50105f", "msg": "DPS - Enable pay for humber (#359)", "date": "2019-07-05 10:04:52+01:00", "modified_files": ["vars.tf"]}, {"id": "466a9ad0fccc6ddc1567dfdb90d32fba96bfff31", "msg": "DPS enable pay for new hall preprod (#360)", "date": "2019-07-08 11:34:11+01:00", "modified_files": ["vars.tf"]}, {"id": "37c4e7a566c4a49394b292f1d1cdbc9e79865c2a", "msg": "DPS enable pay for humber in prod (#361)", "date": "2019-07-11 14:17:29+01:00", "modified_files": ["vars.tf"]}, {"id": "069984274aefa69ba1490de1d46fcf5cdcb0bc87", "msg": "DPS enable pay for all prisons in DEV (#367)", "date": "2019-07-29 14:56:52+01:00", "modified_files": ["vars.tf"]}, {"id": "bda3fe2c720acece35eb86d6b5ac442ef1537471", "msg": "DPS enable pay for all prisons in PRE PROD (#368)\n\n* DPS enable pay for all prisons in PRE PROD\r\n\r\n* DPS-enable-pay-for-all-in-PRE-PROD\r\n\r\n* DPS-enable-pay-for-all-in-PRE-PROD", "date": "2019-07-29 15:51:28+01:00", "modified_files": ["vars.tf"]}, {"id": "18f12cefaad8d95650f595d8217b78c66be96710", "msg": "DPS-enable-pay-for-styal-preprod (#369)", "date": "2019-08-01 10:04:04+01:00", "modified_files": ["vars.tf"]}, {"id": "b1dd1967d0c56fe5dfc5dfdbc0c601cd050ad3b4", "msg": "DPS-enable-pay-leeds-PREPROD (#371)", "date": "2019-08-05 10:53:25+01:00", "modified_files": ["vars.tf"]}, {"id": "895c49c5fa09a37e7a82bb1c9beae765f159e0ae", "msg": "DPS-enable-pay-leeds-PROD (#370)", "date": "2019-08-05 11:00:45+01:00", "modified_files": ["vars.tf"]}, {"id": "fbf29796cdea22394148ff8f70008d59bcf68258", "msg": "DPS enable pay for Gartree PRE PROD", "date": "2019-08-06 15:43:04+01:00", "modified_files": ["vars.tf"]}, {"id": "92d8b639ff1f73601281894865f7f8738ed212f5", "msg": "DPS-enable-pay-for-hull-preprod", "date": "2019-08-15 15:40:40+01:00", "modified_files": ["vars.tf"]}, {"id": "f7e32fffa3607d9fdbedae6b251f268541a613f7", "msg": "DPS-enable-pay-for-hull-prod", "date": "2019-08-15 15:42:10+01:00", "modified_files": ["vars.tf"]}, {"id": "48e679ebfa7abbafe6ee95df5b0455b2ea9f0a67", "msg": "DT-162: Turn on pay for holme house (#380)\n\n* DT-162: Turn on pay for holme house\r\n\r\n* DT-162: Turn on pay for wayland", "date": "2019-08-21 14:21:29+01:00", "modified_files": ["vars.tf", "vars.tf"]}, {"id": "148619ed3fe9ae1c9af0597179ab58331b93e8a7", "msg": "DPS-enable-pay-for-norwich (#388)", "date": "2019-09-05 15:48:11+01:00", "modified_files": ["vars.tf"]}, {"id": "4f485b6d7d515d060f805c7bd88869dc4e205e8c", "msg": "Enable Bristol for pay in pre-prod (#389)", "date": "2019-09-09 15:17:31+01:00", "modified_files": ["vars.tf"]}, {"id": "e97bd83da976b181ad06f760822c46b05df6b4f6", "msg": "Enable pay in prod for HMP Styal (#390)\n\n* Enable pay in prod for HMP Styal", "date": "2019-09-10 11:13:13+01:00", "modified_files": ["vars.tf"]}, {"id": "0e92a6901065cdda27a0bcfa3e12f85b94bc0e00", "msg": "Enabling HMP Hewell and HMP Bristol for Pay (#394)", "date": "2019-09-12 16:29:03+01:00", "modified_files": ["vars.tf"]}, {"id": "f8d8f449a24d7adb6cd4ccd78c3d4a1f76b59df0", "msg": "Enable pay in pre-prod and live for HMP Long Lartin (#397)", "date": "2019-09-16 16:46:49+01:00", "modified_files": ["vars.tf", "vars.tf"]}, {"id": "8ec5455089bc6a253743be4b8f35b9a82fef3357", "msg": "Enabling pay for Low Newton and 3 others in Pre (#398)\n\nThis is to enable pay for HMP Low Newton in prod, then enable pay for\r\nHMP Usk, HMP Prescoed and HMP Cardiff in preprod", "date": "2019-09-17 16:55:52+01:00", "modified_files": ["vars.tf", "vars.tf"]}, {"id": "b19de4379321db0f87bc8d4c184023890ed6b676", "msg": "NN-2183 added pay/attendance to Lindholme in PRE and PROD (#399)", "date": "2019-09-19 12:14:02+01:00", "modified_files": ["vars.tf", "vars.tf"]}, {"id": "2bdce3fcf10625ee9a582caf5022b957954f25c9", "msg": "DPS enable pay for CFI prod (#400)", "date": "2019-09-19 14:47:14+01:00", "modified_files": ["vars.tf"]}, {"id": "44793bb13661ab87866613a2e6967adfc23b56ce", "msg": "Enable pay for Pentonville (#404)\n\nThis is in prod and pre-prod", "date": "2019-09-23 14:17:13+01:00", "modified_files": ["vars.tf", "vars.tf"]}, {"id": "e7caf212363f6176865064c9a6876a3add533e0f", "msg": "Enable Pay for HMP Kirkham in Prod and Pre-prod (#405)\n\nAs title, this is to enable pay for HMP Kirkham", "date": "2019-09-25 10:43:58+01:00", "modified_files": ["vars.tf", "vars.tf"]}, {"id": "6617401f1f8bace098fcdfaff7902bb81def2683", "msg": "Enable HMP Ranby for pay and pre-prod (#409)", "date": "2019-09-30 14:17:55+01:00", "modified_files": ["vars.tf", "vars.tf"]}, {"id": "f1a1e45cc956f9cf1b3fa0ddd9ca83ba122b34f7", "msg": "Add pay for Gartree in pre and prod and for Elmley in Pre (#412)\n\nAs title, this is to add pay for HMP Gartree in prod and pre-prod and\r\npay in pre-prod for Elmley", "date": "2019-10-01 16:14:04+01:00", "modified_files": ["vars.tf", "vars.tf"]}]}, {"name": "https://github.com/aristanetworks/CloudEOS.git", "commits": [{"id": "803b5135672ec59aacedddff2804254612f975cc", "msg": "Change to PAYG AMIs\n\nChange-Id: I498c64d65311054271688bd7585b78917a187b27", "date": "2020-03-03 15:56:09-08:00", "modified_files": ["input_vars.tfvars", "input_vars.tfvars", "input_vars.tfvars"]}, {"id": "a92e7d1342a436ac341bb65ee43acee11d334600", "msg": "Change PAYG AMI IDS to EFT. Fix comments from Fan\n\nChange-Id: I201a4a932fc89bfd71d085081e3a4af541c884d5", "date": "2020-03-24 17:14:20-07:00", "modified_files": ["README.md", "input_vars.tfvars", "input_vars.tfvars", "input_vars.tfvars", "input_vars.tfvars", "input_vars.tfvars"]}, {"id": "f8977dff4c230ab6d8d4a0add764ba017c046cab", "msg": "cloudeos/azure: Miscellaneous commits to fix Azure module\n\n1. Fixed some bugs in the module code\n2. Added the payg image to the azure.tf ( still commented out )\n3. Fix input.tfvars\n\nChange-Id: I629824cad5cc408bd4c566719b04e9b9eb52e881", "date": "2020-06-04 15:17:28-07:00", "modified_files": ["input_vars.tfvars", "leaf.tf", "topology.tf", "edgeAndRR.tf", "region2leaf.tf", "region3leaf.tf", "leaf.tf", "edge.tf", "topology.tf", "edge.tf", "input_vars.tfvars", "leaf.tf", "arista_vpc.tf", "azure.tf", "vars.tf"]}, {"id": "cf429a2c667f5ded437db45d2c7781e99a4cc10a", "msg": "cloudeos/azure: Support for Azure PAYG image.\n\nChanged the module code to use the payg-free image.\nAdditional changes to check length of resource before accessing it\n\nChange-Id: Ia9e7d91ac7f598a1f25f9d457c984f1e65243252", "date": "2020-06-05 16:12:35-07:00", "modified_files": ["edge.tf", "input_vars.tfvars", "azure.tf"]}, {"id": "9179d615bfa53b639a33e067ba229392c8d4dbf3", "msg": "cloudeos/examples: Use the newest, public images for all AWS examples\n\nThe ami refer to an old EFT build, with EOS Version:\n4.23.1F and were private images. All examples now use the newest\nrelease : 8 Jan: 4.24.3.1 - PAYG version\n\nChange-Id: Ia976cd933b52e4418d8c2e1673e3a5132cb9dc82", "date": "2021-01-11 10:23:54-08:00", "modified_files": ["input_vars.tfvars", "input_vars.tfvars", "input_vars.tfvars", "input_vars.tfvars", "input_vars.tfvars", "input_vars.tfvars", "input_vars.tfvars", "input_vars.tfvars"]}]}, {"name": "https://github.com/Kalmalyzer/UE-Jenkins-BuildSystem.git", "commits": [{"id": "636097557e403eb1d6b6211b09e30c47e7f39466", "msg": "Reduce build nodes to 16-vCPU, delays during bootups are costly", "date": "2021-01-26 12:46:46+01:00", "modified_files": ["main.tf"]}, {"id": "ee8942b2c5d59546dd3b3be5f2cb88500d0fe1be", "msg": "kalms env uses standard hdds (minimize cost)", "date": "2021-08-12 16:38:22+02:00", "modified_files": ["terraform.tfvars", "terraform.tfvars"]}]}, {"name": "https://github.com/davidjsanders/tf-learning.git", "commits": [{"id": "789b4ba136e58a9a12056163fd637ef2905e1cbf", "msg": "Updated cowbull-infra to include billing tag", "date": "2018-03-08 17:44:08-05:00", "modified_files": ["main.tf", "main.tf", "main.tf", "main.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-aws-waf-regional.git", "commits": [{"id": "ddccf88a6e2f3febfcd5905368a81303c8519ca6", "msg": "costs", "date": "2021-05-15 16:25:49+01:00", "modified_files": ["CODEOWNERS", "compare.yml", "master.yml", "pull_request.yml", ".markdownlint.json", "Makefile", "infracost-usage.yml", "terraform.tf", "README.md"]}]}, {"name": "https://github.com/joatmon08/expense-report.git", "commits": [{"id": "4a9164f6aec2adc57794f03b468ef1244dab58fd", "msg": "Separate expense service", "date": "2021-10-05 16:46:08-04:00", "modified_files": [".gitignore", "Makefile", "kubernetes.png", "expense-v1.yaml", "expense-v2.yaml", "expense.yaml", "ingress-gateway.yaml", "intentions.yaml", "splitter.yaml", "auth.tf", "database.tf", "policy.tf", "terraform.auto.tfvars", "variables.tf"]}]}, {"name": "https://github.com/forgotpw/forgotpw-infrastructure.git", "commits": [{"id": "f4363ad27d366385f2388d073ce8af796e035406", "msg": "added billing cloudwatch alarms", "date": "2019-04-13 10:12:15-04:00", "modified_files": ["billing-alert.tf", "dev-variables.tf", "billing-alert.tf", "prod-variables.tf"]}]}, {"name": "https://github.com/I0D8ivT2/hashicat-aws.git", "commits": [{"id": "7322e95e3d9f6e8e12ffcad469e1d31dcf547cfb", "msg": "adding billable tag", "date": "2021-03-15 11:51:45+00:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/dshmelev/aws_kube_tc.git", "commits": [{"id": "853298ac74250964aa2d2ea921daa5905528b3a9", "msg": "Cost saving", "date": "2017-08-03 22:23:38+03:00", "modified_files": ["kubernetes.tf"]}]}, {"name": "https://github.com/lalanza808/tf-modules.git", "commits": [{"id": "ea7a2b2174bbff302515601dc3fd3be358a04182", "msg": "adding aws-master module for configuring a standalone account as a master payer", "date": "2020-04-24 22:53:15-07:00", "modified_files": ["README.md", "cur.tf", "main.tf", "output.tf", "variables.tf"]}]}, {"name": "https://github.com/terraform-google-modules/terraform-google-project-factory.git", "commits": [{"id": "39891d950433a683da2c75b4187728f9af1c5441", "msg": "Fix typo, rename billing acount and services variables", "date": "2019-05-15 08:19:09+02:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}, {"id": "6c93392a5ff6bc45a36eba689d44980ce5f0baf8", "msg": "Grant billing user permission during testing", "date": "2019-11-19 00:37:17+00:00", "modified_files": ["iam.tf"]}, {"id": "1b4954a704fc03d5109b5615f7cfef824ff7211a", "msg": "enable google billing budget apis in parent project", "date": "2020-01-06 16:22:29-08:00", "modified_files": ["main.tf"]}, {"id": "f580cae362e7bd01e9b52ff6fb329c19ccebc3da", "msg": "give test user billing admin to billing account to create budgets", "date": "2020-01-07 14:00:42-08:00", "modified_files": ["iam.tf"]}, {"id": "bc9891a7b6f3b576ca7cf7ddeb23022efa000a4c", "msg": "enable pubsub for setup project for billing test", "date": "2020-01-08 12:51:10-08:00", "modified_files": ["main.tf"]}, {"id": "64461a22b225960357ef866bdef8c1d2693733f7", "msg": "fix: billing budget tests (#594)", "date": "2021-06-10 23:40:05-05:00", "modified_files": ["outputs.tf", "budget.rb", "inspec.yml"]}, {"id": "b6d7bf1af2062e557b3fb2c883879554e10d7702", "msg": "fix: billing_budget resource should use GA provider (#626)\n\nCo-authored-by: Morgante Pell <morgantep@google.com>", "date": "2021-10-13 16:17:46-05:00", "modified_files": ["main.tf"]}, {"id": "37cf73779f2efa750cee09c57516c5eccb986501", "msg": "chore: add billingbudgets API to budget (#721)", "date": "2022-05-02 15:59:39-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/gfl/terraform-sandbox.git", "commits": [{"id": "94117504415aa76cc2b9dede4fcba4e7dfae5ab4", "msg": "Generate real valid certificates using letsencrypt\n\nChange the certificates in that machine using real certificates\nfrom https://letsencrypt.org/\n\nUsed the following terraform plugin:\n\nhttps://github.com/paybyphone/terraform-provider-acme\n\nA valid certificated is used for concourse.gfl.keytwine.com", "date": "2018-01-07 19:35:53+00:00", "modified_files": ["Dockerfile", "certs.tf", "cloud-config.tf", "route53.tf", "variables.tf"]}]}, {"name": "https://github.com/AErmie/TFCloud-IaC-Using-Terraform.git", "commits": [{"id": "75ed8d346e8518fcd110903675a5d082e22bd48c", "msg": "More robust code example for TFC cost estimation", "date": "2020-09-20 21:41:16-04:00", "modified_files": ["DC-Deploy.tf", "DomainControllers.tfvars", "data.tf", "variables.tf", "DataDisk.tf", "outputs.tf", "variables.tf", "NIC.tf", "outputs.tf", "variables.tf", "VM.tf", "outputs.tf", "variables.tf", "ERCircuit.plan", "ExpressRouteCircuit.tfvars", "ExpressRouteDeploy.tf", "data.tf", "variables.tf", "ERConnectionDeploy.plan", "ExpressRouteConnection.tfvars", "ExpressRouteDeploy.tf", "data.tf", "variables.tf", "ExpressRouteDeploy.tf", "ExpressRoutePeering.tfvars", "data.tf", "variables.tf", "Hub-EastUS.tfvars", "Hub-WestUS.tfvars", "Hub.auto.tfvars", "HubDeploy.tf", "TriggerHub.txt", "variables.tf", "Peering.tfvars", "PeeringDeploy.tf", "TriggerPeering.txt", "data.tf", "variables.tf", "Spoke.auto.tfvars", "Spoke.tfvars", "SpokeDeploy.tf", "TriggerSpoke.txt", "variables.tf", "ExpressRouteCircuit.tf", "outputs.tf", "variables.tf", "ExpressRouteConnection.tf", "variables.tf", "ExpressRoutePeering.tf", "outputs.tf", "variables.tf", "AzureFirewall.tf", "Hub-ERGateway.tf", "Hub-VPNGateway.tf", "HubNetwork.tf", "outputs.tf", "variables.tf", "Spoke-NonProd.tf", "data.tf", "outputs.tf", "variables.tf", "Spoke-Prod.tf", "data.tf", "VNetPeering.tf", "output.tf", "variables.tf"]}, {"id": "c5b34de70ad3e73c21b5401dc0fc2abd643170f2", "msg": "Testing cost estimation for AFW", "date": "2020-09-20 22:00:33-04:00", "modified_files": ["Hub-EastUS.auto.tfvars"]}, {"id": "0a3cb14934640b2ef5e852ad406ae9c34c50127c", "msg": "Retesting AFW cost estimation", "date": "2020-09-20 22:05:59-04:00", "modified_files": ["Hub-WestUS.auto.tfvars"]}, {"id": "5afee769ed9f1e21a09f88f93ce4814eacca2820", "msg": "Testing GW cost estimation", "date": "2020-09-20 22:53:49-04:00", "modified_files": ["Hub-WestUS.auto.tfvars"]}]}, {"name": "https://github.com/sworisbreathing/splunk-refactor-poc.git", "commits": [{"id": "5be96c3735b14c16dbe87f4c544f5ab1c75ab93a", "msg": "update auto stop to 1hr. we get billed a minimum of 1h anyway", "date": "2015-06-30 10:50:34+10:00", "modified_files": ["resources_aws_mgmt.tf", "resources_aws_prd.tf", "resources_aws_qat.tf", "resources_aws_stg.tf", "resources_aws_uat.tf"]}]}, {"name": "https://github.com/generation-org/tech-foundations-labs.git", "commits": [{"id": "88f50c92b92f5c3ab8259902a56932f295fecce7", "msg": "Moving to pay_per_request", "date": "2022-01-24 11:43:04+00:00", "modified_files": ["cohort-configuration.tf", "main.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/reechar-goog/key-reechar-tf-bootstrap.git", "commits": [{"id": "53b5c7008772a3329786934eaf51b2c71c835a4d", "msg": "turn on billing", "date": "2019-06-28 15:49:39-04:00", "modified_files": ["main.tf"]}, {"id": "47162c6d2e6cf8546feaae6cf824e0832362ad5b", "msg": "add billing account for reals", "date": "2019-06-28 15:52:13-04:00", "modified_files": ["main.tf"]}, {"id": "245374c4edd827995b349da052c9074cb3cd7daa", "msg": "correct billing account", "date": "2019-06-28 15:54:19-04:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/hands-on-cloud/aws-codepipeline-terraform-cicd-pipeline.git", "commits": [{"id": "9b6f5063dad0869b3ff53c87e5b578dd4746ddd7", "msg": "Adding Infracost", "date": "2021-10-22 14:37:52-04:00", "modified_files": ["codebuild.tf", "codepipeline.tf", "usage.md"]}]}, {"name": "https://github.com/pvandervelde/infrastructure.azure.core.network.hub.git", "commits": [{"id": "0ecf0a154918bd9bdc0f53557bc1f80920da6b14", "msg": "Remove the firewall because it's expensive!! And we're not going to have a public IP at the moment that\nis not a VPN anyway.", "date": "2020-07-07 12:39:50+12:00", "modified_files": ["hub.tf", "variables.tf"]}]}, {"name": "https://github.com/yardbirdsax/elasticsearch-the-hard-way.git", "commits": [{"id": "521bae59a4002a616eac44c1681ca5066bbd00c8", "msg": "Updated instance size to reduce cost of lab.", "date": "2019-10-23 16:40:49-04:00", "modified_files": [".gitignore", "README.md", "default.tfvars", "main.tf", "main.tf", "variables.tf", "terraform.tfstate", "terraform.tfstate.backup", "variables.tf"]}]}, {"name": "https://github.com/geraldwuhoo/homelab-iac.git", "commits": [{"id": "3228ee1c5bfdf89e57e898659b086364122d58c1", "msg": "Move to Rocky Linux instead of RHEL no-cost license", "date": "2022-03-28 01:28:42-07:00", "modified_files": ["main.yml", "packages.yml", "main.yml", "k8s.yml", "main.yml", "main.tf", "config.yaml"]}]}, {"name": "https://github.com/firehawkvfx/firehawk-main.git", "commits": [{"id": "aef45215a4fe18d7fd03b7556fa3070815c57a22", "msg": "init kms seperately to save cost", "date": "2020-11-14 11:28:55+10:18", "modified_files": ["main.tf", "terraform-aws-vault"]}]}, {"name": "https://github.com/jkstenzel95/jks.gameservers.git", "commits": [{"id": "411ab992ba07e698cb08b56eb4cfc9d6e001d43f", "msg": "Change dynamodb kv store billing mode", "date": "2022-01-11 15:49:08-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/Eximchain/terraform-aws-quorum-cluster.git", "commits": [{"id": "d16e8593ad54bbeeb319edbb313583377b474294", "msg": "Constellation stores payloads in S3\n\nFixes issue #1 by storing constellation payloads in S3. The bucket is mounted using\ns3fs-fuse and payloads persist when replacing instances. This allows a replacement\ninstance to access private state from before it crashed.", "date": "2018-01-02 18:20:29-05:00", "modified_files": ["constellation.conf", "build-deps.sh", "quorum-setup.sh", "s3fs.sh", "quorum.json", "example.tfvars", "quorum.tf", "variables.tf", "vault.tf"]}, {"id": "6a56f400f7de3f4d5cef646d92e3f848608031c1", "msg": "Make CloudWatch metrics optional\n\nThis adds a terraform variable to choose whether to enable cloudwatch\nmetrics. This is for cost-savings, since put-metric-data calls are\ncharged per call and dashboards (coming soon) are multiple USD per month.", "date": "2018-02-06 13:55:20-05:00", "modified_files": ["init-quorum.sh", "example.tfvars", "main.tf", "quorum.tf", "variables.tf", "main.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/bretmullinix/terraform-for-beginners.git", "commits": [{"id": "3a3e9f6d19da0730f2b077b0c160a467102f5666", "msg": "updated the image id to use, the other one was costing too much.", "date": "2020-06-13 05:41:05-04:00", "modified_files": ["main.tf", "main.tf", "readme.md", "readme.md", "main.tf", "readme.md"]}]}, {"name": "https://github.com/DKhan1998/cne-sfia2-project.git", "commits": [{"id": "5446b4b636801f4a9373e5c9ea847cdf1df46cc5", "msg": "Rebuilding Jenkins pipeline to be more efficient\n\nSigned-off-by: Daood Khan <DKhan@qa.com>", "date": "2020-10-05 14:53:27+01:00", "modified_files": ["Jenkinsfile", "main.tf"]}]}, {"name": "https://github.com/hmcts/ccpayfr-shared-infrastructure.git", "commits": [{"id": "0f16d80ffef69fdf59e540ac199272a2832185ed", "msg": "PAY-1353 - shared infrastructure for fees & payments", "date": "2018-10-08 11:48:23+01:00", "modified_files": [".gitignore", "Jenkinsfile_CNP", "Jenkinsfile_parameterized", "README.md", "asp.tf", "key-vault.tf", "main.tf", "output.tf", "variables.tf"]}, {"id": "49849e7182d2cc8e39e5c878640c3c5b6c98a8fe", "msg": "PAY-1400 - added serviceBus config", "date": "2018-10-30 15:22:14+00:00", "modified_files": ["queue.tf"]}, {"id": "c87d0c95873589e8495e0101aa12bc57782fc697", "msg": "PAY-1400 - added serviceBus config for topic and subscription", "date": "2018-11-05 09:48:12+00:00", "modified_files": ["queue.tf", "servicebus.tf"]}, {"id": "31222fa2ac2d703e8fe1a19e69d377969b43bd71", "msg": "app gw configuration for paybbuble (#26)\n\n* app gw config paybbuble\r\n\r\n* prop fix\r\n\r\n* HostName prop fix\r\n\r\n* setting use_authentication_cert = true\r\n\r\n* name fix", "date": "2019-02-06 14:24:22+00:00", "modified_files": ["aat.tfvars", "appgw.tf", "demo.tfvars", "prod.tfvars", "saat.tfvars", "sandbox.tfvars", "sprod.tfvars", "state.tf", "variables.tf"]}, {"id": "29ceed1b936361aafc501f13aca0a086539be35f", "msg": "pay bubble url fix", "date": "2019-02-06 14:30:42+00:00", "modified_files": ["prod.tfvars"]}, {"id": "a86517d72f09983822ee0c783785fab2e6cfc95e", "msg": "added another pay bubble http listener for www", "date": "2019-03-27 13:44:54+00:00", "modified_files": ["aat.tfvars", "appgw.tf", "prod.tfvars", "saat.tfvars", "sandbox.tfvars", "sprod.tfvars", "variables.tf"]}, {"id": "6c781c719697b9f2286fb47605886c8878a4e33a", "msg": "PAY-2182:WAF Configuration changes", "date": "2019-10-14 18:18:25+01:00", "modified_files": ["appgw.tf", "key-vault.tf", "servicebus.tf"]}, {"id": "4430eb5585684674b767ca80011ea51450f471e1", "msg": "PAY-2182:WAF Configuration changes (#51)", "date": "2019-10-14 18:23:47+01:00", "modified_files": ["appgw.tf", "key-vault.tf", "servicebus.tf"]}, {"id": "7a090fd037cd76cfb1bd51d05bff3509c73b3f21", "msg": "PAY-2182:WAF Configuration changes", "date": "2019-10-22 10:35:45+01:00", "modified_files": ["appgw.tf"]}, {"id": "c73d0197a462645b6daafbb7301cc768e1ea635b", "msg": "PAY-2182:Merge branch 'master' into ithc", "date": "2019-10-22 11:14:14+01:00", "modified_files": ["output.tf"]}, {"id": "9d7a634f01bc5a9c0540c8f00e8fc40e805e5bf2", "msg": "PAY-2182:Added resource id", "date": "2019-10-22 11:47:44+01:00", "modified_files": ["output.tf"]}, {"id": "f3326a03051aa5dfa6fc4f02bf734e1eb4f44f3f", "msg": "PAY-2390:Remove managed identities", "date": "2019-11-06 13:24:12+00:00", "modified_files": ["aat.tfvars", "key-vault.tf", "perftest.tfvars", "sandbox.tfvars", "variables.tf"]}, {"id": "e5c94043806043e62e2e6fc31932707f2acfdd10", "msg": "PAY-2390:Remove managed identities", "date": "2019-11-06 13:25:38+00:00", "modified_files": ["ithc.tfvars", "prod.tfvars"]}, {"id": "eedfd65b1873774c0a63743a56999b6af753623b", "msg": "PAY-2390:Remove managed identities", "date": "2019-11-06 13:38:08+00:00", "modified_files": ["ithc.tfvars", "key-vault.tf", "perftest.tfvars", "sandbox.tfvars", "variables.tf"]}, {"id": "0f9c614e27af6de7fded093d4c2b8f45b6b45094", "msg": "PAY-2390:Added managed identities again", "date": "2019-11-06 14:02:59+00:00", "modified_files": ["aat.tfvars", "perftest.tfvars", "prod.tfvars"]}, {"id": "71a19128674f8f61f34acee9f32a15403f6debca", "msg": "PAY-2390:Added managed identities again (#54)", "date": "2019-11-06 14:10:16+00:00", "modified_files": ["aat.tfvars", "perftest.tfvars", "prod.tfvars"]}, {"id": "21ae6e8e247d695ce4b6697afa7179d2755c1da0", "msg": "PAY-2390:Added managed identities again", "date": "2019-11-08 12:50:45+00:00", "modified_files": ["key-vault.tf", "variables.tf"]}, {"id": "c2b22ab23ac2797eaac492bf2f8ae6cd63b1f91d", "msg": "PAY-2663:Removed variable for app service plan", "date": "2020-01-06 16:32:36+00:00", "modified_files": ["output.tf"]}, {"id": "77f1ea72e3beacf51707f3131bfb832aa6335d48", "msg": "Delete most ccpay infra (#59)\n\n* Delete most ccpay infra\r\n\r\n* More removal", "date": "2020-04-22 15:57:50+01:00", "modified_files": ["aat.tfvars", "appgw.tf", "demo.tfvars", "ithc.tfvars", "perftest.tfvars", "prod.tfvars", "saat.tfvars", "sandbox.tfvars", "sprod.tfvars", "state.tf", "variables.tf"]}, {"id": "c6d031634f14ae17c189c90c055eb4be1e527fb3", "msg": "PAY-3722: Azure rm version upgrade changes", "date": "2020-10-07 13:31:38+01:00", "modified_files": [".terraform-version", "application-insights.tf", "key-vault.tf", "variables.tf"]}, {"id": "48f3381ede7b812171a3b2b48f8876089a1ea8cb", "msg": "PAY-3722: Azure rm version upgrade changes", "date": "2020-10-07 13:39:38+01:00", "modified_files": ["main.tf"]}, {"id": "daa91f5f8ab49f6713d3470e14cfae8873dcfbb2", "msg": "PAY-3722: Azure rm version upgrade changes", "date": "2020-10-07 14:40:51+01:00", "modified_files": ["main.tf", "servicebus.tf"]}, {"id": "f6cd4c782793a2bf58647cd01445d13b143d5fc0", "msg": "PAY-3722: Azure rm version upgrade changes", "date": "2020-10-07 15:35:43+01:00", "modified_files": ["key-vault.tf", "servicebus.tf"]}, {"id": "da336bb39d4b825ba1b39671339189617319394c", "msg": "PAY-3722: Azure rm version upgrade changes", "date": "2020-10-07 15:48:37+01:00", "modified_files": ["application-insights.tf", "main.tf", "variables.tf"]}, {"id": "94386180b8e073cfa34f88ce3cd5e1fe801e85c9", "msg": "PAY-3722: Azure rm version upgrade changes", "date": "2020-10-07 16:12:00+01:00", "modified_files": ["main.tf", "servicebus.tf"]}, {"id": "efb7071f0a7419c8063e438b67ec56d8fc3eac61", "msg": "PAY-3722: Common tag changes", "date": "2020-10-07 16:27:24+01:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "854c1bfc70b083374cf36f18785c1cfa0f4c96e1", "msg": "PAY-3722: Common tag changes", "date": "2020-10-07 16:39:25+01:00", "modified_files": ["servicebus.tf"]}, {"id": "bab601095454ca6eb5985d529b524c3021373394", "msg": "PAY-3722: Common tag changes for team name issue", "date": "2020-10-07 17:06:48+01:00", "modified_files": ["application-insights.tf", "main.tf", "servicebus.tf"]}, {"id": "bff5050487419ccb6f30c09380eeb17c32c5bfa8", "msg": "PAY-3722: Refactoring and changes for azure rm version upgrade", "date": "2020-10-07 18:09:13+01:00", "modified_files": ["key-vault.tf", "main.tf", "variables.tf"]}, {"id": "b302501085e61728b8eba78f4cf91f232c9711fc", "msg": "PAY-3722: Refactoring and changes for azure rm version upgrade", "date": "2020-10-07 18:15:19+01:00", "modified_files": ["asp.tf", "servicebus.tf"]}, {"id": "9aa22076fb4bccc25a281d736de133c95427feba", "msg": "PAY-3722: Review comment fixes for azure rm version upgrade", "date": "2020-10-08 17:39:32+01:00", "modified_files": ["application-insights.tf", "asp.tf", "key-vault.tf", "main.tf", "state.tf"]}, {"id": "36e8fcca32498e9e4dcb97fc6a72d68578837057", "msg": "PAY-3722: Review comment fixes for azure rm version upgrade", "date": "2020-10-08 17:41:51+01:00", "modified_files": ["main.tf"]}, {"id": "ef0bd131540c2c516f01f42a3c90ae7f3f8b0793", "msg": "PAY-3722: Updating version", "date": "2020-10-09 10:42:08+01:00", "modified_files": ["main.tf"]}, {"id": "262b4b8318dc970c867c3fbd2437cfce07d6b81b", "msg": "PAY-3722: Refactoring the changes", "date": "2020-10-09 11:24:17+01:00", "modified_files": ["key-vault.tf"]}, {"id": "a6e1c0378660d64cb686d14ae27394087f3b919b", "msg": "PAY-3722: Changes for creating new Managed identity", "date": "2020-10-12 16:02:24+01:00", "modified_files": ["key-vault.tf"]}, {"id": "ae69d64a1d1e32cefc014f1120e60ff6d6aefa67", "msg": "PAY-3722: Changes for creating new Managed identity", "date": "2020-10-12 16:16:31+01:00", "modified_files": ["key-vault.tf"]}, {"id": "7eefefc397b5f1aa0481801b5214b31d73e06e20", "msg": "PAY-3722: Changes for fees register MI", "date": "2020-10-13 16:06:23+01:00", "modified_files": ["key-vault.tf"]}, {"id": "6bc0e15731fb3f9c377a22d585a858b238984bfa", "msg": "PAY-3722: Changes for fees register MI", "date": "2020-10-13 16:11:40+01:00", "modified_files": ["key-vault.tf"]}, {"id": "7ecdcb8d2d6bc3ea11a18d4c54ea3f85537e05bb", "msg": "PAY-3722: Changes for fees register MI", "date": "2020-10-13 16:29:49+01:00", "modified_files": ["key-vault.tf"]}, {"id": "4982d6f00ca147490d01d05e3d95653d6c7b5f6f", "msg": "PAY-3722: Removed Changes for fees register MI", "date": "2020-10-13 16:40:39+01:00", "modified_files": ["key-vault.tf"]}, {"id": "017bcf28ffb0fb337b0b5fdf5b0460bf964ab731", "msg": "PAY-3722: Referring newly created MI to fees-register kv", "date": "2020-10-15 13:13:55+01:00", "modified_files": ["key-vault.tf"]}, {"id": "434d83eb6319fd3c7a722d20bfed3b0edb22ba0d", "msg": "PAY-3704: Terraform upgrade changes", "date": "2020-10-26 12:56:30+00:00", "modified_files": [".terraform-version", "main.tf", "state.tf", "versions.tf"]}, {"id": "871220d204d1f691358532baf2581bf6e80cdcf6", "msg": "Updated to Fee and Pay group", "date": "2021-03-23 11:58:03+00:00", "modified_files": ["key-vault.tf"]}]}, {"name": "https://github.com/gc-ss/demo-aws-env.git", "commits": [{"id": "7e479038361b36fd96f35a2f2e3da17fea7beea1", "msg": "Rename VPC module and create env-specific config\n\n* I renamed the VPC created in the VPC module (vpcs.tf) to be `module\n\"demo\"` instead of `module \"vpc\"`. My reasoning behind this is that\nusing a command like `terraform state list` only shows the module\nresource name, so if this code was ever being used in multiple\nenviornments, it would be difficult to tell them apart. Consider now\nthat a state list shows an identifying word (`demo`):\n\n```\naws_instance.training-vault-01\nmodule.demo.aws_eip.nat[0]\nmodule.demo.aws_eip.nat[1]\nmodule.demo.aws_nat_gateway.this[1]\n```\n\n* Move TFVARS file to environment-specific name. Again, to support the\nmulti-environment approach in the future, would rather call these on the\ncommand-line with `-var-file=demo.tfvars` (or whatever environment\nyou're working in).\n\n* A lot of this came from reading best practices listed here:\nhttps://github.com/ozbillwang/terraform-best-practices", "date": "2021-04-25 21:07:30-05:00", "modified_files": ["acm.tf", "demo.tfvars", "ec2.tf", "securitygroups.tf", "variables.tf", "vpcs.tf"]}]}, {"name": "https://github.com/navdhayagnik76/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/kborovik/gcp-gke-vault.git", "commits": [{"id": "6bf8ba13f57a25a6465a8e43ab723983be87a6eb", "msg": "update gke vault logs (#19)\n\n* change vault log format to json\n* update documentation\nCo-authored-by: Konstantin Borovik <kborovik@paypal.com>", "date": "2022-01-18 13:01:06-05:00", "modified_files": ["README.md", "google-cloud.md", "hashicorp-vault.md", "stateful-set.yaml", "variables.tf", "README.md"]}]}, {"name": "https://github.com/dwp/dataworks-aws-bgdc-connectivity.git", "commits": [{"id": "b7971dc7d991f6a6e845dd82b89b2e0150ad157b", "msg": "Add costcode tag (#3)", "date": "2020-11-13 13:37:29+00:00", "modified_files": ["connectivity.tf"]}]}, {"name": "https://github.com/Accurate0/infrastructure.git", "commits": [{"id": "06889e08148d258f329118d43734f8c8dcff994e", "msg": "I DONT WANT TO PAY FOR LOGS", "date": "2022-03-21 21:06:54+08:00", "modified_files": ["api.tf"]}]}, {"name": "https://github.com/t-dever/public-reusable-aviatrix-terraform-modules.git", "commits": [{"id": "c8c01364e897938fdce1a1f2e1cf7578eb4ac0c7", "msg": "testing infracost (#19)\n\n* testing infracost\r\n\r\n* terraform-docs: automated action\r\n\r\n* terraform-fmt: automated action\r\n\r\n* changing path for var file\r\n\r\n* testing\r\n\r\n* testing\r\n\r\n* testing\r\n\r\n* changing default value for variable\r\n\r\n* terraform-docs: automated action\r\n\r\n* adding count for copilot resources\r\n\r\n* terraform-fmt: automated action\r\n\r\n* fixing count\r\n\r\n* fixing stuff\r\n\r\n* fixing outputs\r\n\r\n* testing\r\n\r\n* testing\r\n\r\n* testing\r\n\r\n* testing\r\n\r\n* testing\r\n\r\n* terraform-fmt: automated action\r\n\r\n* cleaning up variables\r\n\r\n* terraform-fmt: automated action\r\n\r\n* cleaning up authentication with azure controller module\r\n\r\n* terraform-docs: automated action\r\n\r\n* testing comment behavior to delete and new\r\n\r\n* updating pre commit checks to ignore variables\r\n\r\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>", "date": "2022-03-09 11:38:43-06:00", "modified_files": ["infracost.yml", ".pre-commit-config.yaml", "infracost.yml", "README.md", "default.tfvars", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "0cda395bc0e79529d04045c2fa613dfe495cbd0d", "msg": "updating gitignore, adding aws controller deployment and infracost. (#21)\n\n* updating gitignore, adding aws controller deployment and infracost.\r\n\r\n* terraform-docs: automated action\r\n\r\n* terraform-fmt: automated action\r\n\r\n* adding terraform plan flags for aws controller\r\n\r\n* terraform-docs: automated action\r\n\r\n* adding checkov recommendations to aws resources\r\n\r\n* terraform-docs: automated action\r\n\r\n* adding exceptions for tflint\r\n\r\n* adding description to copilot additional volumes\r\n\r\n* creating resource group query\r\n\r\n* removing read me to have it recreated\r\n\r\n* changing checkout to version 3\r\n\r\n* removing README\r\n\r\n* testing permissions\r\n\r\n* terraform-docs: automated action\r\n\r\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>", "date": "2022-03-09 12:42:37-06:00", "modified_files": ["ci_checks.yml", "infracost.yml", ".gitignore", ".pre-commit-config.yaml", "README.md", "ci.pipeline.yml", "infracost.yml", "main.tf", "providers.tf", "variables.tf", "README.md", "default.tfvars", "iam.tf", "initial_controller_setup.py", "main.tf", "outputs.tf", "providers.tf", "variables.tf", "main.tf", "outputs.tf", "providers.tf", "variables.tf", "README.md", "default.tfvars", "initial_controller_setup.py", "main.tf", "outputs.tf", "providers.tf", "variables.tf", "README.md", "main.tf", "outputs.tf", "providers.tf", "variables.tf", "README.md", "main.tf", "outputs.tf", "providers.tf", "variables.tf", "README.md", "fortinet_egress_init.tftpl", "fortinet_init.tftpl", "generate_api_token.py", "main.tf", "outputs.tf", "providers.tf", "variables.tf", "commit.py", "main.tf", "providers.tf", "variables.tf", "requirements.txt", "initial_controller_setup.py"]}, {"id": "5658b74bb57f79e6559096d6e358613db1ae3cf1", "msg": "Features/aviatrix/controller initialize (#22)\n\n* removing commented infracost code\r\n\r\n* adding controller initialize module\r\n\r\n* setting source for controller initialize\r\n\r\n* added validations to initialization module\r\n\r\n* removing python script from azure deployment and updating variables\r\n\r\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>", "date": "2022-03-09 14:33:49-06:00", "modified_files": ["ci_checks.yml", "infracost.yml", "tagging.yml", "README.md", "initial_controller_setup.py", "main.tf", "providers.tf", "requirements.txt", "variables.tf", "README.md", "main.tf", "variables.tf", "README.md", "initial_controller_setup.py", "main.tf", "variables.tf", "initial_controller_setup.py"]}]}, {"name": "https://github.com/nikkaushal/terraform-shipping.git", "commits": [{"id": "4fe4e3a329b6b5d745355c71b433780bb90726c2", "msg": "terraform-payment", "date": "2021-03-19 17:30:09-04:00", "modified_files": ["asg.tf", "vars.tf"]}]}, {"name": "https://github.com/darthfork/tf-infra.git", "commits": [{"id": "469e9f2a42402ade384f4f946f67eef89cd837a5", "msg": "add instance to trigger infracost", "date": "2021-01-12 18:39:50-05:00", "modified_files": ["instances.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-azurerm-sql.git", "commits": [{"id": "4fe0be131b0f6b5f073391227b9fe54372506b42", "msg": "costs", "date": "2021-05-18 08:26:20+01:00", "modified_files": ["terraform.tf"]}]}, {"name": "https://github.com/Midas-Protocol/webtwo-infra.git", "commits": [{"id": "25ed0319bf8099f0cc79eceba9104c73d9507e0d", "msg": "remove unneded configs and (expensive) resources", "date": "2022-03-03 18:10:12+01:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "2809f4e2d78ff33b48e9c1742b58a256ebce986d", "msg": "remove unneded configs and (expensive) resources", "date": "2022-03-03 18:10:26+01:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/krishna98967/gittesting.git", "commits": [{"id": "3066bd837756ab9e21ab7ee85a43a687444f657b", "msg": "costcenter in vpc", "date": "2022-02-21 03:08:39+00:00", "modified_files": ["vpc.tf"]}]}, {"name": "https://github.com/qagit0510/iac-repo.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/apnmt/azure-cluster.git", "commits": [{"id": "cdcee24ee3ba10b555e50713e9a5c1e3616f9b6a", "msg": "add paymentservice", "date": "2022-02-08 20:47:50+01:00", "modified_files": ["paymentservice.tf"]}]}, {"name": "https://github.com/sweeneyb/iot-core-tf-for-esp32.git", "commits": [{"id": "7f32d294846cbd736441fed1326c7959772c86e1", "msg": "creates a project with a registry & attached billing", "date": "2020-12-24 22:24:18-05:00", "modified_files": [".gitignore", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/Carlovo/full-stack-app-aws.git", "commits": [{"id": "fc30552d0243ee65f20ee3e866a1d1c8a26c44fa", "msg": "change dynamodb table from provisioned to pay per request billing mode", "date": "2021-02-04 19:30:19+01:00", "modified_files": ["resources_stateful.tf"]}]}, {"name": "https://github.com/shaharsa/terragoat7.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/akentosh/ec2-testing.git", "commits": [{"id": "da1f93d8ce2ee4f5d16474e2ac7fc60d9b614324", "msg": "update cost center", "date": "2020-04-21 12:59:50-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/ImminentDomain/immdom-terraform.git", "commits": [{"id": "a49aaeed1776f0991256221e61ebc868ae5b60cb", "msg": "fix: update billing alarm source", "date": "2020-09-16 00:15:58-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/hur/ctfd-gcp.git", "commits": [{"id": "255bd197934bf4539f665dfd12893b1908882499", "msg": "infracost: not applicable due to unsupported gcp objects", "date": "2022-01-28 16:09:00+00:00", "modified_files": ["infracost.yml", "main.tf"]}, {"id": "af4601fa237f134d8489919e9c20be5e8395fbf4", "msg": "make billing account identifier into a variable", "date": "2022-02-09 11:50:33+00:00", "modified_files": ["main.tf", "terraform.tfvars", "vars.tf"]}]}, {"name": "https://github.com/samq-ghdemo/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/GBergeret/tf-vpc-module.git", "commits": [{"id": "34d80ece7d0ef598414baffceb074c6580dd819b", "msg": "test: Update test instance to be smaller\n\nUpdate test instance from t2.micro to t3.nano (reduce cost).", "date": "2018-11-04 21:43:00+01:00", "modified_files": ["test.tf"]}, {"id": "5e63c8390cb1001daf4ad74bb2926cc060c0de08", "msg": "feat: Create a private tier with private subnets\n\nCreate a private tier with private subnets and use an ssh bastion to run\nkitchen-terraform on private subnets.\n\n* Update README.md\n* Create private subnets, nat gateways and route tables.\n* Implement var.price_saving_enabled to have AWS NAT gateway or EC2 instance\n(to save on cost).\n* Auto determine subnets size (size(private) = 4 * size(public)).\n* Update kitchen-terraform tests to run from private subnets.\n* Update kitchen-terraform to test each case (with NAT GW or EC2\ninstances)", "date": "2018-12-04 19:03:35+00:00", "modified_files": [".travis.yml", "README.md", "kitchen.yml", "nat_gateways.tf", "outputs.tf", "route_tables.tf", "subnets.tf", "test.tf", "variables.tf", "vpc.tf"]}]}, {"name": "https://github.com/h0n9/devops-playground.git", "commits": [{"id": "b64a08915cd06ceaa338bbd3f048f494bdb43161", "msg": "Add terraform/modules/vpc-cheap", "date": "2021-09-13 21:21:08+09:00", "modified_files": [".terraform.lock.hcl", "main.tf", "output.tf", "variables.tf"]}, {"id": "5d4dd3b65fb13e7f22c2088f0cdbc75cafd651a5", "msg": "Add terraform/vpc-cheaper\n\n- vpc\n- private subnet", "date": "2021-09-25 11:28:54+09:00", "modified_files": [".terraform.lock.hcl", "main.tf", "output.tf", "variables.tf"]}]}, {"name": "https://github.com/trustypangolin/bedrock-foundation-template.git", "commits": [{"id": "6e313dceee3b2aff19fca7c0e18b81890fd4722e", "msg": "Initial Code Dump\n\n\n\n\nt\n\n\nignore\n\ninit\n\n\nPIpelines\n\n\nPipeline Testing\n\n\nOIDC\n\nBootstrap\n\n\nrole\n\n\nlab\n\ntf\n\nplan\n\nbin\n\ntf\n\nci\n\npipeline test\n\ntest head message\n\nproper description\n\nci\n\nvalidate\n\ntest\n\ndirectory\n\ndir\n\n\nbedrock\n\nversion\n\ntest vars\n\nIf exists test\n\nplan\n\n\nartifact test\n\nbb\n\nbb\n\nversion\n\nversion\n\nart\n\ncred\n\ncc\n\ncred\n\nacc\n\n\nb\n\ntest dotenv\n\n\ncompress\n\n\ntrigger\n\n\ntf\n\ngitlab\n\nboth\n\n\nci\n\n\norg\n\norg\n\n\ncx\n\norg\n\norg\n\nbase\n\norg\n\napply\n\n\napprove\n\n\ntry\n\nneeds\n\norg\n\norg\n\nggl\n\nyum\n\n\ncontinue fail\n\n\nstate\n\nchecks\n\n\ne\n\nsec\n\ngg\n\nscrpt\n\ns\n\ns\n\nlab\n\n\nar\n\n\nst\n\ngb\n\nex\n\nd\n\nssd\n\n\ns\n\n\ndeploy\n\n\nplan\n\nimport\n\ndd\n\ndd\n\ninit\n\ntf\n\n\norg\n\ns3\n\n\norg\n\norg\n\ntt\n\norg\n\norg\n\n0\n\nh\n\norg\n\norg\n\npl\n\npl\n\nde\n\nde\n\nunique\n\nunique\n\norg\n\norg\n\nv\n\nv4\n\n\norg\n\nboth\n\nmain\n\nprtest\n\nRoles updates\n\nremove unneeded file\n\nremove unneeded file\n\ncur\n\n\nbool\n\n\nOIDC Github Actions\n\n\nOIDC AssumeRole\n\n\nc\n\n\nc\n\n\nc\n\nc\n\n\nc\n\n\nc\n\n\nde\n\n\naws\n\n\ndd\n\n\nenv\n\ndd\n\n\ntoken\n\nex\n\njj\n\nid\n\n\nse\n\nk\n\n\ns\n\nstate\n\n\nd\n\ngrab quotes\n\n\nor\n\nenv\n\nor\n\n\nonly main\n\n\norg\n\n\norg\n\nmf\n\n\norg\n\nd\n\norgs\n\n\nparent\n\n\nd\n\n\nwf\n\n\ncr\n\n\nparent\n\nreuse\n\n\nCleanup\n\n\no\n\n\nTest\n\n\ntest\n\n\ntest\n\n\ntest\n\n\ntest\n\n\ntest\n\n\ntest\n\n\ndecode\n\n\ntest\n\n\nbuild test 1\n\n\nvar\n\n\n-K var\n\n\ntest org folder\n\n\nmi\n\ns3\n\n\ninit\n\n\ntest pll\n\ntrigger\n\norg.mgmt\n\n\ntest\n\n\ntst\n\n\norg\n\nCommon-Main\n\n\ntest\n\n\nOrg Deploy Role\n\n\nOrg\n\n\niam\n\n\nOrg\n\n\ntest not merge and assume role\n\n\nno merge\n\n\np\n\n\nmgmt\n\n\ntemplate\n\n\nmgmt\n\n\nSSO\n\n\ndeploy\n\n\norg\n\n\norg\n\nAdd OU\n\n\ntf\n\noutputs\n\n\nbilling\n\n\nhealth\n\n\norg\n\n\norg\n\n\nSec/Prod/Sha\n\nSec/Prod/Sha\n\ncicd\n\n\ncicd\n\n\nAlias\n\nalias\n\norg\n\n\nModule\n\n\nmodules\n\n\nconfig\n\n\nops\n\n\nh\n\n\ntest import\n\n\na\n\n\nprod\n\n\nstate\n\n\nops\n\n\nops\n\n\nmodules\n\n\ntags\n\n\nmodules\n\n\ns3\n\n\nmodules\n\n\ndep\n\nci\n\n\nops\n\n\nimport\n\n\na\n\n\nops\n\n\nbootstrap\n\n\norg\n\npush\n\ncommon\n\n\nlambda\n\n\nvars\n\n\npython\n\n\nconfig\n\n\nhealth sns\n\n\norg\n\n\nmodule provider\n\n\nvars\n\n\norg\n\n\norg\n\n\nconfig role\n\n\nmodules\n\n\nconfig\n\n\nOrg Deploy Role\n\nbilling\n\nall config\n\n\nall\n\nflowlogs\n\n\nfix\n\n\nOrg Test\n\n\nmerge requests\n\n\nManagement\n\nManagement\n\nCloudTrail\n\n\nLogging\n\n\nLogging\n\n\nmgmt\n\n\nlogging\n\n\nALL\n\n\nrm\n\n\ncloudtrail\n\n\nflow logs\n\n\nvpc\n\n\nRoles updates\n\nremove unneeded file\n\nremove unneeded file\n\ncur\n\nbool\n\nTest\n\ntest\n\ntest\n\ntest\n\ntest\n\ntest\n\ntest\n\ndecode\n\ntest\n\nbuild test 1\n\nvar\n\n-K var\n\ntest org folder\n\nmi\n\ns3\n\ninit\n\ntest pll\n\ntrigger\n\norg.mgmt\n\ntest\n\ntst\n\norg\n\nCommon-Main\n\ntest\n\nOrg Deploy Role\n\nOrg\n\niam\n\nOrg\n\ntest not merge and assume role\n\nno merge\n\np\n\nmgmt\n\ntemplate\n\nmgmt\n\nSSO\n\ndeploy\n\norg\n\norg\n\nAdd OU\n\ntf\n\noutputs\n\nbilling\n\nhealth\n\norg\n\norg\n\nSec/Prod/Sha\n\nSec/Prod/Sha\n\ncicd\n\ncicd\n\nAlias\n\nalias\n\norg\n\nModule\n\nmodules\n\nconfig\n\nops\n\nh\n\ntest import\n\na\n\nprod\n\nstate\n\nops\n\nops\n\nmodules\n\ntags\n\nmodules\n\ns3\n\nmodules\n\ndep\n\nci\n\nops\n\nimport\n\na\n\nops\n\nbootstrap\n\norg\n\npush\n\ncommon\n\nlambda\n\nvars\n\npython\n\nconfig\n\nhealth sns\n\norg\n\nmodule provider\n\nvars\n\norg\n\norg\n\nconfig role\n\nmodules\n\nconfig\n\nOrg Deploy Role\n\nbilling\n\nall config\n\nall\n\nflowlogs\n\nfix\n\nOrg Test\n\nmerge requests\n\nManagement\n\nManagement\n\nCloudTrail\n\nLogging\n\nLogging\n\nmgmt\n\nlogging\n\nALL\n\nrm\n\ncloudtrail\n\nflow logs\n\nvpc\n\nGrafana\n\nconflict1\n\n\nc\n\n\nvar\n\nv\n\nsd\n\n\ngrafana var\n\n\npipelines", "date": "2022-03-10 08:26:47+10:00", "modified_files": ["cfn-stage-01-mgmt.yml", "tf-account.yml", "tf-full-deploy.yml", "tf-management.yml", "tf-org.yml", ".gitignore", ".gitlab-ci.yml", "LICENSE", "README.md", "bitbucket-pipelines.yml", "bitbucket-oidc.yml", "github-oidc.yml", "gitlab-oidc.yml", "billing-bucket.yml", "oidc-stack.py", "samconfig.toml", "stackset-role.yml", "security-10-config-bucket.yml", "cleanup-pipelines.sh", "cleanup-workflows.sh", "delete_default_vpc.sh", "docker-compose.yml", "parameters.json.template", "all.sh", "bitbucket-oidc.tf", "genreg.sh", "org_state.tf", "provider.tf", "provider_regional_management.tf", "provider_regional_management.tf.region", "provider_regional_production.tf", "provider_regional_production.tf.region", "provider_regional_security.tf", "provider_regional_security.tf.region", "provider_regional_shared.tf", "provider_regional_shared.tf.region", "remote_state.tf.template", "terraform.tfvars.template", "variables.tf", "aws_assumerole_oidc.sh", "tf_deploy.sh", "tf_import.sh", "tf_import_slr.sh", "tf_output.sh", "tf_plan.sh", "tf_state.sh", "ubuntu_base.sh", "dynamodb.tf", "github-oidc.tf", "gitlab-oidc.tf", "iam.tf", "main.tf", ".gitlab-ci.yml", "all_module.tf", "billing.tf", "cloudtrail.tf", "cloudwatch_metrics.tf.disable", "cur_s3.tf", "health.tf", "iam-alias.tf", "org_state.tf", "provider.tf", "provider_regional_management.tf", "remote_state.tf.template", "terraform.tfvars.template", "variables.tf", "variables_mgmt.tf", "cloudwatch_cross_account_role.tf", "config.tf", "grafana.tf", "iam_password_policy.tf", "lambda_iam_role.tf", "s3_account_access.tf", "support_iam_role.tf", "variables.tf", "config.tf", "ebs_encryption.tf", "ebs_encryption.tf.template", "genreg.sh", "output.tf", "provider.tf", "provider.tf.template", "s3_logging.tf", "variables.tf", "README.md", "endpoints.tf", "igw.tf", "nacls.tf", "nat_gateway.tf", "outputs.tf", "routing.tf", "security_group.tf", "subnets.tf", "variables.tf", "vpc.tf", "vpc_flow_logs.tf", "vpc_peering.tf", "aws_backup.tf", "instance_role.tf", "instance_scheduler_role.tf", "variables.tf", "aws_backup.tf", "config_rules.tf.disable", "ssm_patch.tf", "variables.tf", "outputs.tf", "variables.tf", "vpc_peering.tf", "accept_peer_peerings.tf", "boot.sh", "dev_peering_routes.tf", "networking.auto.tfvars.template", "networking_variable.tf", "prod_peering_routes.tf", "shared_peering.tf", "shared_peering_routes.tf", "staging_peering_routes.tf", "tf_remote_state.tf", "tf_remote_state.tf.template", ".gitlab-ci.yml", "dynamodb.tf", "iam-tf-role.tf", "org.tf", "org_policy_backup.tf", "org_policy_scp.tf", "outputs.tf", "provider.tf", "remote_state.tf.template", "s3.tf", "sso.tf", "terraform.tfvars.template", "variables.tf", ".gitlab-ci.yml", "iam-alias.tf", "module_all.tf", "module_ops.tf", "org_state.tf", "outputs.tf", "provider.tf", "provider_regional_production.tf", "remote_state.tf.template", "slr.env", "terraform.tfvars.template", "variable.tf", "s3.tf", ".gitlab-ci.yml", "all_module.tf", "aws-instance-scheduler.yml", "cloudtrail.tf", "config.tf", "period-alwaysstop.json", "period-weekdays.json", "period-weekend.json", "schedule-brisbane-stop.json", "schedule-brisbane.json", "schedule-sydney-stop.json", "schedule-sydney.json", "scheduler.json", "flowlogs.tf", "guardduty.tf", "iam-alias.tf", "kms.tf", "lambda_delete_default_vpcs.tf", "lambda_delete_default_vpcs.tf.disabled", "lambda_ec2_snapshot_size_manager.tf.disbaled", "lambda_ec2_snapshot_tag_manager.tf.disabled", "lambda_iam_permissions.tf", "lambda_iam_permissions.tf.disabled", "lambda_instance_scheduler-itoc.tf.disabled", "org_state.tf", "provider.tf", "provider_regional_security.tf", "00-cycle-template.py", "delete-default-vpc.py", "old-access-keys-manager.py", "snapshot-parent-manager.py", "snapshot-size-manager.py", "worker-snapshot-parent-manager.py", "worker-snapshot-size-manager.py", "remote_state.tf.template", "securityhub.tf", "sns-sqs.tf", "terraform.tfvars.template", "variables.tf", ".gitlab-ci.yml", "iam-alias.tf", "module_all.tf", "module_ops.tf", "org_state.tf", "outputs.tf", "provider.tf", "provider_regional_shared.tf", "remote_state.tf.template", "shared_vpn.tf.disabled", "terraform.tfvars.template", "userdata.sh", "variable.tf", "iam-alias.tf", "module_all.tf", "module_ops.tf", "org_state.tf", "outputs.tf", "provider.tf", "remote_state.tf.template", "terraform.tfvars.template", "variable.tf", "terraform.tfvars.template", "variables.tf"]}]}, {"name": "https://github.com/rust-lang/simpleinfra.git", "commits": [{"id": "b47e89da747fcc2eb22d03131e5ff1a91e7f8f2d", "msg": "Configure Foundation staff access to billing", "date": "2022-05-04 09:38:19-04:00", "modified_files": ["_users.tf"]}]}, {"name": "https://github.com/skyscrapers/terraform-vpc.git", "commits": [{"id": "9bc0bd83da621cbdf2f5c406303cea099cfb16d2", "msg": "Also use the project tag for billing (required)", "date": "2015-05-28 16:41:09+02:00", "modified_files": ["variables.tf", "vpc.tf"]}]}, {"name": "https://github.com/billy-reilly/terraform-frontend.git", "commits": [{"id": "587783c5d5562461d5cb18bf935ee3751de8925b", "msg": "Tag resources for cost breakdowns", "date": "2020-09-13 16:14:39+01:00", "modified_files": ["certificate.tf", "cloudfront.tf", "s3.tf"]}]}, {"name": "https://github.com/alkiranet/terraform-alkira-azure-vnet.git", "commits": [{"id": "f3aaedac0bbd42ca34afbf79ce114eec3fa4f3b9", "msg": "refactor: Support multiple billing tags", "date": "2022-02-16 09:30:55-05:00", "modified_files": ["main.tf"]}, {"id": "7efc80cf80167acd377833bb4cd02673177f9095", "msg": "refactor: Modify billing tag variable type", "date": "2022-02-16 09:31:16-05:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/terraform-aws-modules/terraform-aws-iam.git", "commits": [{"id": "e701139d00abfbadf0695b8186001b9786163863", "msg": "feat: Include cost explorer to default console services in `iam-read-only-policy` module (#186)", "date": "2022-02-02 12:31:57+01:00", "modified_files": ["README.md", "variables.tf"]}]}, {"name": "https://github.com/coresolutions-ltd/terraform-aws-s3-bucket.git", "commits": [{"id": "76bf292a3a4358134389bd30f95f9b05395bc0c2", "msg": "Adding request_payer", "date": "2020-04-24 14:50:07+01:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/srijitha-HPC/HPC_lab.git", "commits": [{"id": "4b4fd683799eb92a82a95a224785ceaa564b042a", "msg": "billing", "date": "2021-06-23 17:13:35+00:00", "modified_files": ["README.md", "credentials.json", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/chaspy/terraform-alibaba-isucon8.git", "commits": [{"id": "53588dad5dd4c13903a6c582f74e1afe2671d33e", "msg": "Minimamize spec to save the cost", "date": "2019-08-17 15:58:54+09:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/Cinegy/terraform-cinegy-modules.git", "commits": [{"id": "09636724e63599b1f589065c92074575471ac234", "msg": "-add 'secondary_az' var for cheaper VPCs\n-cleanup", "date": "2020-02-02 15:28:43+00:00", "modified_files": ["readme.md", "readme.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/SUSE/caps-automation.git", "commits": [{"id": "5675965b57d05932ae8b806bad2cd219d15fe516", "msg": "Use Aurora DB as external database\n\nThat is slightly cheaper, and does the job as well.", "date": "2020-11-25 13:09:38+01:00", "modified_files": ["main.tf", "output.tf", "variables.tf"]}]}, {"name": "https://github.com/pivotal-cf/terraforming-aws-ops-manager.git", "commits": [{"id": "c48e8a3659d66c5fd52c2aca82e816e8ced0f7e7", "msg": "Add broader tagging support\n\nAdd broader tagging support with support for default tags\nalong with user specified tags. This allows customers to utilize\nAWS tagging best practices and enables them to track deployments\nby environment, team, release, etc. These tags can be used then\nfor tracking billing by environment - for showback internally -\nor for simply tracking resource usage across teams and environments.", "date": "2018-04-09 17:27:57-06:00", "modified_files": ["README.md", "buckets.tf", "dns.tf", "elb.tf", "internet_gateway.tf", "modules.tf", "nat.tf", "bucket.tf", "instance.tf", "optional_instance.tf", "security_group.tf", "variables.tf", "rds.tf", "security_groups.tf", "subnets.tf", "tags.tf", "variables.tf", "vpc.tf"]}]}, {"name": "https://github.com/akshay3030/dockerized-jenkins-master.git", "commits": [{"id": "4356e9ebf89921898e9459f85f1173d44f3a3a6f", "msg": "cost optimized ebs first checking", "date": "2019-02-14 10:54:36-08:00", "modified_files": [".gitignore", "data.tf", "common.tfvars", "dev.tfvars", "main.tf", "terraform.tfstate", "terraform.tfstate.backup", "userdata", "vars.tf", "common.tfvars", "data.tf", "main.tf", "userdata", "vars.tf"]}]}, {"name": "https://github.com/intetunder-temp/terraform-gcp-trial.git", "commits": [{"id": "9f55a75f348c2393b51141e5e6554c22baa3343f", "msg": "forgot to update billing and org id", "date": "2020-04-21 19:34:43+01:00", "modified_files": ["projects.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-aws-codeartifact.git", "commits": [{"id": "59a68cb94c673b56a9eb21ad206c401c94c6fc29", "msg": "costs", "date": "2021-05-19 23:09:01+01:00", "modified_files": ["CODEOWNERS", "infracost-usage.yml", "terraform.tf"]}]}, {"name": "https://github.com/00inboxtest/cloud-foundation-fabric.git", "commits": [{"id": "c486bfc66f9814e33b410602cb557a5e4d532912", "msg": "Merge development branch (#44)\n\n* VPN-HA module initial commit\r\n\r\n* Added readme for net-vpn-ha module\r\n\r\n* Update readme, add simple description\r\n\r\n* Merge new modules list and environments foundation example (#30)\r\n\r\n* gke-cluster\r\n\r\n* net-vpc module and tests\r\n\r\n* add TODO to net-vpc module\r\n\r\n* add minimal README files with input/output variables to gke and net-vpc modules\r\n\r\n* BigQuery Module (#24)\r\n\r\n* Bigquery Module\r\n\r\n* Added README file\r\n\r\n* Added type hints\r\n\r\n* gke-cluster\r\n\r\n* net-vpc module and tests\r\n\r\n* add TODO to net-vpc module\r\n\r\n* add minimal README files with input/output variables to gke and net-vpc modules\r\n\r\n* BigQuery Module (#24)\r\n\r\n* Bigquery Module\r\n\r\n* Added README file\r\n\r\n* Added type hints\r\n\r\n* GCS module\r\n\r\n* net vpc module: improve secondary range outputs\r\n\r\n* net vpc module: add serve project registration\r\n\r\n* project module\r\n\r\n* move bigquery module to not-ready folder\r\n\r\n* folders module\r\n\r\n* rename project module's iam variables\r\n\r\n* slight tweak to folder module outputs\r\n\r\n* gcs module\r\n\r\n* simplify net-vpc module variables\r\n\r\n* fix module tests configurations, fix net-vpc module tests\r\n\r\n* add pydoc utility\r\n\r\n* add/update module READMEs\r\n\r\n* add/update module READMEs\r\n\r\n* add/update module READMEs\r\n\r\n* improve variable type summary generation in tfdoc\r\n\r\n* tfdoc: add support for replacing doc in README.md files\r\n\r\n* improve module READMEs\r\n\r\n* net-vpc-firewall module\r\n\r\n* add support for sensitive output attribute in tfdoc\r\n\r\n* remove empty function from tfdoc\r\n\r\n* render variable type as code in tfdoc\r\n\r\n* update module READMEs\r\n\r\n* net address module\r\n\r\n* net cloudnat module\r\n\r\n* remove redundant variable from net-cloudnat module\r\n\r\n* vpc module: add support for peering, use network name as subnet name prefix\r\n\r\n* net-vpn-static module\r\n\r\n* net-vpn-static module README\r\n\r\n* net-vpn-static module README\r\n\r\n* tfdoc: fix error on undeclared variable type\r\n\r\n* dns module\r\n\r\n* set version for all modules\r\n\r\n* kms module (untested)\r\n\r\n* change kms key self links output to map, fix gcs and kms iam variable descriptions\r\n\r\n* fix kms module\r\n\r\n* update kms module readme\r\n\r\n* simplify local iam pairs in modules\r\n\r\n* service accounts module (unfinished)\r\n\r\n* work on service accounts module\r\n\r\n* project module: add gcr service account\r\n\r\n* project module: update outputs in README\r\n\r\n* first working version of the iam service accounts module\r\n\r\n* iam service accounts module: extra checks in locals\r\n\r\n* modules/net-cloudnat: reorder variables\r\n\r\n* modules/net-vpn-dynamic: initial import (untested)\r\n\r\n* modules/net-vpn-dynamic: first working version\r\n\r\n* modules/net-vpn-dynamic: add outputs for auto-created router\r\n\r\n* modules/net-vpn-dynamic: update README\r\n\r\n* modules/net-[vpn,cloudnat]: clean up variable,s remove prefix\r\n\r\n* modules/net-vpn-dynamic: add advertisement configuration to tunnel bgp peer, refactor variables\r\n\r\n* tfdoc: add tooltips for variable types and defaults\r\n\r\n* modules: update README variables and outputs\r\n\r\n* tfdoc: improve variable default rendering\r\n\r\n* modules: update README variables and outputs\r\n\r\n* modules/net-vpc: minimal output refactoring\r\n\r\n* modules/vm-cos: initial import, base resources working, no outputs\r\n\r\n* modules/vm-cos: add variable descriptions\r\n\r\n* tfdoc: fix parsing in type and default blocks\r\n\r\n* modules/vm-cos: fix README\r\n\r\n* tfdoc: fix parsing in type and default blocks\r\n\r\n* modules/vm-cos: fix README\r\n\r\n* modules/compute-vm: initial working import (not fully tested)\r\n\r\n* modules/vm-cos: move to not-ready\r\n\r\n* tfdoc: fix variable defaults formatting\r\n\r\n* modules: update README files with tfdoc fixes\r\n\r\n* modules: add initial examples\r\n\r\n* gke-nodepool: initial import, untested\r\n\r\n* gke nodepool: add README, fix location variable, set node count default to 1\r\n\r\n* gke cluster: fix private cluster variables\r\n\r\n* gke nodepool: fix README title\r\n\r\n* gke cluster: add output for cluster location\r\n\r\n* gke nodepool: add missing variables for project id and cluster name, remove default from location variable, fix gke version assignment\r\n\r\n* gke nodepool: update README\r\n\r\n* net-cloudnat: fix router name when creating default router\r\n\r\n* fix variables used for address and router optional creation\r\n\r\n* vpn dynamic: fix README\r\n\r\n* modules/net-vpn-dynamic: fix router name output\r\n\r\n* modules/compute-vm: remove unused variable\r\n\r\n* modules/compute-vm-cos-coredns: initial import\r\n\r\n* Update foundations modules versions (#26)\r\n\r\n* update foundations modules versions\r\n\r\n* update Terraform version to v0.12.19 in CI test configuration\r\n\r\n* backport tfdoc from Ludo's branch (#27)\r\n\r\n* Update docs using tfdoc format (#28)\r\n\r\n* update README files\r\n\r\n* set all types on variables\r\n\r\n* foundations/environments: move log filter to a variable, use org for xpn by default\r\n\r\n* foundations/environments: do not use liens by default\r\n\r\n* modules/ntp-vpc: better shared_vpc_host variable description\r\n\r\n* modules/logging-sinks: initial version\r\n\r\n* modules/logging-sinks: streamline options in sinks variable\r\n\r\n* modules/compute-vm-cos-coredns: add support for additional files\r\n\r\n* modules/folders: rename from 'folder'\r\n\r\n* modules/logging-sinks: fix circular dependencies and improve variables\r\n\r\n* modules/project: remove extra variable\r\n\r\n* modules/bigquery: new module with dataset support only\r\n\r\n* foundations/environments: refactor using local modules\r\n\r\n* modules/bigquery: better variables, README description and example\r\n\r\n* modules: fix a few READMEs\r\n\r\nCo-authored-by: Julio Castillo <juliocc@gmail.com>\r\n\r\n* modules/net-vpc: README description and examples\r\n\r\n* modules/net-vpc: tweak README description and examples\r\n\r\n* modules/net-vpc: tweak README description and examples\r\n\r\n* modules/net-vpc-firewall: change tag-based rule default ranges, improve README examples and description\r\n\r\n* modules/compute-vm: README changes\r\n\r\n* modules/compute-vm: use an object for the service account variable, update README\r\n\r\n* modules/compute-vm: update README variables table\r\n\r\n* modules/compute-vm: add TODO list to README\r\n\r\n* modules/compute-vm: add TODO list to README\r\n\r\n* modules/compute-vm: add outputs for service account\r\n\r\n* modules/net-cloudnat: README\r\n\r\n* modules/net-cloudnat: README\r\n\r\n* modules/net-cloudnat: add router_create variable\r\n\r\n* modules/compute-vm: simplify service account variables\r\n\r\n* modules/net-vpn-dynamic: fix README example, use local secret for both empty string and null\r\n\r\n* modules/net-vpn-dynamic: improve README example\r\n\r\n* modules/gke-cluster: minimal README tweaks\r\n\r\n* modules/kms: fix ephemeral keys resource name\r\n\r\n* modules/iam-service-accounts: add storage roles\r\n\r\n* modules/gke-nodepool: fix node default scopes\r\n\r\n* New project variable to prevent deletion of default network (#32)\r\n\r\n* New project variable to prevent deletion of default network\r\n\r\nThis is a workaround to fix\r\nterraform-google-modules/cloud-foundation-fabric#31 while the GCP\r\nterraform provider is fixed\r\n\r\n* Add TODOs to remove workarounds in the project module\r\n\r\n* Fix Cloud Build files\r\n\r\n* modules/gke-nodepool: add monitoring scope to defaults\r\n\r\n* modules/iam-service-accounts: add support for IAM bindings onthe service accounts\r\n\r\n* playground module in sandbox, remove not ready modules\r\n\r\n* Fix ci configurations in development branch (#33)\r\n\r\n* try fixing ci confgurations\r\n\r\n* add exclusion match to ci boilerplate check\r\n\r\n* add skip boilerplate comment to compute-vm-cos-coredns template fragment\r\n\r\n* modules/gke-cluster: fix boilerplate in outputs\r\n\r\n* Simplify tests, re-enable CI\r\n\r\n* add instance group support to compute-vm, start tests refactoring\r\n\r\n* modules/compute-vm: group fixes, tests\r\n\r\n* modules/compute-vm: minimal test beautification\r\n\r\n* simplify top-level pytest fixture\r\n\r\n* modules/dns: tests and minor tweaks\r\n\r\n* fix missing boilerplate in tests\r\n\r\n* re-add requirements file to tests folder\r\n\r\n* re-enable tests in ci build configuration\r\n\r\n* Folder module tests and fixes (#38)\r\n\r\n* folder tests wip\r\n\r\n* modules/folders: tests and tweaks\r\n\r\n* update folders and compute-vm README files\r\n\r\n* modules/gcs: tests and minor tweaks\r\n\r\n* Create README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Added docker image for strongSwan\r\n\r\n* Add support for routes and tests to net-vpc module (#39)\r\n\r\n* modules/net-vpc: add routes (untested)\r\n\r\n* initial tests\r\n\r\n* modules/net-vpc: add test for flow logs\r\n\r\n* modules/net-vpc: split tests into two separate files\r\n\r\n* modules/net-vpc: routes test\r\n\r\n* modules/net-vpc: test routes\r\n\r\n* Add support for Terraform plugin cache in ci test build file (#40)\r\n\r\n* add Terraform plugin caching to test ci build configuration\r\n\r\n* fix mkdir in test build configuration\r\n\r\n* trigger test check\r\n\r\n* Refactor dynamic vpn configuration for on-prem-in-a-box module\r\n\r\n* Fix dynamic vpn for onprem-in-a-box module\r\n\r\n* Migrate Shared VPC example to local modules (#41)\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* validated, untested\r\n\r\n* modules/compute-vm: make service account email in locals resilient to destroy\r\n\r\n* modules/project: make project id output depend on iam roles\r\n\r\n* fixes\r\n\r\n* shared-vpc tweaks\r\n\r\n* update diagram\r\n\r\n* update README input output tables\r\n\r\n* modules/compute-vm: add service account IAM email output\r\n\r\n* move GKE service account roles at the project level, add GCE service account roles\r\n\r\n* update diagram and README\r\n\r\n* modules/project: add extra output for IAM-dependent project id\r\n\r\n* update modules READMEs\r\n\r\n* minor tweaks\r\n\r\n* modules/compute-vm: fix service account output\r\n\r\n* remove static address from NAT\r\n\r\n* fix container service agent binding dependency\r\n\r\n* rename shared vpc\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Add static vpn gw to on-prem-in-a-box module\r\n\r\n* Refactor hub and spoke to use new modules (#42)\r\n\r\n* modules/compute-vm: saner defaults for service account scopes\r\n\r\n* hub and spoke refactor, docs still missing\r\n\r\n* complete hub and spoke\r\n\r\n* Update README.md\r\n\r\n* Add toolbox docker container, fix gw routing to the internet\r\n\r\n* Add DNS Hybrid connectivity parameters\r\n\r\n* Fix onprem dns zone for the static vpn configuration\r\n\r\n* Added readme.md for on-prem module\r\n\r\n* Add new line at the end of the files\r\n\r\n* Add boilerplate for cloudbuild config files\r\n\r\n* fix boilerplate in strongswan shell script\r\n\r\n* Update README.md\r\n\r\n* include missing file to fix merge conflict\r\n\r\n* remove missing file to fix merge conflict\r\n\r\n* include missing file to fix merge conflict (again)\r\n\r\n* remove content from spurious file used to avoid merge conflicts\r\n\r\n* Add net-vpc-peering module\r\n\r\n* Initial commit for hub-and-spoke-peering infrastructure example\r\n\r\n* Fix typos in infrastructure/ READMEs\r\n\r\n* remove stale file\r\n\r\n* use larger resolution version of hub and spoke diagram\r\n\r\n* Update README.md\r\n\r\n* Update hub-and-spoke-peerings example to use internal modules\r\n\r\n* Add initial project tests (#46)\r\n\r\n* modules/project: make prefix optional\r\n\r\n* initial project module tests\r\n\r\n* modules/project: use null for unset parent\r\n\r\n* modules/dns: backport PR6 from the CFT dns module\r\n\r\n* Add testing resources including on-prem-in-a-box to hub-and-spoke-peerings example\r\n\r\n* Fix firewall rules to allow connectivity, switch to custom route advertisement for onprem -> spokes connectivity\r\n\r\n* Move locals out of main.tf\r\n\r\n* remove ssh tag from compute-vm variable default\r\n\r\n* Add ssh tag to the test vms\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Hub and spoke peering changes (#48)\r\n\r\n* rename hub-and-spoke-vpn\r\n\r\n* add ssh tag to shared-vpc-gke instance\r\n\r\n* rename and rework hub and spoke peering\r\n\r\n* fix test requirements\r\n\r\n* align hub and spoke peering with module contents\r\n\r\n* diagram\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* minimal fixes to onprem examples variable files\r\n\r\n* onprem example stub, missing DNS zones and private.googleapis records onprem\r\n\r\n* add missing boilerplate\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* infra/onprem: add test instance and minimal outputs\r\n\r\n* add DNS modules and resource\r\n\r\n* infra/onprem: diagram and initial README\r\n\r\n* minor changes to onprem module and example (#49)\r\n\r\n* update toolbox image\r\n\r\n* infra/onprem: add zone for private access, add metadata domain to onprem dns\r\n\r\n* infra/onprem: onnprem service account, add testing procedure in README\r\n\r\n* Update README.md\r\n\r\n* infra/onprem: remove extra variable\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* infra/onprem: rename forwarder address variable\r\n\r\n* Update README:\r\n\r\nAdded explicit --tunnel-through-iap for gcloud compute ssh commands\r\n\r\n* Update top-level and section READMEs (#50)\r\n\r\n* top-level README WIP\r\n\r\n* rewrite top-level README\r\n\r\n* change top-level README title\r\n\r\n* remove initial quote in top-level README\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* foundations README\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* add experimental scheduled cloud function module\r\n\r\n* scheduled cloud function module: allow disabling schedule\r\n\r\n* business-units foundation example (#52)\r\n\r\n* Added folder-units module.\r\n\r\n* Business units example update (WIP)\r\n\r\n* Update all BU modules to internal ones\r\n\r\n* Refactoring business-units example, add billing and org IAM handling\r\n\r\n* update projects tests for new iam additive naming\r\n\r\n* update project README for new iam additive naming\r\n\r\n* streamline bu example and module (#53)\r\n\r\nCo-authored-by: Ludovico Magnocavallo <ludomagno@google.com>\r\n\r\n* align net-vpn-ha interface with the other vpn modules\r\n\r\n* update module README files\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Create CHANGELOG.md\r\n\r\n* Refactor COS module to be generic (#51)\r\n\r\n* Create generic COS module and update CoreDNS module to use it\r\n\r\n* Update compute-vm-cos README\r\n\r\n* Fix COS README\r\n\r\n* Update COS example\r\n\r\n* Skip boilerplate check for COS file template\r\n\r\n* Make COS module more generic and provide preset configurations\r\n\r\n* Update COS module documentation\r\n\r\n* tfdoc: add support for multiple variables files\r\n\r\n* compute-vm: split boot disk in separate variable file for cos module support\r\n\r\n* Streamline cos modules (#54)\r\n\r\n* tfdoc: fix bug in last commit\r\n\r\n* compute-vm: add support for user-data\r\n\r\n* compute-vm: restore noncos variable split\r\n\r\n* remove compute-vm-cos-coredns\r\n\r\n* compute-vm: revert to original state\r\n\r\n* cos-container/coredns\r\n\r\n* fix variables mess\r\n\r\n* cos/coredns fixes\r\n\r\n* cos/mysql\r\n\r\n* remove stale compute-vm-cos module\r\n\r\n* add test instance to cos modules\r\n\r\n* tfdoc: add support for multiple output files\r\n\r\n* cos: add initial READMEs\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* add test apply fixture\r\n\r\n* cos-coredns: tested\r\n\r\n* Update README.md\r\n\r\n* Fix typo\r\n\r\n* cos-coredns: refactor README\r\n\r\n* Update README.md\r\n\r\n* test yaml validity in cos modules tests\r\n\r\n* cos mysql tests\r\n\r\n* cos mysql: refactor and test (disk tests missing)\r\n\r\n* onprem: fix Coredns\r\n\r\n* cos mysql: additional disk working\r\n\r\n* cos modules: fix instance disks for no instance\r\n\r\n* update some modules READMEs\r\n\r\n* update some modules READMEs\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* add simple tests for foundations/environments\r\n\r\n* change default for org id in foundations/environments to avoid errors when none is specified\r\n\r\n* fix null/empty organization id in foundations/environments\r\n\r\n* fix errors when destroying on empty state in foundations/environments\r\n\r\n* fundations/bu: fix errors when destroying with empty state\r\n\r\n* modules/gcs: make outputs resilient on destroy with empty state\r\n\r\n* modules/folders: make outputs resilient on destroy with empty state\r\n\r\n* switch organization_id variable to long form in foundations/bu and modules/folders-unit\r\n\r\n* Update README.md\r\n\r\n* infra/shared-vpc: remove duplicate tag attribute from bastion\r\n\r\nCo-authored-by: Aleksandr Averbukh <averbukh@google.com>\r\nCo-authored-by: Julio Castillo <juliocc@gmail.com>\r\nCo-authored-by: Julio Castillo <jccb@google.com>", "date": "2020-04-03 14:06:48+02:00", "modified_files": [".terraformrc", "cloudbuild.lint.yaml", "cloudbuild.test.yaml", "check_boilerplate.py", "CHANGELOG.md", "README.md", "Dockerfile", "README.md", "cloudbuild.yaml", "entrypoint.sh", "ipsec-vti.sh", "Dockerfile", "README.md", "cloudbuild.yaml", "entrypoint.sh", "README.md", "README.md", "backend.tf.sample", "main.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "outputs.tf", "providers.tf", "terraform.tfvars.sample", "variables.tf", "versions.tf", "README.md", "locals.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "README.md", "backend.tf.sample", "diagram.png", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "backend.tf.sample", "diagram.png", "main.tf", "outputs.tf", "provider.tf", "variables.tf", "README.md", "diagram.png", "main.tf", "outputs.tf", "terraform.tfvars.sample", "test-resources.tf", "variables.tf", "README.md", "Corefile", "diagram.png", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "backend.tf.sample", "diagram.gcpdraw", "diagram.png", "main.tf", "outputs.tf", "variables.tf", "versions.tf", ".terraform.tfstate.lock.info", "README.md", "diagram.png", "locals.tf", "main.tf", "outputs.tf", "test-resources.tf", "variables.tf", "README.md", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "instance_group.tf", "main.tf", "outputs.tf", "variables.tf", ".gitignore", "README.md", "Corefile", "Corefile-hosts", "README.md", "cloud-config.yaml", "instance.tf", "main.tf", "outputs-instance.tf", "outputs.tf", "variables-instance.tf", "variables.tf", "instance.tf", ".gitignore", "README.md", "cloud-config.yaml", "instance.tf", "main.tf", "outputs-instance.tf", "outputs.tf", "variables-instance.tf", "variables.tf", "outputs-instance.tf", "variables-instance.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "locals.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "Corefile", "dynamic-vpn-gw-cloud-init.yaml", "static-vpn-gw-cloud-init.yaml", "main.tf", "outputs.tf", "variables.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "__init__.py", "conftest.py", "__init__.py", "terraform.tfvars", "test_folders.py", "test_outputs.py", "test_projects.py", "test_service_accounts.py", "__init__.py", "conftest.py", "main.tf", "variables.tf", "terraform.tfvars", "test_outputs.py", "test_plan.py", "test_projects.py", "test_service_accounts.py", "terraform.tfvars", "test_cloud_routers.py", "test_firewall.py", "test_outputs.py", "test_vpns.py", "conftest.py", "terraform.tfvars", "test_outputs.py", "test_svpc_resources.py", "__init__.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "test_plan_group.py", "__init__.py", "main.tf", "outputs.tf", "variables.tf", "test_apply.py", "__init__.py", "main.tf", "outputs.tf", "variables.tf", "test_apply.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "test_plan_subnets.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "requirements.txt", "tfdoc.py"]}, {"id": "036b9ea95085163313f70cefbaf85e4e07a7543c", "msg": "Obey var.iam_billing_config.grant (#113)\n\n* Update main.tf\r\n\r\n* Update main.tf", "date": "2020-07-15 13:18:42+02:00", "modified_files": ["main.tf"]}, {"id": "3a8a040ff3efcec38c423d5249625ed2d87ab261", "msg": "Billing budget module", "date": "2021-08-12 19:43:09+02:00", "modified_files": ["README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "__init__.py", "main.tf", "variables.tf", "test_plan.py"]}, {"id": "5c8557a29d0ed8504c51a076247b08bf709f8b69", "msg": "Paying tributes to the linting gods", "date": "2021-12-07 13:29:01+01:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/laurijssen/tform_azure.git", "commits": [{"id": "6f802267c2d43803eebbdb383da9e3815c1c68bd", "msg": "northeurope center mo cheapo", "date": "2022-02-06 09:59:41+01:00", "modified_files": ["vars.tf"]}]}, {"name": "https://github.com/vtog/aws-container-lab.git", "commits": [{"id": "e1587480bc3ac82b1db18f26f864358a4311f0b7", "msg": "added single nic payg bigip", "date": "2019-04-19 10:39:14-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/dotmesh-io/dotscience-tf.git", "commits": [{"id": "7c6e1c2260c80d3a1ed2abf1274d19b948aa510a", "msg": "more defaults, control costs & document them", "date": "2019-12-29 20:34:48+00:00", "modified_files": ["dotscience-hub.tf", "eks.tf", "variables.tf"]}]}, {"name": "https://github.com/AwakeningSV/live-infrastructure.git", "commits": [{"id": "43bba3db97631d8730160950395fde42793adbc2", "msg": "Migrate infrastructure to Microsoft Azure.\n\nMicrosoft offers $5,000/year in credits to non-profit organizations,\nincluding churches. This allows for us to eliminate all costs with\nrunning our live video system a few hours a week.\n\nhttps://www.microsoft.com/en-us/philanthropies/product-donations/products/azure\n\nDeployments take about 2-3 minutes, which is considerably worse than\nDigitalOcean which only took about 20-30 seconds. Teardowns are also\nworse: 10+ minutes instead of under 1 minute. The verbose specification\ncompared to DigitalOcean is also a bit more complex to understand.\nHowever, the price is right. Thanks Microsoft!", "date": "2016-12-10 13:14:41-08:00", "modified_files": ["README.md", "av.tf", "variables.tf"]}]}, {"name": "https://github.com/hryze/kakeibo-app-terraform.git", "commits": [{"id": "74236c5fac9675919b4d77c7b92101ff87170104", "msg": "Move the terraform directory from https://github.com/paypay3/kakeibo-app-api", "date": "2020-11-06 18:21:08+09:00", "modified_files": ["tfnotify.yaml", "terraform-apply.yaml", "terraform-test.yaml", ".gitignore", "acm.tf", "backend.tf", "cloudfront.tf", "ecr.tf", "eks.tf", "elasticache.tf", "iam.tf", "providers.tf", "rds.tf", "route53.tf", "s3.tf", "secrets_manager.tf", "security_group.tf", "variables.tf", "versions.tf", "vpc.tf"]}]}, {"name": "https://github.com/cloud-native-toolkit/terraform-ibm-container-platform.git", "commits": [{"id": "525668b73bc92307af0ab1dd34ca9ec4b3bfe352", "msg": "Adds config block to support ocp 4.6 (#46)\n\n* Adds config block to main-0-setup.tf to support provisioning ocp 4.6\r\n* Updates notify workflow\r\n    - Uses peter-evans/repository-dispatch@v1\r\n    - Sends repo, ref, and sha in client-payload", "date": "2020-12-09 09:46:56-06:00", "modified_files": ["notify.yaml", "main-0-setup.tf"]}]}, {"name": "https://github.com/plxis/eng-ci.git", "commits": [{"id": "b795561bc0909fc942aa847cc952dad2091a6ae2", "msg": "Add toxic host into standard eng-ci; removed internal ssh load balance for proxy to reduce monthly expenses", "date": "2018-02-04 16:38:54-05:00", "modified_files": ["main.tf", "ivy.tf", "variables.tf", "proxy.tf", "proxy-bootstrap.tpl", "variables.tf", "toxic-bootstrap.tpl", "toxic.tf", "variables.tf", "upsource.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/testorganizationyay/tf-inf-code.git", "commits": [{"id": "4d282a90415f1c36749e6f2f05c9d730bbf4db6a", "msg": "Remove billing account variable", "date": "2019-08-07 11:29:00+03:00", "modified_files": ["project.tf"]}, {"id": "b0fcaa6ad022a3121dd04d81de622d16b7c0d4e8", "msg": "Add billing account to project resource", "date": "2019-09-26 12:46:18+03:00", "modified_files": ["project.tf"]}]}, {"name": "https://github.com/my-gcp-org/terraform-google-iam.git", "commits": [{"id": "a69a29b5c22131175f4ff4aae358c0fdc1078fff", "msg": "Add billing_account_iam module terraform-google-modules/terraform-google-iam#52", "date": "2019-11-28 14:20:08+01:00", "modified_files": ["README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "c7102045296449fb33cdedf744cb9859ba831124", "msg": "Adding tests for billing-iam module", "date": "2020-02-10 17:01:40-06:00", "modified_files": [".kitchen.yml", "Makefile", "main.tf", "outputs.tf", "variables.tf", "billing-iam.rb", "inspec.yml", "iam.tf", "variables.tf"]}, {"id": "2b082fa2f89769a158cda8a211b7239a0489fc39", "msg": "Fixing roles for billing-iam", "date": "2020-02-10 18:09:41-06:00", "modified_files": ["iam.tf"]}, {"id": "23d6c0dde8b6cc583b7190ac028c4c13a34246f6", "msg": "Fixing billing account resource", "date": "2020-02-11 10:07:54-06:00", "modified_files": ["iam.tf"]}, {"id": "058181e11a9b694f9f2b493e201db27a4cadc51c", "msg": "Added billing_test_account_id variable in setup outputs.", "date": "2020-02-11 14:28:30-06:00", "modified_files": ["outputs.tf"]}, {"id": "ed6555ce0361dd7d351cf9be2275ec348dea91ed", "msg": "Fixed test for billing-iam", "date": "2020-02-14 15:07:54-06:00", "modified_files": ["outputs.tf", "billing-iam.rb", "inspec.yml"]}]}, {"name": "https://github.com/hallatech/terraform.git", "commits": [{"id": "1921e4aed30a3f18d038d55818fc16670e165548", "msg": "basic setup with infracost", "date": "2020-11-05 22:36:27+01:00", "modified_files": ["README.md", "README.md", "vpc.tf"]}, {"id": "d0adcc16c7db3c143b9a714079bc153ac14bb9de", "msg": "add s3 bucket for cost test", "date": "2020-11-05 23:07:24+01:00", "modified_files": ["README.md", "dev.auto.tfvars", "environment.tf", "main.tf", "provider.tf", "README.md", "main.tf", "inputs.tf", "s3.tf"]}]}, {"name": "https://github.com/alphagov/govuk-terraform-provisioning.git", "commits": [{"id": "ed67711a54ca65473c9c7b788161d680914ef1c7", "msg": "sets up S3 bucket for transition logs\n\nWe want the lowest-cost storage class for these logs as they will\nseldomly be accessed, such as in a DR scenario. Unfortunately\nterraform does not currently support lifecycle configuration, so\nwe will need to manage this aspect manually.", "date": "2016-04-14 14:04:01+01:00", "modified_files": ["storage_and_access.tf"]}, {"id": "ac105ab0a5ae38fbf69167e072f8970a4a61c3e8", "msg": "Enable lifecycles on MongoDB backup buckets\n\nWe have two different buckets:\n\n - The bucket which contains full backups taken every 15 minutes expires\n   after 7 days\n - The bucket which contains daily backups moves objects into cheaper\n   storage after 30 then 60 days, and then expires after 90 days", "date": "2016-07-18 16:06:47+01:00", "modified_files": ["storage_and_access.tf"]}]}, {"name": "https://github.com/StatCan/terraform-statcan-aaw-platform.git", "commits": [{"id": "0c3729f119e55f46c04758e1b29ff5c6e50978a6", "msg": "feat(core-kubecost): allow for a nodeselector to be passed to prometheus.", "date": "2022-01-06 17:16:57+00:00", "modified_files": ["01-core-platform.tf", "variables.tf"]}, {"id": "2e512e303e71492e21cef0b38e4bbe5414e8a9e3", "msg": "fix(kubecost-prometheus): add interpolation to run expected functions.", "date": "2022-01-06 12:52:54-05:00", "modified_files": ["01-core-platform.tf"]}]}, {"name": "https://github.com/dvsa/motr-terraform.git", "commits": [{"id": "28edafadff7bf6ec1ee44281c72fb8856868ce26", "msg": "PING (WarmUp) metric  (#34)\n\n* monitorring checks cold start\r\n\r\n* monitorring checks cold start\r\n\r\n* monitorring checks cold start\r\n\r\n* invocation of alias rather than fuction\r\n\r\n* configure payload\r\n\r\n* configure payload\r\n\r\n* configure payload\r\n\r\n* update", "date": "2017-03-10 16:25:07+00:00", "modified_files": ["cloudwatch.tf", "lambda.tf"]}]}, {"name": "https://github.com/innovationnorway/terraform-azurerm-web-app.git", "commits": [{"id": "680104c1afff8968f93f12f8672551a5d9eb5403", "msg": "Added more defaults to web app and posibillity to configure some.", "date": "2018-10-04 13:16:49+02:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/duckalini/my_first_terraform.git", "commits": [{"id": "4f7468469fb9a3756ea032cedcd905d9a8b24bea", "msg": "Add a finance role for checking expenses", "date": "2018-11-10 19:50:16+13:00", "modified_files": ["main.tf", "README.md", "billing-role.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-aws-glue-crawler.git", "commits": [{"id": "484b85587d32f2f2a6d54ffe16d5c759841961f8", "msg": "costs", "date": "2021-05-22 23:00:53+01:00", "modified_files": ["compare.yml", "main.yml", "pull_request.yml", ".markdownlint.json", "README.md", "aws_glue_crawler.glue_crawler.tf", "aws_glue_data_catalog_encryption_settings.examplea.tf", "aws_glue_job.example.tf", "aws_glue_security_configuration.example.tf", "aws_iam_role.glue_crawler.tf", "aws_kms_key.glue.tf", "aws_s3_bucket.glue_target.tf", "examplea.auto.tfvars", "infracost-usage.yml", "module.glue.tf", "provider.aws.tf", "terraform.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/lirshindalman/terragoat1.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/GBergeret/micro-service-as-code.git", "commits": [{"id": "46f76d50b8569f450ce909e04f3c5fa81b97737a", "msg": "feat: Move from ELB to ALB\n\nUpdate project to use ALB in order to save money as ALB are cheaper than\nELB. Also Classic Load Balancers are deprecated.", "date": "2018-12-04 09:35:53+00:00", "modified_files": ["ec2.tf", "elb.tf", "lb.tf", "outputs.tf"]}]}, {"name": "https://github.com/femnad/geheim.git", "commits": [{"id": "e073c7ee792bdd88feabc77e1771084662262f98", "msg": "preemptible instances for cheapskating", "date": "2020-08-08 18:13:15+01:00", "modified_files": ["geheim-ephemeral.tf"]}]}, {"name": "https://github.com/andreas-prinz/gcp-terraform-google-lb.git", "commits": [{"id": "f640695cd972cb3ba496582c88acc136b13fdf0c", "msg": "feat: Add list variable to override source_ips for LB (#26)\n\n* Use list variable to set source_ips for LB\r\n\r\nInstead of hardcoding source_ip ranges into the to module, make use of\r\nvariable.\r\n\r\nCreate a new variable with name `allowed_ips` with the default set to\r\n`[0.0.0.0/0]`.  This change allows the user to restrict access to\r\nexternal load balancer from only from a small set of ip addresses.\r\n\r\n* Add strict type constraint on allowed_ips var\r\n\r\nRestrict `allowed_ips` values to list of strings.\r\n\r\nCo-authored-by: Amit Kulkarni <amitk@wepay.com>\r\nCo-authored-by: Morgante Pell <morgantep@google.com>", "date": "2020-04-06 21:46:34-07:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/upalepu/iac.git", "commits": [{"id": "6f091141b0489d8738a0824e9f8e5d559f6f024a", "msg": "Added comments to the bkendcp and bkendcfg rersources. Just a reminder.\nAlso added a parameter \"parm_k8sproj\" to determine where to copy the\nbackend cfg file.  Choices are kubernetes or k8sgossip. These are two\nprojects in the iac folder. the k8sgossip project will create a cluster\nwithout a domain name. it uses the cluster.k8s.local domain. So useful\nfor people who don't want to pay for a domain name in AWS. route53.", "date": "2018-07-05 15:38:19-07:00", "modified_files": ["iacec2.tf"]}]}, {"name": "https://github.com/vishalbhogate/terraform-aws-billing-role-default.git", "commits": [{"id": "dc52be474abe18ae36f73d4194ad7c57bf49f64d", "msg": "Billing Role", "date": "2020-06-02 12:16:08+10:00", "modified_files": ["_data.tf", "_outputs.tf", "_variable.tf", "iam-role-billing.tf"]}]}, {"name": "https://github.com/aaaaasam/azure.git", "commits": [{"id": "c7bc0ce6f3fcaffcbbe7753f1a9d8437809bc167", "msg": "using az account to get subscription_id and changing to use a smaller VM size to save cost.", "date": "2021-05-08 13:38:51+08:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/rails-on-services/terraform-data-metabase.git", "commits": [{"id": "4ab6ad3d6443017c5b28aff6a6705f79b4f0efa2", "msg": "Backend payload. Rename attribute to attributes", "date": "2020-01-08 11:09:05+08:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/pbaskar85/pbaskar85.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/Hapag-Lloyd/terraform-aws-bastion-host-ssm.git", "commits": [{"id": "516075e2987bdd1063f22768d451c1c1eb647175", "msg": "feat: add spot instances to save costs (#41)", "date": "2022-03-26 11:33:30+01:00", "modified_files": ["README.md", "autoscaling.tf", "main.tf", "README.md", "main.tf", "provider.tf", "main.tf", "variables.tf"]}, {"id": "840ed0938bea8867caba921446b8a77a2f1c9e7d", "msg": "docs: add cost estimation based on 1.9.1 (#43)", "date": "2022-03-26 11:49:27+01:00", "modified_files": ["README.md", "main.tf"]}]}, {"name": "https://github.com/cts-terraform-modules/terraform-google-log-export.git", "commits": [{"id": "00830aa5ec18d2ee80a53c7ce7230012029cbe9d", "msg": "Introduce kitchen-terraform tests\n\nThis commit includes all changes needed to implement kitchen-terraform\ntests for the log-exports module. Tests are structured exactly the same\nas examples: folders for each of the destinations, and subfolders for\neach log sink level that's possible for each destination (with\nbilling_account as an exception - more on that later). Each test fixture\nfunctions independently and relies upon environment variables that are\nset within `test/ci_integration.sh` (environment variables for the SA\nkey json, project ID, and the parent resource\nproject/folder/org/billing_account). Like all the other CFT modules,\ntests are invoked based on make targets from `Makefile`, and there are\ndedicated targets for testing from the CFT Docker container as well as\ndirectly from your laptop/machine.\n\nA test fixture called `computed_values` has also been provided to\nspecifically test issue #10 of the log-export module. This test spins up\na project on the fly and passes that computed project ID to the\nlog-export module to ensure that the module can handle computed values.\n\nTests for the billing account level log sinks are not provided within this\ncommit and will be provided in a later commit/PR.", "date": "2019-03-26 08:31:01-07:00", "modified_files": [".kitchen.yml", "CHANGELOG.md", "Gemfile", "Makefile", "README.md", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "README.md", "main.tf", "README.md", "main.tf", "README.md", "main.tf", "main.tf", "README.md", "main.tf", "README.md", "main.tf", "README.md", "main.tf", "README.md", "main.tf", "README.md", "README.md", "README.md", "ci_integration.sh", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "gcloud.rb", "gcp.rb", "inspec.yml", "gcloud.rb", "gcp.rb", "inspec.yml", "gcp.rb", "inspec.yml", "gcp.rb", "inspec.yml", "gcloud.rb", "gcp.rb", "inspec.yml", "gcloud.rb", "gcp.rb", "inspec.yml", "gcloud.rb", "gcp.rb", "inspec.yml", "gcloud.rb", "gcp.rb", "inspec.yml", "gcloud.rb", "gcp.rb", "inspec.yml", "gcp.rb", "inspec.yml"]}]}, {"name": "https://github.com/fitzroyacademy/infrastructure.git", "commits": [{"id": "3ec16f3ac1b75b67bf784d998cd7c7dff0fcd7ec", "msg": "add cost tracking tags, use tags instead of cross-module references", "date": "2019-12-15 20:47:24-05:00", "modified_files": ["main.tf", "main.tf", "main.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/companieshouse/ewf-terraform.git", "commits": [{"id": "86c53c69be363f1ba40294187d4132d05ca1433d", "msg": "converting to allow list for public load balancer, adding smartpay ranges for non-production", "date": "2021-03-09 08:53:41+00:00", "modified_files": ["alb-external.tf", "data.tf", "vars", "vars", "vars", "variables.tf"]}, {"id": "804c17cc3dfb38cf1c214a7dc74278fde956811d", "msg": "Add security group rules for CHS apps (GOV.UK Pay)", "date": "2021-08-17 14:15:04+01:00", "modified_files": ["alb-internal.tf", "data.tf", "locals.tf"]}]}, {"name": "https://github.com/sassoftware/viya4-iac-gcp.git", "commits": [{"id": "621a799b69bafbb3c8867fca717e724f9be33402", "msg": "working on low-cost sample, found vm items needing adjusting. (#101)", "date": "2021-06-23 10:22:27-04:00", "modified_files": ["sample-input-byo.tfvars", "sample-input-defaults.tfvars", "sample-input-ha.tfvars", "sample-input-minimal.tfvars", "sample-input.tfvars", "variables.tf", "outputs.tf", "variables.tf", "vm.tf"]}]}, {"name": "https://github.com/ExpediaGroup/apiary-data-lake.git", "commits": [{"id": "47e62f2fc73a96611606cd619c084d1ded9d844d", "msg": "Feature/storage cost optimization (#106)\n\n* Adding lifecycle policy for s3 data buckets\r\n\r\nMaking No of days in Lifecycle policy configurable\r\n\r\nMaking storage classes configurable at schema level\r\n\r\n* PR comments\r\n\r\n* PR comments\r\n\r\n* PR Comments\r\n\r\n* PR Comments\r\n\r\n* PR Comments\r\n\r\n* fix to run terraform when apiary_managed_schemas is empty", "date": "2019-05-23 12:20:42-07:00", "modified_files": ["CHANGELOG.md", "VARIABLES.md", "common.tf", "s3.tf", "sns.tf", "templates.tf", "variables.tf"]}]}, {"name": "https://github.com/mjedrasz/ttd-terraform-v2.git", "commits": [{"id": "4abdd471d84c1458fe339e113a6812513f0fe7ad", "msg": "dynamodb billing mode", "date": "2021-02-03 20:11:18+01:00", "modified_files": ["main.tf", "vars.tf"]}]}, {"name": "https://github.com/nmaupu/auto-gcp.git", "commits": [{"id": "ef1df1044df317c78987f7f8398b4e45f5a3ee0a", "msg": "GKE master are now on only one zone (billing)", "date": "2020-07-01 18:31:06+02:00", "modified_files": ["Makefile", "deployment.yaml", "kube-ops-view.yaml", "deployment.yaml", "tiller-rbac.yaml", "deployment.yaml", "main.tf", "vars.tf", "gke.tf", "terraform.tfvars"]}]}, {"name": "https://github.com/crielly/bless.git", "commits": [{"id": "bbb6637ecd3b8fc7e50d6d0264c9f2e69e382f85", "msg": "add the billing group", "date": "2017-06-09 22:34:04-04:00", "modified_files": ["groups.tf"]}]}, {"name": "https://github.com/jenkins-infra/aws.git", "commits": [{"id": "4a9e2c05092acca34f0608394638776c75496a99", "msg": "feat: increase cik8s worker nodes sizing to m5a.4xlarge\n\n- Goal: comply with https://github.com/jenkins-infra/jenkins-infra/pull/1872\n- m5a.4xlarge\tonly costs 2x more,  for 16 vCPUs (AMD EPYC),\t64 GiB\n- That would allow ~3-4 pods per machine (let's consider 3)\n- Max of 50 machines: that should increase containers cap. to 150\n\nSigned-off-by: Damien Duportal <damien.duportal@gmail.com>", "date": "2021-10-01 17:48:44+02:00", "modified_files": ["eks-cluster.tf"]}]}, {"name": "https://github.com/DataBiosphere/gitlab-in-google.git", "commits": [{"id": "305fd6002abe5e10293cd82e252440870cef9839", "msg": "Add billing tags.", "date": "2020-06-08 14:09:56-04:00", "modified_files": ["environment", "build_deploy_config.py", "main.tf", "main.tf"]}]}, {"name": "https://github.com/eddiez0719/jenkins-ecs-terraform.git", "commits": [{"id": "be44304f0d0e484500fb4f4e6dd1e7718398424c", "msg": "feature/bill", "date": "2021-02-20 22:08:34+11:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "83338e6692826c1c605fc5d277fcf20c6b6fe9fb", "msg": "feature/bill - format", "date": "2021-02-20 22:13:59+11:00", "modified_files": [".gitignore", "main.tf", "variables.tf", "versions.tf"]}, {"id": "94f81931e1a598bdf8a32537a9458a804fe1d75c", "msg": "feature/bill - fix the hard path", "date": "2021-02-20 22:25:48+11:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/rbabyuk/terra.git", "commits": [{"id": "beae899804779adf914c08f290c5d71b542c9ed1", "msg": "sets 'micro' VM profile to minimize costs", "date": "2021-05-24 16:11:41+03:00", "modified_files": ["dev.auto.tfvars", "prod.auto.tfvars"]}]}, {"name": "https://github.com/vtirumani/terragoat-bc-test.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/jonpulsifer/cloudlab.git", "commits": [{"id": "b08054e4789a59917682ad57cc73053d5f157ff0", "msg": "org policy\n\nSigned-off-by: Jonathan Pulsifer <jonathan@moonpay.com>", "date": "2021-11-16 17:11:54-04:00", "modified_files": [".terraform.lock.hcl", "organization-iam.tf", "organization-policy.tf", "versions.tf"]}, {"id": "f578fb9b52b53ba9b7ffbe26d638b03c2efa6547", "msg": "terraform fmt\n\nSigned-off-by: Jonathan Pulsifer <jonathan@moonpay.com>", "date": "2021-11-16 17:13:04-04:00", "modified_files": ["organization-policy.tf"]}, {"id": "a590a1cf8618e45e4621b0b6c476ca856370150a", "msg": "default deny apis\n\nSigned-off-by: Jonathan Pulsifer <jonathan@moonpay.com>", "date": "2021-11-16 17:20:16-04:00", "modified_files": ["organization-policy.tf"]}, {"id": "4f424fab547e472e10b820fdfd4c0beeab178be2", "msg": "bump tf\n\nSigned-off-by: Jonathan Pulsifer <jonathan@moonpay.com>", "date": "2021-11-17 16:28:33-04:00", "modified_files": [".terraform.lock.hcl", "kms.tf", "policy.tf", "versions.tf", ".terraform.lock.hcl", "services.tf", "versions.tf", ".terraform.lock.hcl", "storage.tf", "versions.tf", "organization-policy.tf", "versions.tf"]}]}, {"name": "https://github.com/scaffoldly-demo/scaffoldly-bootstrap.git", "commits": [{"id": "39705078fe0d60a118afdac4474a7d268e9d9be1", "msg": "Delete aws-serverless-api-payments-sls-rest-api-github.tf", "date": "2022-03-21 20:14:37-07:00", "modified_files": ["aws-serverless-api-payments-sls-rest-api-github.tf"]}, {"id": "87e85aefa6c97089377436b741ec8ca33cce7fc0", "msg": "Delete aws-serverless-api-payments-sls-rest-api.tf", "date": "2022-03-21 20:14:48-07:00", "modified_files": ["aws-serverless-api-payments-sls-rest-api.tf"]}]}, {"name": "https://github.com/utilitywarehouse/system-terraform-modules.git", "commits": [{"id": "f3ae661d51fc8459173ba2eafeeda1cf5c846adb", "msg": "Only set rules if they are enabled\n\nThis complicates the code a bit but reduces confusion for end users,\nthat have less changes to pay attention to and review.", "date": "2022-01-24 12:52:05+01:00", "modified_files": ["bucket.tf"]}]}, {"name": "https://github.com/ministryofjustice/hmpps-delius-core-terraform.git", "commits": [{"id": "6e25b2cfb1cb80fd45ab6627a04e52735bb2fb5e", "msg": "ALS-2957 Set default placement strategy to AZ-balanced bin-pack\nto save on EC2 costs while maintaining service reliability/resilience.", "date": "2021-08-03 19:36:37+01:00", "modified_files": ["ecs.tf", "variables.tf"]}]}, {"name": "https://github.com/wellcomecollection/goobi-infrastructure.git", "commits": [{"id": "271bf02f91bfe5e8fc7ea9f94bfe56fd49a8d8e0", "msg": "Add a VPC endpoint for S3\n\nThe lack of any VPC endpoints is a non-trivial cost \u2013 about $400 a month\nin managed NAT Gateway, and that was before anybody started using\nArchivematica for serious work.\n\nThis change adds an S3 VPC endpoint to the workflow and workflow-stage\nVPC, which should dramatically cut those costs.\n\nI haven't set up other endpoints yet because I'm not sure what other\nservices we're using; I'm guessing S3 is probably the bulk of the load.", "date": "2020-07-16 09:36:58+01:00", "modified_files": ["vpc_endpoints.tf"]}]}, {"name": "https://github.com/Leonard-Ta/Sample-Security-service-Terraform.git", "commits": [{"id": "c16481a84d5823b65ce96bd811a265222385b43b", "msg": "Reduced preset variables for better cost optimization", "date": "2020-01-22 21:45:52-05:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/git0510/tf-repo.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/dwp/dataworks-aws-bgdc-interface.git", "commits": [{"id": "656b4cec329500d80104316e9104d20741d6831b", "msg": "Add BGDC cost code tag (#14)", "date": "2021-01-14 12:40:45+00:00", "modified_files": ["cluster.yaml.tpl", "terraform.tf.j2"]}]}, {"name": "https://github.com/cqa01/tf.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/portefaix/portefaix.git", "commits": [{"id": "37e7b2af187d827d0b59f902b7692a2063ba5c1f", "msg": "Refactoring infrastructure code for Alicloud using Terraform Cloud and Github Actions (#1541)\n\n* Add: Configure Terraform Cloud for Alicloud infra\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Add: Refactoring Alicloud VPC code\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Add: init Github Action for Alicloud\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Update: Alicloud Terraform Cloud configuration\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Add: Github Actions for Alicloud\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Add: NAT Gateway component\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Add: NAT Gateway component\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: NAT Gateway EIP\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: NAT Gateway EIP\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: NAT Gateway EIP\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: NAT Gateway EIP\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: module branch\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Update: Enhanced NAT Gateway\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Update: PayByLcu for internet charge type\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: vSwitchID for NAT Gateway\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Add: vswitch name\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Add: vswitch name\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Update: configure Elastic IP for NAT Gateway\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Update: NAT Gateway tags\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: NAT Gateway tags variable\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Add: NAT Gateway and Elastic IP\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: remove description\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: Outputs\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: NAT Gateway and associated Elastic IP\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: remove vpc_name\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: set Connection Type\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: isp variable\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Add: ACK on Alicloud\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Add: ACK on Alicloud\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: variables usage\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: Pod and Service CICR\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Update: new ACK module\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: cluster network type\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: default value for ssh\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: ACK with Terway\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Update: VPC Cidr\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Add: node pools\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: vpc cidrs\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Update: vpc cidr\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: surge type\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: instance types\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Add: ssh key pair component\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: key pair component\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>\r\n\r\n* Fix: key name value\r\n\r\nSigned-off-by: Nicolas Lamirault <nicolas.lamirault@gmail.com>", "date": "2022-01-12 18:27:56+01:00", "modified_files": ["tf-deploy-alicloud.yml", "tf-undeploy-alicloud.yml", "Makefile", ".terraform-version", "README.md", "ack.tf", "data.tf", "main.tf", "outputs.tf", "variables.tf", ".terraform-version", "README.md", "ack.tf", "backend.tf", "main.tf", "outputs.tf", "provider.tf", "staging.auto.tfvars", "variables.tf", ".terraform.lock.hcl", ".terraform-version", "README.md", "data.tf", "main.tf", "nat_gateway.tf", "outputs.tf", "variables.tf", ".terraform-version", "README.md", "backend.tf", "eip_natgateway.tf", "main.tf", "outputs.tf", "provider.tf", "staging.auto.tfvars", "variables.tf", ".terraform.lock.hcl", "nat_gateway.tf", ".terraform-version", "README.md", "key.tf", "main.tf", "outputs.tf", "variables.tf", ".terraform-version", "README.md", "backend.tf", "key.tf", "main.tf", "outputs.tf", "provider.tf", "staging.auto.tfvars", "variables.tf", ".terraform-version", "README.md", "data.tf", "main.tf", "nat_gateway.tf", "outputs.tf", "variables.tf", ".terraform-version", "README.md", "backend.tf", "main.tf", "nat_gateway.tf", "outputs.tf", "provider.tf", "staging.auto.tfvars", "variables.tf", ".terraform.lock.hcl", "staging.tfvars", "backend.tf", ".terraform-version", ".terraform.lock.hcl", "README.md", "staging.tfvars", "backend.tf", "client.tf", "data.tf", "main.tf", "outputs.tf", "provider.tf", "staging.tfvars", "variables.tf", "workspaces.tf", ".terraform-version", "README.md", "main.tf", "outputs.tf", "variables.tf", "vpc.tf", ".terraform-version", ".terraform.lock.hcl", "README.md", "backend.tf", "main.tf", "outputs.tf", "provider.tf", "staging.auto.tfvars", "variables.tf", "vpc.tf", ".terraform.lock.hcl", "staging.tfvars", "backend.tf"]}]}, {"name": "https://github.com/karim7262/IaC-AWS.git", "commits": [{"id": "fe331528238d9f11a439803e64c6b14a16951215", "msg": "low-cost sample file added. (#71)", "date": "2021-06-22 17:38:24-04:00", "modified_files": ["sample-input-minimal.tfvars", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/seanturner026/maido-terraform.git", "commits": [{"id": "4acd60b2bfb5dfc2bd83c002c6ceffe7df760544", "msg": "Added onboardPaymentMethod route", "date": "2022-01-10 13:55:49+13:00", "modified_files": [".terraform.lock.hcl", "cloudfront.tf", "cognito.tf", "data.tf", "putQueueCreateStripePaymentMethod.vtl", "putQueueCreateStripePaymentMethod.vtl", "schema.graphql", "lambda.tf", "locals.tf", "main.tf", "versions.tf"]}, {"id": "14d6f2f9d1d05e268e4dcb16db9ff8fabb56db12", "msg": "Added putStripePaymentMethod mutation and lambda function, added lambda resolvers.", "date": "2022-01-16 15:13:16+13:00", "modified_files": ["appsync.tf", "data.tf", "putCognitoUser.vtl", "putQueueCreateStripeCustomer.vtl", "putQueueCreateStripePaymentMethod.vtl", "putStripePaymentMethod.vtl", "putCognitoUser.vtl", "putStripePaymentMethod.vtl", "schema.graphql", "lambda.tf", "locals.tf"]}]}, {"name": "https://github.com/djam4/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/Azure/sap-automation.git", "commits": [{"id": "21eea3fa8fc368e0456ea18538764e8e600200b0", "msg": "Private preview (#146)\n\n* fix\r\n\r\n* Decrease the disk size\r\n\r\n* Update deploy/ansible/roles-db/4.0.2-hdb-hcmt/tasks/main.yaml\r\n\r\nCo-authored-by: Kimmo Forss <kimmo.forss@microsoft.com>\r\n\r\n* Update deploy/ansible/roles-db/4.0.2-hdb-hcmt/tasks/main.yaml\r\n\r\nCo-authored-by: Kimmo Forss <kimmo.forss@microsoft.com>\r\n\r\n* Update deploy/ansible/roles-db/4.0.2-hdb-hcmt/tasks/main.yaml\r\n\r\nCo-authored-by: Kimmo Forss <kimmo.forss@microsoft.com>\r\n\r\n* Update deploy/ansible/roles-db/4.0.2-hdb-hcmt/tasks/main.yaml\r\n\r\nCo-authored-by: Kimmo Forss <kimmo.forss@microsoft.com>\r\n\r\n* Update deploy/ansible/roles-db/4.0.2-hdb-hcmt/tasks/main.yaml\r\n\r\nCo-authored-by: Kimmo Forss <kimmo.forss@microsoft.com>\r\n\r\n* Update 10-remover-terraform.yaml\r\n\r\n* Update 10-remover-terraform.yaml\r\n\r\n* Update 10-remover-terraform.yaml\r\n\r\n* Update 11-remover-arm-fallback.yaml\r\n\r\n* Update 11-remover-arm-fallback.yaml\r\n\r\n* Add debug logs\r\n\r\n* recursion\r\n\r\n* Update 04-sap-software-download.yaml\r\n\r\n* Update 04-sap-software-download.yaml\r\n\r\n* Update 11-remover-arm-fallback.yaml\r\n\r\n* Pipeline updates\r\n\r\n* S41909SPS03_v0010ms\r\n\r\n* S41909SPS03_v0010ms in Pipelines\r\n\r\n* S41909SPS03_v0010ms\r\n\r\n* default true for our daily testing\r\n\r\n* IMDB_SERVER20_059_1-80002031.SAR\r\n\r\n* dependencies\r\n\r\n* de\u00fcendencies HANA_2_00_055_v0006ms\r\n\r\n* Rename S41909SPS03_v0009ms-app-inifile-param.j2 to S41909SPS03_v0010ms-app-inifile-param.j2\r\n\r\n* Rename S41909SPS03_v0009ms-dbload-inifile-param.j2 to S41909SPS03_v0010ms-dbload-inifile-param.j2\r\n\r\n* Rename S41909SPS03_v0009ms-ers-inifile-param.j2 to S41909SPS03_v0010ms-ers-inifile-param.j2\r\n\r\n* Rename S41909SPS03_v0009ms-pas-inifile-param.j2 to S41909SPS03_v0010ms-pas-inifile-param.j2\r\n\r\n* Rename S41909SPS03_v0009ms-scs-inifile-param.j2 to S41909SPS03_v0010ms-scs-inifile-param.j2\r\n\r\n* Rename S41909SPS03_v0009ms-scsha-inifile-param.j2 to S41909SPS03_v0010ms-scsha-inifile-param.j2\r\n\r\n* Rename S41909SPS03_v0009ms-web-inifile-param.j2 to S41909SPS03_v0010ms-web-inifile-param.j2\r\n\r\n* Update deploy/ansible/BOM-catalog/HANA_2_00_055_v0006ms/HANA_2_00_055_v0006ms.yaml\r\n\r\n* Pipeline updates for main branch\r\n\r\n* if statements\r\n\r\n* Update SWPM20SP10_latest.yaml\r\n\r\n* Update configure_deployer.sh\r\n\r\ncorrect the jq for metadata query on ln#432\r\n\r\n* Update configure_deployer.sh\r\n\r\nDon't need the headers from curl when querying IMDS, so silence the verbosity\r\n\r\n* Pipeline updates\r\n\r\n* Update configure_deployer.sh\r\n\r\n* fixes\r\n\r\n* tweaks\r\n\r\n* changes\r\n\r\n* tests\r\n\r\n* Corrected the PATH\r\n\r\n* BOM Updates\r\n\r\n* Add a ExtraParams variable\r\n\r\n* alignment\r\n\r\n* Pipeline updates\r\n\r\n* Update S41909SPS03_v0010ms.yaml\r\n\r\n* Update HANA_2_00_055_v0006ms.yaml\r\n\r\nUpdate dependent components\r\n\r\n* Artemis\r\n\r\n* Variable group naming\r\n\r\n* Update HCMT_v0001ms.yaml\r\n\r\n* Updates\r\n\r\n* Artemis\r\n\r\n* tests\r\n\r\n* Update HANA_2_00_055_v0006ms.yaml\r\n\r\n* scs lb logic\r\n\r\n* Artemis\r\n\r\n* anydb data updates\r\n\r\n* Updates\r\n\r\n* Updates\r\n\r\n* Misc fixes\r\n\r\n* Misc updates\r\n\r\n* Script updates (#68)\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\n\r\n* Artemis (#69)\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\n\r\n* Updates in preparation for Pipeline release (#73)\r\n\r\n* Change backup recovery location\r\n\r\n* Artemis\r\n\r\n* Artemis\r\n\r\n* Instance number logic\r\n\r\n* Artemis\r\n\r\n* Artemis\r\n\r\n* NW Bom Update\r\n\r\n* LCAPPS for HANA 2.00.059.00\r\n\r\n* Artemis\r\n\r\n* whitespace\r\n\r\n* updates\r\n\r\n* BoM Updates\r\n\r\n* BoM Updates (#71)\r\n\r\n* Fix for providing existing storage accounts\r\n\r\n* Change backup recovery location\r\n\r\n* BoM Updates\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\n\r\n* BW Update\r\n\r\n* Update SWPM10SP33_latest.yaml\r\n\r\n* SWPM\r\n\r\n* updates\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\n\r\n* Artemis updates (#74)\r\n\r\n* Change backup recovery location\r\n\r\n* Artemis\r\n\r\n* Artemis\r\n\r\n* Instance number logic\r\n\r\n* Artemis\r\n\r\n* Artemis\r\n\r\n* NW Bom Update\r\n\r\n* LCAPPS for HANA 2.00.059.00\r\n\r\n* Artemis\r\n\r\n* whitespace\r\n\r\n* updates\r\n\r\n* BoM Updates\r\n\r\n* BoM Updates (#71)\r\n\r\n* Fix for providing existing storage accounts\r\n\r\n* Change backup recovery location\r\n\r\n* BoM Updates\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\n\r\n* BW Update\r\n\r\n* Update SWPM10SP33_latest.yaml\r\n\r\n* SWPM\r\n\r\n* updates\r\n\r\n* Artemis\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\n\r\n* Pipeline and test updates (#75)\r\n\r\n* Change backup recovery location\r\n\r\n* Artemis\r\n\r\n* Artemis\r\n\r\n* Instance number logic\r\n\r\n* Artemis\r\n\r\n* Artemis\r\n\r\n* NW Bom Update\r\n\r\n* LCAPPS for HANA 2.00.059.00\r\n\r\n* Artemis\r\n\r\n* whitespace\r\n\r\n* updates\r\n\r\n* BoM Updates\r\n\r\n* BoM Updates (#71)\r\n\r\n* Fix for providing existing storage accounts\r\n\r\n* Change backup recovery location\r\n\r\n* BoM Updates\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\n\r\n* BW Update\r\n\r\n* Update SWPM10SP33_latest.yaml\r\n\r\n* SWPM\r\n\r\n* updates\r\n\r\n* Artemis\r\n\r\n* Artemis\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\n\r\n* Final pipeline updates (#76)\r\n\r\n* Change backup recovery location\r\n\r\n* Artemis\r\n\r\n* Artemis\r\n\r\n* Instance number logic\r\n\r\n* Artemis\r\n\r\n* Artemis\r\n\r\n* NW Bom Update\r\n\r\n* LCAPPS for HANA 2.00.059.00\r\n\r\n* Artemis\r\n\r\n* whitespace\r\n\r\n* updates\r\n\r\n* BoM Updates\r\n\r\n* BoM Updates (#71)\r\n\r\n* Fix for providing existing storage accounts\r\n\r\n* Change backup recovery location\r\n\r\n* BoM Updates\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\n\r\n* BW Update\r\n\r\n* Update SWPM10SP33_latest.yaml\r\n\r\n* SWPM\r\n\r\n* updates\r\n\r\n* Artemis\r\n\r\n* Artemis\r\n\r\n* updates\r\n\r\n* linting\r\n\r\n* Tests\r\n\r\n* Foo\r\n\r\n* Artemis\r\n\r\n* bom\r\n\r\n* Artemis\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\n\r\n* Update playbook_03_bom_processing.yaml\r\n\r\n* Private preview (#79)\r\n\r\n* Artemis\r\n\r\n* Artemis\r\n\r\n* Oracle updates\r\n\r\n* updates\r\n\r\n* Add info on rescue\r\n\r\n* Validation\r\n\r\n* Update deploy/ansible/playbook_03_bom_processing.yaml\r\n\r\n* Linting\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\n\r\n* Private preview updates (#80)\r\n\r\n* Artemis\r\n\r\n* Artemis\r\n\r\n* Oracle updates\r\n\r\n* updates\r\n\r\n* Add info on rescue\r\n\r\n* Validation\r\n\r\n* Update deploy/ansible/playbook_03_bom_processing.yaml\r\n\r\n* Linting\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\n\r\n* Update main.yaml\r\n\r\n* Result code fixes (#82)\r\n\r\n* Change backup recovery location\r\n\r\n* BoM Updates\r\n\r\n* BoM Updates (#71)\r\n\r\n* Fix for providing existing storage accounts\r\n\r\n* Change backup recovery location\r\n\r\n* BoM Updates\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\n\r\n* Update SWPM10SP33_latest.yaml\r\n\r\n* Artemis\r\n\r\n* Artemis\r\n\r\n* Oracle updates\r\n\r\n* Pipeline release\r\n\r\n* bom flag\r\n\r\n* updates\r\n\r\n* Pipelines\r\n\r\n* Add info on rescue\r\n\r\n* Validation\r\n\r\n* Update deploy/ansible/playbook_03_bom_processing.yaml\r\n\r\n* Linting\r\n\r\n* linting\r\n\r\n* playbook\r\n\r\n* validate if result code exists\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\n\r\n* Print bom folder path at the end of output instead of middle\r\n\r\n* Remove extra line\r\n\r\n* Merge main\r\n\r\n* Make the agent URL an aka.ms link\r\n\r\n* NetWeaver 752\r\n\r\n* align\r\n\r\n* align with main\r\n\r\n* Oracle HA using Dataguard and FSFO (#104)\r\n\r\n* Oracle HA with Dataguard\r\n\r\n* Oracle HA with Dataguard\r\n\r\n* Merge branch 'private-preview' of https://github.com/Azure/sap-automation into oracle-ha\r\n\r\n* BOM Oracle version2 changes\r\n\r\n* data guard changes\r\n\r\n* added comments\r\n\r\n* FSFO CHanges\r\n\r\n* data gurad changes\r\n\r\n* Data guard sequencing update\r\n\r\n* fengshu changes for dg-main.yaml\r\n\r\n* creation of spfile\r\n\r\n* file permission for createspfile\r\n\r\n* directory permission\r\n\r\n* secondary node run flag permissions\r\n\r\n* BOM Updated to Latest version of SWPM\r\n\r\n* diskconfig changes\r\n\r\n* SAP OS Groups and Users inifile updates\r\n\r\nCo-authored-by: ralwani <ravi.alwani@hotmail.com>\r\n\r\n* S42020\r\n\r\n* S42020\r\n\r\n* S42020 updates\r\n\r\n* revert\r\n\r\n* generic BoM\r\n\r\n* S4 2020\r\n\r\n* 2020\r\n\r\n* BoM processing and SUSE registration\r\n\r\n* missing Ini File parameters\r\n\r\n* update dbload params for S42020\r\n\r\n* BoM code\r\n\r\n* BoM\r\n\r\n* default\r\n\r\n* stat\r\n\r\n* update\r\n\r\n* Add more logic for app-done file processing\r\n\r\n* linting\r\n\r\n* lint\r\n\r\n* lint\r\n\r\n* added ansible.builtin.\r\n\r\n* ansible.builtin\r\n\r\n* key exchange\r\n\r\n* Fixes\r\n\r\n* Final tests\r\n\r\n* Oracle Multi-SID deployment (#107)\r\n\r\n* oracle-msid first push\r\n\r\n* oracle-msid updates to match the code structure\r\n\r\n* Create tnsnames and listener.ora for first SID. This is due to issue with SWPM not able to start the listener during DB load\r\n\r\n* BOM Updates\r\n\r\n* bom updates\r\n\r\n* MULTI_SIDS parameter updates\r\n\r\n* oracle-multi-sid variable updates\r\n\r\n* file permission changes\r\n\r\n* sapmnt file system adjustments\r\n\r\n* runflag permission adjustments\r\n\r\n* file permission updates\r\n\r\n* BOM updates for MSID.\r\n\r\n* msid change\r\n\r\n* msid fengshu changes\r\n\r\n* Merge branch 'main' of https://github.com/Azure/sap-automation into Azure-main\r\n\r\n* msid changes\r\n\r\n* update after merging changes from parivate-preview\r\n\r\n* updates from anydb_release to ora_release\r\n\r\nCo-authored-by: Kimmo Forss <kimmo.forss@microsoft.com>\r\n\r\n* make the same changes as sles to rhel\r\n\r\n* find the scs and ers installation status\r\n\r\n* set db virtual host name\r\n\r\n* Merge Artemis\r\n\r\n* remove python3-selinux\r\n\r\n* updates\r\n\r\n* fix indentation\r\n\r\n* Support deployment without BOM catalog\r\n\r\n* changes to blocks in the SUSE play and additional validation for the SCS installs\r\n\r\n* Look in storage account first\r\n\r\n* Whitespace\r\n\r\n* feng shui\r\n\r\n* oracle installation variable changes (#109)\r\n\r\n* whitespace\r\n\r\n* correct output\r\n\r\n* output\r\n\r\n* Oracle HA error handling (#114)\r\n\r\n* oracle installation variable changes\r\n\r\n* oracle-ha error handling changes\r\n\r\n* update compact to coalesce  in terraform\r\n\r\n* Align with Artemis\r\n\r\n* Revert outputs to facilitate anydb deployments (#115)\r\n\r\n* fix outputs\r\n\r\n(cherry picked from commit 817ee43844b2d708252117eb651dac980761c901)\r\n\r\n* do not need observer vms as they are already available below\r\n\r\n* Oracle Updates\r\n\r\n* indentation fix\r\n\r\n* update BOM with correct checksums and update package names\r\n\r\n(cherry picked from commit b71654059e528f30350da30736d6ceff9c0c0d7b)\r\n\r\n* updated HANA BoM\r\n\r\n* Oracle error handling for data guard (#119)\r\n\r\n* oracle installation variable changes\r\n\r\n* oracle-ha error handling changes\r\n\r\n* update compact to coalesce  in terraform\r\n\r\n* commented out the spn check oracle\r\n\r\n* resuce action if restore fails\r\n\r\n* oracle error rman restore error handling\r\n\r\n* ora install failure\r\n\r\n* ora install updates\r\n\r\n* accept the changes from private-preview\r\n\r\n* ora install changes\r\n\r\n* when conditional check for creating the  ora preinstall file\r\n\r\n* pas changes merge from private-preview\r\n\r\n* oracle failed when changes\r\n\r\nCo-authored-by: Kimmo Forss <kimmo.forss@microsoft.com>\r\n\r\n* Sync with Artemis\r\n\r\n* Tests for Oracle\r\n\r\n* Observer name\r\n\r\n* Update HANA BOM to Revision 2.00.059.2 (SPS05) for HANA DB 2.0 and dependent BOMs to use the new HANA BOM\r\n\r\n* Small tweaks\r\n\r\n* Oracle_log_files variable\r\n\r\n* align with Artemis\r\n\r\n* add netaddr\r\n\r\n* Fixes\r\n\r\n* Create S/4HANA 2021 Bill of materials (#124)\r\n\r\n* S4HANA Initial shipment stack BOM only and SWPM name update\r\n\r\n(cherry picked from commit c60047f99dfe0fc919563922a6b59d93880928fd)\r\n\r\n* add Frontend components\r\n\r\n* update names as per naming convention\r\n\r\n* formatting-01\r\n\r\n* Formatting-02\r\n\r\n* updates to swpm name, used sum name instead of swpm.\r\n\r\n* output variables\r\n\r\n* Subnet handling\r\n\r\n* Updates for variable naming\r\n\r\n* Workload zone subnet harmonization\r\n\r\n* Artemis updates\r\n\r\n* Provide a simpler way to override names (#127)\r\n\r\n* Workload zone subnet harmonization (#126)\r\n\r\nRationalize the subnet code creation in terraform\r\n\r\n* First draft\r\n\r\n* correct if\r\n\r\n* Custom naming override for the control plane (#129)\r\n\r\n* Workload zone subnet harmonization (#126)\r\n\r\nRationalize the subnet code creation in terraform\r\n\r\n* Provide Name override for the control plane\r\n\r\nCo-authored-by: hdamecharla <71097261+hdamecharla@users.noreply.github.com>\r\n\r\n* Custom naming workload zone (#130)\r\n\r\n* Workload zone subnet harmonization (#126)\r\n\r\nRationalize the subnet code creation in terraform\r\n\r\n* Provide name override for workload zone\r\n\r\n* fix changes that could cause conflicts\r\n\r\nCo-authored-by: hdamecharla <hdamecharla@microsoft.com>\r\n\r\n* distribution_id changes to support oracle linux (#131)\r\n\r\n* oracle installation variable changes\r\n\r\n* oracle-ha error handling changes\r\n\r\n* update compact to coalesce  in terraform\r\n\r\n* commented out the spn check oracle\r\n\r\n* resuce action if restore fails\r\n\r\n* oracle error rman restore error handling\r\n\r\n* ora install failure\r\n\r\n* ora install updates\r\n\r\n* accept the changes from private-preview\r\n\r\n* ora install changes\r\n\r\n* when conditional check for creating the  ora preinstall file\r\n\r\n* pas changes merge from private-preview\r\n\r\n* oracle failed when changes\r\n\r\n* update the oracle file system permission replaced during merge and log collection\r\n\r\n* generic user creation template for oracle\r\n\r\n* distribution_id update for oracle\r\n\r\n* db restore secondary action revert to private-preview\r\n\r\n* revert changes to match provate-preview\r\n\r\nCo-authored-by: Kimmo Forss <kimmo.forss@microsoft.com>\r\n\r\n* Don't check platform\r\n\r\n* Jinja\r\n\r\n* Fix show BoM details\r\n\r\n* S42020 Update\r\n\r\n* BOM updates for Oracle Multi-SID (#132)\r\n\r\n* oracle installation variable changes\r\n\r\n* oracle-ha error handling changes\r\n\r\n* update compact to coalesce  in terraform\r\n\r\n* commented out the spn check oracle\r\n\r\n* resuce action if restore fails\r\n\r\n* oracle error rman restore error handling\r\n\r\n* ora install failure\r\n\r\n* ora install updates\r\n\r\n* accept the changes from private-preview\r\n\r\n* ora install changes\r\n\r\n* when conditional check for creating the  ora preinstall file\r\n\r\n* pas changes merge from private-preview\r\n\r\n* oracle failed when changes\r\n\r\n* update the oracle file system permission replaced during merge and log collection\r\n\r\n* generic user creation template for oracle\r\n\r\n* distribution_id update for oracle\r\n\r\n* db restore secondary action revert to private-preview\r\n\r\n* revert changes to match provate-preview\r\n\r\n* Oracle Multi-SID BOM changes to use the latest SBP patches\r\n\r\nCo-authored-by: Kimmo Forss <kimmo.forss@microsoft.com>\r\n\r\n* Align with Artemis\r\n\r\n* Jinja updates\r\n\r\n* Add the capability to provide custom prefixes to resources (#133)\r\n\r\n* Artemis\r\n\r\n* Artemis\r\n\r\n* Oracle updates\r\n\r\n* Pipeline release\r\n\r\n* bom flag\r\n\r\n* updates\r\n\r\n* Pipelines\r\n\r\n* Add info on rescue\r\n\r\n* Validation\r\n\r\n* Update deploy/ansible/playbook_03_bom_processing.yaml\r\n\r\n* Linting\r\n\r\n* linting\r\n\r\n* playbook\r\n\r\n* validate if result code exists\r\n\r\n* oracle updates\r\n\r\n* Oracle tests\r\n\r\n* Updates\r\n\r\n* Misc fixes\r\n\r\n* BoM updates\r\n\r\n* Deployer prefix\r\n\r\n* SAP Library name prefixes\r\n\r\n* Add prefix for Workload zone\r\n\r\n* AnyDB prefixes\r\n\r\n* App tier prefixes\r\n\r\n* prefix for common infrastructure\r\n\r\n* prefix for HANA\r\n\r\n* use the full variable name\r\n\r\n* add the new variable to the output\r\n\r\n* merge conflict\r\n\r\n* Align with Artemis\r\n\r\n* duplicate variable\r\n\r\n* add missing variable\r\n\r\n* use var\r\n\r\n* Prefix fix\r\n\r\n* merge conflicts\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\n\r\n* Multi SID AFS\r\n\r\n* Oracle MSID changes to manage file permissions (#134)\r\n\r\n* oracle installation variable changes\r\n\r\n* oracle-ha error handling changes\r\n\r\n* update compact to coalesce  in terraform\r\n\r\n* commented out the spn check oracle\r\n\r\n* resuce action if restore fails\r\n\r\n* oracle error rman restore error handling\r\n\r\n* ora install failure\r\n\r\n* ora install updates\r\n\r\n* accept the changes from private-preview\r\n\r\n* ora install changes\r\n\r\n* when conditional check for creating the  ora preinstall file\r\n\r\n* pas changes merge from private-preview\r\n\r\n* oracle failed when changes\r\n\r\n* update the oracle file system permission replaced during merge and log collection\r\n\r\n* generic user creation template for oracle\r\n\r\n* distribution_id update for oracle\r\n\r\n* db restore secondary action revert to private-preview\r\n\r\n* revert changes to match provate-preview\r\n\r\n* Oracle Multi-SID BOM changes to use the latest SBP patches\r\n\r\n* oracle-multi-sid updates\r\n\r\n* oracle file permission control\r\n\r\nCo-authored-by: Kimmo Forss <kimmo.forss@microsoft.com>\r\n\r\n* oracle multi-sid shared home permission flag update (#135)\r\n\r\n* oracle installation variable changes\r\n\r\n* oracle-ha error handling changes\r\n\r\n* update compact to coalesce  in terraform\r\n\r\n* commented out the spn check oracle\r\n\r\n* resuce action if restore fails\r\n\r\n* oracle error rman restore error handling\r\n\r\n* ora install failure\r\n\r\n* ora install updates\r\n\r\n* accept the changes from private-preview\r\n\r\n* ora install changes\r\n\r\n* when conditional check for creating the  ora preinstall file\r\n\r\n* pas changes merge from private-preview\r\n\r\n* oracle failed when changes\r\n\r\n* update the oracle file system permission replaced during merge and log collection\r\n\r\n* generic user creation template for oracle\r\n\r\n* distribution_id update for oracle\r\n\r\n* db restore secondary action revert to private-preview\r\n\r\n* revert changes to match provate-preview\r\n\r\n* Oracle Multi-SID BOM changes to use the latest SBP patches\r\n\r\n* oracle-multi-sid updates\r\n\r\n* oracle file permission control\r\n\r\n* oracle multi-sid shared home permission flag update\r\n\r\nCo-authored-by: Kimmo Forss <kimmo.forss@microsoft.com>\r\n\r\n* Shared Home support\r\n\r\n* shared_home\r\n\r\n* Template fix\r\n\r\n* Logging\r\n\r\n* Artemis\r\n\r\n* Push the S4HANA 2021 bom and tempates for distributed installations. (#136)\r\n\r\nTODO: Need to prepare templates for HA deployments.\r\n\r\n(cherry picked from commit 98bfee3b498552b7c763d38c5080bf33766a17bd)\r\n\r\n* merge conflicts\r\n\r\n* remove the when statement\r\n\r\n* Tweaks\r\n\r\n* S42020\r\n\r\n* Library updates\r\n\r\n* Updates\r\n\r\n* Oracle MSID BOMv2 (#137)\r\n\r\n* oracle installation variable changes\r\n\r\n* oracle-ha error handling changes\r\n\r\n* update compact to coalesce  in terraform\r\n\r\n* commented out the spn check oracle\r\n\r\n* resuce action if restore fails\r\n\r\n* oracle error rman restore error handling\r\n\r\n* ora install failure\r\n\r\n* ora install updates\r\n\r\n* accept the changes from private-preview\r\n\r\n* ora install changes\r\n\r\n* when conditional check for creating the  ora preinstall file\r\n\r\n* pas changes merge from private-preview\r\n\r\n* oracle failed when changes\r\n\r\n* update the oracle file system permission replaced during merge and log collection\r\n\r\n* generic user creation template for oracle\r\n\r\n* distribution_id update for oracle\r\n\r\n* db restore secondary action revert to private-preview\r\n\r\n* revert changes to match provate-preview\r\n\r\n* Oracle Multi-SID BOM changes to use the latest SBP patches\r\n\r\n* oracle-multi-sid updates\r\n\r\n* oracle file permission control\r\n\r\n* oracle multi-sid shared home permission flag update\r\n\r\n* oracle msid updates\r\n\r\n* new MSID BOM\r\n\r\nCo-authored-by: Kimmo Forss <kimmo.forss@microsoft.com>\r\n\r\n* Artemis updates\r\n\r\n* Oracle multi-sid permission changes for installation (#138)\r\n\r\n* oracle installation variable changes\r\n\r\n* oracle-ha error handling changes\r\n\r\n* update compact to coalesce  in terraform\r\n\r\n* commented out the spn check oracle\r\n\r\n* resuce action if restore fails\r\n\r\n* oracle error rman restore error handling\r\n\r\n* ora install failure\r\n\r\n* ora install updates\r\n\r\n* accept the changes from private-preview\r\n\r\n* ora install changes\r\n\r\n* when conditional check for creating the  ora preinstall file\r\n\r\n* pas changes merge from private-preview\r\n\r\n* oracle failed when changes\r\n\r\n* update the oracle file system permission replaced during merge and log collection\r\n\r\n* generic user creation template for oracle\r\n\r\n* distribution_id update for oracle\r\n\r\n* db restore secondary action revert to private-preview\r\n\r\n* revert changes to match provate-preview\r\n\r\n* Oracle Multi-SID BOM changes to use the latest SBP patches\r\n\r\n* oracle-multi-sid updates\r\n\r\n* oracle file permission control\r\n\r\n* oracle multi-sid shared home permission flag update\r\n\r\n* oracle msid updates\r\n\r\n* new MSID BOM\r\n\r\n* oracle installation file permission changes.\r\n\r\nCo-authored-by: Kimmo Forss <kimmo.forss@microsoft.com>\r\n\r\n* oracle msid - mount sapmnt/sid changes for PAS and APP installation (#139)\r\n\r\n* oracle installation variable changes\r\n\r\n* oracle-ha error handling changes\r\n\r\n* update compact to coalesce  in terraform\r\n\r\n* commented out the spn check oracle\r\n\r\n* resuce action if restore fails\r\n\r\n* oracle error rman restore error handling\r\n\r\n* ora install failure\r\n\r\n* ora install updates\r\n\r\n* accept the changes from private-preview\r\n\r\n* ora install changes\r\n\r\n* when conditional check for creating the  ora preinstall file\r\n\r\n* pas changes merge from private-preview\r\n\r\n* oracle failed when changes\r\n\r\n* update the oracle file system permission replaced during merge and log collection\r\n\r\n* generic user creation template for oracle\r\n\r\n* distribution_id update for oracle\r\n\r\n* db restore secondary action revert to private-preview\r\n\r\n* revert changes to match provate-preview\r\n\r\n* Oracle Multi-SID BOM changes to use the latest SBP patches\r\n\r\n* oracle-multi-sid updates\r\n\r\n* oracle file permission control\r\n\r\n* oracle multi-sid shared home permission flag update\r\n\r\n* oracle msid updates\r\n\r\n* new MSID BOM\r\n\r\n* oracle installation file permission changes.\r\n\r\n* multi-sid orasid change to dbsid parameter\r\n\r\n* oracle-msid sapmnt mounts for app and pass\r\n\r\nCo-authored-by: Kimmo Forss <kimmo.forss@microsoft.com>\r\n\r\n* Provide custom naming support (#142)\r\n\r\n* Artemis\r\n\r\n* Artemis\r\n\r\n* Oracle updates\r\n\r\n* Pipeline release\r\n\r\n* bom flag\r\n\r\n* updates\r\n\r\n* Pipelines\r\n\r\n* Add info on rescue\r\n\r\n* Validation\r\n\r\n* Update deploy/ansible/playbook_03_bom_processing.yaml\r\n\r\n* Linting\r\n\r\n* linting\r\n\r\n* playbook\r\n\r\n* validate if result code exists\r\n\r\n* oracle updates\r\n\r\n* Oracle tests\r\n\r\n* Updates\r\n\r\n* Misc fixes\r\n\r\n* BoM updates\r\n\r\n* Deployer prefix\r\n\r\n* SAP Library name prefixes\r\n\r\n* Add prefix for Workload zone\r\n\r\n* AnyDB prefixes\r\n\r\n* App tier prefixes\r\n\r\n* prefix for common infrastructure\r\n\r\n* prefix for HANA\r\n\r\n* use the full variable name\r\n\r\n* add the new variable to the output\r\n\r\n* merge conflict\r\n\r\n* Align with Artemis\r\n\r\n* duplicate variable\r\n\r\n* add missing variable\r\n\r\n* use var\r\n\r\n* BoM platform validation\r\n\r\n* MErge\r\n\r\n* Prefix fix\r\n\r\n* merge conflicts\r\n\r\n* Updates\r\n\r\n* spelling info\r\n\r\n* Deployer prefix\r\n\r\n* Add a regex for secrets\r\n\r\n* Typos\r\n\r\n* Fixes\r\n\r\n* Tweaks\r\n\r\n* Updates\r\n\r\n* Temporary fix\r\n\r\n* remove pre_deployer temporarily\r\n\r\n* reset\r\n\r\n* removed extra file\r\n\r\n* Artemis\r\n\r\n* recover existing secrets incase they are found to be deleted\r\n\r\n* Formatting\r\n\r\n* Terraform formatting\r\n\r\n* Better Error handling for pipelines\r\n\r\n* typos\r\n\r\n* Provider code\r\n\r\n* Providers\r\n\r\n* Provider updates\r\n\r\n* Library\r\n\r\n* SAP Library providers\r\n\r\n* Library Fixes\r\n\r\n* Workload zone\r\n\r\n* workload zone\r\n\r\n* whitespace\r\n\r\n* Pwd fixes\r\n\r\n* Ignore settings.json\r\n\r\n* simplify workload zone\r\n\r\n* Variable renames\r\n\r\n* Typos\r\n\r\n* DBLoad update\r\n\r\n* Remove keyvaults from library\r\n\r\n* Update\r\n\r\n* sleep 10 seconds after recovering the secret\r\n\r\n* Add the prefix logic\r\n\r\n* update s42021 bom iss with the product ids\r\n\r\n* Push HANA 2.00.61 dependent BOM\r\n\r\n* pushing the HA templates\r\n\r\n* updated product ids\r\n\r\n* SWPM got updated so, will pull the new one from PR#143\r\n\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\nCo-authored-by: hdamecharla <hdamecharla@microsoft.com>\r\n\r\n* bring the SWPM folder back\r\n\r\n* bring back the orange\r\n\r\n* Updated SWPM to SWPM20SP11_3-80003424.SAR (#143)\r\n\r\nCo-authored-by: Ajay Gupta <ajgupt@microsoft.com>\r\n\r\n* Update SWPM20SP11_latest.yaml\r\n\r\nupdate description\r\n\r\n* route table associations\r\n\r\n* Misc changes\r\n\r\n* Artemis tweaks\r\n\r\n* BoM update\r\n\r\n* Ansible lint fixes\r\n\r\n* whitespace\r\n\r\n* Linting\r\n\r\n* Lint take 4\r\n\r\n* Lint take 5\r\n\r\n* Lint take 6\r\n\r\n* Task names\r\n\r\n* Lint take 7\r\n\r\n* Artemis\r\n\r\n* MSID Update\r\n\r\n* Release v3.4 cleanup\r\n\r\n* run sapinst with shell\r\n\r\n* Removed the async check from standard deployment\r\n\r\nCo-authored-by: Michael Mergell <mimergel@microsoft.com>\r\nCo-authored-by: Kimmo Forss <kimforss@microsoft.com>\r\nCo-authored-by: hdamecharla <71097261+hdamecharla@users.noreply.github.com>\r\nCo-authored-by: Yukta Bajaj <yuktabajaj@microsoft.com>\r\nCo-authored-by: msftvapolasa <57106612+msftvapolasa@users.noreply.github.com>\r\nCo-authored-by: ralwani <ravi.alwani@hotmail.com>\r\nCo-authored-by: hdamecharla <hdamecharla@microsoft.com>\r\nCo-authored-by: ajaygit158 <61898818+ajaygit158@users.noreply.github.com>\r\nCo-authored-by: Ajay Gupta <ajgupt@microsoft.com>", "date": "2022-04-19 09:55:53+03:00", "modified_files": [".ansible-lint", ".gitignore", "BW4HANA2021SPS01_v0003ms.yaml", "BW4HANA2021SPS01_v0002ms-app-inifile-param.j2", "BW4HANA2021SPS01_v0002ms-dbload-inifile-param.j2", "BW4HANA2021SPS01_v0002ms-ers-inifile-param.j2", "BW4HANA2021SPS01_v0002ms-pas-inifile-param.j2", "BW4HANA2021SPS01_v0002ms-scs-inifile-param.j2", "BW4HANA2021SPS01_v0002ms-scsha-inifile-param.j2", "BW4HANA2021SPS01_v0002ms-web-inifile-param.j2", "HANA_2_00_055_v0006ms.yaml", "HANA_2_00_059_v0001ms.yaml", "HANA_2_00_061_v0001ms.yaml", "HANA_2_00_055_v1_install.rsp.j2", "NW752SPS09_v0001ms.yaml", "NW752SPS09_v0001ms-app-inifile-param.j2", "NW752SPS09_v0001ms-dbload-inifile-param.j2", "NW752SPS09_v0001ms-ers-inifile-param.j2", "NW752SPS09_v0001ms-pas-inifile-param.j2", "NW752SPS09_v0001ms-scs-inifile-param.j2", "NW752SPS09_v0001ms-scsha-inifile-param.j2", "ORACLE_19_00_ORA_MSID_v0002ms.yaml", "ORACLE_19_00_ORA_MSID_v0002ms-app-inifile-param.j2", "ORACLE_19_00_ORA_MSID_v0002ms-dbload-inifile-param.j2", "ORACLE_19_00_ORA_MSID_v0002ms-generic-inifile-param.j2", "ORACLE_19_00_ORA_MSID_v0002ms-pas-inifile-param.j2", "ORACLE_19_00_ORA_MSID_v0002ms-scs-inifile-param.j2", "ORACLE_19_00_v0002ms-web-inifile-param.j2", "app-inifile-param", "dbload-inifile.param", "pas-inifile.param", "scs-inifile.param", "web-inifile-param", "ORACLE_19_00_v0002ms.yaml", "ORACLE_19_00_v0002ms-app-inifile-param.j2", "ORACLE_19_00_v0002ms-dbload-inifile-param.j2", "ORACLE_19_00_v0002ms-generic-inifile-param.j2", "ORACLE_19_00_v0002ms-pas-inifile-param.j2", "ORACLE_19_00_v0002ms-scs-inifile-param.j2", "ORACLE_19_00_v0002ms-web-inifile-param.j2", "app-inifile-param", "dbload-inifile.param", "pas-inifile.param", "scs-inifile.param", "web-inifile-param", "Oracle19_v0002ms.yaml", "Oracle19_v0003ms.yaml", "S41909SPS03_v0010ms.yaml", "S42020SPS03_v0002ms.yaml", "HANA_2_00_055_v1_install.rsp.j2", "S42020SPS03_v0002ms-dbload-inifile-param.j2", "S42020SPS03_v0002ms-ers-inifile-param.j2", "S42020SPS03_v0002ms-generic-inifile-param.j2", "S42020SPS03_v0002ms-pas-inifile-param.j2", "S42020SPS03_v0002ms-scs-inifile-param.j2", "S42020SPS03_v0002ms-scsha-inifile-param.j2", "S4HANA_2021_ISS_v0001ms.yaml", "NW_ABAP_ASCS_S4HANA2021.CORE.HDB.ABAP_Distributed.params", "NW_ABAP_CI-S4HANA2021.CORE.HDB.ABAP_Distributed.params", "NW_ABAP_DB-S4HANA2021.CORE.HDB.ABAP_Distributed.params", "NW_DI-S4HANA2021.CORE.HDB.PD_Distributed.params", "NW_Users_Create-GENERIC.HDB.PD_Distributed.params", "S4HANA_2021_ISS_v0001ms-app-inifile-param.j2", "S4HANA_2021_ISS_v0001ms-dbload-inifile-param.j2", "S4HANA_2021_ISS_v0001ms-ers-inifile-param.j2", "S4HANA_2021_ISS_v0001ms-generic-inifile-param.j2", "S4HANA_2021_ISS_v0001ms-pas-inifile-param.j2", "S4HANA_2021_ISS_v0001ms-scs-inifile-param.j2", "S4HANA_2021_ISS_v0001ms-scsha-inifile-param.j2", "S4HANA_2021_ISS_v0001ms-web-inifile-param.j2", "SWPM10SP34_latest.yaml", "BW4HANA2021SPS01_v0002ms.yaml", "MP_Excel.xls", "MPstackfile.xml", "myDownloadBasketFiles.txt", "BW4HANA2021SPS01_v0002ms-app-inifile-param.j2", "BW4HANA2021SPS01_v0002ms-dbload-inifile-param.j2", "BW4HANA2021SPS01_v0002ms-ers-inifile-param.j2", "BW4HANA2021SPS01_v0002ms-pas-inifile-param.j2", "BW4HANA2021SPS01_v0002ms-scs-inifile-param.j2", "BW4HANA2021SPS01_v0002ms-scsha-inifile-param.j2", "BW4HANA2021SPS01_v0002ms-web-inifile-param.j2", "app-inifile-param", "dbload-inifile.param", "pas-inifile.param", "scs-inifile.param", "scsha-inifile.param", "web-inifile-param", "ORACLE_19_00_ORA_MSID_v0001ms.yaml", "ORACLE_19_00_ORA_MSID_v0001ms-app-inifile-param.j2", "ORACLE_19_00_ORA_MSID_v0001ms-dbload-inifile-param.j2", "ORACLE_19_00_ORA_MSID_v0001ms-generic-inifile-param.j2", "ORACLE_19_00_ORA_MSID_v0001ms-pas-inifile-param.j2", "ORACLE_19_00_ORA_MSID_v0001ms-scs-inifile-param.j2", "ORACLE_19_00_v0001ms-web-inifile-param.j2", "app-inifile-param", "dbload-inifile.param", "pas-inifile.param", "scs-inifile.param", "web-inifile-param", "ORACLE_19_00_v0001ms.yaml", "ORACLE_19_00_v0001ms-app-inifile-param.j2", "ORACLE_19_00_v0001ms-dbload-inifile-param.j2", "ORACLE_19_00_v0001ms-pas-inifile-param copy.j2", "ORACLE_19_00_v0001ms-pas-inifile-param.j2", "ORACLE_19_00_v0001ms-scs-inifile-param.j2", "ORACLE_19_00_v0001ms-web-inifile-param.j2", "app-inifile-param", "dbload-inifile.param", "pas-inifile.param", "scs-inifile.param", "web-inifile-param", "ORACLE_19_00_v0002ms.yaml", "ORACLE_19_00_v0002ms-app-inifile-param.j2", "ORACLE_19_00_v0002ms-dbload-inifile-param.j2", "ORACLE_19_00_v0002ms-pas-inifile-param copy.j2", "ORACLE_19_00_v0002ms-pas-inifile-param.j2", "ORACLE_19_00_v0002ms-scs-inifile-param.j2", "ORACLE_19_00_v0002ms-web-inifile-param.j2", "app-inifile-param", "dbload-inifile.param", "pas-inifile.param", "scs-inifile.param", "web-inifile-param", "Oracle19_ASM_v0002ms.yaml", "S41909SPS03_v0010ms.yaml", "S42020SPS03_v0001ms.yaml", "HANA_2_00_055_v1_install.rsp.j2", "S42020SPS03_v0001ms-dbload-inifile-param.j2", "S42020SPS03_v0001ms-ers-inifile-param.j2", "S42020SPS03_v0001ms-generic-inifile-param.j2", "S42020SPS03_v0001ms-pas-inifile-param.j2", "S42020SPS03_v0001ms-scs-inifile-param.j2", "S42020SPS03_v0001ms-scsha-inifile-param.j2", "SWPM10SP33_latest.yaml", "SWPM10SP33_v0000ms.yaml", "SWPM20SP11_v002.yaml", "ansible.cfg", "configuration_menu.sh", "playbook_00_validate_parameters.yaml", "playbook_01_os_base_config.yaml", "playbook_02_os_sap_specific_config.yaml", "playbook_04_00_00_db_install.yaml", "playbook_04_00_00_hana_db_install.yaml", "playbook_04_00_01_db_ha.yaml", "playbook_05_00_00_sap_scs_install.yaml", "playbook_05_01_sap_dbload.yaml", "playbook_05_02_sap_pas_install.yaml", "playbook_05_03_sap_app_install.yaml", "playbook_05_04_sap_web_install.yaml", "playbook_bom_downloader.yaml", "main.yaml", "HANA_2_00_055_v1_install.rsp.j2", "main.yml", "4.0.1.0-pre_checks.yml", "4.0.1.2-set_trust_relationship.yml", "main.yml", "main.yaml", "ORACLE_19c_00_01_v1_install.rsp.j2", "main.yaml", "ora-dg-observer-setup.yaml", "ora-dg-postprocessing.yaml", "ora-dg-preparation.yaml", "ora-dg-secondary-preparation.yaml", "ora-dg-setup-primary.yaml", "ora-dg-setup-secondary.yaml", "dgconfig.j2", "enablefsfo.j2", "listener_primary.j2", "listener_secondary.j2", "rman-restore.j2", "sqlnet.ora.j2", "tnsnames_primary.j2", "tnsnames_secondary.j2", "main.yaml", "ORACLE_19c_00_asm_db_v1_install.rsp.j2", "gridinstallresponsefile", "main.yaml", "main.yaml", "0.1.1-ha_clusterpasswords.yaml", "main.yaml", "04.01-start_hana.yml", "04.02-stop_hana.yml", "main.yml", "setup_hanausers_sudoers.yml", "setup_user_sudoers.yml", "sudoers_hanaadmin_no_password.j2", "1.17.0-set_runtime_facts.yml", "1.17.2.0-cluster-Suse.yml", "1.17.3-post_provision_report.yml", "main.yml", "main.yml", "main.yaml", "main.yml", "volume_groups.j2", "main.yml", "logical_volume_group.j2", "scs_logical_volume_group.j2", "volume_groups.j2", "main.yaml", "main.yaml", "main.yaml", "user_nw.yaml", "main.yaml", "2.6.0-afs-mounts.yaml", "2.6.1-anf-mounts.yaml", "main.yaml", "oracle-asm.yaml", "oracle-multi-sid.yaml", "oracle.yaml", "bom_download.yaml", "bom_validator.yaml", "bom.j2", "main.yaml", "readme.md", "bom_processor.yaml", "main.yaml", "bom-register.yaml", "bom-template.yaml", "main.yaml", "main.yaml", "main.yaml", "main.yaml", "main.yaml", "main.yaml", "sapinst.yaml", "listener.j2", "tnsnames.j2", "main.yaml", "main.yaml", "main.yaml", "main.yaml", "main.yaml", "main.yaml", "admin-accounts.yml", "ansible-input-api.yaml", "disks_config.yml", "disks_config_asm.yml", "disks_config_ora_msid.yml", "sap-disks.yaml", "hdb_sizes.json", "version.txt", "01-deploy-control-plane.yaml", "02-sap-workload-zone.yaml", "03-sap-system-deployment.yaml", "configure_deployer.sh", "install_workloadzone.sh", "installer.sh", "prepare_region.sh", "set_secrets.sh", "module.tf", "output.tf", "providers.tf", "tfvar_variables.tf", "transform.tf", "variables_global.tf", "variables_local.tf", "imports.tf", "module.tf", "output.tf", "providers.tf", "tfvar_variables.tf", "transform.tf", "variables_local.tf", "module.tf", "output.tf", "providers.tf", "tfvar_variables.tf", "transform.tf", "variables_global.tf", "variables_local.tf", "module.tf", "providers.tf", "tfvar_variables.tf", "transform.tf", "variables_local.tf", "module.tf", "output.tf", "providers.tf", "tfvar_variables.tf", "transform.tf", "variables_local.tf", "module.tf", "providers.tf", "sapsystem_full.tfvars", "tfvar_variables.tf", "transform.tf", "variables_local.tf", "bastion.tf", "firewall.tf", "infrastructure.tf", "key_vault.tf", "nsg-mgmt.tf", "output.tf", "variables_local.tf", "vm-deployer.tf", "anf.tf", "infrastructure.tf", "iscsi.tf", "key_vault_sap_landscape.tf", "outputs.tf", "providers.tf", "spn.tf", "storage_accounts.tf", "subnets.tf", "variables_local.tf", "configuration_output.tf", "infrastructure.tf", "output.tf", "providers.tf", "storage_accounts.tf", "variables_local.tf", "output.tf", "variables_local.tf", "vm.tf", "infrastructure.tf", "outputs.tf", "providers.tf", "variables_local.tf", "vm-anydb.tf", "vm-observer.tf", "disk_logic.tf", "infrastructure.tf", "nsg-app-subnet.tf", "nsg-webdisp.tf", "outputs.tf", "providers.tf", "variables_local.tf", "vm-app.tf", "vm-scs.tf", "vm-webdisp.tf", "anf.tf", "infrastructure.tf", "key_vault_sap_system.tf", "nsgs.tf", "outputs.tf", "providers.tf", "storage_accounts.tf", "variables_local.tf", "vm-anchor.tf", "infrastructure.tf", "outputs.tf", "providers.tf", "variables_local.tf", "vm-hdb.tf", "inventory.tf", "naming.tf", "providers.tf", "variables_local.tf", "sap-parameters.yaml", "MGMT-EUS2-DEP01-INFRASTRUCTURE.tfvars", "MGMT-NOEU-DEP02-INFRASTRUCTURE.tfvars", "MGMT-WEEU-DEP00-INFRASTRUCTURE.tfvars", "QA-EUS2-SAP03-INFRASTRUCTURE.tfvars", "DEV-NOEU-SAP02-X02.tfvars", "DEV-WEEU-SAP01-X00.tfvars"]}]}, {"name": "https://github.com/jjffggpp/jjffggpp.git", "commits": [{"id": "0e69a9978eae9e3432de8f16c2ca1b38033c23a7", "msg": "Add cost optimized variables to libvirt", "date": "2019-06-06 14:17:08+01:00", "modified_files": ["README.md", "main.tf", "main.tf", "variables.tf", "terraform.tfvars.example", "variables.tf"]}, {"id": "948727c5b1e87b970a7a9dee4cd67bb84d19abf8", "msg": "Add cost optimized variables to the cloud providers", "date": "2019-06-06 14:17:50+01:00", "modified_files": ["README.md", "salt_provisioner.tf", "terraform.tfvars.example", "variables.tf", "README.md", "salt_provisioner.tf", "terraform.tfvars.example", "variables.tf", "README.md", "salt_provisioner.tf", "terraform.tfvars.example", "variables.tf"]}, {"id": "9bfcc097e7844719fa501c0b705cc74569fb7207", "msg": "Set PAYG as default image for AWS and reorganize example file", "date": "2020-09-25 14:47:51+02:00", "modified_files": ["variables.tf", "variables.tf", "variables.tf", "terraform.tfvars.example", "variables.tf"]}, {"id": "4df0ea3d687555b557ebf13c181c039bd2943fee", "msg": "Set PAYG as default image for GCP and reorganize variables names and example file", "date": "2020-09-25 16:30:30+02:00", "modified_files": ["main.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "terraform.tfvars.example", "variables.tf"]}, {"id": "72b709bbe50b9d11c3553eba696a15a48ea3f035", "msg": "Redo how the Azure images data is used and set PAYG as default", "date": "2020-09-28 09:22:08+02:00", "modified_files": ["main.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "outputs.tf", "variables.tf", "terraform.tfvars.example", "variables.tf"]}, {"id": "c9e8a124c4c9dcc443a0be6ca0e6a9a0a0e21c44", "msg": "Enable IP forwarding to make the deployment with bastion and PAYG work", "date": "2021-05-05 09:56:04+02:00", "modified_files": ["main.tf", "main.tf", "main.tf"]}, {"id": "93ee12adde6ac773c76b590fe89c24df372f326b", "msg": "change default azure vm size and disk type to be cheaper", "date": "2021-09-28 17:48:45+02:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/cisagov/vulnerable-instances.git", "commits": [{"id": "f70410061b8c6b9249895571e05dfb7a142efb18", "msg": "Upgrade the root volume type to gp3\n\ngp3 is 20% cheaper, and the baseline configuration offers better\nperformance than gp2 for volumes smaller than 2TB.  It also allows the\nvolume size and IOPS to be configured separately, whereas the two are\nintertwined with gp2.\n\nAlso remove the delete_on_termination line, since\ndelete_on_termination = true is the default, so there is no need to\nspecify it.", "date": "2021-10-26 16:36:25-04:00", "modified_files": ["ubuntu1404_ec2.tf"]}]}, {"name": "https://github.com/greyhats13/avana-aws-infra.git", "commits": [{"id": "9267c4ec187288da49e11aa12296030fd9c4571c", "msg": "deploy core-payment", "date": "2021-09-09 09:26:04+07:00", "modified_files": [".gitignore", "main.tf", "outputs.tf", "task_policy.json"]}]}, {"name": "https://github.com/lwilliams1990/deepfence-threatmapper-lab.git", "commits": [{"id": "cbd8ce761041eac3afbdfbf74e001895895682f2", "msg": "Explicitly size instance to m5.large, below minimum spec on https://github.com/deepfence/ThreatMapper#pre-requisites but will try at this size to lower cost of the lab", "date": "2020-06-06 15:37:18+01:00", "modified_files": ["ec2.tf"]}]}, {"name": "https://github.com/terraform-course/mastercourse.git", "commits": [{"id": "57b55448b33dd08e83ef78b843bc9622d503ff7f", "msg": "configure grafana provider, add cloudwatch data source, add billing dashboard", "date": "2021-01-18 22:50:32+00:00", "modified_files": ["billing-dashboard.json", "dashboards.tf"]}]}, {"name": "https://github.com/adeelbarki/aws-with-terraform-and-ansible.git", "commits": [{"id": "742f35a1fdf66b24ddb1f6a514b2af5a1f2b4282", "msg": "corrected resource parameters for low cost and changed version", "date": "2020-01-15 10:17:20+05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/FXinnovation/fx-terraform-module-aws-virtual-machine.git", "commits": [{"id": "e58135aece58a6fa930b585ad2dc74ad089cf739", "msg": "test: uses m5a instance because less expensive", "date": "2020-04-03 16:05:05-04:00", "modified_files": ["main.tf"]}, {"id": "73524718199222025197ed7e96bf332ea193dc3e", "msg": "feat (BREAKING): default instance type is changes to t3.small to cheaper t3.nano", "date": "2020-08-20 15:44:54-04:00", "modified_files": ["README.md", "variables.tf"]}]}, {"name": "https://github.com/DFE-Digital/cf-monitoring.git", "commits": [{"id": "53d796b564f1bcca46320428df3d0ebb18ed2906", "msg": "Billing exporter module", "date": "2021-08-10 12:43:25+01:00", "modified_files": ["data.tf", "input.tf", "main.tf", "output.tf", "providers.tf"]}, {"id": "3f8864b32ecffae1a99df6430fa7ee4d6b4c143a", "msg": "Prometheus scrape config for billing exporter", "date": "2021-08-10 12:44:09+01:00", "modified_files": ["input.tf", "prometheus.yml.tmpl"]}, {"id": "93a309a9794ced967539700a65855e3cf15254f3", "msg": "Add billing_exporter to prometheus_all", "date": "2021-08-10 12:44:40+01:00", "modified_files": ["input.tf", "resources.tf"]}, {"id": "3670f5b2a835ceb29bd212ac37175108d0342145", "msg": "Update paas billing exporter to 0.0.3", "date": "2021-11-17 17:43:30+00:00", "modified_files": ["input.tf"]}]}, {"name": "https://github.com/EOjeah/route53-ps.git", "commits": [{"id": "1c619d5df3f2e7f49dd9a3a47150aa41b0de497f", "msg": "separate delegation set ID\n\nseparating delegation set ID ensures that the same name servers are not destroyed when trying to destroy all resources to save cost\n\nrunning terraform destroy main.tf will not destroy the delgation set id\n\nhttps://stackoverflow.com/questions/60823339/deterministic-name-server-addresses", "date": "2021-07-26 18:19:47+01:00", "modified_files": ["delegation-set.tf", "main.tf"]}]}, {"name": "https://github.com/UrbanOS-Examples/scos-alm-durable.git", "commits": [{"id": "c22b901881d39c321df5f2d1b9d5814fcf5f9764", "msg": "SMRT-737 add ecr repo for aws-cost-exporter", "date": "2018-12-07 12:36:58-05:00", "modified_files": ["container_registry.tf"]}]}, {"name": "https://github.com/latacora/latacora-service-control-policies.git", "commits": [{"id": "18ab9db133805bf1b2940412276ee00e9d18e040", "msg": "changed s3 default encryption to object encryption, added billing/account management", "date": "2021-08-03 10:43:11-05:00", "modified_files": ["README.md", "main.tf", "variables.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/amatas/test-exekube.git", "commits": [{"id": "050bc0a6bcaeb6c29c699c86f6a0498179be2c4e", "msg": "Fix vault-ca domain name and add payload.json for a successful vault init", "date": "2018-01-20 11:20:06+02:00", "modified_files": ["docker-compose.yaml", "README.md", "inputs.tfvars", "payload.json"]}]}, {"name": "https://github.com/terraform-google-modules/terraform-google-cloud-storage.git", "commits": [{"id": "3e7b6004d8c962546939d803fab07310a2c22e94", "msg": "Include name of bucket as label for cost analysis", "date": "2019-11-07 10:09:47-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/SamTowne/BasketballDrillBot.git", "commits": [{"id": "4ec6d54e4d36ab02b0a7daf042e727717371eaec", "msg": "Await Athena Query Completion\n\nBucket notifications are used to continue app flow after Athena Query\nresults arrive. The reason for designing the application like this is to\nlimit Lambda Function runtime. This is done by invoking each function asynchronously.\n\n1. The user submits the google form.\n2. The API Gateway receives the post and triggers the collection Lambda\nFunction.\n3. The collection Lambda Function stores the post data and triggers the\nsetup_processing Lambda Function.\n4. The setup_processing Lambda Function starts execution of an Athena Query.\n5. The Athena Query results file creation invokes the processing Lambda Function (via bucket notification).\n6. The processing Lambda Function starts execution of an Athena Query.\n7. The Athena Query results file creation invokes the response Lambda Function (via bucket notification).\n8. The response Lambda Function formats the data into an email, sends\nit, and invokes the cleanup Lambda Function.\n9. The cleanup Lambda Function runs to remove temp files.\n10. The user receives the Shooting Insights email.\n\n- Athena query completion times can vary greatly and bucket\nnotifications are used to trigger lambda functions that require the\nquery results\n- New Lambda function setup_processing ensures that the Athena table is\ncreated before any queries are run against it\n- Add a processing s3 bucket\n- Add a temp bucket\n  - This bucket is used for sharing data between the lambda functions (primarilly the new event data\n  and athena invocation IDs)\n- Add bucket lifecycles to expire old data, incomplete uploads, and to\ntransition data to cheaper storage tiers\n  - The intelligent archiving option is being used\n  - It may be better to explicitly specify a storage type transition\n  after x number of days instead of using intelligent archiving\n- Bucket notifications\n  1. Processing\n    - Notification attached to processing s3 bucket\n    - Invokes processing lambda\n    - Awaits create table athena query completion\n  2. Response\n    - Notification attached to athena s3 bucket\n    - Invokes response lambda\n    - Awaits select query completion", "date": "2021-06-30 11:15:57-07:00", "modified_files": ["main.tf", "bootstrap.tf", "bootstrap_variables.tf", "cleanup.py", "cleanup.tf", "cleanup_payload.zip", "cleanup_variables.tf", "collection.py", "collection.tf", "collection_payload.zip", "processing.py", "processing.tf", "processing_payload.zip", "setup_processing.py", "setup_processing_payload.zip", "response.py", "response.tf", "response_payload.zip", "response_variables.tf"]}]}, {"name": "https://github.com/Crown-Commercial-Service/ccs-scale-infra-services-fat.git", "commits": [{"id": "0ee08ed2f02b9d054a2aa4b89b8bd6b59753565d", "msg": "added Payment Solutions DT", "date": "2022-01-06 11:39:55+00:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/nlitterat/env0-playground.git", "commits": [{"id": "8e0422271551ff5d50c8ccd19674acf6e2886195", "msg": "feat: add cost estimation using infracost (#33)\n\n* feat: add cost estimation using infracost\r\n\r\n* moved configuration to variables\r\n\r\n* Create README.md\r\n\r\n* moved memory size to a variable", "date": "2021-04-13 22:06:11+03:00", "modified_files": ["README.md", "env0.yml", "main.tf"]}]}, {"name": "https://github.com/lostcities-cloud/devops.git", "commits": [{"id": "cad51455a32ff1154bd900abedf03aeaabe5759c", "msg": "Adding namecheap.", "date": "2022-04-07 17:19:42-04:00", "modified_files": ["green_host.tf", "main.tf", "namecheap.tf", "red_host.tf", "yellow_host.tf", "nginx.conf", "nginx.yml"]}, {"id": "a597a1745e90d7acf3b499203d355e809955e4e9", "msg": "Adding default domain for namecheap.", "date": "2022-04-10 22:23:17-04:00", "modified_files": ["namecheap.tf"]}]}, {"name": "https://github.com/ecsworkshop2018/expertalk-2018-ecs-workshop.git", "commits": [{"id": "034908d914982eacea51b0ac61f2781069387412", "msg": "Added ability to save costs if no private subnets required", "date": "2018-11-19 10:56:43+05:18", "modified_files": ["network.tf", "subnets.tf", "main.tf", "main.tf"]}]}, {"name": "https://github.com/amezousan/serverless-blog-in-aws.git", "commits": [{"id": "c130862a29878f0e483551bc115d2ca5bdc4bf5c", "msg": "Disable unneeded methods for saving costs", "date": "2020-03-20 23:28:08+01:00", "modified_files": ["22-cloudfront-frontend.tf", "terraform-template.tfvars"]}]}, {"name": "https://github.com/alphagov/prometheus-aws-configuration-beta.git", "commits": [{"id": "0edcb1dbd7337eab4155be2f2a7683a77cc3cc6d", "msg": "Remove multi nat-gateways in dev to save on cost\n\nThe dev enviroment currently creates three of every network component  based\non the configuration in the vpc module. I have added a small change which will\nprevent the dev enviroment from creating a nat gateway for each AZ. If the\ninstance count is 3 in dev the single nat gateway will still be enabled. This\nis fine since the dev enviroment is not HA enviroment. There will be extra routes\ncreated to route traffic through the AZ which has all the active nat-gateway.\n\nThe current production enviroment currently supports an gateway per AZ. This is for HA\npurposes.", "date": "2018-08-15 11:17:51+01:00", "modified_files": ["main.tf"]}, {"id": "2a7c8d01dbd4e32fdad055506b7fbe819c8ee125", "msg": "[infra-security-groups] better tagging\n\n\"Environment\" is more meaningful than \"Stack name\" and it's also one\nof our billing tags.", "date": "2020-01-24 15:57:14+00:00", "modified_files": ["main.tf", "main.tf", "main.tf"]}, {"id": "7a95c991da3bfb3ceb0fc022911f370d9afae293", "msg": "[infra-networking] better tagging\n\n\"Environment\" is more meaningful than \"Stack name\" and it's also one\nof our billing tags.\n\nAlso \"observe-production\" is a better VPC name than \"production-vpc\".", "date": "2020-01-24 16:08:19+00:00", "modified_files": ["main.tf", "main.tf", "main.tf"]}, {"id": "57e1f628176094ff48c5f05690c15503e2bc5e9d", "msg": "[app-ecs-albs] better tagging\n\n\"Environment\" is more meaningful than \"Stack name\" and it's also one\nof our billing tags.", "date": "2020-01-24 16:12:55+00:00", "modified_files": ["main.tf", "main.tf", "main.tf"]}, {"id": "87e2903b9fef84b342fba70ebfd30c724c1192b5", "msg": "[app-ecs-services] better tagging\n\n\"Environment\" is more meaningful than \"Stack name\" and it's also one\nof our billing tags.\n\nI also tagged more resources than we used to tag:\n\n - the ECS cluster itself\n - the IAM User for SMTP\n - the IAM Role for the alertmanager task execution\n - task definitions\n\nI chose not to tag ECS services, because they require opting in to the\nnew ECS ARN format and I'm not sure if/how to do that right now.", "date": "2020-01-24 16:30:39+00:00", "modified_files": ["alertmanager-service.tf", "main.tf", "main.tf", "main.tf"]}, {"id": "f9e7bb0f44491ca5b287a6109429255bb818a213", "msg": "[prom-ec2/prometheus] better tagging\n\n\"Environment\" is more meaningful than \"Stack name\" and it's also one\nof our billing tags.\n\nAlso make sure everything is tagged with Service:\n\"observe-prometheus\".\n\nAlso also tag lots more resources, including IAM Users and Roles.", "date": "2020-01-24 16:50:13+00:00", "modified_files": ["iam.tf", "main.tf", "targets.tf", "variables.tf", "main.tf", "main.tf"]}]}, {"name": "https://github.com/hmcts/cnp-module-api-mgmt.git", "commits": [{"id": "038d43dc5f17870bc6681e1d8699e0a0951a859e", "msg": "Uses the Premium tier when in production\n\nPlease note Premium tier is very expensive but is the only non\nDevelopment Tier which supports VNETs", "date": "2018-07-13 10:23:54+01:00", "modified_files": ["main.tf", "api-management.json"]}]}, {"name": "https://github.com/dwp/dataworks-aws-data-egress.git", "commits": [{"id": "14f065e5161fee14c286c34df7db9f5516ef9bb6", "msg": "Use GP3 which is much cheaper and shrink the size except for prod (#22)\n\n* Use GP3 which is much cheaper and shrink the size except for prod\r\n\r\n* Volume tags", "date": "2021-02-04 17:11:55+00:00", "modified_files": ["cluster_ecs.tf", "terraform.tf.j2", "variables.tf"]}, {"id": "810314834b10f1bf34dfbffcbfc6b99e2bde6b89", "msg": "adding contract_payment_characteristics extract (#193)\n\nCo-authored-by: PhanindraVenkata <phanindra.venkata@dwp.gsi.gov.uk>", "date": "2021-12-21 12:42:23+00:00", "modified_files": ["data-egress.tf"]}]}, {"name": "https://github.com/demiguelmoreno/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/akentosh/hashi-stack.git", "commits": [{"id": "24c07bfd5c31438fff6374e9ba3d577e6402d777", "msg": "f-centos-7 - Support for cheaper CentOS 7/t3 instances, visibility fixes (#23)\n\n* Adding support for CentOS 7(cheaper), moved to t3 instances(cheaper) for non t2.micro(free-tier), hostnaming/display name visibility improvements\r\n\r\n* Fixing ami name change typo, fixing docker consul dns configuration", "date": "2018-10-05 09:57:04-05:00", "modified_files": ["README.md", "packer.json", "centos-7.sh", "el7.sh", "rhel.sh", "setup.sh", "main.tf", "variables.tf", "main.tf", "variables.tf", "init-client.tpl", "main.tf", "variables.tf", "init-cluster.tpl", "variables.tf", "main.tf", "database.tpl", "main.tf", "variables.tf", "terraform.tfvars.example", "variables.tf"]}]}, {"name": "https://github.com/olivier2t/stack-nexus.git", "commits": [{"id": "0a5b156ae3971dc284bc4a0789e25ef1c18786fb", "msg": "adding a default region in tf for Cost Estimation", "date": "2021-08-10 10:27:35+02:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/interrupt-software/az-basic-vm-git.git", "commits": [{"id": "480fe3ef2d07504f5e921b1d169c0784d93c3ffe", "msg": "Checking for cost control magic", "date": "2021-01-06 15:50:41-05:00", "modified_files": ["terraform.tfvars", "create_var.bash", "variables.tf"]}]}, {"name": "https://github.com/nekochans/qiita-stocker-terraform.git", "commits": [{"id": "d044c37d91bd0c9de1025fefabb8c23fa2bcc3c7", "msg": ":art: #74 \u4ee5\u4e0b\u306e\u5909\u66f4\u3092\u9069\u5fdc\n\n- EC2\u30e2\u30fc\u30c9\u306eEC2\u306b\u3082ParameterStore\u306e\u53c2\u7167\u6a29\u9650\u3092\u8ffd\u52a0\n- aws_iam_policy_attachment \u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u5e38\u306bTerraform\u306e\u5dee\u5206\u304c\u51fa\u308b\u306e\u3067aws_iam_role_policy_attachment\u3092\u4f7f\u3046\u3088\u3046\u5909\u66f4\n\nhttps://qiita.com/billthelizard/items/8b54c40351e2ff39afa0", "date": "2019-05-18 00:26:44+09:00", "modified_files": ["iam.tf"]}]}, {"name": "https://github.com/UCDenver-ccp/Translator-TM-Provider-Infrastructure-Modules.git", "commits": [{"id": "ddc29467494ee63c323d0eb6493de6e8440c113e", "msg": "consolidated oger node pools\n\nTo save cost when idle, the individual oger node pools (one for each ontology) have been replaced with a single node pool.", "date": "2020-04-03 07:03:48-06:00", "modified_files": ["main.tf", "values.yaml", "values.yaml", "values.yaml", "values.yaml", "values.yaml", "values.yaml", "values.yaml", "values.yaml", "values.yaml", "values.yaml"]}]}, {"name": "https://github.com/k9securityio/terraform-aws-s3-bucket.git", "commits": [{"id": "3e47ed018aae5a772d3ff619b511797fe7b423a0", "msg": "Support the `CostCenter` tag.", "date": "2020-07-08 16:35:58-07:00", "modified_files": ["interface.tf", "s3.tf", "minimal.tf", "s3.rb"]}]}, {"name": "https://github.com/xuwang/aws-terraform.git", "commits": [{"id": "ef29d523b87b63c0b0929c84fc5a67876fd23d16", "msg": "change Billing tag.", "date": "2015-07-08 16:38:53-07:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/SweetOps/terraform-google-project.git", "commits": [{"id": "6b5b02bdff9a88cd5977a23b88ed5190bb2c62b5", "msg": "fix: add missed billing_account_id variable (#2)", "date": "2019-03-17 20:53:38+02:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/shaharsa/terragoat3.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/xposix/aws_landing_zone.git", "commits": [{"id": "cf558022ac6ef3c45b535c377b9c407e35d12919", "msg": "Allow IAM users to access to billing", "date": "2020-08-19 23:38:55+01:00", "modified_files": ["account_audit.tf", "account_backup.tf", "account_network.tf", "account_shared_services_live.tf", "account_shared_services_non_live.tf"]}]}, {"name": "https://github.com/emyasa/hashicorp-consul-setup.git", "commits": [{"id": "0c38902905b96c598715a08d5c3880ad01ce5fea", "msg": "changes:\n* setup fake service as api and web\n* make use of bastion as client-web (to minimize aws costs)\n* attach necessary security group and user data to bastion instance to act as a consul client\n* removes unnecessary security group on client", "date": "2022-03-20 22:46:10+08:00", "modified_files": ["ec2.tf", "client-api.sh", "client-web.sh", "client.sh", "vpc-security-groups.tf"]}]}, {"name": "https://github.com/circleci/enterprise-setup.git", "commits": [{"id": "26cc5295c2bb9d8756e450712e0f5f75af440c4a", "msg": "Update default dev env sizes\n\nPick slightly less expensive instance sizes", "date": "2020-01-13 13:15:58-05:00", "modified_files": ["terraform.tfvars-dev.template"]}]}, {"name": "https://github.com/tnordmann/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/linuxlsr/azureLearning.git", "commits": [{"id": "163a9de084161e21cb62c19033b4bff7d3a5e649", "msg": "add outputs, monitoring, tear down vm resources that cost", "date": "2020-04-19 19:24:25+00:00", "modified_files": ["key-vault.tf", "monitoring.tf", "outputs.tf", "variables.tf", "virtual-machine.tf"]}, {"id": "e2a2ef243deb0374ccfe3f37e0d1395d4338969c", "msg": "teardown resources that cost", "date": "2020-05-13 02:24:06+00:00", "modified_files": ["ha.tf", "virtual-machine.tf"]}]}, {"name": "https://github.com/bh1m2rn/gitlab-environment-toolkit.git", "commits": [{"id": "b9750f0bb88bc22256085b6bc8f060055e90a8c4", "msg": "Update AWS disk type to gp3\n\ngp2 is bursty and can lead to performance issues.\ngp3 is also cheaper.", "date": "2021-07-02 11:01:35+01:00", "modified_files": ["main.tf", "variables.tf", "gitaly.tf", "storage.tf", "variables.tf"]}]}, {"name": "https://github.com/dwp/dataworks-aws-s3-object-tagger.git", "commits": [{"id": "448b35b6b447f76151ef8e2ca78f0830c6dc732d", "msg": "adding tagging jobs for payment timelines (#16)", "date": "2021-03-03 16:00:53+00:00", "modified_files": ["aviator_object_tagging.yml", "batch_object_tagger.tf", "groups.yml", "pt-dev-object-tagging.yml", "pt-integration-object-tagging.yml", "pt-preprod-object-tagging.yml", "pt-production-object-tagging.yml", "pt-qa-object-tagging.yml", "dev-object-tagging.yml", "integration-object-tagging.yml", "preprod-object-tagging.yml", "production-object-tagging.yml", "qa-object-tagging.yml", "meta.yml", "output.tf"]}]}, {"name": "https://github.com/schostin/streamedcon2020-terraform-module-github-actions-gcloud.git", "commits": [{"id": "24c4c7e044921ee6a597ac2eddb3edb50de45b7c", "msg": "billing_account will also be linked directly for the new module", "date": "2020-07-01 13:14:03+02:00", "modified_files": ["CHANGELOG.md", "main.tf", "terragrunt.hcl", "variables.tf"]}]}, {"name": "https://github.com/nishantnasa/terragrunt-modules-gcp.git", "commits": [{"id": "33043f3b53b6bc145126627ae1e8a00c249c13d9", "msg": "add cloud billing as default api", "date": "2021-06-08 02:17:49+10:00", "modified_files": ["main.tf"]}, {"id": "bc7fb03cc2fad7e9134e6b0332d0a4f2646d06c0", "msg": "remove cloud billing as default api", "date": "2021-06-08 02:33:35+10:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/dankline/waapdemo.git", "commits": [{"id": "087f2caeff6ecaa2a18ecc2f20b7313a70d2d191", "msg": "Change the SKU to a cheaper one", "date": "2021-04-30 13:10:28-05:00", "modified_files": ["JuiceShop.tf"]}]}, {"name": "https://github.com/replicahq/bqutils.git", "commits": [{"id": "ee81644c6ec4cb77aee604134d4fbd49cdb413b7", "msg": "Add billing account, add GCS and BQ IAM bindings for admins", "date": "2020-03-05 12:01:30-08:00", "modified_files": ["infra.tf"]}]}, {"name": "https://github.com/Katesagay/terraform-repo.git", "commits": [{"id": "9aacfbe12e3e7c1e726b9a3d834211aae01f419c", "msg": "billing alert in terraform", "date": "2021-11-02 19:19:56+00:00", "modified_files": [".DS_Store", "main.tf", "sns.tf", "variable.tf"]}]}, {"name": "https://github.com/wellcomecollection/loris-infrastructure.git", "commits": [{"id": "77c58fa499829785825e45aa90e1bb6c7058c5a2", "msg": "Migrating main loris cluster to c4.xlarge with EBS IO1 volume. Switching second loris cluster to EBS GP2 to see if we can reduce costs", "date": "2017-10-20 09:26:03+01:00", "modified_files": ["asg.tf", "efs.tf", "services.tf", "userdata.tf"]}]}, {"name": "https://github.com/pablocraig/mytest.git", "commits": [{"id": "39891d950433a683da2c75b4187728f9af1c5441", "msg": "Fix typo, rename billing acount and services variables", "date": "2019-05-15 08:19:09+02:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/sastels/learn-AWS-terraform.git", "commits": [{"id": "0816f145a8b709df6af66a7dad229a4ff31619ba", "msg": "7.10: Reduce Storage Costs with EFS (#7)", "date": "2021-10-23 16:47:26-04:00", "modified_files": ["README.md", "bootstrap.sh", "ec2.tf", "efs.tf", "main.tf", "security_group.tf", "variables.tf"]}]}, {"name": "https://github.com/marshall7m/terraform-aws-landing-zone.git", "commits": [{"id": "0e8444fbced03e443898ec2b696f90d04e41de70", "msg": "rm defaults for iam acces to billing param", "date": "2021-03-30 15:41:59-07:00", "modified_files": ["main.tf"]}, {"id": "c8f6160b271065348d615c2dc6e1aff6d45965b5", "msg": "fix iam access to billing v2", "date": "2021-03-30 15:48:43-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/plainjanetypes/MCJ.git", "commits": [{"id": "bc346a5604045d29b4b427c926f3e70d69440698", "msg": "enable PITR to squash CKV_AWS_28\n\nEnables continuous backups. In this case the cost is negligeable due to low volumes of data being stored in this data base. https://aws.amazon.com/dynamodb/pricing/on-demand/", "date": "2021-08-26 08:33:36+01:00", "modified_files": ["dynamodb.tf"]}]}, {"name": "https://github.com/schramm-famm/bespin.git", "commits": [{"id": "cff3747c70722eba940317dec58dc9c22b3b4939", "msg": "Add Terraform config for VPC and autoscaling group\n\nThe VPC has a NAT that allows the EC2 instances in the private subnets\nto be able to connect to the ECS cluster. I think the NAT gateway will\ncost some small amount of money per hour.\n\nThe autoscaling group spawns the EC2 instance(s) that will connect to\nthe ECS cluster and will eventually run the actual services/tasks.", "date": "2019-12-30 20:18:24-05:00", "modified_files": ["main.tf", "user_data.sh"]}]}, {"name": "https://github.com/SaltyDev42/OSXP-Hackathon-SX.git", "commits": [{"id": "4be7890dc968fbbfa90dfce095feca6e9be24316", "msg": "Changed from t2 to t3a, cheaper (maybe?) and faster", "date": "2021-10-24 18:17:28+02:00", "modified_files": ["awx.tf", "awx.yaml.tpl", "vars-awx.yaml.tpl"]}]}, {"name": "https://github.com/cmbrad/cy-aws.git", "commits": [{"id": "9b954fd2e8e8a51285154388dc2390484fe93c31", "msg": "Back grafana using EFS for cheap persistence, promtail tweaks", "date": "2020-07-04 19:17:03+10:00", "modified_files": ["Makefile", "ec2.tf", "consul.hcl", "consul.service", "install_consul.sh", "iam.tf", "outputs.tf", "r53.tf", "sg.tf", "variables.tf", "efs.tf", "install_efs.sh", "install_grafana.sh", "main.tf", "sg.tf", "main.tf", "ec2.tf", "prometheus-config.yml", "sg.tf", "variables.tf", "ec2.tf", "consul.hcl", "consul.service", "install_consul.sh", "install_vault.sh", "vault.hcl", "vault.service", "iam.tf", "outputs.tf", "r53.tf", "sg.tf", "variables.tf", "main.tf", "main.tf"]}]}, {"name": "https://github.com/crabsauce/bridgecrew.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/zoitech/terraform-aws-account.git", "commits": [{"id": "2eb42357d986ad2c3d8693907df99895cee25c63", "msg": "Added new policies to prevent users causing huge costs; created  changelog.md", "date": "2018-04-20 14:45:07+02:00", "modified_files": ["README.md", "aws_iam_policy_EC2_limit.tf", "aws_iam_policy_RDS_limit.tf", "aws_iam_policy_ReservedInstance_limit.tf", "changelog.md", "provider.tf"]}]}, {"name": "https://github.com/gigaSproule/terraform.git", "commits": [{"id": "3a7df234e8abd47c37245b5b66fcd85d40620dc3", "msg": "Remove AWS vm as it costs :(", "date": "2021-08-01 22:44:58+01:00", "modified_files": ["aws.tf"]}]}, {"name": "https://github.com/cbChgit/testrepo.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/chandravadrevu/viya4-aws-iac.git", "commits": [{"id": "fe331528238d9f11a439803e64c6b14a16951215", "msg": "low-cost sample file added. (#71)", "date": "2021-06-22 17:38:24-04:00", "modified_files": ["sample-input-minimal.tfvars", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/infracost/example-terraform.git", "commits": [{"id": "af09dc2139e3965545e0725495bc390a05bc28fc", "msg": "feat: add infracost-usage.yml file (#2)", "date": "2021-01-12 13:51:21+00:00", "modified_files": ["README.md", "infracost-usage.yml", "main.tf"]}]}, {"name": "https://github.com/raddaoui/stackdriver-logging-sinks-splunk-demo.git", "commits": [{"id": "9537858dd9725f3ee697b685169e2479ed7a1d2d", "msg": "add billing account log export example", "date": "2020-02-07 01:27:00-08:00", "modified_files": ["gcs_sink.tf", "pubsub_dataflow_splunk.tf"]}]}, {"name": "https://github.com/skuczynska/images-app-terraform-upskill-PGS.git", "commits": [{"id": "fd2d3d55bb7e9bb8a3d68bc0de50c07200a695dd", "msg": "Add two data archive_files: modyf and to dynamo payload", "date": "2021-11-02 10:33:55+01:00", "modified_files": ["archives.tf"]}]}, {"name": "https://github.com/EngineerBetter/kf-infra.git", "commits": [{"id": "fa5f7fb35b0b44020fb81dd5c4e3b9ceaca1f967", "msg": "Use cheaper nodes", "date": "2021-11-01 12:48:03+00:00", "modified_files": ["gke.tf"]}]}, {"name": "https://github.com/travis-ci/terraform-config.git", "commits": [{"id": "4f641b162fa877aef842481631906d5bfe874781", "msg": "Drop down some staging instance sizes for great cost savings glory\n\n- 2 * c3.4xlarge + 2 * t2.medium =~ $1295/mo.\n+ 2 * c4.large + 2 * t2.micro =~ $164/mo.", "date": "2017-01-09 15:00:00-05:00", "modified_files": ["main.tf"]}, {"id": "0e2fc3ca535ca4a1fe3097b336fb145e6c73cde6", "msg": "Use a custom machine type for NAT hosts\n\nper recommendation from GCE, thereby reducing monthly costs by ~$21/host\nin production.", "date": "2018-03-14 20:49:14-04:00", "modified_files": ["main.tf"]}, {"id": "a5ae4046e87cf7efd270c83d403361c2fc017c53", "msg": "Shrinks pool sizes for org and com macstadium workers.\n\nWe've hit bottlenecks in the SAN, which can't handle too many running\nVMs at once without causing latenccy and requeue spikes. By lowering\nworker pool sizes, we prevent this and keep efficient job throughput.", "date": "2018-03-17 14:14:05-04:00", "modified_files": ["workers.tf", "workers.tf"]}]}, {"name": "https://github.com/bhavikkumar/terraform-master.git", "commits": [{"id": "8253160540d6dea43d815c8823494c9f5ffce0fb", "msg": "Add billing and iam permissions to admins", "date": "2018-11-14 00:47:46+13:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}, {"id": "8a71bbe9588b78351fe231a4341d07a5e2101ebb", "msg": "Add billing policy to admin group", "date": "2018-11-29 23:18:17+13:00", "modified_files": ["iam.tf"]}]}, {"name": "https://github.com/KoutaroNohira/hashicat.git", "commits": [{"id": "81dc1d3f98034672d5f62f440f2cc3abc58ce2a2", "msg": "fixed cost", "date": "2020-12-09 15:45:28+09:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/robinbryce/iona.git", "commits": [{"id": "e89519dc59655ddbd3ecf56a4d680d7d01128152", "msg": "* Disable redis provider for traefik (using CRD's exclusively)\n* Disable google memorystore - its too expensive and its not being used*", "date": "2022-01-17 08:34:31+00:00", "modified_files": ["iona-traefik.tf", "memorystore-redis.tf"]}]}, {"name": "https://github.com/Andretalyss/Infra-as-Code.git", "commits": [{"id": "0edf235435500e8613e4d65c3feba116ae2aed12", "msg": "Criando EC2, DYNAMODB, S3-BUCKET, SECURITY-GROUPS, KEY-PAYR with TERRAFORM", "date": "2021-07-30 00:38:22-03:00", "modified_files": ["data.tf", "key-pair.tf", "main.tf", "output.tf", "providers.tf", "security-groups.tf", "variables.tf"]}]}, {"name": "https://github.com/shikharms/Terraform-on-Google-Cloud.git", "commits": [{"id": "39891d950433a683da2c75b4187728f9af1c5441", "msg": "Fix typo, rename billing acount and services variables", "date": "2019-05-15 08:19:09+02:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}, {"id": "6c93392a5ff6bc45a36eba689d44980ce5f0baf8", "msg": "Grant billing user permission during testing", "date": "2019-11-19 00:37:17+00:00", "modified_files": ["iam.tf"]}, {"id": "1b4954a704fc03d5109b5615f7cfef824ff7211a", "msg": "enable google billing budget apis in parent project", "date": "2020-01-06 16:22:29-08:00", "modified_files": ["main.tf"]}, {"id": "f580cae362e7bd01e9b52ff6fb329c19ccebc3da", "msg": "give test user billing admin to billing account to create budgets", "date": "2020-01-07 14:00:42-08:00", "modified_files": ["iam.tf"]}, {"id": "bc9891a7b6f3b576ca7cf7ddeb23022efa000a4c", "msg": "enable pubsub for setup project for billing test", "date": "2020-01-08 12:51:10-08:00", "modified_files": ["main.tf"]}, {"id": "64461a22b225960357ef866bdef8c1d2693733f7", "msg": "fix: billing budget tests (#594)", "date": "2021-06-10 23:40:05-05:00", "modified_files": ["outputs.tf", "budget.rb", "inspec.yml"]}, {"id": "b6d7bf1af2062e557b3fb2c883879554e10d7702", "msg": "fix: billing_budget resource should use GA provider (#626)\n\nCo-authored-by: Morgante Pell <morgantep@google.com>", "date": "2021-10-13 16:17:46-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/techservicesillinois/aws-enterprise-vpc.git", "commits": [{"id": "0d21bea79e1936e2bdaee58bd6e328dd08e59b30", "msg": "bootstrap: change DynamoDB billing_mode to \"PAY_PER_REQUEST\"\n\nAs of this writing, minimal PROVISIONED mode is only costing us $0.56/month, but it would take ~373k (each) read and write requests to spend that much with on-demand pricing", "date": "2021-06-11 13:21:32-05:00", "modified_files": ["CHANGELOG.md", "main.tf"]}]}, {"name": "https://github.com/wallnerryan/terraform-scaleio.git", "commits": [{"id": "605e74facfa2ff519ba5cda6e57474666901bd8c", "msg": "Allow for cheaper instances and choosing instance types", "date": "2015-09-09 16:12:42-07:00", "modified_files": ["mdm_install.sh", "sas.tf", "variables.tf"]}]}, {"name": "https://github.com/tedilabs/terraform-aws-account.git", "commits": [{"id": "92fbc427cf50e2a8350bcac7237e08eccddf239b", "msg": "Fix iam_user_access_to_billing forced_replacement issue in org-account", "date": "2021-11-29 11:51:57+09:00", "modified_files": ["VERSION", "main.tf"]}]}, {"name": "https://github.com/dstine/sites.git", "commits": [{"id": "77347554c638f967f595d65afc0f1ab5bb3375bc", "msg": "cost allocation tags", "date": "2019-12-01 11:45:16-05:00", "modified_files": ["site.tf", "variables.tf"]}]}, {"name": "https://github.com/cloudposse/terraform-aws-alb.git", "commits": [{"id": "c3c8dd8bebf14f91518253cadadc6d8a88b5ea09", "msg": "Add enabled variable (#56)\n\n## what\r\nThis allows the ALB to be created selectively.\r\n\r\n## why\r\nAs a cost saving measure, I want to be able to create an ALB per AWS account for a given application and then create multiple target groups.  \r\n\r\n## references\r\n* This addresses https://github.com/cloudposse/terraform-aws-alb/issues/55.\r\n* Closes #55", "date": "2020-10-18 15:33:49-04:00", "modified_files": ["README.md", "terraform.md", "main.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/byu-oit/terraform-aws-rds.git", "commits": [{"id": "86a0795540edb426c3226775d73fcd4ce807d36a", "msg": "Change default to t3 family\n\nBecause t3 instances are cheaper and are sometimes more performant, the BYU cloud office is considering preventing t2 hardware from being launched to encourage the use of t3 instances. Regardless of the decision the cloud office makes, t3 family instances seem like a better default for cost and performance reasons.", "date": "2021-06-08 10:39:19-06:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/language-learners/terraform.git", "commits": [{"id": "7ed50e429a05c032e261b557c726402d7097327a", "msg": "Switch from nginx docker proxy to ALB\n\nWe used to handle load balancing using\nhttps://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion. This\nbroke and proved hard to fix. After trying Caddy, I gave up and switched\nto an AWS Application Load Balancer and the AWS Certificate Manager, at\nthe cost of adding some ridiculously baroque setup.\n\nI need to go back and comment some of this, but for now, I need sleep.", "date": "2018-10-27 23:16:01-04:00", "modified_files": ["dns.tf", "build.tf", "ecs.tf", "load_balancing.tf", "variables.tf", "load_balancer.tf", "nginx-proxy-container-definitions.json", "nginx_proxy.tf", "phpbb-container-definitions.json", "phpbb_pipeline.tf", "servers.tf", "server.tf", "superchallengebot-container-definitions.json", "superchallengebot_pipeline.tf", "terraform.tfstate"]}]}, {"name": "https://github.com/akaron/kubeadm_aws.git", "commits": [{"id": "2e2092ec94b27a4c3f0b9f4ee4d46a1983a72518", "msg": "minor updates: use 1 master to save cost; volume_size as variable", "date": "2020-06-10 02:53:23+00:00", "modified_files": ["25-local-cni-storageClass-ingress.yml", "asg-controlplane.tf", "asg-worker.tf", "inventory.tmpl", "local_file.tf", "variables.tf"]}]}, {"name": "https://github.com/ryte/INF-tf-waf.git", "commits": [{"id": "e42e7af2cfd40292ce419c543ea41c3ab517e4db", "msg": "Add cost-allocation tags", "date": "2021-01-11 17:37:38+01:00", "modified_files": ["README.md", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/PaloAltoNetworks/terraform-azurerm-vmseries-modules.git", "commits": [{"id": "c50fd3b3f25f87a6326684ad44d507d187e24874", "msg": "feat(vm-series): SystemAssigned identity a default\n\nBy default use a managed identity instead of none. It's costless:\nhttps://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/services-support-managed-identities", "date": "2021-01-29 10:08:43+01:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "d9b4b9dcb95b96bdfb09f9631acd91ab34aa7dcf", "msg": "feat(vm-series): add Application Insights metrics\n\nVerified that the defaults here do not currently cost anything and do\nnot require extra permissions. Users are billed only when they actually\nmanually paste the metrics_instrumentation_key by GB of metrics sent.\n\nAn opinionated setup is thus to furnish a single Application Insights\nfor every module instantiation.\n\nSeemingly, no RBAC changes are required for this to work, it doesn't\nmatter if firewall runs on a SystemAssigned or a UserAssigned or even\nNo Identity.", "date": "2021-02-04 15:27:58+01:00", "modified_files": ["README.md", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "72e7126b0baf6e039f70c12262d11e7ea7562189", "msg": "feat(examples/common): clearly show \"bundle1\"\n\nThe \"bundle1\" is great for a newcomer, but financially expensive for the\ndevs. Just show visibly, so that devs could catch on and change to byol.", "date": "2021-03-15 12:27:43+01:00", "modified_files": ["example.tfvars"]}]}, {"name": "https://github.com/UrbanOS-Examples/common.git", "commits": [{"id": "206394bcc75866953f64cbf3bd6214e4e6f96e91", "msg": "Right size Kong instance\n\nKong is serverely under-utilized in every environment,\nincluding prod.\nBring the instance down to a less expensive option.", "date": "2018-09-14 15:34:33-04:00", "modified_files": ["kong.tf", "sandbox.tfvars"]}, {"id": "69fd4d8b62e3504fbfdb27025a55441ee4655b47", "msg": "SMRT-737 add ecr repo for aws-cost-exporter", "date": "2018-12-07 12:36:58-05:00", "modified_files": ["container_registry.tf"]}]}, {"name": "https://github.com/darogina/terragrunt-aws-modules.git", "commits": [{"id": "c39c9a849f1632827d427cd995260116887800cd", "msg": "Add cross-account Billing role", "date": "2019-08-23 10:30:00+01:00", "modified_files": ["billing.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "27d58efd23bb62e71533a99bd110848e4fe8b548", "msg": "Add AssumeRoleBilling to administrators group", "date": "2019-08-23 17:37:25+01:00", "modified_files": ["administrators.tf"]}, {"id": "025b6526a72990d63eef67de1b0145847bc03067", "msg": "Add consolidated billing alarm to organisation", "date": "2019-11-18 21:05:31+00:00", "modified_files": ["billing-alarm.tf", "variables.tf"]}, {"id": "9c84d03bde131e7f349dcd493ba5b7e55bf8ae2c", "msg": "Replace CloudWatch billing alarm with AWS Budget", "date": "2019-11-26 21:05:30+00:00", "modified_files": ["billing-alarm.tf", "budget.tf"]}]}, {"name": "https://github.com/cloudspout/Gefjun.git", "commits": [{"id": "665692a86bb65ddfa6c001f296c76c17288e2944", "msg": "Lower costs by deactivating verbose logging & long archive period", "date": "2020-05-11 19:40:40-04:00", "modified_files": ["alb.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "apigateway.tf", "cloudwatch.tf", "ecs-grafana.tf", "ecs-influxdb.tf", "ecs.tf", "iam-apigateway.tf", "iam-grafana.tf", "iam-influxdb.tf", "lambda_iot2influxdb.tf", "lambda_light.tf", "lambda_sunrise.tf", "r53.tf", "secrets.tf", "securitygroups.tf", "service-discovery.tf", "variables.tf", "vpc.tf"]}]}, {"name": "https://github.com/xerris/terraform-eks-bootstrap.git", "commits": [{"id": "2859645e5caa0b2b9fd839f8048c1e7d072cc0e9", "msg": "updating billing type for node groups", "date": "2021-05-31 16:05:06-06:00", "modified_files": ["dev.tfvars", "main.tf", "variables.tf"]}, {"id": "1d35d1c3e31d1f1bb779c740a7acb81d8cbb71cf", "msg": "adding billing module", "date": "2021-05-31 16:34:25-06:00", "modified_files": ["billing.tf"]}]}, {"name": "https://github.com/AlexReisSantos/terraform-helm-release.git", "commits": [{"id": "018a241244690283e634afceac524de04eb0dee1", "msg": "The namespace will only be created if it does not exist. An efficient workaround to solve helm3's deficiency does not create namespaces.", "date": "2020-05-18 19:53:12-03:00", "modified_files": ["VERSION_BASE", "main.tf", "resources.tf"]}]}, {"name": "https://github.com/cloudposse/terraform-aws-ecs-web-app.git", "commits": [{"id": "8c5e9fd655aca1bf6bfba12b932fc2999669ce61", "msg": "Update dependencies that we can use this module with aws provider 3.x (#78)\n\n* Update dependencies that we can use this module with aws provider 3.x\n\n* update README.md\n\n* Update tests and actions\n\n* access_logs_region not used anymore in terraform-aws-alb module\n\n* remove from examples access_logs_region in alb module\n\n* add context fix tests\n\n* remove module.label, add context module.this\n\n* use module.this.name cause of default is null in context\n\n* update ecr module for tf 14.x support, fix tests for cw_autoscaling\n\n* fix naming for container_environment and map_container_environment\n\nCo-authored-by: Dmitrij Nikitenko <dn@paybis.com>", "date": "2020-12-03 23:26:12+02:00", "modified_files": ["CODEOWNERS", "auto-release.yml", "auto-release.yml", "chatops.yml", "README.md", "context.tf", "terraform.md", "context.tf", "fixtures.us-east-2.tfvars", "main.tf", "variables.tf", "context.tf", "main.tf", "variables.tf", "context.tf", "main.tf", "variables.tf", "context.tf", "main.tf", "variables.tf", "main.tf", "Gopkg.lock", "Gopkg.toml", "Makefile", "examples_complete_test.go", "go.mod", "go.sum", "variables.tf"]}]}, {"name": "https://github.com/vx-labs/infra.git", "commits": [{"id": "302b243d09b58375efbff31c9e2dfc60c3d7bb7b", "msg": "terraform: put all the nomad-agents behind a proxy to reduce costs", "date": "2018-07-21 17:39:07+02:00", "modified_files": ["config.yaml", "dns.tf", "local_var.tf", "main.tf", "providers.tf", "variables.tf", "dns.tf", "local_var.tf", "main.tf", "providers.tf", "variables.tf", "main.tf", "nomad-authenticator-policy.hcl", "nomad-cluster-role.json", "nomad-server-policy.hcl", "nomad-tls-storer-policy.hcl", "providers.tf", "variables.tf", "local_var.tf", "local_var.tf", "main.tf", "main.tf", "providers.tf", "variables.tf", "local_var.tf", "main.tf", "main.tf", "providers.tf", "secgroup.tf", "variables.tf", "dns.tf", "local_var.tf", "main.tf", "providers.tf", "variables.tf", "main.tf", "providers.tf", "variables.tf"]}]}, {"name": "https://github.com/oracle-quickstart/oci-cis-landingzone-quickstart.git", "commits": [{"id": "6a696dfa2dd5716a65b10fc3277cd9e994b8b30a", "msg": "cost tracking tag set to true", "date": "2021-07-13 17:16:25-03:00", "modified_files": ["mon_tags.tf"]}, {"id": "e6fce932c806b12eeda73846bcaeac0a7403744d", "msg": "File naming updated: using cost not gov", "date": "2021-11-02 09:28:12-07:00", "modified_files": ["cost_budget.tf", "README.md", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "7247909ecd98c2d511316392f22cb3877f05250b", "msg": "added policies for cost management", "date": "2021-11-02 14:13:56-07:00", "modified_files": ["iam_policies.tf", "locals.tf"]}, {"id": "d60c4624b914d105751215510f84aef3b1a35a97", "msg": "Added freeform_tags attr to cost_admin_group_name", "date": "2022-01-04 14:26:29-03:00", "modified_files": ["iam_groups.tf"]}, {"id": "7135a1fc6fa94662c5575bcdda2d7726684aa631", "msg": "Rolled back cost tracking tag to true", "date": "2022-03-04 13:47:12-03:00", "modified_files": ["mon_tags.tf"]}]}, {"name": "https://github.com/kitchen/personal-terraform.git", "commits": [{"id": "b0660183c95f4b938dbf33c5607381b8e4e2bd68", "msg": "add a shared vpc\n\nI only want to create one cloud NAT instance as I think it costs me\nmoney? Not entirely certain. shared VPC seems to be the way to do it", "date": "2019-11-23 22:11:44-08:00", "modified_files": ["terraform.tfstate", "terraform.tfstate.backup", "vpc.tf"]}, {"id": "e3d337caa558830f8e337d24edaab577ee9d43a2", "msg": "set up a load balancer for vault.kitchen.horse\n\nI'm not sure I like this model.\nI like the forwarding rule -> http/https proxy -> backends (by rules)\nthing, but I think the mapping of proxy -> rule -> backend should be an\nexternal resource so I can make one load balancer for everything in\ngcp-central and just attach things to it. This would save me from having\nto have a bunch of external IPs that I have to pay for, or from having\nto centralize all of my load balancer configuration", "date": "2019-11-24 15:39:55-08:00", "modified_files": ["lb.tf", "terraform.tfstate", "terraform.tfstate.backup"]}, {"id": "bc22c89eabce912e3bb5ced85348d37df351b06d", "msg": "turn off kitchen.horse public web services\n\nsadly the forwarding rule and the global IP address are freaking EXPENSIVE.\nMaybe I'll find another alternative at some point, but for now, it's wayyyyy too\nmuch. $18/mo for this crap.\n\nNot as bad as the ripoff NAT gateway fees, but close;.", "date": "2020-04-13 00:07:34-07:00", "modified_files": ["kitchen.horse.tf", "lb.tf"]}, {"id": "fe1f2665b198308a438ec3d46b24843089df1a2a", "msg": "turn off the NAT instance because suuuuuper expensive. Meh.", "date": "2020-04-13 00:09:30-07:00", "modified_files": ["vpc.tf"]}]}, {"name": "https://github.com/koenighotze/koenighotze-gcp-base-setup.git", "commits": [{"id": "e21a2e66249c9d5c36aa8474b344e6561dcf0e0a", "msg": "Activate cloud billing", "date": "2022-02-24 18:42:15+01:00", "modified_files": ["baseline-project.tf"]}, {"id": "d4cc6965478bdc07884713cc89b0dae8c0afad4b", "msg": "Activate cloud billing", "date": "2022-02-24 19:00:48+01:00", "modified_files": ["projects-data.tf"]}, {"id": "a3c16f1a4663f707c487500cce98357c5509298c", "msg": "Setup iam for billing account", "date": "2022-02-25 11:47:28+01:00", "modified_files": ["billing-account-iam.tf", "outputs.tf", "projects.tf", "seed-sa-data.tf", "variables.tf"]}]}, {"name": "https://github.com/skyscrapers/terraform-vault.git", "commits": [{"id": "4f2a643f9317b67fdea6e6849a4ef78291aea5a4", "msg": "Switch dynamodb table to PAY_PER_REQUEST per skyscrapers/engineering#223 (#14)", "date": "2019-09-16 14:23:34+02:00", "modified_files": ["README.md", "main.tf", "outputs.tf", "variables.tf", "dynamodb.tf", "variables.tf"]}, {"id": "2ec5f4b6c05445caaddb190c09b9b104e831f8f6", "msg": "Migrate terraform code to 0.12 syntax (#15)\n\n* Migrate terraform code to 0.12 syntax\r\n\r\nAs per https://github.com/skyscrapers/engineering/issues/252\r\n\r\nI've also switched to using alb resources directly, without an intermediate module.\r\n\r\nThis introduces breaking changes that will require a major version bump in the new release\r\n\r\n* Switch dynamodb table to PAY_PER_REQUEST per skyscrapers/engineering#223\r\n\r\n (#14)\r\n\r\n* Fix submodule path\r\n\r\n* Update documentation and add upgrade path\r\n\r\n* Adjust some names to avoid unnecessary replacement\r\n\r\n* Rework tags and tag everything\r\n\r\n* Fix lifecycle of target groups\r\n\r\n* Update tf code in examples\r\n\r\n* Update test dependencies\r\n\r\n* Update go version in tests task\r\n\r\n* Update test deps again\r\n\r\n* Install gcc dependency in test task\r\n\r\n* Fix edge case with null values\r\n\r\n- nulls are not yet supported in the teleport-bootstrap-script module\r\n\r\n* Create a fake dependency on the dynamodb tables\r\n\r\nOtherwise the destroy process doesn't go smooth\r\n\r\n* Fix staging acme server version\r\n\r\n* Clean up vault version in test ci task\r\n\r\n* Fix acme server url on globaltable test as well\r\n\r\n#facepalm", "date": "2019-10-02 16:55:27+02:00", "modified_files": ["README.md", "run_tests.yaml", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "basic_network.tf", "main.tf", "variables.tf", "versions.tf", "basic_network.tf", "main.tf", "variables.tf", "versions.tf", "Gopkg.lock", "Gopkg.toml", "basic_example_test.go", "alb.tf", "cloud-config.tf", "dynamodb.tf", "iam.tf", "instances.tf", "main.tf", "outputs.tf", "r53.tf", "sg.tf", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/stackabletech/t2.git", "commits": [{"id": "c78be86b02633079565cd682b88ca852b75fbd99", "msg": "cluster def can be posted as request payload, a default is provided", "date": "2021-02-26 13:00:27+01:00", "modified_files": ["requests.http", "ClusterController.java", "MalformedClusterDefinitionException.java", "ClusterService.java", "DummyClusterService.java", "TerraformAnsibleClusterService.java", "TemplateService.java", "cluster.json", "all.yml", "main.fm.tf", "main.yml", "ansible-inventory.tpl", "ansible-variables.tpl"]}]}, {"name": "https://github.com/glenngillen/terraform-demo-cost-estimation-azure.git", "commits": [{"id": "f29cf1138d21a2eba8aaccec3185e461cb8675bd", "msg": "So expensive.", "date": "2019-09-05 08:36:34+10:00", "modified_files": ["aws-instances.tf"]}, {"id": "dfc9a7ea4a62b6e6c14e09b2f08c7fb5c63ca711", "msg": "Very expensive!", "date": "2019-11-19 09:20:26+11:00", "modified_files": ["aws-instances.tf"]}]}, {"name": "https://github.com/davidmaceachern/dev.git", "commits": [{"id": "cbcbc7dbf041d29c87e2fc0b3ee086f17fa7eeab", "msg": "Terraform the cost budget.", "date": "2021-03-11 14:27:43+01:00", "modified_files": ["CHANGELOG.MD", "aws_budget_cost", "aws_budgets_budget.tf"]}]}, {"name": "https://github.com/acmucsd/tech-stack.git", "commits": [{"id": "e78aad174927ca59a43a622d7e82f664e3005790", "msg": "Add Minecraft AWS instance provisioning config\n\nUpdate cost table to reflect instance changes.\n\nUltimately, we've decided on hosting Minecraft on AWS simply because\nwe might be saving costs in the long term.", "date": "2020-08-17 00:00:33+03:00", "modified_files": ["README.org", "instances.tf"]}]}, {"name": "https://github.com/william-goltz-calendar/RancherQuickstart.git", "commits": [{"id": "90944271b4e8bd46e3d42ac64bc4964a33a8fdc3", "msg": "Updated server from t2 to t3\n\nDue to better performance and cost savings updating from t2 to t3.", "date": "2018-10-11 11:26:37-05:00", "modified_files": ["terraform.tfvars.example"]}]}, {"name": "https://github.com/bjornhofer/vwan-test.git", "commits": [{"id": "41111f30cd0a720a3e55f0705a97dbd604673f3f", "msg": "fixed incostence typo", "date": "2022-04-21 11:59:49+02:00", "modified_files": ["05_vnet-hubspoke.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/mcgrof/kdevops_terraform.git", "commits": [{"id": "06e38879c8cec6333f425ddf8e10ed3c146881d5", "msg": "azure: rename fstest prefix to kdevops\n\nFollowing the last commit's logic, do the same for azure.\n\nI still see the same issue as before, with the public IPs being empty.\nThis is at least gainst the MS Azure portal, not the pay for service\none. Next, I will try the public pay for service one.\n\nAnyway, this goes tested:\n\nApply complete! Resources: 14 added, 0 changed, 0 destroyed.\n\nOutputs:\n\nkdevops_hosts = [\n  \"kdevops-1\",\n  \"kdevops-2\",\n]\nkdevops_public_ip_addresses = [\n  \"\",\n  \"\",\n]\nlogin_using = [\n  {\n    \"value\" = \"                     kdevops-1  :  ssh mcgrof@  -i ~/.ssh/minicloud  \"\n  },\n  {\n    \"value\" = \"                     kdevops-2  :  ssh mcgrof@  -i ~/.ssh/minicloud  \"\n  },\n]\n\nSigned-off-by: Luis Chamberlain <mcgrof@kernel.org>", "date": "2019-08-21 12:42:01-07:00", "modified_files": ["main.tf", "output.tf"]}]}, {"name": "https://github.com/alstard/terraform.git", "commits": [{"id": "17463f89d0801c30bbca8ad5f0c4ef7f6f15e49f", "msg": "Switched to Amazon Linux - cheaper and CentOS like", "date": "2018-01-30 09:36:45+00:00", "modified_files": ["ec2-instances.tf", "outputs.tf", "security-groups.tf", "variables.tf"]}]}, {"name": "https://github.com/nubisproject/nubis-terraform-cloudhealth.git", "commits": [{"id": "71ca504c0dabd823270597afec7787cb8ce6fc18", "msg": "Move JSON payloads to their own files.", "date": "2016-04-08 21:30:08-04:00", "modified_files": ["cloud_health_policy.json", "cloud_health_role.json.tmpl", "main.tf"]}]}, {"name": "https://github.com/bhordupur/alibababacloud-terraform.git", "commits": [{"id": "2673b242e0a6c8e880b1a3f3dc4f32036ef75b22", "msg": "Payment Type is changed to postpaid", "date": "2018-02-03 20:48:10+02:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/Terraform-Projects/lead-terraform-Dashboard.git", "commits": [{"id": "71a0250ad3aeed1da2b11734ac22c21831f3595d", "msg": "updates for cost optimization - essential vs preemptive ASGs", "date": "2019-09-10 23:54:06-07:00", "modified_files": ["certmanager.tf", "downscaler.tf", "external-dns.tf", "k8s-spot-termination-handler.tf", "kube-janitor.tf", "main.tf", "metrics.tf", "prometheus-values.tpl", "prometheus.tf", "variables.tf", "eks.tf", "essential-toleration.tpl", "lead.tf", "main.tf", "variables.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/ragul28/terraform-mulitcloud-k8s.git", "commits": [{"id": "dd4fa2e611d0817545900182fdf6fb39c660de99", "msg": "AKS: Add  infracost support", "date": "2021-08-08 00:39:41+05:18", "modified_files": ["Makefile", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/fecgov/fec-infrastructure.git", "commits": [{"id": "b40a02403e1337454888d78b3bd7518b59523fd5", "msg": "Add concourse pipeline.\n\nPairing with @ccostino", "date": "2017-02-13 11:14:46-05:00", "modified_files": ["credentials.example.yml", "pipeline.yml", "fec_rds.tf"]}]}, {"name": "https://github.com/exekube/demo-grpc-project.git", "commits": [{"id": "f0118c3e019dc31eebda75b5d951c003ac38efc1", "msg": "Update cluster-admin and demo-api / demo-payments chart versions", "date": "2018-03-31 10:56:49+03:00", "modified_files": ["terraform.tfvars", "values.yaml", "terraform.tfvars", "values.yaml", "terraform.tfvars", "values.yaml"]}]}, {"name": "https://github.com/raghudevops53/terraform-payment.git", "commits": [{"id": "2622c59b409122dbd08865c8ce148f66d0e36260", "msg": "Update terraform-project/terraform-payment/", "date": "2020-12-31 08:10:59+05:18", "modified_files": ["Makefile", "README.md", "asg.tf", "dev.tfvars", "prod.tfvars", "data.tf", "dev.tfvars", "outputs.tf", "provider.tf", "state.tf", "vars.tf"]}, {"id": "b307e21117aefc68344cccd6ceea03178b977cef", "msg": "Update terraform-project/terraform-payment/", "date": "2021-01-21 08:26:11+05:18", "modified_files": ["asg.tf", "vars.tf"]}, {"id": "f8547ce5f4d9abca1573d0fc694635132476bd70", "msg": "Update terraform-project/terraform-payment/", "date": "2021-02-10 08:10:40+05:18", "modified_files": ["asg.tf", "dev.tfvars", "vars.tf"]}]}, {"name": "https://github.com/pangealab/pegasus.git", "commits": [{"id": "90944271b4e8bd46e3d42ac64bc4964a33a8fdc3", "msg": "Updated server from t2 to t3\n\nDue to better performance and cost savings updating from t2 to t3.", "date": "2018-10-11 11:26:37-05:00", "modified_files": ["terraform.tfvars.example"]}]}, {"name": "https://github.com/dropseed/pullapprove-enterprise.git", "commits": [{"id": "76e7fd062c495daacd2ecaca9eece7d027c91f5a", "msg": "Add billing and availability API options for hosted service", "date": "2019-07-09 17:02:53-05:00", "modified_files": ["ssm.tf", "variables.tf", "worker.tf"]}]}, {"name": "https://github.com/mambotangu/mamz-cloud-foundation.git", "commits": [{"id": "329a935f6d9f7b2917213a76a1277c6969df67e4", "msg": "mothballing billing atm", "date": "2021-10-28 13:24:56-04:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "28cb59105b516edc3bafa20e2f429a88594f7a17", "msg": "Modularize the billing export", "date": "2021-10-28 19:03:59-07:00", "modified_files": ["main.tf"]}, {"id": "213de9f7494f2cd4c37f95974231320bdce1dc87", "msg": "add billing export variables", "date": "2021-10-28 19:04:07-07:00", "modified_files": ["variables.tf"]}, {"id": "ccd76152996d46c2f4feafcf2abec29384446f8f", "msg": "Added billing alertd to shared tier.", "date": "2021-11-15 10:39:51-05:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/chtest0410/tf1.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/jtaylormayfield/tf-omega.git", "commits": [{"id": "22cb926f254a26602629724ea759c31177c2f7be", "msg": "Added email lambda and SNS for billing and autoscale.", "date": "2018-06-22 15:08:28-05:00", "modified_files": ["main.tf", "outputs.tf", "variables.tf", "main.tf", "main.tf", "outputs.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/Crown-Commercial-Service/digitalmarketplace-aws.git", "commits": [{"id": "9928d58017829d85789bdf45f467b6d32c6354b2", "msg": "Raise log streaming lambda function timeout to 10s\n\nWe've seen some occasional (a few per day) timeouts on the log\nstreaming lambda functions likely caused by slow Elasticsearch\nresponses.\n\nRaising the timeout value from 5s to 10s might help reduce the number\nof failed runs. We don't want a very high timeout value since if\nElasticsearch at any point starts to respond to requests very slowly\nour functions will spend more time waiting which can very quickly\nraise the AWS Lambda costs.", "date": "2017-06-09 13:37:20+01:00", "modified_files": ["lambda.tf"]}, {"id": "1f898f16db16204905557b96602ab6f9832f2606", "msg": "Remove alarms for requests taking 5-10s\n\nThis alarm is triggered every hour by a scraper, and intermittently at\nother times by scripts that call expensive API operations. We don't do\nanything when the alert goes off and it's causing alert fatigue so turn\nit off.", "date": "2021-06-14 16:08:45+01:00", "modified_files": ["alarms.tf"]}]}, {"name": "https://github.com/levmichael3/terraform.git", "commits": [{"id": "def9d84d743c45c5071024d17db0a8f2a4eaba5f", "msg": "VPC + SG + SNS +_ LAmbda\n# ----------d-------------- >8 ------------------------\n# Do not touch the line above.\n# Everything below will be removed.\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n#\n# On branch development\n# Your branch is up to date with 'origin/development'.\n#\n# Changes to be committed:\n#\n# \tmodified:   .gitignore\n# \tmodified:   create-infra.tf\n# \tmodified:   modules/terraform-aws-ec2-autoscale-group-master/.gitignore\n# \tmodified:   modules/terraform-aws-ec2-autoscale-group-master/main.tf\n# \tnew file:   modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/.gitignore\n# \tnew file:   modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/.travis.yml\n# \tnew file:   modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/Makefile\n# \tnew file:   modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/README.md\n# \tnew file:   modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/README.yaml\n# \tnew file:   modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/alarms.tf\n# \tnew file:   modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/docs/targets.md\n# \tnew file:   modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/docs/terraform.md\n# \tnew file:   modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/example/README.md\n# \tnew file:   modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/example/main.tf\n# \tnew file:   modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/main.tf\n# \tnew file:   modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/outputs.tf\n# \tnew file:   modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/variables.tf\n# \tmodified:   modules/terraform-aws-key-pair-master/.gitignore\n# \tmodified:   modules/terraform-aws-key-pair-master/main.tf\n# \tnew file:   modules/terraform-aws-multi-az-subnets-master/multi-az-subnets.tfvars\n# \tmodified:   modules/terraform-aws-multi-az-subnets-master/private.tf\n# \tmodified:   modules/terraform-aws-multi-az-subnets-master/public.tf\n# \tnew file:   modules/terraform-aws-notify-slack-master/.editorconfig\n# \tnew file:   modules/terraform-aws-notify-slack-master/.gitignore\n# \tnew file:   modules/terraform-aws-notify-slack-master/.pre-commit-config.yaml\n# \tnew file:   modules/terraform-aws-notify-slack-master/LICENSE\n# \tnew file:   modules/terraform-aws-notify-slack-master/README.md\n# \tnew file:   modules/terraform-aws-notify-slack-master/examples/cloudwatch-alerts-to-slack/README.md\n# \tnew file:   modules/terraform-aws-notify-slack-master/examples/cloudwatch-alerts-to-slack/main.tf\n# \tnew file:   modules/terraform-aws-notify-slack-master/examples/cloudwatch-alerts-to-slack/outputs.tf\n# \tnew file:   modules/terraform-aws-notify-slack-master/examples/notify-slack-kms/README.md\n# \tnew file:   modules/terraform-aws-notify-slack-master/examples/notify-slack-kms/main.tf\n# \tnew file:   modules/terraform-aws-notify-slack-master/examples/notify-slack-kms/outputs.tf\n# \tnew file:   modules/terraform-aws-notify-slack-master/examples/notify-slack-simple/README.md\n# \tnew file:   modules/terraform-aws-notify-slack-master/examples/notify-slack-simple/main.tf\n# \tnew file:   modules/terraform-aws-notify-slack-master/examples/notify-slack-simple/outputs.tf\n# \tnew file:   modules/terraform-aws-notify-slack-master/functions/notify_slack.py\n# \tnew file:   modules/terraform-aws-notify-slack-master/iam.tf\n# \tnew file:   modules/terraform-aws-notify-slack-master/main.tf\n# \tnew file:   modules/terraform-aws-notify-slack-master/outputs.tf\n# \tnew file:   modules/terraform-aws-notify-slack-master/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/.editorconfig\n# \tnew file:   modules/terraform-aws-security-group-master/.gitignore\n# \tnew file:   modules/terraform-aws-security-group-master/.pre-commit-config.yaml\n# \tnew file:   modules/terraform-aws-security-group-master/LICENSE\n# \tnew file:   modules/terraform-aws-security-group-master/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/examples/complete/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/examples/complete/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/examples/complete/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/examples/computed/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/examples/computed/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/examples/computed/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/examples/disabled/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/examples/disabled/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/examples/disabled/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/examples/dynamic/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/examples/dynamic/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/examples/dynamic/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/examples/http/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/examples/http/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/examples/http/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/_templates/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/_templates/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/_templates/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/carbon-relay-ng/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/carbon-relay-ng/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/carbon-relay-ng/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/carbon-relay-ng/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/carbon-relay-ng/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/cassandra/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/cassandra/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/cassandra/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/cassandra/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/cassandra/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/consul/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/consul/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/consul/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/consul/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/consul/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/docker-swarm/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/docker-swarm/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/docker-swarm/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/docker-swarm/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/docker-swarm/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/elasticsearch/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/elasticsearch/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/elasticsearch/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/elasticsearch/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/elasticsearch/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/http-80/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/http-80/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/http-80/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/http-80/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/http-80/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/http-8080/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/http-8080/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/http-8080/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/http-8080/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/http-8080/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/https-443/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/https-443/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/https-443/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/https-443/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/https-443/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/https-8443/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/https-8443/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/https-8443/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/https-8443/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/https-8443/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ipsec-4500/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ipsec-4500/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ipsec-4500/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ipsec-4500/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ipsec-4500/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ipsec-500/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ipsec-500/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ipsec-500/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ipsec-500/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ipsec-500/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/kafka/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/kafka/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/kafka/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/kafka/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/kafka/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ldaps/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ldaps/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ldaps/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ldaps/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ldaps/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/memcached/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/memcached/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/memcached/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/memcached/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/memcached/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/mongodb/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/mongodb/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/mongodb/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/mongodb/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/mongodb/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/mssql/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/mssql/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/mssql/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/mssql/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/mssql/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/mysql/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/mysql/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/mysql/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/mysql/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/mysql/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/nfs/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/nfs/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/nfs/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/nfs/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/nfs/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/nomad/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/nomad/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/nomad/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/nomad/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/nomad/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ntp/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ntp/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ntp/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ntp/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ntp/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/openvpn/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/openvpn/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/openvpn/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/openvpn/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/openvpn/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/oracle-db/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/oracle-db/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/oracle-db/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/oracle-db/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/oracle-db/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/postgresql/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/postgresql/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/postgresql/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/postgresql/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/postgresql/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/rabbitmq/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/rabbitmq/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/rabbitmq/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/rabbitmq/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/rabbitmq/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/rdp/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/rdp/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/rdp/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/rdp/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/rdp/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/redis/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/redis/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/redis/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/redis/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/redis/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/redshift/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/redshift/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/redshift/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/redshift/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/redshift/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/splunk/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/splunk/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/splunk/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/splunk/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/splunk/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/squid/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/squid/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/squid/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/squid/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/squid/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ssh/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ssh/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ssh/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ssh/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/ssh/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/storm/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/storm/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/storm/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/storm/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/storm/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/web/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/web/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/web/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/web/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/web/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/winrm/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/winrm/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/winrm/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/winrm/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/winrm/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/zipkin/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/zipkin/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/zipkin/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/zipkin/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/zipkin/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/zookeeper/README.md\n# \tnew file:   modules/terraform-aws-security-group-master/modules/zookeeper/auto_values.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/zookeeper/main.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/zookeeper/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/modules/zookeeper/variables.tf\n# \tnew file:   modules/terraform-aws-security-group-master/outputs.tf\n# \tnew file:   modules/terraform-aws-security-group-master/rules.tf\n# \tnew file:   modules/terraform-aws-security-group-master/update_groups.sh\n# \tnew file:   modules/terraform-aws-security-group-master/variables.tf\n# \tnew file:   modules/terraform-aws-sns-master/.editorconfig\n# \tnew file:   modules/terraform-aws-sns-master/.gitignore\n# \tnew file:   modules/terraform-aws-sns-master/.pre-commit-config.yaml\n# \tnew file:   modules/terraform-aws-sns-master/LICENSE\n# \tnew file:   modules/terraform-aws-sns-master/README.md\n# \tnew file:   modules/terraform-aws-sns-master/main.tf\n# \tnew file:   modules/terraform-aws-sns-master/output.tf\n# \tnew file:   modules/terraform-aws-sns-master/variables.tf\n# \tmodified:   modules/terraform-aws-vpc-master/main.tf\n# \tdeleted:    modules/vpc/main.tf\n# \tdeleted:    modules/vpc/outputs.tf\n# \tdeleted:    modules/vpc/variables.tf\n# \tmodified:   terraform.tfvars\n# \tmodified:   variables.tf\n#\ndiff --git a/.gitignore b/.gitignore\nindex e4fd2d2..ed1d3a9 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,3 +1,4 @@\n *.tfstate*\n .terraform\n *tfplan*\n+*secrets*\ndiff --git a/create-infra.tf b/create-infra.tf\nindex aaa7f73..86e4e32 100644\n--- a/create-infra.tf\n+++ b/create-infra.tf\n@@ -27,6 +27,31 @@ module \"vpc\" {\n   cidr_block  = \"${var.cidr_block}\"\n }\n\n+module \"web_server_sg\" {\n+  source = \"modules/terraform-aws-security-group-master/modules/http-80\"\n+\n+  name                = \"web-server\"\n+  description         = \"Security group for web-server with HTTP ports open within VPC\"\n+  vpc_id              = \"${module.vpc.vpc_id}\"\n+  # namespace           = \"${var.namespace}\"\n+  # stage               = \"${var.stage}\"\n+  # name                = \"${var.name}\"\n+  ingress_cidr_blocks = [\"${module.vpc.vpc_cidr_block}\"]\n+}\n+\n+module \"ssh_sg\" {\n+  source = \"modules/terraform-aws-security-group-master/modules/ssh\"\n+\n+  name                = \"ssh\"\n+  description         = \"Security group for SSH ports open within VPC\"\n+  vpc_id              = \"${module.vpc.vpc_id}\"\n+  # namespace           = \"${var.namespace}\"\n+  # stage               = \"${var.stage}\"\n+  # name                = \"${var.name}\"\n+  ingress_cidr_blocks = [\"${module.vpc.vpc_cidr_block}\"]\n+}\n+\n+\n locals {\n   public_cidr_block  = \"${cidrsubnet(module.vpc.vpc_cidr_block, 1, 0)}\"\n   private_cidr_block = \"${cidrsubnet(module.vpc.vpc_cidr_block, 1, 1)}\"\n@@ -64,7 +89,29 @@ module \"private_subnets\" {\n   # https://github.com/hashicorp/terraform/issues/12125\n   # https://github.com/hashicorp/terraform/issues/4149\n   # az_ngw_count = \"${length(var.pri_az)}\"\n-  az_ngw_count = 2\n+  az_ngw_count = 1\n+}\n+\n+\n+\n+#\n+# module \"sns_topic\" {\n+#   source            = \"modules/terraform-aws-sns-master\"\n+#   name              = \"${var.name}\"\n+#   namespace         = \"${var.namespace}\"\n+#   stage             = \"${var.stage}\"\n+#\n+# }\n+\n+module \"notify_slack\" {\n+  source                = \"modules/terraform-aws-notify-slack-master\"\n+  slack_webhook_url     = \"https://hooks.slack.com/services/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\"\n+  slack_channel         = \"michael-tests\"\n+  slack_username        = \"reporter\"\n+  sns_topic_name        = \"${var.name}\"\n+  namespace             = \"${var.namespace}\"\n+  stage                 = \"${var.stage}\"\n+  name                  = \"${var.name}\"\n }\n\n@@ -73,7 +120,7 @@ module \"ssh_key_pair\" {\n   namespace             = \"${var.namespace}\"\n   stage                 = \"${var.stage}\"\n   name                  = \"${var.name}\"\n-  ssh_public_key_path   = \"/secrets\"\n+  ssh_public_key_path   = \"./secrets\"\n   generate_ssh_key      = \"true\"\n   private_key_extension = \".pem\"\n   public_key_extension  = \".pub\"\n@@ -96,20 +143,23 @@ USERDATA\n\n-data \"aws_ami\" \"amazon_linux\" {\n-  most_recent = true\n+data \"aws_ami\" \"centos\" {\n+owners      = [\"679593333241\"]\n+most_recent = true\n+\n+  filter {\n+      name   = \"name\"\n+      values = [\"CentOS Linux 7 x86_64 HVM EBS *\"]\n+  }\n+\n   filter {\n-    name = \"name\"\n-    values = [\n-      \"amzn-ami-hvm-*-x86_64-gp2\",\n-    ]\n+      name   = \"architecture\"\n+      values = [\"x86_64\"]\n   }\n\n   filter {\n-    name = \"owner-alias\"\n-    values = [\n-      \"amazon\",\n-    ]\n+      name   = \"root-device-type\"\n+      values = [\"ebs\"]\n   }\n }\n\n@@ -119,9 +169,9 @@ module \"autoscale_group\" {\n   stage               = \"${var.stage}\"\n   name                = \"${var.name}\"\n\n-  image_id                    = \"${data.aws_ami.amazon_linux.id}\"\n+  image_id                    = \"${data.aws_ami.centos.id}\"\n   instance_type               = \"${var.amazon_linux_instance_type}\"\n-  security_group_ids          = [\"sg-xxxxxxxx\"]\n+  security_group_ids          = [\"${module.vpc.vpc_default_security_group_id}\"]\n   subnet_ids                  = []\n   health_check_type           = \"${var.health_check_type}\"\n   min_size                    = \"${var.min_size}\"\n@@ -129,6 +179,7 @@ module \"autoscale_group\" {\n   wait_for_capacity_timeout   = \"${var.wait_for_capacity_timeout}\"\n   associate_public_ip_address = true\n   user_data_base64            = \"${base64encode(local.userdata)}\"\n+  key_name                    = \"${module.ssh_key_pair.key_name}\"\n\n   # Auto-scaling policies and CloudWatch metric alarms\n@@ -137,3 +188,24 @@ module \"autoscale_group\" {\n   cpu_utilization_low_threshold_percent  = \"${var.cpu_utilization_high_threshold_percent}\"\n\n }\n+\n+\n+module \"ec2_service_alarms\" {\n+  source         = \"modules/terraform-aws-ec2-cloudwatch-sns-alarms-master\"\n+  namespace      = \"${var.namespace}\"\n+  stage          = \"${var.stage}\"\n+  name           = \"${var.name}\"\n+\n+  cpu_utilization_high_threshold  = \"${var.cpu_utilization_high_threshold_percent}\"\n+  cpu_utilization_high_ok_actions = \"${module.notify_slack.this_slack_topic_arn}\"\n+\n+  cpu_utilization_low_threshold       = \"${var.cpu_utilization_high_threshold_percent}\"\n+  cpu_utilization_low_alarm_actions   = \"${module.notify_slack.this_slack_topic_arn}\"\n+\n+  # cpu_utilization_high_alarm_actions  = \"${module.notify_slack.this_slack_topic_arn}\"\n+\n+  memory_utilization_high_threshold   = \"${var.memory_utilization_high_threshold}\"\n+  memory_utilization_low_threshold    = \"${var.memory_utilization_low_threshold}\"\n+\n+\n+}\ndiff --git a/modules/terraform-aws-ec2-autoscale-group-master/.gitignore b/modules/terraform-aws-ec2-autoscale-group-master/.gitignore\nindex 10db001..40b0feb 100755\n--- a/modules/terraform-aws-ec2-autoscale-group-master/.gitignore\n+++ b/modules/terraform-aws-ec2-autoscale-group-master/.gitignore\n@@ -4,10 +4,10 @@\n # .tfstate files\n *.tfstate\n *.tfstate.*\n-\n # .tfvars files\n *.tfvars\n\n+\n **/.idea\n **/*.iml\n\ndiff --git a/modules/terraform-aws-ec2-autoscale-group-master/main.tf b/modules/terraform-aws-ec2-autoscale-group-master/main.tf\nindex c5773ab..1b86186 100755\n--- a/modules/terraform-aws-ec2-autoscale-group-master/main.tf\n+++ b/modules/terraform-aws-ec2-autoscale-group-master/main.tf\n@@ -1,7 +1,7 @@\n module \"label\" {\n   source     = \"../../modules/terraform-null-label-master\"\n   namespace  = \"${var.namespace}\"\n-  name       = \"${var.name}\"\n+  name       = \"asg\"\n   stage      = \"${var.stage}\"\n   delimiter  = \"${var.delimiter}\"\n   attributes = \"${var.attributes}\"\n@@ -13,6 +13,7 @@ resource \"aws_launch_template\" \"default\" {\n   count = \"${var.enabled == \"true\" ? 1 : 0}\"\n\n   name_prefix                          = \"${format(\"%s%s\", module.label.id, var.delimiter)}\"\n+  # name                                 = \"${module.label.id}\"\n   block_device_mappings                = [\"${var.block_device_mappings}\"]\n   credit_specification                 = [\"${var.credit_specification}\"]\n   disable_api_termination              = \"${var.disable_api_termination}\"\ndiff --git a/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/.gitignore b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/.gitignore\nnew file mode 100755\nindex 0000000..10db001\n--- /dev/null\n+++ b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/.gitignore\n@@ -0,0 +1,15 @@\n+#  Local .terraform directories\n+**/.terraform/*\n+\n+# .tfstate files\n+*.tfstate\n+*.tfstate.*\n+\n+# .tfvars files\n+*.tfvars\n+\n+**/.idea\n+**/*.iml\n+\n+**/.build-harness\n+**/build-harness\ndiff --git a/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/.travis.yml b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/.travis.yml\nnew file mode 100755\nindex 0000000..241026e\n--- /dev/null\n+++ b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/.travis.yml\n@@ -0,0 +1,16 @@\n+addons:\n+  apt:\n+    packages:\n+      - git\n+      - make\n+      - curl\n+\n+install:\n+  - make init\n+\n+script:\n+  - make terraform/install\n+  - make terraform/get-plugins\n+  - make terraform/get-modules\n+  - make terraform/lint\n+  - make terraform/validate\ndiff --git a/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/Makefile b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/Makefile\nnew file mode 100755\nindex 0000000..655f630\n--- /dev/null\n+++ b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/Makefile\n@@ -0,0 +1,10 @@\n+SHELL := /bin/bash\n+\n+# List of targets the `readme` target should call before generating the readme\n+export README_DEPS ?= docs/targets.md docs/terraform.md\n+\n+-include $(shell curl -sSL -o .build-harness \"https://git.io/build-harness\"; echo .build-harness)\n+\n+## Lint terraform code\n+lint:\n+\t$(SELF) terraform/install terraform/get-modules terraform/get-plugins terraform/lint terraform/validate\n\\ No newline at end of file\ndiff --git a/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/README.md b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/README.md\nnew file mode 100755\nindex 0000000..51fc764\n--- /dev/null\n+++ b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/README.md\n@@ -0,0 +1,225 @@\n+<!-- This file was automatically generated by the `build-harness`. Make all changes to `README.yaml` and run `make readme` to rebuild this file. -->\n+\n+[![Cloud Posse](https://cloudposse.com/logo-300x69.svg)](https://cloudposse.com)\n+\n+# terraform-aws-ecs-cloudwatch-sns-alarms\n+\n+ [![Build Status](https://travis-ci.org/cloudposse/terraform-aws-ecs-cloudwatch-sns-alarms.svg?branch=master)](https://travis-ci.org/cloudposse/terraform-aws-ecs-cloudwatch-sns-alarms) [![Latest Release](https://img.shields.io/github/release/cloudposse/terraform-aws-ecs-cloudwatch-sns-alarms.svg)](https://github.com/cloudposse/terraform-aws-ecs-cloudwatch-sns-alarms/releases/latest) [![Slack Community](https://slack.cloudposse.com/badge.svg)](https://slack.cloudposse.com)\n+\n+\n+Terraform module for creating alarms for tracking important changes and occurrences from ECS Services.\n+\n+\n+---\n+\n+This project is part of our comprehensive [\"SweetOps\"](https://docs.cloudposse.com) approach towards DevOps.\n+\n+\n+It's 100% Open Source and licensed under the [APACHE2](LICENSE).\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+## Usage\n+\n+```hcl\n+module \"ecs_service_alarms\" {\n+  source         = \"git::https://github.com/cloudposse/terraform-aws-ecs-cloudwatch-sns-alarms.git?ref=tags/0.1.0\"\n+  namespace      = \"cp\"\n+  stage          = \"prod\"\n+  name           = \"app\"\n+  cluster_name   = \"example\"\n+  service_name   = \"app\"\n+}\n+```\n+\n+\n+\n+\n+\n+\n+\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| alarm_description | The string to format and use as the alarm description. | string | `Average service %v utilization %v last %d minute(s) over %v period(s)` | no |\n+| attributes | List of attributes to add to label. | list | `<list>` | no |\n+| cluster_name | The name of the ECS cluster to monitor. | string | - | yes |\n+| cpu_utilization_high_alarm_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on CPU Utilization High Alarm action. | list | `<list>` | no |\n+| cpu_utilization_high_evaluation_periods | Number of periods to evaluate for the alarm. | string | `1` | no |\n+| cpu_utilization_high_ok_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on CPU Utilization High OK action. | list | `<list>` | no |\n+| cpu_utilization_high_period | Duration in seconds to evaluate for the alarm. | string | `300` | no |\n+| cpu_utilization_high_threshold | The maximum percentage of CPU utilization average. | string | `80` | no |\n+| cpu_utilization_low_alarm_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on CPU Utilization Low Alarm action. | list | `<list>` | no |\n+| cpu_utilization_low_evaluation_periods | Number of periods to evaluate for the alarm. | string | `1` | no |\n+| cpu_utilization_low_ok_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on CPU Utilization Low OK action. | list | `<list>` | no |\n+| cpu_utilization_low_period | Duration in seconds to evaluate for the alarm. | string | `300` | no |\n+| cpu_utilization_low_threshold | The minimum percentage of CPU utilization average. | string | `20` | no |\n+| delimiter | The delimiter to be used in labels. | string | `-` | no |\n+| enabled | Whether to create all resources | string | `true` | no |\n+| memory_utilization_high_alarm_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on Memory Utilization High Alarm action. | list | `<list>` | no |\n+| memory_utilization_high_evaluation_periods | Number of periods to evaluate for the alarm. | string | `1` | no |\n+| memory_utilization_high_ok_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on Memory Utilization High OK action. | list | `<list>` | no |\n+| memory_utilization_high_period | Duration in seconds to evaluate for the alarm. | string | `300` | no |\n+| memory_utilization_high_threshold | The maximum percentage of Memory utilization average. | string | `80` | no |\n+| memory_utilization_low_alarm_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on Memory Utilization Low Alarm action. | list | `<list>` | no |\n+| memory_utilization_low_evaluation_periods | Number of periods to evaluate for the alarm. | string | `1` | no |\n+| memory_utilization_low_ok_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on Memory Utilization Low OK action. | list | `<list>` | no |\n+| memory_utilization_low_period | Duration in seconds to evaluate for the alarm. | string | `300` | no |\n+| memory_utilization_low_threshold | The minimum percentage of Memory utilization average. | string | `20` | no |\n+| name | Name (unique identifier for app or service) | string | - | yes |\n+| namespace | Namespace (e.g. `cp` or `cloudposse`) | string | - | yes |\n+| service_name | The name of the ECS Service in the ECS cluster to monitor. | string | `` | no |\n+| stage | Stage (e.g. `prod`, `dev`, `staging`) | string | - | yes |\n+| tags | Map of key-value pairs to use for tags. | map | `<map>` | no |\n+\n+\n+\n+\n+## Related Projects\n+\n+Check out these related projects.\n+\n+- [terraform-aws-cloudwatch-logs](https://github.com/cloudposse/terraform-aws-cloudwatch-logs) - Terraform Module to Provide a CloudWatch Logs Endpoint\n+- [terraform-aws-cloudwatch-flow-logs](https://github.com/cloudposse/terraform-aws-cloudwatch-flow-logs) - Terraform module for enabling flow logs for vpc and subnets.\n+- [terraform-aws-efs-cloudwatch-sns-alarms](https://github.com/cloudposse/terraform-aws-efs-cloudwatch-sns-alarms) - Terraform module that configures CloudWatch SNS alerts for EFS\n+- [terrform-aws-elasticache-cloudwatch-sns-alarms](https://github.com/cloudposse/terraform-aws-elasticache-cloudwatch-sns-alarms) - Terraform module that configures CloudWatch SNS alerts for ElastiCache\n+- [terraform-aws-lambda-cloudwatch-sns-alarms](https://github.com/cloudposse/terraform-aws-lambda-cloudwatch-sns-alarms) - Terraform module for creating a set of Lambda alarms and outputting to an endpoint\n+- [terraform-aws-rds-cloudwatch-sns-alarms](https://github.com/cloudposse/terraform-aws-rds-cloudwatch-sns-alarms) - Terraform module that configures important RDS alerts using CloudWatch and sends them to an SNS topic\n+- [terraform-aws-sqs-cloudwatch-sns-alarms](https://github.com/cloudposse/terraform-aws-sqs-cloudwatch-sns-alarms) - Terraform module for creating alarms for SQS and notifying endpoints\n+\n+\n+\n+## Help\n+\n+**Got a question?**\n+\n+File a GitHub [issue](https://github.com/cloudposse/terraform-aws-ecs-cloudwatch-sns-alarms/issues), send us an [email][email] or join our [Slack Community][slack].\n+\n+## Commercial Support\n+\n+Work directly with our team of DevOps experts via email, slack, and video conferencing.\n+\n+We provide [*commercial support*][commercial_support] for all of our [Open Source][github] projects. As a *Dedicated Support* customer, you have access to our team of subject matter experts at a fraction of the cost of a full-time engineer.\n+\n+[![E-Mail](https://img.shields.io/badge/email-hello@cloudposse.com-blue.svg)](mailto:hello@cloudposse.com)\n+\n+- **Questions.** We'll use a Shared Slack channel between your team and ours.\n+- **Troubleshooting.** We'll help you triage why things aren't working.\n+- **Code Reviews.** We'll review your Pull Requests and provide constructive feedback.\n+- **Bug Fixes.** We'll rapidly work to fix any bugs in our projects.\n+- **Build New Terraform Modules.** We'll develop original modules to provision infrastructure.\n+- **Cloud Architecture.** We'll assist with your cloud strategy and design.\n+- **Implementation.** We'll provide hands-on support to implement our reference architectures.\n+\n+\n+## Community Forum\n+\n+Get access to our [Open Source Community Forum][slack] on Slack. It's **FREE** to join for everyone! Our \"SweetOps\" community is where you get to talk with others who share a similar vision for how to rollout and manage infrastructure. This is the best place to talk shop, ask questions, solicit feedback, and work together as a community to build *sweet* infrastructure.\n+\n+## Contributing\n+\n+### Bug Reports & Feature Requests\n+\n+Please use the [issue tracker](https://github.com/cloudposse/terraform-aws-ecs-cloudwatch-sns-alarms/issues) to report any bugs or file feature requests.\n+\n+### Developing\n+\n+If you are interested in being a contributor and want to get involved in developing this project or [help out](https://github.com/orgs/cloudposse/projects/3) with our other projects, we would love to hear from you! Shoot us an [email](mailto:hello@cloudposse.com).\n+\n+In general, PRs are welcome. We follow the typical \"fork-and-pull\" Git workflow.\n+\n+ 1. **Fork** the repo on GitHub\n+ 2. **Clone** the project to your own machine\n+ 3. **Commit** changes to your own branch\n+ 4. **Push** your work back up to your fork\n+ 5. Submit a **Pull Request** so that we can review your changes\n+\n+**NOTE:** Be sure to merge the latest changes from \"upstream\" before making a pull request!\n+\n+\n+## Copyright\n+\n+Copyright \ufffd 2017-2018 [Cloud Posse, LLC](https://cloudposse.com)\n+\n+\n+\n+## License\n+\n+[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n+\n+See [LICENSE](LICENSE) for full details.\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+      https://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+## Trademarks\n+\n+All other trademarks referenced herein are the property of their respective owners.\n+\n+## About\n+\n+This project is maintained and funded by [Cloud Posse, LLC][website]. Like it? Please let us know at <hello@cloudposse.com>\n+\n+[![Cloud Posse](https://cloudposse.com/logo-300x69.svg)](https://cloudposse.com)\n+\n+We're a [DevOps Professional Services][hire] company based in Los Angeles, CA. We love [Open Source Software](https://github.com/cloudposse/)!\n+\n+We offer paid support on all of our projects.\n+\n+Check out [our other projects][github], [apply for a job][jobs], or [hire us][hire] to help with your cloud strategy and implementation.\n+\n+  [docs]: https://docs.cloudposse.com/\n+  [website]: https://cloudposse.com/\n+  [github]: https://github.com/cloudposse/\n+  [commercial_support]: https://github.com/orgs/cloudposse/projects\n+  [jobs]: https://cloudposse.com/jobs/\n+  [hire]: https://cloudposse.com/contact/\n+  [slack]: https://slack.cloudposse.com/\n+  [linkedin]: https://www.linkedin.com/company/cloudposse\n+  [twitter]: https://twitter.com/cloudposse/\n+  [email]: mailto:hello@cloudposse.com\n+\n+\n+### Contributors\n+\n+|  [![Erik Osterman][osterman_avatar]][osterman_homepage]<br/>[Erik Osterman][osterman_homepage] | [![Jamie Nelson][Jamie-BitFlight_avatar]][Jamie-BitFlight_homepage]<br/>[Jamie Nelson][Jamie-BitFlight_homepage] | [![Sarkis Varozian][sarkis_avatar]][sarkis_homepage]<br/>[Sarkis Varozian][sarkis_homepage] |\n+|---|---|---|\n+\n+  [osterman_homepage]: https://github.com/osterman\n+  [osterman_avatar]: https://github.com/osterman.png?size=150\n+  [Jamie-BitFlight_homepage]: https://github.com/Jamie-BitFlight\n+  [Jamie-BitFlight_avatar]: https://github.com/Jamie-BitFlight.png?size=150\n+  [sarkis_homepage]: https://github.com/sarkis\n+  [sarkis_avatar]: https://github.com/sarkis.png?size=150\n+\n+\ndiff --git a/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/README.yaml b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/README.yaml\nnew file mode 100755\nindex 0000000..1273f40\n--- /dev/null\n+++ b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/README.yaml\n@@ -0,0 +1,95 @@\n+---\n+#\n+# This is the canonical configuration for the `README.md`\n+# Run `make readme` to rebuild the `README.md`\n+#\n+\n+# Name of this project\n+name: terraform-aws-ecs-cloudwatch-sns-alarms\n+\n+# Logo for this project\n+#logo: docs/logo.png\n+\n+# License of this project\n+license: \"APACHE2\"\n+\n+# Canonical GitHub repo\n+github_repo: cloudposse/terraform-aws-ecs-cloudwatch-sns-alarms\n+\n+# Badges to display\n+badges:\n+  - name: \"Build Status\"\n+    image: \"https://travis-ci.org/cloudposse/terraform-aws-ecs-cloudwatch-sns-alarms.svg?branch=master\"\n+    url: \"https://travis-ci.org/cloudposse/terraform-aws-ecs-cloudwatch-sns-alarms\"\n+  - name: \"Latest Release\"\n+    image: \"https://img.shields.io/github/release/cloudposse/terraform-aws-ecs-cloudwatch-sns-alarms.svg\"\n+    url: \"https://github.com/cloudposse/terraform-aws-ecs-cloudwatch-sns-alarms/releases/latest\"\n+  - name: \"Slack Community\"\n+    image: \"https://slack.cloudposse.com/badge.svg\"\n+    url: \"https://slack.cloudposse.com\"\n+\n+related:\n+  - name: \"terraform-aws-cloudwatch-logs\"\n+    description: \"Terraform Module to Provide a CloudWatch Logs Endpoint\"\n+    url: \"https://github.com/cloudposse/terraform-aws-cloudwatch-logs\"\n+\n+  - name: \"terraform-aws-cloudwatch-flow-logs\"\n+    description: \"Terraform module for enabling flow logs for vpc and subnets.\"\n+    url: \"https://github.com/cloudposse/terraform-aws-cloudwatch-flow-logs\"\n+\n+  - name: \"terraform-aws-efs-cloudwatch-sns-alarms\"\n+    description: \"Terraform module that configures CloudWatch SNS alerts for EFS\"\n+    url: \"https://github.com/cloudposse/terraform-aws-efs-cloudwatch-sns-alarms\"\n+\n+  - name: \"terrform-aws-elasticache-cloudwatch-sns-alarms\"\n+    description: \"Terraform module that configures CloudWatch SNS alerts for ElastiCache\"\n+    url: \"https://github.com/cloudposse/terraform-aws-elasticache-cloudwatch-sns-alarms\"\n+\n+  - name: \"terraform-aws-lambda-cloudwatch-sns-alarms\"\n+    description: \"Terraform module for creating a set of Lambda alarms and outputting to an endpoint\"\n+    url: \"https://github.com/cloudposse/terraform-aws-lambda-cloudwatch-sns-alarms\"\n+\n+  - name: \"terraform-aws-rds-cloudwatch-sns-alarms\"\n+    description: \"Terraform module that configures important RDS alerts using CloudWatch and sends them to an SNS topic\"\n+    url: \"https://github.com/cloudposse/terraform-aws-rds-cloudwatch-sns-alarms\"\n+\n+  - name: \"terraform-aws-sqs-cloudwatch-sns-alarms\"\n+    description: \"Terraform module for creating alarms for SQS and notifying endpoints\"\n+    url: \"https://github.com/cloudposse/terraform-aws-sqs-cloudwatch-sns-alarms\"\n+\n+# Short description of this project\n+description: |-\n+  Terraform module for creating alarms for tracking important changes and occurrences from ECS Services.\n+\n+# How to use this project\n+usage: |-\n+  ```hcl\n+  module \"ecs_service_alarms\" {\n+    source         = \"git::https://github.com/cloudposse/terraform-aws-ecs-cloudwatch-sns-alarms.git?ref=tags/0.1.0\"\n+    namespace      = \"cp\"\n+    stage          = \"prod\"\n+    name           = \"app\"\n+    cluster_name   = \"example\"\n+    service_name   = \"app\"\n+  }\n+  ```\n+\n+# Example usage\n+#examples: |-\n+\n+# How to get started quickly\n+#quickstart: |-\n+#  Here's how to get started...\n+\n+# Other files to include in this README from the project folder\n+include:\n+  - \"docs/terraform.md\"\n+\n+# Contributors to this project\n+contributors:\n+  - name: \"Erik Osterman\"\n+    github: \"osterman\"\n+  - name: \"Jamie Nelson\"\n+    github: \"Jamie-BitFlight\"\n+  - name: \"Sarkis Varozian\"\n+    github: \"sarkis\"\ndiff --git a/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/alarms.tf b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/alarms.tf\nnew file mode 100755\nindex 0000000..c648a64\n--- /dev/null\n+++ b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/alarms.tf\n@@ -0,0 +1,105 @@\n+module \"cpu_utilization_high_alarm_label\" {\n+  source     = \"../../modules/terraform-null-label-master\"\n+  name       = \"alarm\"\n+  namespace  = \"${var.namespace}\"\n+  stage      = \"${var.stage}\"\n+  attributes = \"${compact(concat(var.attributes, list(\"cpu\", \"utilization\", \"high\")))}\"\n+}\n+\n+module \"cpu_utilization_low_alarm_label\" {\n+  source     = \"../../modules/terraform-null-label-master\"\n+  name       = \"alarm\"\n+  namespace  = \"${var.namespace}\"\n+  stage      = \"${var.stage}\"\n+  attributes = \"${compact(concat(var.attributes, list(\"cpu\", \"utilization\", \"low\")))}\"\n+}\n+\n+module \"memory_utilization_high_alarm_label\" {\n+  source     = \"../../modules/terraform-null-label-master\"\n+  name       = \"alarm\"\n+  namespace  = \"${var.namespace}\"\n+  stage      = \"${var.stage}\"\n+  attributes = \"${compact(concat(var.attributes, list(\"memory\", \"utilization\", \"high\")))}\"\n+}\n+\n+module \"memory_utilization_low_alarm_label\" {\n+  source     = \"../../modules/terraform-null-label-master\"\n+  name       = \"alarm\"\n+  namespace  = \"${var.namespace}\"\n+  stage      = \"${var.stage}\"\n+  attributes = \"${compact(concat(var.attributes, list(\"memory\", \"utilization\", \"low\")))}\"\n+}\n+\n+locals {\n+  thresholds = {\n+    CPUUtilizationHighThreshold    = \"${min(max(var.cpu_utilization_high_threshold, 0), 100)}\"\n+    CPUUtilizationLowThreshold     = \"${min(max(var.cpu_utilization_low_threshold, 0), 100)}\"\n+    MemoryUtilizationHighThreshold = \"${min(max(var.memory_utilization_high_threshold, 0), 100)}\"\n+    MemoryUtilizationLowThreshold  = \"${min(max(var.memory_utilization_low_threshold, 0), 100)}\"\n+  }\n+\n+}\n+\n+resource \"aws_cloudwatch_metric_alarm\" \"cpu_utilization_high\" {\n+  count               = \"${local.enabled}\"\n+  alarm_name          = \"${module.cpu_utilization_high_alarm_label.id}\"\n+  comparison_operator = \"GreaterThanThreshold\"\n+  evaluation_periods  = \"${var.cpu_utilization_high_evaluation_periods}\"\n+  metric_name         = \"CPUUtilization\"\n+  namespace           = \"AWS/EC2\"\n+  period              = \"${var.cpu_utilization_high_period}\"\n+  statistic           = \"Average\"\n+  threshold           = \"${local.thresholds[\"CPUUtilizationHighThreshold\"]}\"\n+  alarm_description   = \"${format(var.alarm_description, \"CPU\", \"High\", var.cpu_utilization_high_period/60, var.cpu_utilization_high_evaluation_periods)}\"\n+  alarm_actions       = [\"${compact(var.cpu_utilization_high_alarm_actions)}\"]\n+  ok_actions          = [\"${compact(var.cpu_utilization_high_ok_actions)}\"]\n+\n+}\n+\n+resource \"aws_cloudwatch_metric_alarm\" \"cpu_utilization_low\" {\n+  count               = \"${local.enabled}\"\n+  alarm_name          = \"${module.cpu_utilization_low_alarm_label.id}\"\n+  comparison_operator = \"LessThanThreshold\"\n+  evaluation_periods  = \"${var.cpu_utilization_low_evaluation_periods}\"\n+  metric_name         = \"CPUUtilization\"\n+  namespace           = \"AWS/EC2\"\n+  period              = \"${var.cpu_utilization_low_period}\"\n+  statistic           = \"Average\"\n+  threshold           = \"${local.thresholds[\"CPUUtilizationLowThreshold\"]}\"\n+  alarm_description   = \"${format(var.alarm_description, \"CPU\", \"Low\", var.cpu_utilization_low_period/60, var.cpu_utilization_low_evaluation_periods)}\"\n+  alarm_actions       = [\"${compact(var.cpu_utilization_low_alarm_actions)}\"]\n+  ok_actions          = [\"${compact(var.cpu_utilization_low_ok_actions)}\"]\n+\n+}\n+\n+resource \"aws_cloudwatch_metric_alarm\" \"memory_utilization_high\" {\n+  count               = \"${local.enabled}\"\n+  alarm_name          = \"${module.memory_utilization_high_alarm_label.id}\"\n+  comparison_operator = \"GreaterThanThreshold\"\n+  evaluation_periods  = \"${var.memory_utilization_high_evaluation_periods}\"\n+  metric_name         = \"MemoryUtilization\"\n+  namespace           = \"AWS/EC2\"\n+  period              = \"${var.memory_utilization_high_period}\"\n+  statistic           = \"Average\"\n+  threshold           = \"${local.thresholds[\"MemoryUtilizationHighThreshold\"]}\"\n+  alarm_description   = \"${format(var.alarm_description, \"Memory\", \"Hight\", var.memory_utilization_high_period/60, var.memory_utilization_high_evaluation_periods)}\"\n+  alarm_actions       = [\"${compact(var.memory_utilization_high_alarm_actions)}\"]\n+  ok_actions          = [\"${compact(var.memory_utilization_high_ok_actions)}\"]\n+\n+}\n+\n+resource \"aws_cloudwatch_metric_alarm\" \"memory_utilization_low\" {\n+  count               = \"${local.enabled}\"\n+  alarm_name          = \"${module.memory_utilization_low_alarm_label.id}\"\n+  comparison_operator = \"LessThanThreshold\"\n+  evaluation_periods  = \"${var.memory_utilization_low_evaluation_periods}\"\n+  metric_name         = \"MemoryUtilization\"\n+  namespace           = \"AWS/EC2\"\n+  period              = \"${var.memory_utilization_low_period}\"\n+  statistic           = \"Average\"\n+  threshold           = \"${local.thresholds[\"MemoryUtilizationLowThreshold\"]}\"\n+  alarm_description   = \"${format(var.alarm_description, \"Memory\", \"Low\", var.memory_utilization_low_period/60, var.memory_utilization_low_evaluation_periods)}\"\n+  alarm_actions       = [\"${compact(var.memory_utilization_low_alarm_actions)}\"]\n+  ok_actions          = [\"${compact(var.memory_utilization_low_ok_actions)}\"]\n+\n+}\ndiff --git a/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/docs/targets.md b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/docs/targets.md\nnew file mode 100755\nindex 0000000..09c39cd\n--- /dev/null\n+++ b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/docs/targets.md\n@@ -0,0 +1,9 @@\n+## Makefile Targets\n+```\n+Available targets:\n+\n+  help                                This help screen\n+  help/all                            Display help for all targets\n+  lint                                Lint terraform code\n+\n+```\ndiff --git a/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/docs/terraform.md b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/docs/terraform.md\nnew file mode 100755\nindex 0000000..a9b7d8b\n--- /dev/null\n+++ b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/docs/terraform.md\n@@ -0,0 +1,36 @@\n+\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| alarm_description | The string to format and use as the alarm description. | string | `Average service %v utilization %v last %d minute(s) over %v period(s)` | no |\n+| attributes | List of attributes to add to label. | list | `<list>` | no |\n+| cluster_name | The name of the ECS cluster to monitor. | string | - | yes |\n+| cpu_utilization_high_alarm_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on CPU Utilization High Alarm action. | list | `<list>` | no |\n+| cpu_utilization_high_evaluation_periods | Number of periods to evaluate for the alarm. | string | `1` | no |\n+| cpu_utilization_high_ok_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on CPU Utilization High OK action. | list | `<list>` | no |\n+| cpu_utilization_high_period | Duration in seconds to evaluate for the alarm. | string | `300` | no |\n+| cpu_utilization_high_threshold | The maximum percentage of CPU utilization average. | string | `80` | no |\n+| cpu_utilization_low_alarm_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on CPU Utilization Low Alarm action. | list | `<list>` | no |\n+| cpu_utilization_low_evaluation_periods | Number of periods to evaluate for the alarm. | string | `1` | no |\n+| cpu_utilization_low_ok_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on CPU Utilization Low OK action. | list | `<list>` | no |\n+| cpu_utilization_low_period | Duration in seconds to evaluate for the alarm. | string | `300` | no |\n+| cpu_utilization_low_threshold | The minimum percentage of CPU utilization average. | string | `20` | no |\n+| delimiter | The delimiter to be used in labels. | string | `-` | no |\n+| enabled | Whether to create all resources | string | `true` | no |\n+| memory_utilization_high_alarm_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on Memory Utilization High Alarm action. | list | `<list>` | no |\n+| memory_utilization_high_evaluation_periods | Number of periods to evaluate for the alarm. | string | `1` | no |\n+| memory_utilization_high_ok_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on Memory Utilization High OK action. | list | `<list>` | no |\n+| memory_utilization_high_period | Duration in seconds to evaluate for the alarm. | string | `300` | no |\n+| memory_utilization_high_threshold | The maximum percentage of Memory utilization average. | string | `80` | no |\n+| memory_utilization_low_alarm_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on Memory Utilization Low Alarm action. | list | `<list>` | no |\n+| memory_utilization_low_evaluation_periods | Number of periods to evaluate for the alarm. | string | `1` | no |\n+| memory_utilization_low_ok_actions | A list of ARNs (i.e. SNS Topic ARN) to notify on Memory Utilization Low OK action. | list | `<list>` | no |\n+| memory_utilization_low_period | Duration in seconds to evaluate for the alarm. | string | `300` | no |\n+| memory_utilization_low_threshold | The minimum percentage of Memory utilization average. | string | `20` | no |\n+| name | Name (unique identifier for app or service) | string | - | yes |\n+| namespace | Namespace (e.g. `cp` or `cloudposse`) | string | - | yes |\n+| service_name | The name of the ECS Service in the ECS cluster to monitor. | string | `` | no |\n+| stage | Stage (e.g. `prod`, `dev`, `staging`) | string | - | yes |\n+| tags | Map of key-value pairs to use for tags. | map | `<map>` | no |\n+\ndiff --git a/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/example/README.md b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/example/README.md\nnew file mode 100755\nindex 0000000..2253e58\n--- /dev/null\n+++ b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/example/README.md\n@@ -0,0 +1,29 @@\n+# Example usage of the Alarm for monitoring the ECR cluster metric alone.\n+\n+To test this example, clone the repoistry, cd into this example directory and run:\n+```bash\n+terraform init\n+terraform apply\n+```\n+A new empty cluster will be created in London region, and two metric alarms will be created for memory and cpu usage.\n+\n+```hcl\n+provider \"aws\" {\n+  region = \"eu-west-2\"\n+}\n+\n+module \"alarms\" {\n+  source       = \"../\"\n+  namespace    = \"cp\"\n+  stage        = \"prod\"\n+  name         = \"app\"\n+  cluster_name = \"${aws_ecs_cluster.default.name}\"\n+  service_name = \"\"\n+  enabled      = \"true\"\n+}\n+\n+resource \"aws_ecs_cluster\" \"default\" {\n+  name = \"cp-prod-app\"\n+}\n+\n+```\n\\ No newline at end of file\ndiff --git a/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/example/main.tf b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/example/main.tf\nnew file mode 100755\nindex 0000000..f54b9fd\n--- /dev/null\n+++ b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/example/main.tf\n@@ -0,0 +1,17 @@\n+provider \"aws\" {\n+  region = \"eu-west-2\"\n+}\n+\n+module \"alarms\" {\n+  source       = \"../\"\n+  namespace    = \"cp\"\n+  stage        = \"prod\"\n+  name         = \"app\"\n+  cluster_name = \"${aws_ecs_cluster.default.name}\"\n+  service_name = \"\"\n+  enabled      = \"true\"\n+}\n+\n+resource \"aws_ecs_cluster\" \"default\" {\n+  name = \"cp-prod-app\"\n+}\ndiff --git a/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/main.tf b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/main.tf\nnew file mode 100755\nindex 0000000..7f8d372\n--- /dev/null\n+++ b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/main.tf\n@@ -0,0 +1,5 @@\n+data \"aws_caller_identity\" \"default\" {}\n+\n+locals {\n+  enabled = \"${var.enabled == \"true\" ? 1 : 0}\"\n+}\ndiff --git a/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/outputs.tf b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/outputs.tf\nnew file mode 100755\nindex 0000000..8b13789\n--- /dev/null\n+++ b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/outputs.tf\n@@ -0,0 +1 @@\n+\ndiff --git a/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/variables.tf b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/variables.tf\nnew file mode 100755\nindex 0000000..81e0da9\n--- /dev/null\n+++ b/modules/terraform-aws-ec2-cloudwatch-sns-alarms-master/variables.tf\n@@ -0,0 +1,165 @@\n+variable \"name\" {\n+  type        = \"string\"\n+  description = \"Name (unique identifier for app or service)\"\n+}\n+\n+variable \"namespace\" {\n+  type        = \"string\"\n+  description = \"Namespace (e.g. `cp` or `cloudposse`)\"\n+}\n+\n+variable \"delimiter\" {\n+  type        = \"string\"\n+  description = \"The delimiter to be used in labels.\"\n+  default     = \"-\"\n+}\n+\n+variable \"stage\" {\n+  type        = \"string\"\n+  description = \"Stage (e.g. `prod`, `dev`, `staging`)\"\n+}\n+\n+variable \"attributes\" {\n+  type        = \"list\"\n+  description = \"List of attributes to add to label.\"\n+  default     = []\n+}\n+\n+variable \"tags\" {\n+  type        = \"map\"\n+  description = \"Map of key-value pairs to use for tags.\"\n+  default     = {}\n+}\n+\n+variable \"enabled\" {\n+  type        = \"string\"\n+  description = \"Whether to create all resources\"\n+  default     = \"true\"\n+}\n+\n+\n+variable \"alarm_description\" {\n+  type        = \"string\"\n+  description = \"The string to format and use as the alarm description.\"\n+  default     = \"Average service %v utilization %v last %d minute(s) over %v period(s)\"\n+}\n+\n+variable \"cpu_utilization_high_threshold\" {\n+  type        = \"string\"\n+  description = \"The maximum percentage of CPU utilization average.\"\n+  default     = \"80\"\n+}\n+\n+variable \"cpu_utilization_high_evaluation_periods\" {\n+  type        = \"string\"\n+  description = \"Number of periods to evaluate for the alarm.\"\n+  default     = \"1\"\n+}\n+\n+variable \"cpu_utilization_high_period\" {\n+  type        = \"string\"\n+  description = \"Duration in seconds to evaluate for the alarm.\"\n+  default     = \"300\"\n+}\n+\n+variable \"cpu_utilization_high_alarm_actions\" {\n+  type        = \"list\"\n+  description = \"A list of ARNs (i.e. SNS Topic ARN) to notify on CPU Utilization High Alarm action.\"\n+  default     = []\n+}\n+\n+variable \"cpu_utilization_high_ok_actions\" {\n+  type        = \"list\"\n+  description = \"A list of ARNs (i.e. SNS Topic ARN) to notify on CPU Utilization High OK action.\"\n+  default     = []\n+}\n+\n+variable \"cpu_utilization_low_threshold\" {\n+  type        = \"string\"\n+  description = \"The minimum percentage of CPU utilization average.\"\n+  default     = \"20\"\n+}\n+\n+variable \"cpu_utilization_low_evaluation_periods\" {\n+  type        = \"string\"\n+  description = \"Number of periods to evaluate for the alarm.\"\n+  default     = \"1\"\n+}\n+\n+variable \"cpu_utilization_low_period\" {\n+  type        = \"string\"\n+  description = \"Duration in seconds to evaluate for the alarm.\"\n+  default     = \"300\"\n+}\n+\n+variable \"cpu_utilization_low_alarm_actions\" {\n+  type        = \"list\"\n+  description = \"A list of ARNs (i.e. SNS Topic ARN) to notify on CPU Utilization Low Alarm action.\"\n+  default     = []\n+}\n+\n+variable \"cpu_utilization_low_ok_actions\" {\n+  type        = \"list\"\n+  description = \"A list of ARNs (i.e. SNS Topic ARN) to notify on CPU Utilization Low OK action.\"\n+  default     = []\n+}\n+\n+variable \"memory_utilization_high_threshold\" {\n+  type        = \"string\"\n+  description = \"The maximum percentage of Memory utilization average.\"\n+  default     = \"80\"\n+}\n+\n+variable \"memory_utilization_high_evaluation_periods\" {\n+  type        = \"string\"\n+  description = \"Number of periods to evaluate for the alarm.\"\n+  default     = \"1\"\n+}\n+\n+variable \"memory_utilization_high_period\" {\n+  type        = \"string\"\n+  description = \"Duration in seconds to evaluate for the alarm.\"\n+  default     = \"300\"\n+}\n+\n+variable \"memory_utilization_high_alarm_actions\" {\n+  type        = \"list\"\n+  description = \"A list of ARNs (i.e. SNS Topic ARN) to notify on Memory Utilization High Alarm action.\"\n+  default     = []\n+}\n+\n+variable \"memory_utilization_high_ok_actions\" {\n+  type        = \"list\"\n+  description = \"A list of ARNs (i.e. SNS Topic ARN) to notify on Memory Utilization High OK action.\"\n+  default     = []\n+}\n+\n+variable \"memory_utilization_low_threshold\" {\n+  type        = \"string\"\n+  description = \"The minimum percentage of Memory utilization average.\"\n+  default     = \"20\"\n+}\n+\n+variable \"memory_utilization_low_evaluation_periods\" {\n+  type        = \"string\"\n+  description = \"Number of periods to evaluate for the alarm.\"\n+  default     = \"1\"\n+}\n+\n+variable \"memory_utilization_low_period\" {\n+  type        = \"string\"\n+  description = \"Duration in seconds to evaluate for the alarm.\"\n+  default     = \"300\"\n+}\n+\n+variable \"memory_utilization_low_alarm_actions\" {\n+  type        = \"list\"\n+  description = \"A list of ARNs (i.e. SNS Topic ARN) to notify on Memory Utilization Low Alarm action.\"\n+  default     = []\n+}\n+\n+variable \"memory_utilization_low_ok_actions\" {\n+  type        = \"list\"\n+  description = \"A list of ARNs (i.e. SNS Topic ARN) to notify on Memory Utilization Low OK action.\"\n+  default     = []\n+}\ndiff --git a/modules/terraform-aws-key-pair-master/.gitignore b/modules/terraform-aws-key-pair-master/.gitignore\nindex bf42b9f..a57087d 100755\n--- a/modules/terraform-aws-key-pair-master/.gitignore\n+++ b/modules/terraform-aws-key-pair-master/.gitignore\n@@ -2,10 +2,13 @@\n *.tfstate\n *.tfstate.backup\n\n+# .tfvars files\n+*.tfvars\n+\n # Module directory\n .terraform/\n .idea\n *.iml\n\n .build-harness\n-build-harness\n\\ No newline at end of file\n+build-harness\ndiff --git a/modules/terraform-aws-key-pair-master/main.tf b/modules/terraform-aws-key-pair-master/main.tf\nindex 4ca8c97..f49f09e 100755\n--- a/modules/terraform-aws-key-pair-master/main.tf\n+++ b/modules/terraform-aws-key-pair-master/main.tf\n@@ -2,7 +2,7 @@ module \"label\" {\n   source     = \"../../modules/terraform-null-label-master\"\n   namespace  = \"${var.namespace}\"\n   stage      = \"${var.stage}\"\n-  name       = \"${var.name}\"\n+  name       = \"key_pair\"\n   attributes = \"${var.attributes}\"\n   delimiter  = \"${var.delimiter}\"\n   tags       = \"${var.tags}\"\ndiff --git a/modules/terraform-aws-multi-az-subnets-master/multi-az-subnets.tfvars b/modules/terraform-aws-multi-az-subnets-master/multi-az-subnets.tfvars\nnew file mode 100644\nindex 0000000..b6088e0\n--- /dev/null\n+++ b/modules/terraform-aws-multi-az-subnets-master/multi-az-subnets.tfvars\n@@ -0,0 +1 @@\n+name = \"multi-az-subnets\"\ndiff --git a/modules/terraform-aws-multi-az-subnets-master/private.tf b/modules/terraform-aws-multi-az-subnets-master/private.tf\nindex 2bdb9cb..3d956c5 100755\n--- a/modules/terraform-aws-multi-az-subnets-master/private.tf\n+++ b/modules/terraform-aws-multi-az-subnets-master/private.tf\n@@ -6,7 +6,7 @@ locals {\n module \"private_label\" {\n   source     = \"../../modules/terraform-null-label-master\"\n   namespace  = \"${var.namespace}\"\n-  name       = \"${var.name}\"\n+  name       = \"subnet\"\n   stage      = \"${var.stage}\"\n   delimiter  = \"${var.delimiter}\"\n   tags       = \"${var.tags}\"\ndiff --git a/modules/terraform-aws-multi-az-subnets-master/public.tf b/modules/terraform-aws-multi-az-subnets-master/public.tf\nindex 5ce1b7b..3253a29 100755\n--- a/modules/terraform-aws-multi-az-subnets-master/public.tf\n+++ b/modules/terraform-aws-multi-az-subnets-master/public.tf\n@@ -6,7 +6,7 @@ locals {\n module \"public_label\" {\n   source     = \"../../modules/terraform-null-label-master\"\n   namespace  = \"${var.namespace}\"\n-  name       = \"${var.name}\"\n+  name       = \"subnet\"\n   stage      = \"${var.stage}\"\n   delimiter  = \"${var.delimiter}\"\n   tags       = \"${var.tags}\"\ndiff --git a/modules/terraform-aws-notify-slack-master/.editorconfig b/modules/terraform-aws-notify-slack-master/.editorconfig\nnew file mode 100755\nindex 0000000..71f6718\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/.editorconfig\n@@ -0,0 +1,30 @@\n+# EditorConfig is awesome: http://EditorConfig.org\n+# Uses editorconfig to maintain consistent coding styles\n+\n+# top-most EditorConfig file\n+root = true\n+\n+# Unix-style newlines with a newline ending every file\n+[*]\n+charset = utf-8\n+end_of_line = lf\n+indent_size = 2\n+indent_style = space\n+insert_final_newline = true\n+max_line_length = 80\n+trim_trailing_whitespace = true\n+\n+[*.{tf,tfvars}]\n+indent_size = 2\n+indent_style = space\n+\n+[*.md]\n+max_line_length = 0\n+trim_trailing_whitespace = false\n+\n+[Makefile]\n+tab_width = 2\n+indent_style = tab\n+\n+[COMMIT_EDITMSG]\n+max_line_length = 0\n\\ No newline at end of file\ndiff --git a/modules/terraform-aws-notify-slack-master/.gitignore b/modules/terraform-aws-notify-slack-master/.gitignore\nnew file mode 100755\nindex 0000000..b1db7f1\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/.gitignore\n@@ -0,0 +1,5 @@\n+.terraform\n+terraform.tfstate\n+*.tfstate*\n+terraform.tfvars\n+functions/*.zip\ndiff --git a/modules/terraform-aws-notify-slack-master/.pre-commit-config.yaml b/modules/terraform-aws-notify-slack-master/.pre-commit-config.yaml\nnew file mode 100755\nindex 0000000..804e5bb\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/.pre-commit-config.yaml\n@@ -0,0 +1,10 @@\n+repos:\n+- repo: git://github.com/antonbabenko/pre-commit-terraform\n+  rev: v1.7.3\n+  hooks:\n+    - id: terraform_fmt\n+    - id: terraform_docs\n+- repo: git://github.com/pre-commit/pre-commit-hooks\n+  rev: v1.3.0\n+  hooks:\n+    - id: check-merge-conflict\ndiff --git a/modules/terraform-aws-notify-slack-master/LICENSE b/modules/terraform-aws-notify-slack-master/LICENSE\nnew file mode 100755\nindex 0000000..51fca54\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/LICENSE\n@@ -0,0 +1,11 @@\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\ndiff --git a/modules/terraform-aws-notify-slack-master/README.md b/modules/terraform-aws-notify-slack-master/README.md\nnew file mode 100755\nindex 0000000..89f041c\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/README.md\n@@ -0,0 +1,79 @@\n+# AWS Notify Slack Terraform module\n+\n+This module creates SNS topic (or use existing one) and a AWS Lambda function which sends notifications to Slack using [incoming webhooks API](https://api.slack.com/incoming-webhooks).\n+\n+Start by setting up an [incoming webhook integration](https://my.slack.com/services/new/incoming-webhook/) in your Slack workspace.\n+\n+## Features\n+\n+- [x] AWS Lambda runtime Python 3.6\n+- [x] Create new SNS topic or use existing one\n+- [x] Support plaintext and encrypted version of Slack webhook URL\n+- [x] Most of Slack message options are customizable\n+- [x] Support different types of SNS messages:\n+  - [x] AWS Cloudwatch\n+  - [ ] [Send pull-request to add support of other message types](https://github.com/terraform-aws-modules/terraform-aws-notify-slack/pulls)\n+\n+## Usage\n+\n+```hcl\n+module \"notify_slack\" {\n+  source = \"terraform-aws-modules/notify-slack/aws\"\n+\n+  sns_topic_name = \"slack-topic\"\n+\n+  slack_webhook_url = \"https://hooks.slack.com/services/AAA/BBB/CCC\"\n+  slack_channel     = \"aws-notification\"\n+  slack_username    = \"reporter\"\n+}\n+```\n+\n+## Use existing SNS topic or create new\n+\n+If you want to subscribe AWS Lambda Function created by this module to an existing SNS topic you should specify `create_sns_topic = false` as argument and specify name of existing SNS topic name in `sns_topic_name`.\n+\n+## Examples\n+\n+* [notify-slack-simple](https://github.com/terraform-aws-modules/terraform-aws-notify-slack/tree/master/examples/notify-slack-simple) - Creates SNS topic which sends messages to Slack channel.\n+* [notify-slack-kms](https://github.com/terraform-aws-modules/terraform-aws-notify-slack/tree/master/examples/notify-slack-simple) - Creates SNS topic which sends messages to Slack channel (using KMS to encrypt Slack webhook URL).\n+* [cloudwatch-alerts-to-slack](https://github.com/terraform-aws-modules/terraform-aws-notify-slack/tree/master/examples/cloudwatch-alerts-to-slack) - End to end example which shows how to send AWS Cloudwatch alerts to Slack channel and use KMS to encrypt webhook URL.\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| create | Whether to create all resources | string | `true` | no |\n+| create_sns_topic | Whether to create new SNS topic | string | `true` | no |\n+| create_with_kms_key | Whether to create resources with KMS encryption | string | `false` | no |\n+| kms_key_arn | ARN of the KMS key used for decrypting slack webhook url | string | `` | no |\n+| lambda_function_name | The name of the Lambda function to create | string | `notify_slack` | no |\n+| slack_channel | The name of the channel in Slack for notifications | string | - | yes |\n+| slack_emoji | A custom emoji that will appear on Slack messages | string | `:aws:` | no |\n+| slack_username | The username that will appear on Slack messages | string | - | yes |\n+| slack_webhook_url | The URL of Slack webhook | string | - | yes |\n+| sns_topic_name | The name of the SNS topic to create | string | - | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| lambda_iam_role_arn | The ARN of the IAM role used by Lambda function |\n+| lambda_iam_role_name | The name of the IAM role used by Lambda function |\n+| notify_slack_lambda_function_arn | The ARN of the Lambda function |\n+| notify_slack_lambda_function_invoke_arn | The ARN to be used for invoking Lambda function from API Gateway |\n+| notify_slack_lambda_function_last_modified | The date Lambda function was last modified |\n+| notify_slack_lambda_function_name | The name of the Lambda function |\n+| notify_slack_lambda_function_version | Latest published version of your Lambda function |\n+| this_slack_topic_arn | The ARN of the SNS topic from which messages will be sent to Slack |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+\n+## Authors\n+\n+Module managed by [Anton Babenko](https://github.com/antonbabenko).\n+\n+## License\n+\n+Apache 2 Licensed. See LICENSE for full details.\ndiff --git a/modules/terraform-aws-notify-slack-master/examples/cloudwatch-alerts-to-slack/README.md b/modules/terraform-aws-notify-slack-master/examples/cloudwatch-alerts-to-slack/README.md\nnew file mode 100755\nindex 0000000..76416e0\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/examples/cloudwatch-alerts-to-slack/README.md\n@@ -0,0 +1,81 @@\n+# CloudWatch alerts to Slack\n+\n+Configuration in this directory creates an SNS topic that sends messages to a Slack channel with Slack webhook URL encrypted using KMS and a CloudWatch Alarm that monitors the duration of lambda execution.\n+\n+## KMS keys\n+\n+There are 3 ways to define KMS key which should be used by Lambda function:\n+\n+1. Create [aws_kms_key resource](https://www.terraform.io/docs/providers/aws/r/kms_key.html) and put ARN of it as `kms_key_arn` argument to this module\n+1. Use [aws_kms_alias data-source](https://www.terraform.io/docs/providers/aws/d/kms_alias.html) to get an existing KMS key alias and put ARN of it as `kms_key_arn` argument to this module\n+1. Hard-code the ARN of KMS key\n+\n+Note: Set `create_with_kms_key = true` when providing value of `kms_key_arn` to create required IAM policy which allows to decrypt using specified KMS key.\n+\n+### Option 1:\n+\n+```hcl\n+resource \"aws_kms_key\" \"this\" {\n+  description = \"KMS key for notify-slack test\"\n+}\n+\n+resource \"aws_kms_alias\" \"this\" {\n+  name          = \"alias/kms-test-key\"\n+  target_key_id = \"${aws_kms_key.this.id}\"\n+}\n+\n+// kms_key_arn = \"${aws_kms_key.this.arn}\"\n+// create_with_kms_key = true\n+```\n+\n+### Option 2:\n+\n+```\n+data \"aws_kms_alias\" \"this\" {\n+ name = \"alias/kms-test-key\"\n+}\n+\n+// kms_key_arn = \"${data.aws_kms_alias.this.target_key_arn}\"\n+// create_with_kms_key = true\n+```\n+\n+### Option 3:\n+\n+```\n+variable \"kms_key_arn\" {\n+  default = \"arn:aws:kms:eu-west-1:835367859851:key/054b4846-95fe-4537-94f2-1dfd255238cf\"\n+}\n+\n+// kms_key_arn = \"${var.kms_key_arn}\"\n+// create_with_kms_key = true\n+```\n+\n+## Usage\n+\n+To run this example you need to execute:\n+\n+```bash\n+$ terraform init\n+$ terraform plan\n+$ terraform apply\n+```\n+\n+Note that in practice, encryption of the Slack webhook URL should happen differently (outside of this module).\n+\n+Note that this example may create resources which can cost money. Run `terraform destroy` when you don't need these resources.\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| kms_key_arn |  | string | `arn:aws:kms:eu-west-1:000014191260:key/66db1c5d-d42b-4e28-8efb-07a9cf607a73` | no |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this_sns_topic_arn | The ARN of the created SNS topic from which messages will be sent to Slack |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-notify-slack-master/examples/cloudwatch-alerts-to-slack/main.tf b/modules/terraform-aws-notify-slack-master/examples/cloudwatch-alerts-to-slack/main.tf\nnew file mode 100755\nindex 0000000..c52e808\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/examples/cloudwatch-alerts-to-slack/main.tf\n@@ -0,0 +1,63 @@\n+provider \"aws\" {\n+  region = \"eu-west-1\"\n+}\n+\n+variable \"kms_key_arn\" {\n+  default = \"arn:aws:kms:eu-west-1:000014191260:key/66db1c5d-d42b-4e28-8efb-07a9cf607a73\"\n+}\n+\n+resource \"aws_kms_key\" \"this\" {\n+  description = \"KMS key for notify-slack test\"\n+}\n+\n+resource \"aws_kms_alias\" \"this\" {\n+  name          = \"alias/kms-test-key\"\n+  target_key_id = \"${aws_kms_key.this.id}\"\n+}\n+\n+# Encrypt the URL, storing encryption here will show it in logs and in tfstate\n+# https://www.terraform.io/docs/state/sensitive-data.html\n+data \"aws_kms_ciphertext\" \"slack_url\" {\n+  plaintext = \"https://hooks.slack.com/services/AAA/BBB/CCC\"\n+  key_id    = \"${aws_kms_key.this.arn}\"\n+}\n+\n+module \"notify_slack\" {\n+  source = \"../../\"\n+\n+  sns_topic_name = \"slack-topic\"\n+\n+  slack_webhook_url = \"${data.aws_kms_ciphertext.slack_url.ciphertext_blob}\"\n+  slack_channel     = \"aws-notification\"\n+  slack_username    = \"reporter\"\n+\n+  # Option 1\n+  kms_key_arn = \"${aws_kms_key.this.arn}\"\n+\n+  # Option 2\n+  //  kms_key_arn = \"${data.aws_kms_alias.this.target_key_arn}\"\n+\n+\n+  # Option 3\n+  //  kms_key_arn = \"${var.kms_key_arn}\"\n+\n+  create_with_kms_key = true\n+}\n+\n+resource \"aws_cloudwatch_metric_alarm\" \"LambdaDuration\" {\n+  alarm_name          = \"NotifySlackDuration\"\n+  comparison_operator = \"GreaterThanOrEqualToThreshold\"\n+  evaluation_periods  = \"1\"\n+  metric_name         = \"Duration\"\n+  namespace           = \"AWS/Lambda\"\n+  period              = \"60\"\n+  statistic           = \"Average\"\n+  threshold           = \"5000\"\n+  alarm_description   = \"Duration of notifying slack exceeds threshold\"\n+\n+  alarm_actions = [\"${module.notify_slack.this_slack_topic_arn}\"]\n+\n+  dimensions {\n+    FunctionName = \"${module.notify_slack.notify_slack_lambda_function_name}\"\n+  }\n+}\ndiff --git a/modules/terraform-aws-notify-slack-master/examples/cloudwatch-alerts-to-slack/outputs.tf b/modules/terraform-aws-notify-slack-master/examples/cloudwatch-alerts-to-slack/outputs.tf\nnew file mode 100755\nindex 0000000..18b225e\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/examples/cloudwatch-alerts-to-slack/outputs.tf\n@@ -0,0 +1,4 @@\n+output \"this_sns_topic_arn\" {\n+  description = \"The ARN of the created SNS topic from which messages will be sent to Slack\"\n+  value       = \"${module.notify_slack.this_slack_topic_arn}\"\n+}\ndiff --git a/modules/terraform-aws-notify-slack-master/examples/notify-slack-kms/README.md b/modules/terraform-aws-notify-slack-master/examples/notify-slack-kms/README.md\nnew file mode 100755\nindex 0000000..a803acf\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/examples/notify-slack-kms/README.md\n@@ -0,0 +1,80 @@\n+# Slack notification with KMS encrypted webhook URL\n+\n+Configuration in this directory creates an SNS topic that sends messages to a Slack channel with Slack webhook URL encrypted using KMS.\n+\n+## KMS keys\n+\n+There are 3 ways to define KMS key which should be used by Lambda function:\n+\n+1. Create [aws_kms_key resource](https://www.terraform.io/docs/providers/aws/r/kms_key.html) and put ARN of it as `kms_key_arn` argument to this module\n+1. Use [aws_kms_alias data-source](https://www.terraform.io/docs/providers/aws/d/kms_alias.html) to get an existing KMS key alias and put ARN of it as `kms_key_arn` argument to this module\n+1. Hard-code the ARN of KMS key\n+\n+Note: Set `create_with_kms_key = true` when providing value of `kms_key_arn` to create required IAM policy which allows to decrypt using specified KMS key.\n+\n+### Option 1:\n+```\n+resource \"aws_kms_key\" \"this\" {\n+  description = \"KMS key for notify-slack test\"\n+}\n+\n+resource \"aws_kms_alias\" \"this\" {\n+  name          = \"alias/kms-test-key\"\n+  target_key_id = \"${aws_kms_key.this.id}\"\n+}\n+\n+// kms_key_arn = \"${aws_kms_key.this.arn}\"\n+// create_with_kms_key = true\n+```\n+\n+### Option 2:\n+\n+```\n+data \"aws_kms_alias\" \"this\" {\n+ name = \"alias/kms-test-key\"\n+}\n+\n+// kms_key_arn = \"${data.aws_kms_alias.this.target_key_arn}\"\n+// create_with_kms_key = true\n+```\n+\n+### Option 3:\n+\n+```\n+variable \"kms_key_arn\" {\n+  default = \"arn:aws:kms:eu-west-1:835367859851:key/054b4846-95fe-4537-94f2-1dfd255238cf\"\n+}\n+\n+// kms_key_arn = \"${var.kms_key_arn}\"\n+// create_with_kms_key = true\n+```\n+\n+## Usage\n+\n+To run this example you need to execute:\n+\n+```bash\n+$ terraform init\n+$ terraform plan\n+$ terraform apply\n+```\n+\n+Note that in practice, encryption of the Slack webhook URL should happen differently (outside of this module).\n+\n+Note that this example may create resources which can cost money. Run `terraform destroy` when you don't need these resources.\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| kms_key_arn |  | string | `arn:aws:kms:eu-west-1:000014191260:key/66db1c5d-d42b-4e28-8efb-07a9cf607a73` | no |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this_sns_topic_arn | The ARN of the created SNS topic from which messages will be sent to Slack |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-notify-slack-master/examples/notify-slack-kms/main.tf b/modules/terraform-aws-notify-slack-master/examples/notify-slack-kms/main.tf\nnew file mode 100755\nindex 0000000..87ca595\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/examples/notify-slack-kms/main.tf\n@@ -0,0 +1,35 @@\n+provider \"aws\" {\n+  region = \"eu-west-1\"\n+}\n+\n+variable \"kms_key_arn\" {\n+  default = \"arn:aws:kms:eu-west-1:000014191260:key/66db1c5d-d42b-4e28-8efb-07a9cf607a73\"\n+}\n+\n+# Encrypt the URL, storing encryption here will show it in logs and in tfstate\n+# https://www.terraform.io/docs/state/sensitive-data.html\n+data \"aws_kms_ciphertext\" \"slack_url\" {\n+  plaintext = \"https://hooks.slack.com/services/AAA/BBB/CCC\"\n+  key_id    = \"${var.kms_key_arn}\"\n+}\n+\n+module \"notify_slack\" {\n+  source = \"../../\"\n+\n+  sns_topic_name = \"slack-topic\"\n+\n+  slack_webhook_url = \"${data.aws_kms_ciphertext.slack_url.ciphertext_blob}\"\n+  slack_channel     = \"aws-notification\"\n+  slack_username    = \"reporter\"\n+\n+  # Option 1\n+  //   kms_key_arn = \"${aws_kms_key.this.arn}\"\n+\n+\n+  # Option 2\n+  //  kms_key_arn = \"${data.aws_kms_alias.this.target_key_arn}\"\n+\n+  # Option 3\n+  kms_key_arn         = \"${var.kms_key_arn}\"\n+  create_with_kms_key = true\n+}\ndiff --git a/modules/terraform-aws-notify-slack-master/examples/notify-slack-kms/outputs.tf b/modules/terraform-aws-notify-slack-master/examples/notify-slack-kms/outputs.tf\nnew file mode 100755\nindex 0000000..18b225e\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/examples/notify-slack-kms/outputs.tf\n@@ -0,0 +1,4 @@\n+output \"this_sns_topic_arn\" {\n+  description = \"The ARN of the created SNS topic from which messages will be sent to Slack\"\n+  value       = \"${module.notify_slack.this_slack_topic_arn}\"\n+}\ndiff --git a/modules/terraform-aws-notify-slack-master/examples/notify-slack-simple/README.md b/modules/terraform-aws-notify-slack-master/examples/notify-slack-simple/README.md\nnew file mode 100755\nindex 0000000..040d96c\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/examples/notify-slack-simple/README.md\n@@ -0,0 +1,27 @@\n+Basic Slack notification\n+========================\n+\n+Configuration in this directory creates an SNS topic that sends messages to a Slack channel.\n+\n+Usage\n+=====\n+\n+To run this example you need to execute:\n+\n+```bash\n+$ terraform init\n+$ terraform plan\n+$ terraform apply\n+```\n+\n+Note that this example may create resources which can cost money (AWS Elastic IP, for example). Run `terraform destroy` when you don't need these resources.\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| sns_topic_arn | ARN of the created SNS topic for Slack |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-notify-slack-master/examples/notify-slack-simple/main.tf b/modules/terraform-aws-notify-slack-master/examples/notify-slack-simple/main.tf\nnew file mode 100755\nindex 0000000..3e9cccb\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/examples/notify-slack-simple/main.tf\n@@ -0,0 +1,13 @@\n+provider \"aws\" {\n+  region = \"eu-west-1\"\n+}\n+\n+module \"notify_slack\" {\n+  source = \"../../\"\n+\n+  sns_topic_name = \"slack-topic\"\n+\n+  slack_webhook_url = \"https://hooks.slack.com/services/AAA/BBB/CCC\"\n+  slack_channel     = \"aws-notification\"\n+  slack_username    = \"reporter\"\n+}\ndiff --git a/modules/terraform-aws-notify-slack-master/examples/notify-slack-simple/outputs.tf b/modules/terraform-aws-notify-slack-master/examples/notify-slack-simple/outputs.tf\nnew file mode 100755\nindex 0000000..8ca7a92\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/examples/notify-slack-simple/outputs.tf\n@@ -0,0 +1,4 @@\n+output \"sns_topic_arn\" {\n+  description = \"ARN of the created SNS topic for Slack\"\n+  value       = \"${module.notify_slack.this_slack_topic_arn}\"\n+}\ndiff --git a/modules/terraform-aws-notify-slack-master/functions/notify_slack.py b/modules/terraform-aws-notify-slack-master/functions/notify_slack.py\nnew file mode 100755\nindex 0000000..769fe35\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/functions/notify_slack.py\n@@ -0,0 +1,88 @@\n+from __future__ import print_function\n+import os, boto3, json, base64\n+import urllib.request, urllib.parse\n+import logging\n+\n+\n+# Decrypt encrypted URL with KMS\n+def decrypt(encrypted_url):\n+    region = os.environ['AWS_REGION']\n+    try:\n+        kms = boto3.client('kms', region_name=region)\n+        plaintext = kms.decrypt(CiphertextBlob=base64.b64decode(encrypted_url))['Plaintext']\n+        return plaintext.decode()\n+    except Exception:\n+        logging.exception(\"Failed to decrypt URL with KMS\")\n+\n+\n+def cloudwatch_notification(message, region):\n+    states = {'OK': 'good', 'INSUFFICIENT_DATA': 'warning', 'ALARM': 'danger'}\n+\n+    return {\n+            \"color\": states[message['NewStateValue']],\n+            \"fallback\": \"Alarm {} triggered\".format(message['AlarmName']),\n+            \"fields\": [\n+                { \"title\": \"Alarm Name\", \"value\": message['AlarmName'], \"short\": True },\n+                { \"title\": \"Alarm Description\", \"value\": message['AlarmDescription'], \"short\": False},\n+                { \"title\": \"Alarm reason\", \"value\": message['NewStateReason'], \"short\": False},\n+                { \"title\": \"Old State\", \"value\": message['OldStateValue'], \"short\": True },\n+                { \"title\": \"Current State\", \"value\": message['NewStateValue'], \"short\": True },\n+                {\n+                    \"title\": \"Link to Alarm\",\n+                    \"value\": \"https://console.aws.amazon.com/cloudwatch/home?region=\" + region + \"#alarm:alarmFilter=ANY;name=\" + urllib.parse.quote_plus(message['AlarmName']),\n+                    \"short\": False\n+                }\n+            ]\n+        }\n+\n+\n+def default_notification(subject, message):\n+    return {\n+            \"fallback\": \"A new message\",\n+            \"fields\": [{\"title\": subject if subject else \"Message\", \"value\": json.dumps(message), \"short\": False}]\n+        }\n+\n+\n+# Send a message to a slack channel\n+def notify_slack(subject, message, region):\n+    slack_url = os.environ['SLACK_WEBHOOK_URL']\n+    if not slack_url.startswith(\"http\"):\n+        slack_url = decrypt(slack_url)\n+\n+    slack_channel = os.environ['SLACK_CHANNEL']\n+    slack_username = os.environ['SLACK_USERNAME']\n+    slack_emoji = os.environ['SLACK_EMOJI']\n+\n+    payload = {\n+        \"channel\": slack_channel,\n+        \"username\": slack_username,\n+        \"icon_emoji\": slack_emoji,\n+        \"attachments\": []\n+    }\n+    if type(message) is str:\n+        try:\n+            message = json.loads(message)\n+        except json.JSONDecodeError as err:\n+            logging.exception(f'JSON decode error: {err}')\n+    if \"AlarmName\" in message:\n+        notification = cloudwatch_notification(message, region)\n+        payload['text'] = \"AWS CloudWatch notification - \" + message[\"AlarmName\"]\n+        payload['attachments'].append(notification)\n+    else:\n+        payload['text'] = \"AWS notification\"\n+        payload['attachments'].append(default_notification(subject, message))\n+\n+    data = urllib.parse.urlencode({\"payload\": json.dumps(payload)}).encode(\"utf-8\")\n+    req = urllib.request.Request(slack_url)\n+    urllib.request.urlopen(req, data)\n+\n+\n+def lambda_handler(event, context):\n+    subject = event['Records'][0]['Sns']['Subject']\n+    message = event['Records'][0]['Sns']['Message']\n+    region = event['Records'][0]['Sns']['TopicArn'].split(\":\")[3]\n+    notify_slack(subject, message, region)\n+\n+    return message\n+\n+#notify_slack({\"AlarmName\":\"Example\",\"AlarmDescription\":\"Example alarm description.\",\"AWSAccountId\":\"000000000000\",\"NewStateValue\":\"ALARM\",\"NewStateReason\":\"Threshold Crossed\",\"StateChangeTime\":\"2017-01-12T16:30:42.236+0000\",\"Region\":\"EU - Ireland\",\"OldStateValue\":\"OK\"}, \"eu-west-1\")\ndiff --git a/modules/terraform-aws-notify-slack-master/iam.tf b/modules/terraform-aws-notify-slack-master/iam.tf\nnew file mode 100755\nindex 0000000..5471170\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/iam.tf\n@@ -0,0 +1,64 @@\n+data \"aws_iam_policy_document\" \"assume_role\" {\n+  count = \"${var.create}\"\n+\n+  statement {\n+    effect = \"Allow\"\n+\n+    actions = [\"sts:AssumeRole\"]\n+\n+    principals {\n+      type        = \"Service\"\n+      identifiers = [\"lambda.amazonaws.com\"]\n+    }\n+  }\n+}\n+\n+data \"aws_iam_policy_document\" \"lambda_basic\" {\n+  count = \"${var.create}\"\n+\n+  statement {\n+    sid = \"AllowWriteToCloudwatchLogs\"\n+\n+    effect = \"Allow\"\n+\n+    actions = [\n+      \"logs:CreateLogGroup\",\n+      \"logs:CreateLogStream\",\n+      \"logs:PutLogEvents\",\n+    ]\n+\n+    resources = [\"arn:aws:logs:*:*:*\"]\n+  }\n+}\n+\n+data \"aws_iam_policy_document\" \"lambda\" {\n+  count = \"${(var.create_with_kms_key == 1 ? 1 : 0) * var.create}\"\n+\n+  source_json = \"${data.aws_iam_policy_document.lambda_basic.0.json}\"\n+\n+  statement {\n+    sid = \"AllowKMSDecrypt\"\n+\n+    effect = \"Allow\"\n+\n+    actions = [\"kms:Decrypt\"]\n+\n+    resources = [\"${var.kms_key_arn == \"\" ? \"\" : var.kms_key_arn}\"]\n+  }\n+}\n+\n+resource \"aws_iam_role\" \"lambda\" {\n+  count = \"${var.create}\"\n+\n+  name_prefix        = \"lambda\"\n+  assume_role_policy = \"${data.aws_iam_policy_document.assume_role.0.json}\"\n+}\n+\n+resource \"aws_iam_role_policy\" \"lambda\" {\n+  count = \"${var.create}\"\n+\n+  name_prefix = \"lambda-policy-\"\n+  role        = \"${aws_iam_role.lambda.0.id}\"\n+\n+  policy = \"${element(compact(concat(data.aws_iam_policy_document.lambda.*.json, data.aws_iam_policy_document.lambda_basic.*.json)), 0)}\"\n+}\ndiff --git a/modules/terraform-aws-notify-slack-master/main.tf b/modules/terraform-aws-notify-slack-master/main.tf\nnew file mode 100755\nindex 0000000..7853e44\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/main.tf\n@@ -0,0 +1,95 @@\n+module \"sns_label\" {\n+  source     = \"../../modules/terraform-null-label-master\"\n+  namespace  = \"${var.namespace}\"\n+  stage      = \"${var.stage}\"\n+  name       = \"sns_topic\"\n+  attributes = \"${var.attributes}\"\n+  delimiter  = \"${var.delimiter}\"\n+  tags       = \"${var.tags}\"\n+}\n+\n+\n+data \"aws_sns_topic\" \"this\" {\n+  count = \"${(1 - var.create_sns_topic) * var.create}\"\n+\n+  name = \"${module.sns_label.id}\"\n+}\n+\n+resource \"aws_sns_topic\" \"this\" {\n+  count = \"${var.create_sns_topic * var.create}\"\n+\n+  name = \"${module.sns_label.id}\"\n+}\n+\n+locals {\n+  sns_topic_arn = \"${element(concat(aws_sns_topic.this.*.arn, data.aws_sns_topic.this.*.arn, list(\"\")), 0)}\"\n+}\n+\n+resource \"aws_sns_topic_subscription\" \"sns_notify_slack\" {\n+  count = \"${var.create}\"\n+\n+  topic_arn = \"${local.sns_topic_arn}\"\n+  protocol  = \"lambda\"\n+  endpoint  = \"${aws_lambda_function.notify_slack.0.arn}\"\n+}\n+\n+resource \"aws_lambda_permission\" \"sns_notify_slack\" {\n+  count = \"${var.create}\"\n+\n+  statement_id  = \"AllowExecutionFromSNS\"\n+  action        = \"lambda:InvokeFunction\"\n+  function_name = \"${aws_lambda_function.notify_slack.0.function_name}\"\n+  principal     = \"sns.amazonaws.com\"\n+  source_arn    = \"${local.sns_topic_arn}\"\n+}\n+\n+data \"null_data_source\" \"lambda_file\" {\n+  inputs {\n+    filename = \"${substr(\"${path.module}/functions/notify_slack.py\", length(path.cwd) + 1, -1)}\"\n+  }\n+}\n+\n+data \"null_data_source\" \"lambda_archive\" {\n+  inputs {\n+    filename = \"${substr(\"${path.module}/functions/notify_slack.zip\", length(path.cwd) + 1, -1)}\"\n+  }\n+}\n+\n+data \"archive_file\" \"notify_slack\" {\n+  count = \"${var.create}\"\n+\n+  type        = \"zip\"\n+  source_file = \"${data.null_data_source.lambda_file.outputs.filename}\"\n+  output_path = \"${data.null_data_source.lambda_archive.outputs.filename}\"\n+}\n+\n+resource \"aws_lambda_function\" \"notify_slack\" {\n+  count = \"${var.create}\"\n+\n+  filename = \"${data.archive_file.notify_slack.0.output_path}\"\n+\n+  function_name = \"${var.lambda_function_name}\"\n+\n+  role             = \"${aws_iam_role.lambda.arn}\"\n+  handler          = \"notify_slack.lambda_handler\"\n+  source_code_hash = \"${data.archive_file.notify_slack.0.output_base64sha256}\"\n+  runtime          = \"python3.6\"\n+  timeout          = 30\n+  kms_key_arn      = \"${var.kms_key_arn}\"\n+\n+  environment {\n+    variables = {\n+      SLACK_WEBHOOK_URL = \"${var.slack_webhook_url}\"\n+      SLACK_CHANNEL     = \"${var.slack_channel}\"\n+      SLACK_USERNAME    = \"${var.slack_username}\"\n+      SLACK_EMOJI       = \"${var.slack_emoji}\"\n+    }\n+  }\n+\n+  lifecycle {\n+    ignore_changes = [\n+      \"filename\",\n+      \"last_modified\",\n+    ]\n+  }\n+}\ndiff --git a/modules/terraform-aws-notify-slack-master/outputs.tf b/modules/terraform-aws-notify-slack-master/outputs.tf\nnew file mode 100755\nindex 0000000..7f3c51c\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/outputs.tf\n@@ -0,0 +1,39 @@\n+output \"this_slack_topic_arn\" {\n+  description = \"The ARN of the SNS topic from which messages will be sent to Slack\"\n+  value       = \"${local.sns_topic_arn}\"\n+}\n+\n+output \"lambda_iam_role_arn\" {\n+  description = \"The ARN of the IAM role used by Lambda function\"\n+  value       = \"${element(concat(aws_iam_role.lambda.*.arn, list(\"\")), 0)}\"\n+}\n+\n+output \"lambda_iam_role_name\" {\n+  description = \"The name of the IAM role used by Lambda function\"\n+  value       = \"${element(concat(aws_iam_role.lambda.*.arn, list(\"\")), 0)}\"\n+}\n+\n+output \"notify_slack_lambda_function_arn\" {\n+  description = \"The ARN of the Lambda function\"\n+  value       = \"${element(concat(aws_lambda_function.notify_slack.*.arn, list(\"\")), 0)}\"\n+}\n+\n+output \"notify_slack_lambda_function_name\" {\n+  description = \"The name of the Lambda function\"\n+  value       = \"${element(concat(aws_lambda_function.notify_slack.*.function_name, list(\"\")), 0)}\"\n+}\n+\n+output \"notify_slack_lambda_function_invoke_arn\" {\n+  description = \"The ARN to be used for invoking Lambda function from API Gateway\"\n+  value       = \"${element(concat(aws_lambda_function.notify_slack.*.invoke_arn, list(\"\")), 0)}\"\n+}\n+\n+output \"notify_slack_lambda_function_last_modified\" {\n+  description = \"The date Lambda function was last modified\"\n+  value       = \"${element(concat(aws_lambda_function.notify_slack.*.last_modified, list(\"\")), 0)}\"\n+}\n+\n+output \"notify_slack_lambda_function_version\" {\n+  description = \"Latest published version of your Lambda function\"\n+  value       = \"${element(concat(aws_lambda_function.notify_slack.*.version, list(\"\")), 0)}\"\n+}\ndiff --git a/modules/terraform-aws-notify-slack-master/variables.tf b/modules/terraform-aws-notify-slack-master/variables.tf\nnew file mode 100755\nindex 0000000..dc81c54\n--- /dev/null\n+++ b/modules/terraform-aws-notify-slack-master/variables.tf\n@@ -0,0 +1,79 @@\n+variable \"create\" {\n+  description = \"Whether to create all resources\"\n+  default     = true\n+}\n+\n+variable \"create_sns_topic\" {\n+  description = \"Whether to create new SNS topic\"\n+  default     = true\n+}\n+\n+variable \"create_with_kms_key\" {\n+  description = \"Whether to create resources with KMS encryption\"\n+  default     = false\n+}\n+\n+variable \"lambda_function_name\" {\n+  description = \"The name of the Lambda function to create\"\n+  default     = \"notify_slack\"\n+}\n+\n+variable \"sns_topic_name\" {\n+  description = \"The name of the SNS topic to create\"\n+}\n+\n+variable \"slack_webhook_url\" {\n+  description = \"The URL of Slack webhook\"\n+}\n+\n+variable \"slack_channel\" {\n+  description = \"The name of the channel in Slack for notifications\"\n+}\n+\n+variable \"slack_username\" {\n+  description = \"The username that will appear on Slack messages\"\n+}\n+\n+variable \"slack_emoji\" {\n+  description = \"A custom emoji that will appear on Slack messages\"\n+  default     = \":aws:\"\n+}\n+\n+variable \"kms_key_arn\" {\n+  description = \"ARN of the KMS key used for decrypting slack webhook url\"\n+  default     = \"\"\n+}\n+\n+\n+variable \"namespace\" {\n+  description = \"Namespace (e.g. `cp` or `cloudposse`)\"\n+  type        = \"string\"\n+}\n+\n+variable \"stage\" {\n+  description = \"Stage (e.g. `prod`, `dev`, `staging`)\"\n+  type        = \"string\"\n+}\n+\n+variable \"name\" {\n+  type        = \"string\"\n+  description = \"Application or solution name\"\n+}\n+\n+variable \"delimiter\" {\n+  type        = \"string\"\n+  default     = \"-\"\n+  description = \"Delimiter to be used between `namespace`, `stage`, `name` and `attributes`\"\n+}\n+\n+variable \"attributes\" {\n+  type        = \"list\"\n+  default     = []\n+  description = \"Additional attributes (e.g. `policy` or `role`)\"\n+}\n+\n+variable \"tags\" {\n+  type        = \"map\"\n+  default     = {}\n+  description = \"Additional tags (e.g. map(`BusinessUnit`,`XYZ`)\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/.editorconfig b/modules/terraform-aws-security-group-master/.editorconfig\nnew file mode 100755\nindex 0000000..71f6718\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/.editorconfig\n@@ -0,0 +1,30 @@\n+# EditorConfig is awesome: http://EditorConfig.org\n+# Uses editorconfig to maintain consistent coding styles\n+\n+# top-most EditorConfig file\n+root = true\n+\n+# Unix-style newlines with a newline ending every file\n+[*]\n+charset = utf-8\n+end_of_line = lf\n+indent_size = 2\n+indent_style = space\n+insert_final_newline = true\n+max_line_length = 80\n+trim_trailing_whitespace = true\n+\n+[*.{tf,tfvars}]\n+indent_size = 2\n+indent_style = space\n+\n+[*.md]\n+max_line_length = 0\n+trim_trailing_whitespace = false\n+\n+[Makefile]\n+tab_width = 2\n+indent_style = tab\n+\n+[COMMIT_EDITMSG]\n+max_line_length = 0\n\\ No newline at end of file\ndiff --git a/modules/terraform-aws-security-group-master/.gitignore b/modules/terraform-aws-security-group-master/.gitignore\nnew file mode 100755\nindex 0000000..950042d\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/.gitignore\n@@ -0,0 +1,4 @@\n+.terraform\n+terraform.tfstate\n+*.tfstate*\n+*.tfvars\ndiff --git a/modules/terraform-aws-security-group-master/.pre-commit-config.yaml b/modules/terraform-aws-security-group-master/.pre-commit-config.yaml\nnew file mode 100755\nindex 0000000..c8299b7\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/.pre-commit-config.yaml\n@@ -0,0 +1,10 @@\n+repos:\n+- repo: git://github.com/antonbabenko/pre-commit-terraform\n+  rev: v1.8.1\n+  hooks:\n+    - id: terraform_fmt\n+    - id: terraform_docs\n+- repo: git://github.com/pre-commit/pre-commit-hooks\n+  rev: v2.1.0\n+  hooks:\n+    - id: check-merge-conflict\ndiff --git a/modules/terraform-aws-security-group-master/LICENSE b/modules/terraform-aws-security-group-master/LICENSE\nnew file mode 100755\nindex 0000000..51fca54\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/LICENSE\n@@ -0,0 +1,11 @@\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\ndiff --git a/modules/terraform-aws-security-group-master/README.md b/modules/terraform-aws-security-group-master/README.md\nnew file mode 100755\nindex 0000000..557da12\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/README.md\n@@ -0,0 +1,221 @@\n+# AWS EC2-VPC Security Group Terraform module\n+\n+[![Help Contribute to Open Source](https://www.codetriage.com/terraform-aws-modules/terraform-aws-security-group/badges/users.svg)](https://www.codetriage.com/terraform-aws-modules/terraform-aws-security-group)\n+\n+Terraform module which creates [EC2 security group within VPC](http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html) on AWS.\n+\n+These types of resources are supported:\n+\n+* [EC2-VPC Security Group](https://www.terraform.io/docs/providers/aws/r/security_group.html)\n+* [EC2-VPC Security Group Rule](https://www.terraform.io/docs/providers/aws/r/security_group_rule.html)\n+\n+## Features\n+\n+This module aims to implement **ALL** combinations of arguments supported by AWS and latest stable version of Terraform:\n+* IPv4/IPv6 CIDR blocks\n+* [VPC endpoint prefix lists](http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-endpoints.html) (use data source [aws_prefix_list](https://www.terraform.io/docs/providers/aws/d/prefix_list.html))\n+* Access from source security groups\n+* Access from self\n+* Named rules ([see the rules here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/rules.tf))\n+* Named groups of rules with ingress (inbound) and egress (outbound) ports open for common scenarios (eg, [ssh](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/ssh), [http-80](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/http-80), [mysql](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/mysql), see the whole list [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/README.md))\n+* Conditionally create security group and all required security group rules (\"single boolean switch\").\n+\n+Ingress and egress rules can be configured in a variety of ways. See [inputs section](#inputs) for all supported arguments and [complete example](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/examples/complete) for the complete use-case.\n+\n+If there is a missing feature or a bug - [open an issue](https://github.com/terraform-aws-modules/terraform-aws-security-group/issues/new).\n+\n+## Usage\n+\n+There are two ways to create security groups using this module:\n+\n+1. [Specifying predefined rules (HTTP, SSH, etc)](https://github.com/terraform-aws-modules/terraform-aws-security-group#security-group-with-predefined-rules)\n+1. [Specifying custom rules](https://github.com/terraform-aws-modules/terraform-aws-security-group#security-group-with-custom-rules)\n+\n+### Security group with predefined rules\n+\n+```hcl\n+module \"web_server_sg\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/http-80\"\n+\n+  name        = \"web-server\"\n+  description = \"Security group for web-server with HTTP ports open within VPC\"\n+  vpc_id      = \"vpc-12345678\"\n+\n+  ingress_cidr_blocks = [\"10.10.0.0/16\"]\n+}\n+```\n+\n+### Security group with custom rules\n+\n+```hcl\n+module \"vote_service_sg\" {\n+  source = \"terraform-aws-modules/security-group/aws\"\n+\n+  name        = \"user-service\"\n+  description = \"Security group for user-service with custom ports open within VPC, and PostgreSQL publicly open\"\n+  vpc_id      = \"vpc-12345678\"\n+\n+  ingress_cidr_blocks      = [\"10.10.0.0/16\"]\n+  ingress_rules            = [\"https-443-tcp\"]\n+  ingress_with_cidr_blocks = [\n+    {\n+      from_port   = 8080\n+      to_port     = 8090\n+      protocol    = \"tcp\"\n+      description = \"User-service ports\"\n+      cidr_blocks = \"10.10.0.0/16\"\n+    },\n+    {\n+      rule        = \"postgresql-tcp\"\n+      cidr_blocks = \"0.0.0.0/0\"\n+    },\n+  ]\n+}\n+```\n+\n+### Note about \"value of 'count' cannot be computed\"\n+\n+Terraform 0.11 has a limitation which does not allow **computed** values inside `count` attribute on resources (issues: [#16712](https://github.com/hashicorp/terraform/issues/16712), [#18015](https://github.com/hashicorp/terraform/issues/18015), ...)\n+\n+Computed values are values provided as outputs from `module`. Non-computed values are all others - static values, values referenced as `variable` and from data-sources.\n+\n+When you need to specify computed value inside security group rule argument you need to specify it using an argument which starts with `computed_` and provide a number of elements in the argument which starts with `number_of_computed_`. See these examples:\n+\n+```hcl\n+module \"http_sg\" {\n+  source = \"terraform-aws-modules/security-group/aws\"\n+  # omitted for brevity\n+}\n+\n+module \"db_computed_source_sg\" {\n+  # omitted for brevity\n+\n+  vpc_id = \"vpc-12345678\" # these are valid values also - \"${module.vpc.vpc_id}\" and \"${local.vpc_id}\"\n+\n+  computed_ingress_with_source_security_group_id = [\n+    {\n+      rule                     = \"mysql-tcp\"\n+      source_security_group_id = \"${module.http_sg.this_security_group_id}\"\n+    }\n+  ]\n+  number_of_computed_ingress_with_source_security_group_id = 1\n+}\n+\n+module \"db_computed_sg\" {\n+  # omitted for brevity\n+\n+  ingress_cidr_blocks = [\"10.10.0.0/16\", \"${data.aws_security_group.default.id}\"]\n+\n+  computed_ingress_cidr_blocks = [\"${module.vpc.vpc_id}\"]\n+  number_of_computed_ingress_cidr_blocks = 1\n+}\n+\n+module \"db_computed_merged_sg\" {\n+  # omitted for brevity\n+\n+  computed_ingress_cidr_blocks = [\"10.10.0.0/16\", \"${data.aws_security_group.default.id}\", \"${module.vpc.vpc_id}\"]\n+  number_of_computed_ingress_cidr_blocks = 3\n+}\n+```\n+\n+Note that `db_computed_sg` and `db_computed_merged_sg` are equal, because it is possible to put both computed and non-computed values in arguments starting with `computed_`.\n+\n+## Conditional creation\n+\n+Sometimes you need to have a way to create security group conditionally but Terraform does not allow to use `count` inside `module` block, so the solution is to specify argument `create`.\n+\n+```hcl\n+# This security group will not be created\n+module \"vote_service_sg\" {\n+  source = \"terraform-aws-modules/security-group/aws\"\n+\n+  create = false\n+  # ... omitted\n+}\n+```\n+\n+## Examples\n+\n+* [Complete Security Group example](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/examples/complete) shows all available parameters to configure security group.\n+* [HTTP Security Group example](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/examples/http) shows more applicable security groups for common web-servers.\n+* [Disable creation of Security Group example](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/examples/disabled) shows how to disable creation of security group.\n+* [Dynamic values inside Security Group rules example](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/examples/dynamic) shows how to specify values inside security group rules (data-sources and variables are allowed).\n+* [Computed values inside Security Group rules example](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/examples/computed) shows how to specify computed values inside security group rules (solution for `value of 'count' cannot be computed` problem).\n+\n+## How to add/update rules/groups?\n+\n+Rules and groups are defined in [rules.tf](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/rules.tf). Run `update_groups.sh` when content of that file has changed to recreate content of all automatic modules.\n+\n+## Known issues\n+\n+* Due to an [issue #1920](https://github.com/terraform-providers/terraform-provider-aws/issues/1920) in AWS provider, updates to the `description` of security group rules are ignored by this module. If you need to update `description` after the security group has been created you need to recreate security group rule.\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_groups | Map of groups of security group rules to use to generate modules (see update_groups.sh) | map | `{ \"carbon-relay-ng\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"carbon-line-in-tcp\", \"carbon-line-in-udp\", \"carbon-pickle-tcp\", \"carbon-pickle-udp\", \"carbon-gui-udp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"cassandra\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"cassandra-clients-tcp\", \"cassandra-thrift-clients-tcp\", \"cassandra-jmx-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"consul\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"consul-tcp\", \"consul-cli-rpc-tcp\", \"consul-webui-tcp\", \"consul-dns-tcp\", \"consul-dns-udp\", \"consul-serf-lan-tcp\", \"consul-serf-lan-udp\", \"consul-serf-wan-tcp\", \"consul-serf-wan-udp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"docker-swarm\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"docker-swarm-mngmt-tcp\", \"docker-swarm-node-tcp\", \"docker-swarm-node-udp\", \"docker-swarm-overlay-udp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"elasticsearch\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"elasticsearch-rest-tcp\", \"elasticsearch-java-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"http-80\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"http-80-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"http-8080\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"http-8080-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"https-443\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"https-443-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"https-8443\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"https-8443-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"ipsec-4500\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"ipsec-4500-udp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"ipsec-500\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"ipsec-500-udp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"kafka\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"kafka-broker-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"ldaps\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"ldaps-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"memcached\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"memcached-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"mongodb\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"mongodb-27017-tcp\", \"mongodb-27018-tcp\", \"mongodb-27019-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"mssql\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"mssql-tcp\", \"mssql-udp\", \"mssql-analytics-tcp\", \"mssql-broker-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"mysql\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"mysql-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"nfs\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"nfs-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"nomad\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"nomad-http-tcp\", \"nomad-rpc-tcp\", \"nomad-serf-tcp\", \"nomad-serf-udp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"ntp\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"ntp-udp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"openvpn\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"openvpn-udp\", \"openvpn-tcp\", \"openvpn-https-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"oracle-db\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"oracle-db-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"postgresql\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"postgresql-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"rabbitmq\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"rabbitmq-4369-tcp\", \"rabbitmq-5671-tcp\", \"rabbitmq-5672-tcp\", \"rabbitmq-15672-tcp\", \"rabbitmq-25672-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"rdp\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"rdp-tcp\", \"rdp-udp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"redis\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"redis-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"redshift\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"redshift-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"splunk\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"splunk-indexer-tcp\", \"splunk-clients-tcp\", \"splunk-splunkd-tcp\", \"splunk-hec-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"squid\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"squid-proxy-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"ssh\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"ssh-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"storm\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"storm-nimbus-tcp\", \"storm-ui-tcp\", \"storm-supervisor-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"web\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"http-80-tcp\", \"http-8080-tcp\", \"https-443-tcp\", \"web-jmx-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"winrm\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"winrm-http-tcp\", \"winrm-https-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"zipkin\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"zipkin-admin-tcp\", \"zipkin-admin-query-tcp\", \"zipkin-admin-web-tcp\", \"zipkin-query-tcp\", \"zipkin-web-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ], \"zookeeper\": [ { \"egress_rules\": [ \"all-all\" ], \"ingress_rules\": [ \"zookeeper-2181-tcp\", \"zookeeper-2888-tcp\", \"zookeeper-3888-tcp\", \"zookeeper-jmx-tcp\" ], \"ingress_with_self\": [ \"all-all\" ] } ] }` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| rules | Map of known security group rules (define as 'name' = ['from port', 'to port', 'protocol', 'description']) | map | `{ \"_\": [ \"\", \"\", \"\" ], \"all-all\": [ -1, -1, \"-1\", \"All protocols\" ], \"all-icmp\": [ -1, -1, \"icmp\", \"All IPV4 ICMP\" ], \"all-ipv6-icmp\": [ -1, -1, 58, \"All IPV6 ICMP\" ], \"all-tcp\": [ 0, 65535, \"tcp\", \"All TCP ports\" ], \"all-udp\": [ 0, 65535, \"udp\", \"All UDP ports\" ], \"carbon-admin-tcp\": [ 2004, 2004, \"tcp\", \"Carbon admin\" ], \"carbon-gui-udp\": [ 8081, 8081, \"tcp\", \"Carbon GUI\" ], \"carbon-line-in-tcp\": [ 2003, 2003, \"tcp\", \"Carbon line-in\" ], \"carbon-line-in-udp\": [ 2003, 2003, \"udp\", \"Carbon line-in\" ], \"carbon-pickle-tcp\": [ 2013, 2013, \"tcp\", \"Carbon pickle\" ], \"carbon-pickle-udp\": [ 2013, 2013, \"udp\", \"Carbon pickle\" ], \"cassandra-clients-tcp\": [ 9042, 9042, \"tcp\", \"Cassandra clients\" ], \"cassandra-jmx-tcp\": [ 7199, 7199, \"tcp\", \"JMX\" ], \"cassandra-thrift-clients-tcp\": [ 9160, 9160, \"tcp\", \"Cassandra Thrift clients\" ], \"consul-cli-rpc-tcp\": [ 8400, 8400, \"tcp\", \"Consul CLI RPC\" ], \"consul-dns-tcp\": [ 8600, 8600, \"tcp\", \"Consul DNS\" ], \"consul-dns-udp\": [ 8600, 8600, \"udp\", \"Consul DNS\" ], \"consul-serf-lan-tcp\": [ 8301, 8301, \"tcp\", \"Serf LAN\" ], \"consul-serf-lan-udp\": [ 8301, 8301, \"udp\", \"Serf LAN\" ], \"consul-serf-wan-tcp\": [ 8302, 8302, \"tcp\", \"Serf WAN\" ], \"consul-serf-wan-udp\": [ 8302, 8302, \"udp\", \"Serf WAN\" ], \"consul-tcp\": [ 8300, 8300, \"tcp\", \"Consul server\" ], \"consul-webui-tcp\": [ 8500, 8500, \"tcp\", \"Consul web UI\" ], \"dns-tcp\": [ 53, 53, \"tcp\", \"DNS\" ], \"dns-udp\": [ 53, 53, \"udp\", \"DNS\" ], \"docker-swarm-mngmt-tcp\": [ 2377, 2377, \"tcp\", \"Docker Swarm cluster management\" ], \"docker-swarm-node-tcp\": [ 7946, 7946, \"tcp\", \"Docker Swarm node\" ], \"docker-swarm-node-udp\": [ 7946, 7946, \"udp\", \"Docker Swarm node\" ], \"docker-swarm-overlay-udp\": [ 4789, 4789, \"udp\", \"Docker Swarm Overlay Network Traffic\" ], \"elasticsearch-java-tcp\": [ 9300, 9300, \"tcp\", \"Elasticsearch Java interface\" ], \"elasticsearch-rest-tcp\": [ 9200, 9200, \"tcp\", \"Elasticsearch REST interface\" ], \"http-80-tcp\": [ 80, 80, \"tcp\", \"HTTP\" ], \"http-8080-tcp\": [ 8080, 8080, \"tcp\", \"HTTP\" ], \"https-443-tcp\": [ 443, 443, \"tcp\", \"HTTPS\" ], \"https-8443-tcp\": [ 8443, 8443, \"tcp\", \"HTTPS\" ], \"ipsec-4500-udp\": [ 4500, 4500, \"udp\", \"IPSEC NAT-T\" ], \"ipsec-500-udp\": [ 500, 500, \"udp\", \"IPSEC ISAKMP\" ], \"kafka-broker-tcp\": [ 9092, 9092, \"tcp\", \"Kafka broker 0.8.2+\" ], \"ldaps-tcp\": [ 636, 636, \"tcp\", \"LDAPS\" ], \"memcached-tcp\": [ 11211, 11211, \"tcp\", \"Memcached\" ], \"mongodb-27017-tcp\": [ 27017, 27017, \"tcp\", \"MongoDB\" ], \"mongodb-27018-tcp\": [ 27018, 27018, \"tcp\", \"MongoDB shard\" ], \"mongodb-27019-tcp\": [ 27019, 27019, \"tcp\", \"MongoDB config server\" ], \"mssql-analytics-tcp\": [ 2383, 2383, \"tcp\", \"MSSQL Analytics\" ], \"mssql-broker-tcp\": [ 4022, 4022, \"tcp\", \"MSSQL Broker\" ], \"mssql-tcp\": [ 1433, 1433, \"tcp\", \"MSSQL Server\" ], \"mssql-udp\": [ 1434, 1434, \"udp\", \"MSSQL Browser\" ], \"mysql-tcp\": [ 3306, 3306, \"tcp\", \"MySQL/Aurora\" ], \"nfs-tcp\": [ 2049, 2049, \"tcp\", \"NFS/EFS\" ], \"nomad-http-tcp\": [ 4646, 4646, \"tcp\", \"Nomad HTTP\" ], \"nomad-rpc-tcp\": [ 4647, 4647, \"tcp\", \"Nomad RPC\" ], \"nomad-serf-tcp\": [ 4648, 4648, \"tcp\", \"Serf\" ], \"nomad-serf-udp\": [ 4648, 4648, \"udp\", \"Serf\" ], \"ntp-udp\": [ 123, 123, \"udp\", \"NTP\" ], \"openvpn-https-tcp\": [ 443, 443, \"tcp\", \"OpenVPN\" ], \"openvpn-tcp\": [ 943, 943, \"tcp\", \"OpenVPN\" ], \"openvpn-udp\": [ 1194, 1194, \"udp\", \"OpenVPN\" ], \"oracle-db-tcp\": [ 1521, 1521, \"tcp\", \"Oracle\" ], \"postgresql-tcp\": [ 5432, 5432, \"tcp\", \"PostgreSQL\" ], \"puppet-tcp\": [ 8140, 8140, \"tcp\", \"Puppet\" ], \"rabbitmq-15672-tcp\": [ 15672, 15672, \"tcp\", \"RabbitMQ\" ], \"rabbitmq-25672-tcp\": [ 25672, 25672, \"tcp\", \"RabbitMQ\" ], \"rabbitmq-4369-tcp\": [ 4369, 4369, \"tcp\", \"RabbitMQ epmd\" ], \"rabbitmq-5671-tcp\": [ 5671, 5671, \"tcp\", \"RabbitMQ\" ], \"rabbitmq-5672-tcp\": [ 5672, 5672, \"tcp\", \"RabbitMQ\" ], \"rdp-tcp\": [ 3389, 3389, \"tcp\", \"Remote Desktop\" ], \"rdp-udp\": [ 3389, 3389, \"udp\", \"Remote Desktop\" ], \"redis-tcp\": [ 6379, 6379, \"tcp\", \"Redis\" ], \"redshift-tcp\": [ 5439, 5439, \"tcp\", \"Redshift\" ], \"splunk-clients-tcp\": [ 8080, 8080, \"tcp\", \"Splunk clients\" ], \"splunk-hec-tcp\": [ 8088, 8088, \"tcp\", \"Splunk HEC\" ], \"splunk-indexer-tcp\": [ 9997, 9997, \"tcp\", \"Splunk indexer\" ], \"splunk-splunkd-tcp\": [ 8089, 8089, \"tcp\", \"Splunkd\" ], \"squid-proxy-tcp\": [ 3128, 3128, \"tcp\", \"Squid default proxy\" ], \"ssh-tcp\": [ 22, 22, \"tcp\", \"SSH\" ], \"storm-nimbus-tcp\": [ 6627, 6627, \"tcp\", \"Nimbus\" ], \"storm-supervisor-tcp\": [ 6700, 6703, \"tcp\", \"Supervisor\" ], \"storm-ui-tcp\": [ 8080, 8080, \"tcp\", \"Storm UI\" ], \"web-jmx-tcp\": [ 1099, 1099, \"tcp\", \"JMX\" ], \"winrm-http-tcp\": [ 5985, 5985, \"tcp\", \"WinRM HTTP\" ], \"winrm-https-tcp\": [ 5986, 5986, \"tcp\", \"WinRM HTTPS\" ], \"zipkin-admin-query-tcp\": [ 9901, 9901, \"tcp\", \"Zipkin Admin port query\" ], \"zipkin-admin-tcp\": [ 9990, 9990, \"tcp\", \"Zipkin Admin port collector\" ], \"zipkin-admin-web-tcp\": [ 9991, 9991, \"tcp\", \"Zipkin Admin port web\" ], \"zipkin-query-tcp\": [ 9411, 9411, \"tcp\", \"Zipkin query port\" ], \"zipkin-web-tcp\": [ 8080, 8080, \"tcp\", \"Zipkin web port\" ], \"zookeeper-2181-tcp\": [ 2181, 2181, \"tcp\", \"Zookeeper\" ], \"zookeeper-2888-tcp\": [ 2888, 2888, \"tcp\", \"Zookeeper\" ], \"zookeeper-3888-tcp\": [ 3888, 3888, \"tcp\", \"Zookeeper\" ], \"zookeeper-jmx-tcp\": [ 7199, 7199, \"tcp\", \"JMX\" ] }` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+\n+## Authors\n+\n+Module managed by [Anton Babenko](https://github.com/antonbabenko).\n+\n+## License\n+\n+Apache 2 Licensed. See LICENSE for full details.\ndiff --git a/modules/terraform-aws-security-group-master/examples/complete/README.md b/modules/terraform-aws-security-group-master/examples/complete/README.md\nnew file mode 100755\nindex 0000000..c252efb\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/examples/complete/README.md\n@@ -0,0 +1,30 @@\n+# Complete Security Group example\n+\n+Configuration in this directory creates set of Security Group and Security Group Rules resources in various combinations.\n+\n+Data sources are used to discover existing VPC resources (VPC and default security group).\n+\n+## Usage\n+\n+To run this example you need to execute:\n+\n+```bash\n+$ terraform init\n+$ terraform plan\n+$ terraform apply\n+```\n+\n+Note that this example may create resources which cost money. Run `terraform destroy` when you don't need these resources.\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/examples/complete/main.tf b/modules/terraform-aws-security-group-master/examples/complete/main.tf\nnew file mode 100755\nindex 0000000..d793daf\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/examples/complete/main.tf\n@@ -0,0 +1,375 @@\n+provider \"aws\" {\n+  region = \"eu-west-1\"\n+}\n+\n+#############################################################\n+# Data sources to get VPC and default security group details\n+#############################################################\n+data \"aws_vpc\" \"default\" {\n+  default = true\n+}\n+\n+data \"aws_security_group\" \"default\" {\n+  name   = \"default\"\n+  vpc_id = \"${data.aws_vpc.default.id}\"\n+}\n+\n+##################################################\n+# VPC which is used as an argument in complete-sg\n+##################################################\n+module \"vpc\" {\n+  source = \"terraform-aws-modules/vpc/aws\"\n+\n+  name = \"complete-sg-demo-vpc\"\n+  cidr = \"10.20.0.0/20\"\n+}\n+\n+#############################################################\n+# Security group which is used as an argument in complete-sg\n+#############################################################\n+module \"main_sg\" {\n+  source = \"../../\"\n+\n+  name        = \"main-sg\"\n+  description = \"Security group which is used as an argument in complete-sg\"\n+  vpc_id      = \"${data.aws_vpc.default.id}\"\n+\n+  ingress_cidr_blocks = [\"10.10.0.0/16\"]\n+  ingress_rules       = [\"https-443-tcp\"]\n+}\n+\n+################################################\n+# Security group with complete set of arguments\n+################################################\n+module \"complete_sg\" {\n+  source = \"../../\"\n+\n+  name        = \"complete-sg\"\n+  description = \"Security group with all available arguments set (this is just an example)\"\n+  vpc_id      = \"${data.aws_vpc.default.id}\"\n+\n+  tags = {\n+    Cash       = \"king\"\n+    Department = \"kingdom\"\n+  }\n+\n+  # Default CIDR blocks, which will be used for all ingress rules in this module. Typically these are CIDR blocks of the VPC.\n+  # If this is not specified then no CIDR blocks will be used.\n+  ingress_cidr_blocks = [\"10.10.0.0/16\"]\n+\n+  ingress_ipv6_cidr_blocks = [\"2001:db8::/64\"]\n+\n+  # Prefix list ids to use in all ingress rules in this module.\n+  # ingress_prefix_list_ids = [\"pl-123456\"]\n+  # Open for all CIDRs defined in ingress_cidr_blocks\n+  ingress_rules = [\"https-443-tcp\"]\n+\n+  # Use computed value here (eg, `${module...}`). Plain string is not a real use-case for this argument.\n+  computed_ingress_rules           = [\"ssh-tcp\"]\n+  number_of_computed_ingress_rules = 1\n+\n+  # Open to CIDRs blocks (rule or from_port+to_port+protocol+description)\n+  ingress_with_cidr_blocks = [\n+    {\n+      rule        = \"postgresql-tcp\"\n+      cidr_blocks = \"0.0.0.0/0,2.2.2.2/32\"\n+    },\n+    {\n+      rule        = \"postgresql-tcp\"\n+      cidr_blocks = \"30.30.30.30/32\"\n+    },\n+    {\n+      from_port   = 10\n+      to_port     = 20\n+      protocol    = 6\n+      description = \"Service name\"\n+      cidr_blocks = \"10.10.0.0/20\"\n+    },\n+  ]\n+\n+  computed_ingress_with_cidr_blocks = [\n+    {\n+      rule        = \"postgresql-tcp\"\n+      cidr_blocks = \"3.3.3.3/32,${module.vpc.vpc_cidr_block}\"\n+    },\n+    {\n+      from_port   = 15\n+      to_port     = 25\n+      protocol    = 6\n+      description = \"Service name with vpc cidr\"\n+      cidr_blocks = \"${module.vpc.vpc_cidr_block}\"\n+    },\n+  ]\n+\n+  number_of_computed_ingress_with_cidr_blocks = 2\n+\n+  # Open to IPV6 CIDR blocks (rule or from_port+to_port+protocol+description)\n+  ingress_with_ipv6_cidr_blocks = [\n+    {\n+      from_port        = 300\n+      to_port          = 400\n+      protocol         = \"tcp\"\n+      description      = \"Service ports (ipv6)\"\n+      ipv6_cidr_blocks = \"2001:db8::/64\"\n+    },\n+  ]\n+\n+  computed_ingress_with_ipv6_cidr_blocks = [\n+    {\n+      from_port        = 350\n+      to_port          = 450\n+      protocol         = \"tcp\"\n+      description      = \"Service ports (ipv6). VPC ID = ${module.vpc.vpc_id}\"\n+      ipv6_cidr_blocks = \"2001:db8::/64\"\n+    },\n+  ]\n+\n+  number_of_computed_ingress_with_ipv6_cidr_blocks = 1\n+\n+  # Open for security group id (rule or from_port+to_port+protocol+description)\n+  ingress_with_source_security_group_id = [\n+    {\n+      rule                     = \"mysql-tcp\"\n+      source_security_group_id = \"${data.aws_security_group.default.id}\"\n+    },\n+    {\n+      from_port                = 10\n+      to_port                  = 10\n+      protocol                 = 6\n+      description              = \"Service name\"\n+      source_security_group_id = \"${data.aws_security_group.default.id}\"\n+    },\n+  ]\n+\n+  computed_ingress_with_source_security_group_id = [\n+    {\n+      rule                     = \"postgresql-tcp\"\n+      source_security_group_id = \"${module.main_sg.this_security_group_id}\"\n+    },\n+    {\n+      from_port                = 23\n+      to_port                  = 23\n+      protocol                 = 6\n+      description              = \"Service name\"\n+      source_security_group_id = \"${module.main_sg.this_security_group_id}\"\n+    },\n+  ]\n+\n+  number_of_computed_ingress_with_source_security_group_id = 2\n+\n+  # Open for self (rule or from_port+to_port+protocol+description)\n+  ingress_with_self = [\n+    {\n+      rule = \"all-all\"\n+    },\n+    {\n+      from_port   = 30\n+      to_port     = 40\n+      protocol    = 6\n+      description = \"Service name\"\n+      self        = true\n+    },\n+    {\n+      from_port = 41\n+      to_port   = 51\n+      protocol  = 6\n+      self      = false\n+    },\n+  ]\n+\n+  computed_ingress_with_self = [\n+    {\n+      from_port   = 32\n+      to_port     = 43\n+      protocol    = 6\n+      description = \"Service name. VPC ID: ${module.vpc.vpc_id}\"\n+      self        = true\n+    },\n+  ]\n+\n+  number_of_computed_ingress_with_self = 1\n+\n+  # Default CIDR blocks, which will be used for all egress rules in this module. Typically these are CIDR blocks of the VPC.\n+  # If this is not specified then no CIDR blocks will be used.\n+  egress_cidr_blocks = [\"10.10.0.0/16\"]\n+\n+  egress_ipv6_cidr_blocks = [\"2001:db8::/64\"]\n+\n+  # Prefix list ids to use in all egress rules in this module.\n+  # egress_prefix_list_ids = [\"pl-123456\"]\n+  # Open for all CIDRs defined in egress_cidr_blocks\n+  egress_rules = [\"http-80-tcp\"]\n+\n+  computed_egress_rules           = [\"ssh-tcp\"]\n+  number_of_computed_egress_rules = 1\n+\n+  # Open to CIDRs blocks (rule or from_port+to_port+protocol+description)\n+  egress_with_cidr_blocks = [\n+    {\n+      rule        = \"postgresql-tcp\"\n+      cidr_blocks = \"0.0.0.0/0,2.2.2.2/32\"\n+    },\n+    {\n+      rule        = \"https-443-tcp\"\n+      cidr_blocks = \"30.30.30.30/32\"\n+    },\n+    {\n+      from_port   = 10\n+      to_port     = 20\n+      protocol    = 6\n+      description = \"Service name\"\n+      cidr_blocks = \"10.10.0.0/20\"\n+    },\n+  ]\n+\n+  computed_egress_with_cidr_blocks = [\n+    {\n+      rule        = \"https-443-tcp\"\n+      cidr_blocks = \"${module.vpc.vpc_cidr_block}\"\n+    },\n+  ]\n+\n+  number_of_computed_egress_with_cidr_blocks = 1\n+\n+  # Open to IPV6 CIDR blocks (rule or from_port+to_port+protocol+description)\n+  egress_with_ipv6_cidr_blocks = [\n+    {\n+      from_port        = 300\n+      to_port          = 400\n+      protocol         = \"tcp\"\n+      description      = \"Service ports (ipv6)\"\n+      ipv6_cidr_blocks = \"2001:db8::/64\"\n+    },\n+  ]\n+\n+  computed_egress_with_ipv6_cidr_blocks = [\n+    {\n+      from_port        = 55\n+      to_port          = 66\n+      protocol         = \"tcp\"\n+      description      = \"Service ports (ipv6). VPC ID: ${module.vpc.vpc_id}\"\n+      ipv6_cidr_blocks = \"2001:db8::/64\"\n+    },\n+  ]\n+\n+  number_of_computed_egress_with_ipv6_cidr_blocks = 1\n+\n+  # Open for security group id (rule or from_port+to_port+protocol+description)\n+  egress_with_source_security_group_id = [\n+    {\n+      rule                     = \"mysql-tcp\"\n+      source_security_group_id = \"${data.aws_security_group.default.id}\"\n+    },\n+    {\n+      from_port                = 10\n+      to_port                  = 10\n+      protocol                 = 6\n+      description              = \"Service name\"\n+      source_security_group_id = \"${data.aws_security_group.default.id}\"\n+    },\n+  ]\n+\n+  computed_egress_with_source_security_group_id = [\n+    {\n+      rule                     = \"postgresql-tcp\"\n+      source_security_group_id = \"${module.main_sg.this_security_group_id}\"\n+    },\n+  ]\n+\n+  number_of_computed_egress_with_source_security_group_id = 1\n+\n+  # Open for self (rule or from_port+to_port+protocol+description)\n+  egress_with_self = [\n+    {\n+      rule = \"all-all\"\n+    },\n+    {\n+      from_port   = 30\n+      to_port     = 40\n+      protocol    = \"tcp\"\n+      description = \"Service name\"\n+      self        = true\n+    },\n+    {\n+      from_port = 41\n+      to_port   = 51\n+      protocol  = 6\n+      self      = false\n+    },\n+  ]\n+\n+  computed_egress_with_self = [\n+    {\n+      rule = \"https-443-tcp\"\n+    },\n+  ]\n+\n+  number_of_computed_egress_with_self = 1\n+}\n+\n+######################################################\n+# Security group with IPv4 and IPv6 sets of arguments\n+######################################################\n+module \"ipv4_ipv6_example\" {\n+  source = \"../../\"\n+\n+  name        = \"ipv4-ipv6-example\"\n+  description = \"IPv4 and IPv6 example\"\n+  vpc_id      = \"${data.aws_vpc.default.id}\"\n+\n+  ingress_with_cidr_blocks = [\n+    {\n+      from_port   = 8080\n+      to_port     = 8090\n+      protocol    = \"tcp\"\n+      description = \"User-service ports (ipv4)\"\n+      cidr_blocks = \"0.0.0.0/0\"\n+    },\n+  ]\n+\n+  ingress_with_ipv6_cidr_blocks = [\n+    {\n+      from_port        = 8080\n+      to_port          = 8090\n+      protocol         = \"tcp\"\n+      description      = \"User-service ports (ipv6)\"\n+      ipv6_cidr_blocks = \"2001:db8::/64\"\n+    },\n+  ]\n+\n+  egress_with_cidr_blocks = [\n+    {\n+      from_port   = 8090\n+      to_port     = 8100\n+      protocol    = \"tcp\"\n+      description = \"User-service ports (ipv4)\"\n+      cidr_blocks = \"0.0.0.0/0\"\n+    },\n+  ]\n+\n+  egress_with_ipv6_cidr_blocks = [\n+    {\n+      from_port        = 8090\n+      to_port          = 8100\n+      protocol         = \"tcp\"\n+      description      = \"User-service ports (ipv6)\"\n+      ipv6_cidr_blocks = \"2001:db8::/64\"\n+    },\n+  ]\n+}\n+\n+#################################\n+# Security group with fixed name\n+#################################\n+module \"fixed_name_sg\" {\n+  source = \"../../\"\n+\n+  name        = \"fixed-name-sg\"\n+  description = \"Security group with fixed name\"\n+  vpc_id      = \"${data.aws_vpc.default.id}\"\n+\n+  use_name_prefix = false\n+\n+  ingress_cidr_blocks = [\"10.10.0.0/16\"]\n+  ingress_rules       = [\"https-443-tcp\"]\n+}\ndiff --git a/modules/terraform-aws-security-group-master/examples/complete/outputs.tf b/modules/terraform-aws-security-group-master/examples/complete/outputs.tf\nnew file mode 100755\nindex 0000000..94167ee\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/examples/complete/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.complete_sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.complete_sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.complete_sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.complete_sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.complete_sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/examples/computed/README.md b/modules/terraform-aws-security-group-master/examples/computed/README.md\nnew file mode 100755\nindex 0000000..e7c60a3\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/examples/computed/README.md\n@@ -0,0 +1,28 @@\n+# Computed Security Group rules example\n+\n+Configuration in this directory creates set of Security Group and Security Group Rules resources in various combination.\n+\n+## Usage\n+\n+To run this example you need to execute:\n+\n+```bash\n+$ terraform init\n+$ terraform plan\n+$ terraform apply\n+```\n+\n+Note that this example may create resources which cost money. Run `terraform destroy` when you don't need these resources.\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/examples/computed/main.tf b/modules/terraform-aws-security-group-master/examples/computed/main.tf\nnew file mode 100755\nindex 0000000..2bba401\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/examples/computed/main.tf\n@@ -0,0 +1,54 @@\n+provider \"aws\" {\n+  region = \"eu-west-1\"\n+}\n+\n+#############################################################\n+# Data sources to get VPC and default security group details\n+#############################################################\n+data \"aws_vpc\" \"default\" {\n+  default = true\n+}\n+\n+data \"aws_security_group\" \"default\" {\n+  name   = \"default\"\n+  vpc_id = \"${data.aws_vpc.default.id}\"\n+}\n+\n+###########################\n+# Security groups examples\n+###########################\n+module \"http_sg\" {\n+  source = \"../../modules/https-443\"\n+\n+  name        = \"computed-http-sg\"\n+  description = \"Security group with HTTP port open for everyone, and HTTPS open just for the default security group\"\n+  vpc_id      = \"${data.aws_vpc.default.id}\"\n+\n+  ingress_cidr_blocks = [\"0.0.0.0/0\"]\n+\n+  ingress_with_source_security_group_id = [\n+    {\n+      rule                     = \"https-443-tcp\"\n+      source_security_group_id = \"${data.aws_security_group.default.id}\"\n+    },\n+  ]\n+}\n+\n+module \"mysql_sg\" {\n+  source = \"../../modules/mysql\"\n+\n+  name        = \"computed-mysql-sg\"\n+  description = \"Security group with MySQL/Aurora port open for HTTP security group created above (computed)\"\n+  vpc_id      = \"${data.aws_vpc.default.id}\"\n+\n+  ingress_cidr_blocks = [\"0.0.0.0/0\"]\n+\n+  computed_ingress_with_source_security_group_id = [\n+    {\n+      rule                     = \"mysql-tcp\"\n+      source_security_group_id = \"${module.http_sg.this_security_group_id}\"\n+    },\n+  ]\n+\n+  number_of_computed_ingress_with_source_security_group_id = 1\n+}\ndiff --git a/modules/terraform-aws-security-group-master/examples/computed/outputs.tf b/modules/terraform-aws-security-group-master/examples/computed/outputs.tf\nnew file mode 100755\nindex 0000000..72082fc\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/examples/computed/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.mysql_sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.mysql_sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.mysql_sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.mysql_sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.mysql_sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/examples/disabled/README.md b/modules/terraform-aws-security-group-master/examples/disabled/README.md\nnew file mode 100755\nindex 0000000..fcc04ae\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/examples/disabled/README.md\n@@ -0,0 +1,26 @@\n+# HTTP Security Group example\n+\n+Configuration in this directory creates set of Security Group and Security Group Rules resources in various combination.\n+\n+Data sources are used to discover existing VPC resources (VPC and default security group).\n+\n+## Usage\n+\n+To run this example you need to execute:\n+\n+```bash\n+$ terraform init\n+$ terraform plan\n+$ terraform apply\n+```\n+\n+Note that this example may create resources which cost money. Run `terraform destroy` when you don't need these resources.\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_id | The ID of the security group |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/examples/disabled/main.tf b/modules/terraform-aws-security-group-master/examples/disabled/main.tf\nnew file mode 100755\nindex 0000000..d26cf73\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/examples/disabled/main.tf\n@@ -0,0 +1,40 @@\n+provider \"aws\" {\n+  region = \"eu-west-1\"\n+}\n+\n+#############################################################\n+# Data sources to get VPC and default security group details\n+#############################################################\n+data \"aws_vpc\" \"default\" {\n+  default = true\n+}\n+\n+data \"aws_security_group\" \"default\" {\n+  name   = \"default\"\n+  vpc_id = \"${data.aws_vpc.default.id}\"\n+}\n+\n+########################################################\n+# Security groups WILL NOT be created by these examples\n+########################################################\n+module \"complete_sg_disabled\" {\n+  source = \"../../\"\n+\n+  create      = false\n+  name        = \"complete-sg\"\n+  description = \"Security group with all available arguments set (this is just an example)\"\n+  vpc_id      = \"${data.aws_vpc.default.id}\"\n+\n+  ingress_cidr_blocks = [\"0.0.0.0/0\"]\n+}\n+\n+module \"http_sg_disabled\" {\n+  source = \"../../modules/http-80\"\n+\n+  create      = false\n+  name        = \"http-sg\"\n+  description = \"Security group with HTTP ports open for everybody (IPv4 CIDR), egress ports are all world open\"\n+  vpc_id      = \"${data.aws_vpc.default.id}\"\n+\n+  ingress_cidr_blocks = [\"0.0.0.0/0\"]\n+}\ndiff --git a/modules/terraform-aws-security-group-master/examples/disabled/outputs.tf b/modules/terraform-aws-security-group-master/examples/disabled/outputs.tf\nnew file mode 100755\nindex 0000000..9af7561\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/examples/disabled/outputs.tf\n@@ -0,0 +1,4 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.complete_sg_disabled.this_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/examples/dynamic/README.md b/modules/terraform-aws-security-group-master/examples/dynamic/README.md\nnew file mode 100755\nindex 0000000..f585829\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/examples/dynamic/README.md\n@@ -0,0 +1,30 @@\n+# Dynamic Security Group rules example\n+\n+Configuration in this directory creates set of Security Group and Security Group Rules resources in various combination.\n+\n+Data sources are used to discover existing VPC resources (VPC and default security group).\n+\n+## Usage\n+\n+To run this example you need to execute:\n+\n+```bash\n+$ terraform init\n+$ terraform plan\n+$ terraform apply\n+```\n+\n+Note that this example may create resources which cost money. Run `terraform destroy` when you don't need these resources.\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/examples/dynamic/main.tf b/modules/terraform-aws-security-group-master/examples/dynamic/main.tf\nnew file mode 100755\nindex 0000000..c6b2996\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/examples/dynamic/main.tf\n@@ -0,0 +1,39 @@\n+provider \"aws\" {\n+  region = \"eu-west-1\"\n+}\n+\n+#############################################################\n+# Data sources to get VPC and default security group details\n+#############################################################\n+data \"aws_vpc\" \"default\" {\n+  default = true\n+}\n+\n+data \"aws_security_group\" \"default\" {\n+  name   = \"default\"\n+  vpc_id = \"${data.aws_vpc.default.id}\"\n+}\n+\n+###########################\n+# Security groups examples\n+###########################\n+\n+#######\n+# HTTP\n+#######\n+module \"http_sg\" {\n+  source = \"../../modules/http-80\"\n+\n+  name        = \"dynamic-http-sg\"\n+  description = \"Security group with HTTP port open for everyone, and HTTPS open just for the default security group\"\n+  vpc_id      = \"${data.aws_vpc.default.id}\"\n+\n+  ingress_cidr_blocks = [\"0.0.0.0/0\"]\n+\n+  ingress_with_source_security_group_id = [\n+    {\n+      rule                     = \"https-443-tcp\"\n+      source_security_group_id = \"${data.aws_security_group.default.id}\"\n+    },\n+  ]\n+}\ndiff --git a/modules/terraform-aws-security-group-master/examples/dynamic/outputs.tf b/modules/terraform-aws-security-group-master/examples/dynamic/outputs.tf\nnew file mode 100755\nindex 0000000..18034a7\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/examples/dynamic/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.http_sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.http_sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.http_sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.http_sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.http_sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/examples/http/README.md b/modules/terraform-aws-security-group-master/examples/http/README.md\nnew file mode 100755\nindex 0000000..0108ae0\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/examples/http/README.md\n@@ -0,0 +1,30 @@\n+# HTTP Security Group example\n+\n+Configuration in this directory creates set of Security Group and Security Group Rules resources in various combination.\n+\n+Data sources are used to discover existing VPC resources (VPC and default security group).\n+\n+## Usage\n+\n+To run this example you need to execute:\n+\n+```bash\n+$ terraform init\n+$ terraform plan\n+$ terraform apply\n+```\n+\n+Note that this example may create resources which cost money. Run `terraform destroy` when you don't need these resources.\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/examples/http/main.tf b/modules/terraform-aws-security-group-master/examples/http/main.tf\nnew file mode 100755\nindex 0000000..661f31e\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/examples/http/main.tf\n@@ -0,0 +1,107 @@\n+provider \"aws\" {\n+  region = \"eu-west-1\"\n+}\n+\n+#############################################################\n+# Data sources to get VPC and default security group details\n+#############################################################\n+data \"aws_vpc\" \"default\" {\n+  default = true\n+}\n+\n+data \"aws_security_group\" \"default\" {\n+  name   = \"default\"\n+  vpc_id = \"${data.aws_vpc.default.id}\"\n+}\n+\n+###########################\n+# Security groups examples\n+###########################\n+\n+#######\n+# HTTP\n+#######\n+module \"http_sg\" {\n+  source = \"../../modules/http-80\"\n+\n+  name        = \"http-sg\"\n+  description = \"Security group with HTTP ports open for everybody (IPv4 CIDR), egress ports are all world open\"\n+  vpc_id      = \"${data.aws_vpc.default.id}\"\n+\n+  ingress_cidr_blocks = [\"0.0.0.0/0\"]\n+}\n+\n+#####################\n+# HTTP with MySQL #1\n+#####################\n+module \"http_mysql_1_sg\" {\n+  source = \"../../modules/http-80\"\n+\n+  name            = \"http-mysql-1\"\n+  use_name_prefix = false\n+\n+  description = \"Security group with HTTP and MySQL ports open for everybody (IPv4 CIDR)\"\n+  vpc_id      = \"${data.aws_vpc.default.id}\"\n+\n+  ingress_cidr_blocks = [\"0.0.0.0/0\"]\n+\n+  # Add MySQL rules\n+  ingress_rules = [\"mysql-tcp\"]\n+}\n+\n+#####################\n+# HTTP with MySQL #2\n+#####################\n+module \"http_mysql_2_sg\" {\n+  source = \"../../modules/http-80\"\n+\n+  name        = \"http-mysql-2\"\n+  description = \"Security group with HTTP and MySQL ports open within current VPC\"\n+  vpc_id      = \"${data.aws_vpc.default.id}\"\n+\n+  # Add mysql rules\n+  ingress_rules = [\"mysql-tcp\"]\n+\n+  # Allow ingress rules to be accessed only within current VPC\n+  ingress_cidr_blocks      = [\"${data.aws_vpc.default.cidr_block}\"]\n+  ingress_ipv6_cidr_blocks = []                                     # Not all VPCs have IPv6 enabled, but if you have it enabled, then this will work - [\"${data.aws_vpc.default.ipv6_cidr_block}\"]\n+}\n+\n+###########################\n+# HTTP with egress minimal\n+###########################\n+module \"http_with_egress_minimal_sg\" {\n+  source = \"../../modules/http-80\"\n+\n+  name        = \"http-with-egress-minimal\"\n+  description = \"Security group with HTTP ports open within current VPC, and allow egress access to HTTP ports to the whole world\"\n+  vpc_id      = \"${data.aws_vpc.default.id}\"\n+\n+  # Allow ingress rules to be accessed only within current VPC\n+  ingress_cidr_blocks = [\"${data.aws_vpc.default.cidr_block}\"]\n+\n+  # Allow all rules for all protocols\n+  egress_rules = [\"http-80-tcp\"]\n+}\n+\n+###########################\n+# HTTP with egress limited\n+###########################\n+module \"http_with_egress_sg\" {\n+  source = \"../../modules/http-80\"\n+\n+  name        = \"http-with-egress\"\n+  description = \"Security group with HTTP ports open within current VPC, and allow egress access just to small subnet\"\n+  vpc_id      = \"${data.aws_vpc.default.id}\"\n+\n+  # Add mysql rules\n+  ingress_rules = [\"mysql-tcp\"]\n+\n+  # Allow ingress rules to be accessed only within current VPC\n+  ingress_cidr_blocks      = [\"${data.aws_vpc.default.cidr_block}\"]\n+  ingress_ipv6_cidr_blocks = []                                     # Not all VPCs have IPv6 enabled, but if you have it enabled, then this will work - [\"${data.aws_vpc.default.ipv6_cidr_block}\"]\n+\n+  # Allow egress rules to access anything (empty list means everything)\n+  egress_cidr_blocks      = [\"10.10.10.0/28\"]\n+  egress_ipv6_cidr_blocks = []                # Not all VPCs have IPv6 enabled, but if you have it enabled, then this will work - [\"${data.aws_vpc.default.ipv6_cidr_block}\"]\n+}\ndiff --git a/modules/terraform-aws-security-group-master/examples/http/outputs.tf b/modules/terraform-aws-security-group-master/examples/http/outputs.tf\nnew file mode 100755\nindex 0000000..18034a7\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/examples/http/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.http_sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.http_sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.http_sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.http_sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.http_sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/main.tf b/modules/terraform-aws-security-group-master/main.tf\nnew file mode 100755\nindex 0000000..f5e34f5\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/main.tf\n@@ -0,0 +1,390 @@\n+\n+\n+##################################\n+# Get ID of created Security Group\n+##################################\n+locals {\n+  this_sg_id = \"${element(concat(coalescelist(aws_security_group.this.*.id, aws_security_group.this_name_prefix.*.id), list(\"\")), 0)}\"\n+}\n+\n+##########################\n+# Security group with name\n+##########################\n+resource \"aws_security_group\" \"this\" {\n+  count = \"${var.create && ! var.use_name_prefix ? 1 : 0}\"\n+\n+  name        = \"${var.name}\"\n+  description = \"${var.description}\"\n+  vpc_id      = \"${var.vpc_id}\"\n+\n+  tags = \"${merge(var.tags, map(\"Name\", format(\"%s\", var.name)))}\"\n+}\n+\n+#################################\n+# Security group with name_prefix\n+#################################\n+resource \"aws_security_group\" \"this_name_prefix\" {\n+  count = \"${var.create && var.use_name_prefix ? 1 : 0}\"\n+\n+  name_prefix = \"${var.name}-\"\n+  description = \"${var.description}\"\n+  vpc_id      = \"${var.vpc_id}\"\n+\n+  tags = \"${merge(var.tags, map(\"Name\", format(\"%s\", var.name)))}\"\n+\n+  lifecycle {\n+    create_before_destroy = true\n+  }\n+}\n+\n+###################################\n+# Ingress - List of rules (simple)\n+###################################\n+# Security group rules with \"cidr_blocks\" and it uses list of rules names\n+resource \"aws_security_group_rule\" \"ingress_rules\" {\n+  count = \"${var.create ? length(var.ingress_rules) : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"ingress\"\n+\n+  cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+  prefix_list_ids  = [\"${var.ingress_prefix_list_ids}\"]\n+  description      = \"${element(var.rules[var.ingress_rules[count.index]], 3)}\"\n+\n+  from_port = \"${element(var.rules[var.ingress_rules[count.index]], 0)}\"\n+  to_port   = \"${element(var.rules[var.ingress_rules[count.index]], 1)}\"\n+  protocol  = \"${element(var.rules[var.ingress_rules[count.index]], 2)}\"\n+}\n+\n+# Computed - Security group rules with \"cidr_blocks\" and it uses list of rules names\n+resource \"aws_security_group_rule\" \"computed_ingress_rules\" {\n+  count = \"${var.create ? var.number_of_computed_ingress_rules : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"ingress\"\n+\n+  cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+  prefix_list_ids  = [\"${var.ingress_prefix_list_ids}\"]\n+  description      = \"${element(var.rules[var.computed_ingress_rules[count.index]], 3)}\"\n+\n+  from_port = \"${element(var.rules[var.computed_ingress_rules[count.index]], 0)}\"\n+  to_port   = \"${element(var.rules[var.computed_ingress_rules[count.index]], 1)}\"\n+  protocol  = \"${element(var.rules[var.computed_ingress_rules[count.index]], 2)}\"\n+}\n+\n+##########################\n+# Ingress - Maps of rules\n+##########################\n+# Security group rules with \"source_security_group_id\", but without \"cidr_blocks\" and \"self\"\n+resource \"aws_security_group_rule\" \"ingress_with_source_security_group_id\" {\n+  count = \"${var.create ? length(var.ingress_with_source_security_group_id) : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"ingress\"\n+\n+  source_security_group_id = \"${lookup(var.ingress_with_source_security_group_id[count.index], \"source_security_group_id\")}\"\n+  ipv6_cidr_blocks         = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+  prefix_list_ids          = [\"${var.ingress_prefix_list_ids}\"]\n+  description              = \"${lookup(var.ingress_with_source_security_group_id[count.index], \"description\", \"Ingress Rule\")}\"\n+\n+  from_port = \"${lookup(var.ingress_with_source_security_group_id[count.index], \"from_port\", element(var.rules[lookup(var.ingress_with_source_security_group_id[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.ingress_with_source_security_group_id[count.index], \"to_port\", element(var.rules[lookup(var.ingress_with_source_security_group_id[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.ingress_with_source_security_group_id[count.index], \"protocol\", element(var.rules[lookup(var.ingress_with_source_security_group_id[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+# Computed - Security group rules with \"source_security_group_id\", but without \"cidr_blocks\" and \"self\"\n+resource \"aws_security_group_rule\" \"computed_ingress_with_source_security_group_id\" {\n+  count = \"${var.create ? var.number_of_computed_ingress_with_source_security_group_id : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"ingress\"\n+\n+  source_security_group_id = \"${lookup(var.computed_ingress_with_source_security_group_id[count.index], \"source_security_group_id\")}\"\n+  ipv6_cidr_blocks         = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+  prefix_list_ids          = [\"${var.ingress_prefix_list_ids}\"]\n+  description              = \"${lookup(var.computed_ingress_with_source_security_group_id[count.index], \"description\", \"Ingress Rule\")}\"\n+\n+  from_port = \"${lookup(var.computed_ingress_with_source_security_group_id[count.index], \"from_port\", element(var.rules[lookup(var.computed_ingress_with_source_security_group_id[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.computed_ingress_with_source_security_group_id[count.index], \"to_port\", element(var.rules[lookup(var.computed_ingress_with_source_security_group_id[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.computed_ingress_with_source_security_group_id[count.index], \"protocol\", element(var.rules[lookup(var.computed_ingress_with_source_security_group_id[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+# Security group rules with \"cidr_blocks\", but without \"ipv6_cidr_blocks\", \"source_security_group_id\" and \"self\"\n+resource \"aws_security_group_rule\" \"ingress_with_cidr_blocks\" {\n+  count = \"${var.create ? length(var.ingress_with_cidr_blocks) : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"ingress\"\n+\n+  cidr_blocks     = [\"${split(\",\", lookup(var.ingress_with_cidr_blocks[count.index], \"cidr_blocks\", join(\",\", var.ingress_cidr_blocks)))}\"]\n+  prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+  description     = \"${lookup(var.ingress_with_cidr_blocks[count.index], \"description\", \"Ingress Rule\")}\"\n+\n+  from_port = \"${lookup(var.ingress_with_cidr_blocks[count.index], \"from_port\", element(var.rules[lookup(var.ingress_with_cidr_blocks[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.ingress_with_cidr_blocks[count.index], \"to_port\", element(var.rules[lookup(var.ingress_with_cidr_blocks[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.ingress_with_cidr_blocks[count.index], \"protocol\", element(var.rules[lookup(var.ingress_with_cidr_blocks[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+# Computed - Security group rules with \"cidr_blocks\", but without \"ipv6_cidr_blocks\", \"source_security_group_id\" and \"self\"\n+resource \"aws_security_group_rule\" \"computed_ingress_with_cidr_blocks\" {\n+  count = \"${var.create ? var.number_of_computed_ingress_with_cidr_blocks : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"ingress\"\n+\n+  cidr_blocks     = [\"${split(\",\", lookup(var.computed_ingress_with_cidr_blocks[count.index], \"cidr_blocks\", join(\",\", var.ingress_cidr_blocks)))}\"]\n+  prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+  description     = \"${lookup(var.computed_ingress_with_cidr_blocks[count.index], \"description\", \"Ingress Rule\")}\"\n+\n+  from_port = \"${lookup(var.computed_ingress_with_cidr_blocks[count.index], \"from_port\", element(var.rules[lookup(var.computed_ingress_with_cidr_blocks[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.computed_ingress_with_cidr_blocks[count.index], \"to_port\", element(var.rules[lookup(var.computed_ingress_with_cidr_blocks[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.computed_ingress_with_cidr_blocks[count.index], \"protocol\", element(var.rules[lookup(var.computed_ingress_with_cidr_blocks[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+# Security group rules with \"ipv6_cidr_blocks\", but without \"cidr_blocks\", \"source_security_group_id\" and \"self\"\n+resource \"aws_security_group_rule\" \"ingress_with_ipv6_cidr_blocks\" {\n+  count = \"${var.create ? length(var.ingress_with_ipv6_cidr_blocks) : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"ingress\"\n+\n+  ipv6_cidr_blocks = [\"${split(\",\", lookup(var.ingress_with_ipv6_cidr_blocks[count.index], \"ipv6_cidr_blocks\", join(\",\", var.ingress_ipv6_cidr_blocks)))}\"]\n+  prefix_list_ids  = [\"${var.ingress_prefix_list_ids}\"]\n+  description      = \"${lookup(var.ingress_with_ipv6_cidr_blocks[count.index], \"description\", \"Ingress Rule\")}\"\n+\n+  from_port = \"${lookup(var.ingress_with_ipv6_cidr_blocks[count.index], \"from_port\", element(var.rules[lookup(var.ingress_with_ipv6_cidr_blocks[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.ingress_with_ipv6_cidr_blocks[count.index], \"to_port\", element(var.rules[lookup(var.ingress_with_ipv6_cidr_blocks[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.ingress_with_ipv6_cidr_blocks[count.index], \"protocol\", element(var.rules[lookup(var.ingress_with_ipv6_cidr_blocks[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+# Computed - Security group rules with \"ipv6_cidr_blocks\", but without \"cidr_blocks\", \"source_security_group_id\" and \"self\"\n+resource \"aws_security_group_rule\" \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  count = \"${var.create ? var.number_of_computed_ingress_with_ipv6_cidr_blocks : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"ingress\"\n+\n+  ipv6_cidr_blocks = [\"${split(\",\", lookup(var.computed_ingress_with_ipv6_cidr_blocks[count.index], \"ipv6_cidr_blocks\", join(\",\", var.ingress_ipv6_cidr_blocks)))}\"]\n+  prefix_list_ids  = [\"${var.ingress_prefix_list_ids}\"]\n+  description      = \"${lookup(var.computed_ingress_with_ipv6_cidr_blocks[count.index], \"description\", \"Ingress Rule\")}\"\n+\n+  from_port = \"${lookup(var.computed_ingress_with_ipv6_cidr_blocks[count.index], \"from_port\", element(var.rules[lookup(var.computed_ingress_with_ipv6_cidr_blocks[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.computed_ingress_with_ipv6_cidr_blocks[count.index], \"to_port\", element(var.rules[lookup(var.computed_ingress_with_ipv6_cidr_blocks[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.computed_ingress_with_ipv6_cidr_blocks[count.index], \"protocol\", element(var.rules[lookup(var.computed_ingress_with_ipv6_cidr_blocks[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+# Security group rules with \"self\", but without \"cidr_blocks\" and \"source_security_group_id\"\n+resource \"aws_security_group_rule\" \"ingress_with_self\" {\n+  count = \"${var.create ? length(var.ingress_with_self) : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"ingress\"\n+\n+  self             = \"${lookup(var.ingress_with_self[count.index], \"self\", true)}\"\n+  ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+  prefix_list_ids  = [\"${var.ingress_prefix_list_ids}\"]\n+  description      = \"${lookup(var.ingress_with_self[count.index], \"description\", \"Ingress Rule\")}\"\n+\n+  from_port = \"${lookup(var.ingress_with_self[count.index], \"from_port\", element(var.rules[lookup(var.ingress_with_self[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.ingress_with_self[count.index], \"to_port\", element(var.rules[lookup(var.ingress_with_self[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.ingress_with_self[count.index], \"protocol\", element(var.rules[lookup(var.ingress_with_self[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+# Computed - Security group rules with \"self\", but without \"cidr_blocks\" and \"source_security_group_id\"\n+resource \"aws_security_group_rule\" \"computed_ingress_with_self\" {\n+  count = \"${var.create ? var.number_of_computed_ingress_with_self : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"ingress\"\n+\n+  self             = \"${lookup(var.computed_ingress_with_self[count.index], \"self\", true)}\"\n+  ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+  prefix_list_ids  = [\"${var.ingress_prefix_list_ids}\"]\n+  description      = \"${lookup(var.computed_ingress_with_self[count.index], \"description\", \"Ingress Rule\")}\"\n+\n+  from_port = \"${lookup(var.computed_ingress_with_self[count.index], \"from_port\", element(var.rules[lookup(var.computed_ingress_with_self[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.computed_ingress_with_self[count.index], \"to_port\", element(var.rules[lookup(var.computed_ingress_with_self[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.computed_ingress_with_self[count.index], \"protocol\", element(var.rules[lookup(var.computed_ingress_with_self[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+#################\n+# End of ingress\n+#################\n+\n+##################################\n+# Egress - List of rules (simple)\n+##################################\n+# Security group rules with \"cidr_blocks\" and it uses list of rules names\n+resource \"aws_security_group_rule\" \"egress_rules\" {\n+  count = \"${var.create ? length(var.egress_rules) : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"egress\"\n+\n+  cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+  prefix_list_ids  = [\"${var.egress_prefix_list_ids}\"]\n+  description      = \"${element(var.rules[var.egress_rules[count.index]], 3)}\"\n+\n+  from_port = \"${element(var.rules[var.egress_rules[count.index]], 0)}\"\n+  to_port   = \"${element(var.rules[var.egress_rules[count.index]], 1)}\"\n+  protocol  = \"${element(var.rules[var.egress_rules[count.index]], 2)}\"\n+}\n+\n+# Computed - Security group rules with \"cidr_blocks\" and it uses list of rules names\n+resource \"aws_security_group_rule\" \"computed_egress_rules\" {\n+  count = \"${var.create ? var.number_of_computed_egress_rules : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"egress\"\n+\n+  cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+  prefix_list_ids  = [\"${var.egress_prefix_list_ids}\"]\n+  description      = \"${element(var.rules[var.computed_egress_rules[count.index]], 3)}\"\n+\n+  from_port = \"${element(var.rules[var.computed_egress_rules[count.index]], 0)}\"\n+  to_port   = \"${element(var.rules[var.computed_egress_rules[count.index]], 1)}\"\n+  protocol  = \"${element(var.rules[var.computed_egress_rules[count.index]], 2)}\"\n+}\n+\n+#########################\n+# Egress - Maps of rules\n+#########################\n+# Security group rules with \"source_security_group_id\", but without \"cidr_blocks\" and \"self\"\n+resource \"aws_security_group_rule\" \"egress_with_source_security_group_id\" {\n+  count = \"${var.create ? length(var.egress_with_source_security_group_id) : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"egress\"\n+\n+  source_security_group_id = \"${lookup(var.egress_with_source_security_group_id[count.index], \"source_security_group_id\")}\"\n+  ipv6_cidr_blocks         = [\"${var.egress_ipv6_cidr_blocks}\"]\n+  prefix_list_ids          = [\"${var.egress_prefix_list_ids}\"]\n+  description              = \"${lookup(var.egress_with_source_security_group_id[count.index], \"description\", \"Egress Rule\")}\"\n+\n+  from_port = \"${lookup(var.egress_with_source_security_group_id[count.index], \"from_port\", element(var.rules[lookup(var.egress_with_source_security_group_id[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.egress_with_source_security_group_id[count.index], \"to_port\", element(var.rules[lookup(var.egress_with_source_security_group_id[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.egress_with_source_security_group_id[count.index], \"protocol\", element(var.rules[lookup(var.egress_with_source_security_group_id[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+# Computed - Security group rules with \"source_security_group_id\", but without \"cidr_blocks\" and \"self\"\n+resource \"aws_security_group_rule\" \"computed_egress_with_source_security_group_id\" {\n+  count = \"${var.create ? var.number_of_computed_egress_with_source_security_group_id : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"egress\"\n+\n+  source_security_group_id = \"${lookup(var.computed_egress_with_source_security_group_id[count.index], \"source_security_group_id\")}\"\n+  ipv6_cidr_blocks         = [\"${var.egress_ipv6_cidr_blocks}\"]\n+  prefix_list_ids          = [\"${var.egress_prefix_list_ids}\"]\n+  description              = \"${lookup(var.computed_egress_with_source_security_group_id[count.index], \"description\", \"Egress Rule\")}\"\n+\n+  from_port = \"${lookup(var.computed_egress_with_source_security_group_id[count.index], \"from_port\", element(var.rules[lookup(var.computed_egress_with_source_security_group_id[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.computed_egress_with_source_security_group_id[count.index], \"to_port\", element(var.rules[lookup(var.computed_egress_with_source_security_group_id[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.computed_egress_with_source_security_group_id[count.index], \"protocol\", element(var.rules[lookup(var.computed_egress_with_source_security_group_id[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+# Security group rules with \"cidr_blocks\", but without \"ipv6_cidr_blocks\", \"source_security_group_id\" and \"self\"\n+resource \"aws_security_group_rule\" \"egress_with_cidr_blocks\" {\n+  count = \"${var.create ? length(var.egress_with_cidr_blocks) : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"egress\"\n+\n+  cidr_blocks     = [\"${split(\",\", lookup(var.egress_with_cidr_blocks[count.index], \"cidr_blocks\", join(\",\", var.egress_cidr_blocks)))}\"]\n+  prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+  description     = \"${lookup(var.egress_with_cidr_blocks[count.index], \"description\", \"Egress Rule\")}\"\n+\n+  from_port = \"${lookup(var.egress_with_cidr_blocks[count.index], \"from_port\", element(var.rules[lookup(var.egress_with_cidr_blocks[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.egress_with_cidr_blocks[count.index], \"to_port\", element(var.rules[lookup(var.egress_with_cidr_blocks[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.egress_with_cidr_blocks[count.index], \"protocol\", element(var.rules[lookup(var.egress_with_cidr_blocks[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+# Computed - Security group rules with \"cidr_blocks\", but without \"ipv6_cidr_blocks\", \"source_security_group_id\" and \"self\"\n+resource \"aws_security_group_rule\" \"computed_egress_with_cidr_blocks\" {\n+  count = \"${var.create ? var.number_of_computed_egress_with_cidr_blocks : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"egress\"\n+\n+  cidr_blocks     = [\"${split(\",\", lookup(var.computed_egress_with_cidr_blocks[count.index], \"cidr_blocks\", join(\",\", var.egress_cidr_blocks)))}\"]\n+  prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+  description     = \"${lookup(var.computed_egress_with_cidr_blocks[count.index], \"description\", \"Egress Rule\")}\"\n+\n+  from_port = \"${lookup(var.computed_egress_with_cidr_blocks[count.index], \"from_port\", element(var.rules[lookup(var.computed_egress_with_cidr_blocks[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.computed_egress_with_cidr_blocks[count.index], \"to_port\", element(var.rules[lookup(var.computed_egress_with_cidr_blocks[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.computed_egress_with_cidr_blocks[count.index], \"protocol\", element(var.rules[lookup(var.computed_egress_with_cidr_blocks[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+# Security group rules with \"ipv6_cidr_blocks\", but without \"cidr_blocks\", \"source_security_group_id\" and \"self\"\n+resource \"aws_security_group_rule\" \"egress_with_ipv6_cidr_blocks\" {\n+  count = \"${var.create ? length(var.egress_with_ipv6_cidr_blocks) : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"egress\"\n+\n+  ipv6_cidr_blocks = [\"${split(\",\", lookup(var.egress_with_ipv6_cidr_blocks[count.index], \"ipv6_cidr_blocks\", join(\",\", var.egress_ipv6_cidr_blocks)))}\"]\n+  prefix_list_ids  = [\"${var.egress_prefix_list_ids}\"]\n+  description      = \"${lookup(var.egress_with_ipv6_cidr_blocks[count.index], \"description\", \"Egress Rule\")}\"\n+\n+  from_port = \"${lookup(var.egress_with_ipv6_cidr_blocks[count.index], \"from_port\", element(var.rules[lookup(var.egress_with_ipv6_cidr_blocks[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.egress_with_ipv6_cidr_blocks[count.index], \"to_port\", element(var.rules[lookup(var.egress_with_ipv6_cidr_blocks[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.egress_with_ipv6_cidr_blocks[count.index], \"protocol\", element(var.rules[lookup(var.egress_with_ipv6_cidr_blocks[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+# Computed - Security group rules with \"ipv6_cidr_blocks\", but without \"cidr_blocks\", \"source_security_group_id\" and \"self\"\n+resource \"aws_security_group_rule\" \"computed_egress_with_ipv6_cidr_blocks\" {\n+  count = \"${var.create ? var.number_of_computed_egress_with_ipv6_cidr_blocks : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"egress\"\n+\n+  ipv6_cidr_blocks = [\"${split(\",\", lookup(var.computed_egress_with_ipv6_cidr_blocks[count.index], \"ipv6_cidr_blocks\", join(\",\", var.egress_ipv6_cidr_blocks)))}\"]\n+  prefix_list_ids  = [\"${var.egress_prefix_list_ids}\"]\n+  description      = \"${lookup(var.computed_egress_with_ipv6_cidr_blocks[count.index], \"description\", \"Egress Rule\")}\"\n+\n+  from_port = \"${lookup(var.computed_egress_with_ipv6_cidr_blocks[count.index], \"from_port\", element(var.rules[lookup(var.computed_egress_with_ipv6_cidr_blocks[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.computed_egress_with_ipv6_cidr_blocks[count.index], \"to_port\", element(var.rules[lookup(var.computed_egress_with_ipv6_cidr_blocks[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.computed_egress_with_ipv6_cidr_blocks[count.index], \"protocol\", element(var.rules[lookup(var.computed_egress_with_ipv6_cidr_blocks[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+# Security group rules with \"self\", but without \"cidr_blocks\" and \"source_security_group_id\"\n+resource \"aws_security_group_rule\" \"egress_with_self\" {\n+  count = \"${var.create ? length(var.egress_with_self) : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"egress\"\n+\n+  self             = \"${lookup(var.egress_with_self[count.index], \"self\", true)}\"\n+  ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+  prefix_list_ids  = [\"${var.egress_prefix_list_ids}\"]\n+  description      = \"${lookup(var.egress_with_self[count.index], \"description\", \"Egress Rule\")}\"\n+\n+  from_port = \"${lookup(var.egress_with_self[count.index], \"from_port\", element(var.rules[lookup(var.egress_with_self[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.egress_with_self[count.index], \"to_port\", element(var.rules[lookup(var.egress_with_self[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.egress_with_self[count.index], \"protocol\", element(var.rules[lookup(var.egress_with_self[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+# Computed - Security group rules with \"self\", but without \"cidr_blocks\" and \"source_security_group_id\"\n+resource \"aws_security_group_rule\" \"computed_egress_with_self\" {\n+  count = \"${var.create ? var.number_of_computed_egress_with_self : 0}\"\n+\n+  security_group_id = \"${local.this_sg_id}\"\n+  type              = \"egress\"\n+\n+  self             = \"${lookup(var.computed_egress_with_self[count.index], \"self\", true)}\"\n+  ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+  prefix_list_ids  = [\"${var.egress_prefix_list_ids}\"]\n+  description      = \"${lookup(var.computed_egress_with_self[count.index], \"description\", \"Egress Rule\")}\"\n+\n+  from_port = \"${lookup(var.computed_egress_with_self[count.index], \"from_port\", element(var.rules[lookup(var.computed_egress_with_self[count.index], \"rule\", \"_\")], 0))}\"\n+  to_port   = \"${lookup(var.computed_egress_with_self[count.index], \"to_port\", element(var.rules[lookup(var.computed_egress_with_self[count.index], \"rule\", \"_\")], 1))}\"\n+  protocol  = \"${lookup(var.computed_egress_with_self[count.index], \"protocol\", element(var.rules[lookup(var.computed_egress_with_self[count.index], \"rule\", \"_\")], 2))}\"\n+}\n+\n+################\n+# End of egress\n+################\ndiff --git a/modules/terraform-aws-security-group-master/modules/README.md b/modules/terraform-aws-security-group-master/modules/README.md\nnew file mode 100755\nindex 0000000..0a415aa\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/README.md\n@@ -0,0 +1,41 @@\n+List of Security Groups implemented as Terraform modules\n+========================================================\n+\n+\n+* [carbon-relay-ng](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/carbon-relay-ng)\n+* [cassandra](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/cassandra)\n+* [consul](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/consul)\n+* [docker-swarm](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/docker-swarm)\n+* [elasticsearch](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/elasticsearch)\n+* [http-80](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/http-80)\n+* [http-8080](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/http-8080)\n+* [https-443](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/https-443)\n+* [https-8443](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/https-8443)\n+* [ipsec-4500](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/ipsec-4500)\n+* [ipsec-500](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/ipsec-500)\n+* [kafka](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/kafka)\n+* [ldaps](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/ldaps)\n+* [memcached](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/memcached)\n+* [mongodb](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/mongodb)\n+* [mssql](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/mssql)\n+* [mysql](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/mysql)\n+* [nfs](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/nfs)\n+* [nomad](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/nomad)\n+* [ntp](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/ntp)\n+* [openvpn](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/openvpn)\n+* [oracle-db](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/oracle-db)\n+* [postgresql](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/postgresql)\n+* [rabbitmq](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/rabbitmq)\n+* [rdp](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/rdp)\n+* [redis](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/redis)\n+* [redshift](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/redshift)\n+* [splunk](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/splunk)\n+* [squid](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/squid)\n+* [ssh](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/ssh)\n+* [storm](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/storm)\n+* [web](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/web)\n+* [winrm](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/winrm)\n+* [zipkin](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/zipkin)\n+* [zookeeper](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/zookeeper)\n+* [_templates](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/_templates) - Source templates for all other modules. Change carefully, test thoughtfully!\n+\ndiff --git a/modules/terraform-aws-security-group-master/modules/_templates/main.tf b/modules/terraform-aws-security-group-master/modules/_templates/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/_templates/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/_templates/outputs.tf b/modules/terraform-aws-security-group-master/modules/_templates/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/_templates/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/_templates/variables.tf b/modules/terraform-aws-security-group-master/modules/_templates/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/_templates/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/carbon-relay-ng/README.md b/modules/terraform-aws-security-group-master/modules/carbon-relay-ng/README.md\nnew file mode 100755\nindex 0000000..56f8056\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/carbon-relay-ng/README.md\n@@ -0,0 +1,97 @@\n+# carbon-relay-ng - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"carbon_relay-ng_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/carbon-relay-ng\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **carbon-relay-ng module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/carbon-relay-ng/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"carbon-line-in-tcp\", \"carbon-line-in-udp\", \"carbon-pickle-tcp\", \"carbon-pickle-udp\", \"carbon-gui-udp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/carbon-relay-ng/auto_values.tf b/modules/terraform-aws-security-group-master/modules/carbon-relay-ng/auto_values.tf\nnew file mode 100755\nindex 0000000..42e2809\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/carbon-relay-ng/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"carbon-line-in-tcp\", \"carbon-line-in-udp\", \"carbon-pickle-tcp\", \"carbon-pickle-udp\", \"carbon-gui-udp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/carbon-relay-ng/main.tf b/modules/terraform-aws-security-group-master/modules/carbon-relay-ng/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/carbon-relay-ng/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/carbon-relay-ng/outputs.tf b/modules/terraform-aws-security-group-master/modules/carbon-relay-ng/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/carbon-relay-ng/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/carbon-relay-ng/variables.tf b/modules/terraform-aws-security-group-master/modules/carbon-relay-ng/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/carbon-relay-ng/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/cassandra/README.md b/modules/terraform-aws-security-group-master/modules/cassandra/README.md\nnew file mode 100755\nindex 0000000..772bcf8\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/cassandra/README.md\n@@ -0,0 +1,97 @@\n+# cassandra - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"cassandra_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/cassandra\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **cassandra module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/cassandra/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"cassandra-clients-tcp\", \"cassandra-thrift-clients-tcp\", \"cassandra-jmx-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/cassandra/auto_values.tf b/modules/terraform-aws-security-group-master/modules/cassandra/auto_values.tf\nnew file mode 100755\nindex 0000000..8c4dd08\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/cassandra/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"cassandra-clients-tcp\", \"cassandra-thrift-clients-tcp\", \"cassandra-jmx-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/cassandra/main.tf b/modules/terraform-aws-security-group-master/modules/cassandra/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/cassandra/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/cassandra/outputs.tf b/modules/terraform-aws-security-group-master/modules/cassandra/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/cassandra/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/cassandra/variables.tf b/modules/terraform-aws-security-group-master/modules/cassandra/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/cassandra/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/consul/README.md b/modules/terraform-aws-security-group-master/modules/consul/README.md\nnew file mode 100755\nindex 0000000..13cfc2d\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/consul/README.md\n@@ -0,0 +1,97 @@\n+# consul - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"consul_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/consul\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **consul module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/consul/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"consul-tcp\", \"consul-cli-rpc-tcp\", \"consul-webui-tcp\", \"consul-dns-tcp\", \"consul-dns-udp\", \"consul-serf-lan-tcp\", \"consul-serf-lan-udp\", \"consul-serf-wan-tcp\", \"consul-serf-wan-udp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/consul/auto_values.tf b/modules/terraform-aws-security-group-master/modules/consul/auto_values.tf\nnew file mode 100755\nindex 0000000..be7b4e1\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/consul/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"consul-tcp\", \"consul-cli-rpc-tcp\", \"consul-webui-tcp\", \"consul-dns-tcp\", \"consul-dns-udp\", \"consul-serf-lan-tcp\", \"consul-serf-lan-udp\", \"consul-serf-wan-tcp\", \"consul-serf-wan-udp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/consul/main.tf b/modules/terraform-aws-security-group-master/modules/consul/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/consul/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/consul/outputs.tf b/modules/terraform-aws-security-group-master/modules/consul/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/consul/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/consul/variables.tf b/modules/terraform-aws-security-group-master/modules/consul/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/consul/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/docker-swarm/README.md b/modules/terraform-aws-security-group-master/modules/docker-swarm/README.md\nnew file mode 100755\nindex 0000000..60f6677\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/docker-swarm/README.md\n@@ -0,0 +1,97 @@\n+# docker-swarm - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"docker_swarm_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/docker-swarm\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **docker-swarm module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/docker-swarm/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"docker-swarm-mngmt-tcp\", \"docker-swarm-node-tcp\", \"docker-swarm-node-udp\", \"docker-swarm-overlay-udp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/docker-swarm/auto_values.tf b/modules/terraform-aws-security-group-master/modules/docker-swarm/auto_values.tf\nnew file mode 100755\nindex 0000000..df26e8c\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/docker-swarm/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"docker-swarm-mngmt-tcp\", \"docker-swarm-node-tcp\", \"docker-swarm-node-udp\", \"docker-swarm-overlay-udp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/docker-swarm/main.tf b/modules/terraform-aws-security-group-master/modules/docker-swarm/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/docker-swarm/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/docker-swarm/outputs.tf b/modules/terraform-aws-security-group-master/modules/docker-swarm/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/docker-swarm/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/docker-swarm/variables.tf b/modules/terraform-aws-security-group-master/modules/docker-swarm/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/docker-swarm/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/elasticsearch/README.md b/modules/terraform-aws-security-group-master/modules/elasticsearch/README.md\nnew file mode 100755\nindex 0000000..0efbce3\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/elasticsearch/README.md\n@@ -0,0 +1,97 @@\n+# elasticsearch - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"elasticsearch_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/elasticsearch\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **elasticsearch module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/elasticsearch/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"elasticsearch-rest-tcp\", \"elasticsearch-java-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/elasticsearch/auto_values.tf b/modules/terraform-aws-security-group-master/modules/elasticsearch/auto_values.tf\nnew file mode 100755\nindex 0000000..129715a\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/elasticsearch/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"elasticsearch-rest-tcp\", \"elasticsearch-java-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/elasticsearch/main.tf b/modules/terraform-aws-security-group-master/modules/elasticsearch/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/elasticsearch/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/elasticsearch/outputs.tf b/modules/terraform-aws-security-group-master/modules/elasticsearch/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/elasticsearch/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/elasticsearch/variables.tf b/modules/terraform-aws-security-group-master/modules/elasticsearch/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/elasticsearch/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/http-80/README.md b/modules/terraform-aws-security-group-master/modules/http-80/README.md\nnew file mode 100755\nindex 0000000..bcd32bb\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/http-80/README.md\n@@ -0,0 +1,97 @@\n+# http-80 - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"http_80_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/http-80\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **http-80 module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/http-80/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"http-80-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/http-80/auto_values.tf b/modules/terraform-aws-security-group-master/modules/http-80/auto_values.tf\nnew file mode 100755\nindex 0000000..281d334\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/http-80/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"http-80-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/http-80/main.tf b/modules/terraform-aws-security-group-master/modules/http-80/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/http-80/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/http-80/outputs.tf b/modules/terraform-aws-security-group-master/modules/http-80/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/http-80/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/http-80/variables.tf b/modules/terraform-aws-security-group-master/modules/http-80/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/http-80/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/http-8080/README.md b/modules/terraform-aws-security-group-master/modules/http-8080/README.md\nnew file mode 100755\nindex 0000000..15e14a6\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/http-8080/README.md\n@@ -0,0 +1,97 @@\n+# http-8080 - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"http_8080_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/http-8080\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **http-8080 module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/http-8080/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"http-8080-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/http-8080/auto_values.tf b/modules/terraform-aws-security-group-master/modules/http-8080/auto_values.tf\nnew file mode 100755\nindex 0000000..c08c4ce\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/http-8080/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"http-8080-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/http-8080/main.tf b/modules/terraform-aws-security-group-master/modules/http-8080/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/http-8080/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/http-8080/outputs.tf b/modules/terraform-aws-security-group-master/modules/http-8080/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/http-8080/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/http-8080/variables.tf b/modules/terraform-aws-security-group-master/modules/http-8080/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/http-8080/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/https-443/README.md b/modules/terraform-aws-security-group-master/modules/https-443/README.md\nnew file mode 100755\nindex 0000000..cedd8ea\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/https-443/README.md\n@@ -0,0 +1,97 @@\n+# https-443 - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"https_443_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/https-443\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **https-443 module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/https-443/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"https-443-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/https-443/auto_values.tf b/modules/terraform-aws-security-group-master/modules/https-443/auto_values.tf\nnew file mode 100755\nindex 0000000..92c5159\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/https-443/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"https-443-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/https-443/main.tf b/modules/terraform-aws-security-group-master/modules/https-443/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/https-443/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/https-443/outputs.tf b/modules/terraform-aws-security-group-master/modules/https-443/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/https-443/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/https-443/variables.tf b/modules/terraform-aws-security-group-master/modules/https-443/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/https-443/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/https-8443/README.md b/modules/terraform-aws-security-group-master/modules/https-8443/README.md\nnew file mode 100755\nindex 0000000..862c72e\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/https-8443/README.md\n@@ -0,0 +1,97 @@\n+# https-8443 - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"https_8443_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/https-8443\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **https-8443 module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/https-8443/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"https-8443-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/https-8443/auto_values.tf b/modules/terraform-aws-security-group-master/modules/https-8443/auto_values.tf\nnew file mode 100755\nindex 0000000..9791195\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/https-8443/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"https-8443-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/https-8443/main.tf b/modules/terraform-aws-security-group-master/modules/https-8443/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/https-8443/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/https-8443/outputs.tf b/modules/terraform-aws-security-group-master/modules/https-8443/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/https-8443/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/https-8443/variables.tf b/modules/terraform-aws-security-group-master/modules/https-8443/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/https-8443/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ipsec-4500/README.md b/modules/terraform-aws-security-group-master/modules/ipsec-4500/README.md\nnew file mode 100755\nindex 0000000..d233d2b\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ipsec-4500/README.md\n@@ -0,0 +1,97 @@\n+# ipsec-4500 - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"ipsec_4500_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/ipsec-4500\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **ipsec-4500 module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/ipsec-4500/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"ipsec-4500-udp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/ipsec-4500/auto_values.tf b/modules/terraform-aws-security-group-master/modules/ipsec-4500/auto_values.tf\nnew file mode 100755\nindex 0000000..02cd414\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ipsec-4500/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"ipsec-4500-udp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ipsec-4500/main.tf b/modules/terraform-aws-security-group-master/modules/ipsec-4500/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ipsec-4500/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ipsec-4500/outputs.tf b/modules/terraform-aws-security-group-master/modules/ipsec-4500/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ipsec-4500/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ipsec-4500/variables.tf b/modules/terraform-aws-security-group-master/modules/ipsec-4500/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ipsec-4500/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ipsec-500/README.md b/modules/terraform-aws-security-group-master/modules/ipsec-500/README.md\nnew file mode 100755\nindex 0000000..3eff609\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ipsec-500/README.md\n@@ -0,0 +1,97 @@\n+# ipsec-500 - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"ipsec_500_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/ipsec-500\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **ipsec-500 module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/ipsec-500/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"ipsec-500-udp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/ipsec-500/auto_values.tf b/modules/terraform-aws-security-group-master/modules/ipsec-500/auto_values.tf\nnew file mode 100755\nindex 0000000..f4e7926\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ipsec-500/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"ipsec-500-udp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ipsec-500/main.tf b/modules/terraform-aws-security-group-master/modules/ipsec-500/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ipsec-500/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ipsec-500/outputs.tf b/modules/terraform-aws-security-group-master/modules/ipsec-500/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ipsec-500/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ipsec-500/variables.tf b/modules/terraform-aws-security-group-master/modules/ipsec-500/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ipsec-500/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/kafka/README.md b/modules/terraform-aws-security-group-master/modules/kafka/README.md\nnew file mode 100755\nindex 0000000..9b9de0c\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/kafka/README.md\n@@ -0,0 +1,97 @@\n+# kafka - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"kafka_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/kafka\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **kafka module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/kafka/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"kafka-broker-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/kafka/auto_values.tf b/modules/terraform-aws-security-group-master/modules/kafka/auto_values.tf\nnew file mode 100755\nindex 0000000..e8d3399\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/kafka/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"kafka-broker-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/kafka/main.tf b/modules/terraform-aws-security-group-master/modules/kafka/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/kafka/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/kafka/outputs.tf b/modules/terraform-aws-security-group-master/modules/kafka/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/kafka/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/kafka/variables.tf b/modules/terraform-aws-security-group-master/modules/kafka/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/kafka/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ldaps/README.md b/modules/terraform-aws-security-group-master/modules/ldaps/README.md\nnew file mode 100755\nindex 0000000..ddce369\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ldaps/README.md\n@@ -0,0 +1,97 @@\n+# ldaps - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"ldaps_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/ldaps\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **ldaps module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/ldaps/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"ldaps-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/ldaps/auto_values.tf b/modules/terraform-aws-security-group-master/modules/ldaps/auto_values.tf\nnew file mode 100755\nindex 0000000..d294f7e\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ldaps/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"ldaps-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ldaps/main.tf b/modules/terraform-aws-security-group-master/modules/ldaps/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ldaps/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ldaps/outputs.tf b/modules/terraform-aws-security-group-master/modules/ldaps/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ldaps/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ldaps/variables.tf b/modules/terraform-aws-security-group-master/modules/ldaps/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ldaps/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/memcached/README.md b/modules/terraform-aws-security-group-master/modules/memcached/README.md\nnew file mode 100755\nindex 0000000..a8aa879\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/memcached/README.md\n@@ -0,0 +1,97 @@\n+# memcached - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"memcached_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/memcached\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **memcached module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/memcached/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"memcached-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/memcached/auto_values.tf b/modules/terraform-aws-security-group-master/modules/memcached/auto_values.tf\nnew file mode 100755\nindex 0000000..075611a\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/memcached/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"memcached-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/memcached/main.tf b/modules/terraform-aws-security-group-master/modules/memcached/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/memcached/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/memcached/outputs.tf b/modules/terraform-aws-security-group-master/modules/memcached/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/memcached/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/memcached/variables.tf b/modules/terraform-aws-security-group-master/modules/memcached/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/memcached/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/mongodb/README.md b/modules/terraform-aws-security-group-master/modules/mongodb/README.md\nnew file mode 100755\nindex 0000000..40ce768\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/mongodb/README.md\n@@ -0,0 +1,97 @@\n+# mongodb - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"mongodb_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/mongodb\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **mongodb module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/mongodb/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"mongodb-27017-tcp\", \"mongodb-27018-tcp\", \"mongodb-27019-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/mongodb/auto_values.tf b/modules/terraform-aws-security-group-master/modules/mongodb/auto_values.tf\nnew file mode 100755\nindex 0000000..5ffa670\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/mongodb/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"mongodb-27017-tcp\", \"mongodb-27018-tcp\", \"mongodb-27019-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/mongodb/main.tf b/modules/terraform-aws-security-group-master/modules/mongodb/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/mongodb/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/mongodb/outputs.tf b/modules/terraform-aws-security-group-master/modules/mongodb/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/mongodb/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/mongodb/variables.tf b/modules/terraform-aws-security-group-master/modules/mongodb/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/mongodb/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/mssql/README.md b/modules/terraform-aws-security-group-master/modules/mssql/README.md\nnew file mode 100755\nindex 0000000..d1da517\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/mssql/README.md\n@@ -0,0 +1,97 @@\n+# mssql - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"mssql_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/mssql\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **mssql module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/mssql/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"mssql-tcp\", \"mssql-udp\", \"mssql-analytics-tcp\", \"mssql-broker-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/mssql/auto_values.tf b/modules/terraform-aws-security-group-master/modules/mssql/auto_values.tf\nnew file mode 100755\nindex 0000000..358cabe\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/mssql/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"mssql-tcp\", \"mssql-udp\", \"mssql-analytics-tcp\", \"mssql-broker-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/mssql/main.tf b/modules/terraform-aws-security-group-master/modules/mssql/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/mssql/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/mssql/outputs.tf b/modules/terraform-aws-security-group-master/modules/mssql/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/mssql/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/mssql/variables.tf b/modules/terraform-aws-security-group-master/modules/mssql/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/mssql/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/mysql/README.md b/modules/terraform-aws-security-group-master/modules/mysql/README.md\nnew file mode 100755\nindex 0000000..1d66ee2\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/mysql/README.md\n@@ -0,0 +1,97 @@\n+# mysql - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"mysql_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/mysql\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **mysql module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/mysql/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"mysql-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/mysql/auto_values.tf b/modules/terraform-aws-security-group-master/modules/mysql/auto_values.tf\nnew file mode 100755\nindex 0000000..fda8f40\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/mysql/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"mysql-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/mysql/main.tf b/modules/terraform-aws-security-group-master/modules/mysql/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/mysql/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/mysql/outputs.tf b/modules/terraform-aws-security-group-master/modules/mysql/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/mysql/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/mysql/variables.tf b/modules/terraform-aws-security-group-master/modules/mysql/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/mysql/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/nfs/README.md b/modules/terraform-aws-security-group-master/modules/nfs/README.md\nnew file mode 100755\nindex 0000000..1a83561\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/nfs/README.md\n@@ -0,0 +1,97 @@\n+# nfs - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"nfs_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/nfs\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **nfs module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/nfs/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"nfs-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/nfs/auto_values.tf b/modules/terraform-aws-security-group-master/modules/nfs/auto_values.tf\nnew file mode 100755\nindex 0000000..f4f6eba\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/nfs/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"nfs-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/nfs/main.tf b/modules/terraform-aws-security-group-master/modules/nfs/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/nfs/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/nfs/outputs.tf b/modules/terraform-aws-security-group-master/modules/nfs/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/nfs/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/nfs/variables.tf b/modules/terraform-aws-security-group-master/modules/nfs/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/nfs/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/nomad/README.md b/modules/terraform-aws-security-group-master/modules/nomad/README.md\nnew file mode 100755\nindex 0000000..7f5b44a\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/nomad/README.md\n@@ -0,0 +1,97 @@\n+# nomad - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"nomad_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/nomad\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **nomad module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/nomad/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"nomad-http-tcp\", \"nomad-rpc-tcp\", \"nomad-serf-tcp\", \"nomad-serf-udp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/nomad/auto_values.tf b/modules/terraform-aws-security-group-master/modules/nomad/auto_values.tf\nnew file mode 100755\nindex 0000000..e91f3f0\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/nomad/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"nomad-http-tcp\", \"nomad-rpc-tcp\", \"nomad-serf-tcp\", \"nomad-serf-udp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/nomad/main.tf b/modules/terraform-aws-security-group-master/modules/nomad/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/nomad/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/nomad/outputs.tf b/modules/terraform-aws-security-group-master/modules/nomad/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/nomad/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/nomad/variables.tf b/modules/terraform-aws-security-group-master/modules/nomad/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/nomad/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ntp/README.md b/modules/terraform-aws-security-group-master/modules/ntp/README.md\nnew file mode 100755\nindex 0000000..8bdb1cf\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ntp/README.md\n@@ -0,0 +1,97 @@\n+# ntp - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"ntp_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/ntp\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **ntp module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/ntp/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"ntp-udp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/ntp/auto_values.tf b/modules/terraform-aws-security-group-master/modules/ntp/auto_values.tf\nnew file mode 100755\nindex 0000000..7c11a01\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ntp/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"ntp-udp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ntp/main.tf b/modules/terraform-aws-security-group-master/modules/ntp/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ntp/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ntp/outputs.tf b/modules/terraform-aws-security-group-master/modules/ntp/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ntp/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ntp/variables.tf b/modules/terraform-aws-security-group-master/modules/ntp/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ntp/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/openvpn/README.md b/modules/terraform-aws-security-group-master/modules/openvpn/README.md\nnew file mode 100755\nindex 0000000..2bfa35b\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/openvpn/README.md\n@@ -0,0 +1,97 @@\n+# openvpn - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"openvpn_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/openvpn\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **openvpn module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/openvpn/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"openvpn-udp\", \"openvpn-tcp\", \"openvpn-https-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/openvpn/auto_values.tf b/modules/terraform-aws-security-group-master/modules/openvpn/auto_values.tf\nnew file mode 100755\nindex 0000000..754247f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/openvpn/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"openvpn-udp\", \"openvpn-tcp\", \"openvpn-https-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/openvpn/main.tf b/modules/terraform-aws-security-group-master/modules/openvpn/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/openvpn/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/openvpn/outputs.tf b/modules/terraform-aws-security-group-master/modules/openvpn/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/openvpn/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/openvpn/variables.tf b/modules/terraform-aws-security-group-master/modules/openvpn/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/openvpn/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/oracle-db/README.md b/modules/terraform-aws-security-group-master/modules/oracle-db/README.md\nnew file mode 100755\nindex 0000000..f4ac380\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/oracle-db/README.md\n@@ -0,0 +1,97 @@\n+# oracle-db - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"oracle_db_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/oracle-db\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **oracle-db module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/oracle-db/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"oracle-db-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/oracle-db/auto_values.tf b/modules/terraform-aws-security-group-master/modules/oracle-db/auto_values.tf\nnew file mode 100755\nindex 0000000..1280cc3\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/oracle-db/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"oracle-db-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/oracle-db/main.tf b/modules/terraform-aws-security-group-master/modules/oracle-db/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/oracle-db/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/oracle-db/outputs.tf b/modules/terraform-aws-security-group-master/modules/oracle-db/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/oracle-db/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/oracle-db/variables.tf b/modules/terraform-aws-security-group-master/modules/oracle-db/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/oracle-db/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/postgresql/README.md b/modules/terraform-aws-security-group-master/modules/postgresql/README.md\nnew file mode 100755\nindex 0000000..778f150\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/postgresql/README.md\n@@ -0,0 +1,97 @@\n+# postgresql - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"postgresql_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/postgresql\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **postgresql module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/postgresql/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"postgresql-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/postgresql/auto_values.tf b/modules/terraform-aws-security-group-master/modules/postgresql/auto_values.tf\nnew file mode 100755\nindex 0000000..bd736eb\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/postgresql/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"postgresql-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/postgresql/main.tf b/modules/terraform-aws-security-group-master/modules/postgresql/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/postgresql/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/postgresql/outputs.tf b/modules/terraform-aws-security-group-master/modules/postgresql/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/postgresql/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/postgresql/variables.tf b/modules/terraform-aws-security-group-master/modules/postgresql/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/postgresql/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/rabbitmq/README.md b/modules/terraform-aws-security-group-master/modules/rabbitmq/README.md\nnew file mode 100755\nindex 0000000..5594e06\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/rabbitmq/README.md\n@@ -0,0 +1,97 @@\n+# rabbitmq - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"rabbitmq_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/rabbitmq\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **rabbitmq module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/rabbitmq/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"rabbitmq-4369-tcp\", \"rabbitmq-5671-tcp\", \"rabbitmq-5672-tcp\", \"rabbitmq-15672-tcp\", \"rabbitmq-25672-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/rabbitmq/auto_values.tf b/modules/terraform-aws-security-group-master/modules/rabbitmq/auto_values.tf\nnew file mode 100755\nindex 0000000..389bd90\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/rabbitmq/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"rabbitmq-4369-tcp\", \"rabbitmq-5671-tcp\", \"rabbitmq-5672-tcp\", \"rabbitmq-15672-tcp\", \"rabbitmq-25672-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/rabbitmq/main.tf b/modules/terraform-aws-security-group-master/modules/rabbitmq/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/rabbitmq/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/rabbitmq/outputs.tf b/modules/terraform-aws-security-group-master/modules/rabbitmq/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/rabbitmq/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/rabbitmq/variables.tf b/modules/terraform-aws-security-group-master/modules/rabbitmq/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/rabbitmq/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/rdp/README.md b/modules/terraform-aws-security-group-master/modules/rdp/README.md\nnew file mode 100755\nindex 0000000..28422f2\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/rdp/README.md\n@@ -0,0 +1,97 @@\n+# rdp - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"rdp_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/rdp\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **rdp module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/rdp/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"rdp-tcp\", \"rdp-udp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/rdp/auto_values.tf b/modules/terraform-aws-security-group-master/modules/rdp/auto_values.tf\nnew file mode 100755\nindex 0000000..8e863dd\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/rdp/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"rdp-tcp\", \"rdp-udp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/rdp/main.tf b/modules/terraform-aws-security-group-master/modules/rdp/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/rdp/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/rdp/outputs.tf b/modules/terraform-aws-security-group-master/modules/rdp/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/rdp/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/rdp/variables.tf b/modules/terraform-aws-security-group-master/modules/rdp/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/rdp/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/redis/README.md b/modules/terraform-aws-security-group-master/modules/redis/README.md\nnew file mode 100755\nindex 0000000..158a23a\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/redis/README.md\n@@ -0,0 +1,97 @@\n+# redis - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"redis_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/redis\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **redis module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/redis/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"redis-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/redis/auto_values.tf b/modules/terraform-aws-security-group-master/modules/redis/auto_values.tf\nnew file mode 100755\nindex 0000000..3d9631b\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/redis/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"redis-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/redis/main.tf b/modules/terraform-aws-security-group-master/modules/redis/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/redis/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/redis/outputs.tf b/modules/terraform-aws-security-group-master/modules/redis/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/redis/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/redis/variables.tf b/modules/terraform-aws-security-group-master/modules/redis/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/redis/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/redshift/README.md b/modules/terraform-aws-security-group-master/modules/redshift/README.md\nnew file mode 100755\nindex 0000000..03ff82c\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/redshift/README.md\n@@ -0,0 +1,97 @@\n+# redshift - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"redshift_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/redshift\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **redshift module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/redshift/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"redshift-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/redshift/auto_values.tf b/modules/terraform-aws-security-group-master/modules/redshift/auto_values.tf\nnew file mode 100755\nindex 0000000..df7b00d\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/redshift/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"redshift-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/redshift/main.tf b/modules/terraform-aws-security-group-master/modules/redshift/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/redshift/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/redshift/outputs.tf b/modules/terraform-aws-security-group-master/modules/redshift/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/redshift/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/redshift/variables.tf b/modules/terraform-aws-security-group-master/modules/redshift/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/redshift/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/splunk/README.md b/modules/terraform-aws-security-group-master/modules/splunk/README.md\nnew file mode 100755\nindex 0000000..d44af9b\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/splunk/README.md\n@@ -0,0 +1,97 @@\n+# splunk - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"splunk_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/splunk\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **splunk module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/splunk/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"splunk-indexer-tcp\", \"splunk-clients-tcp\", \"splunk-splunkd-tcp\", \"splunk-hec-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/splunk/auto_values.tf b/modules/terraform-aws-security-group-master/modules/splunk/auto_values.tf\nnew file mode 100755\nindex 0000000..898585b\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/splunk/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"splunk-indexer-tcp\", \"splunk-clients-tcp\", \"splunk-splunkd-tcp\", \"splunk-hec-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/splunk/main.tf b/modules/terraform-aws-security-group-master/modules/splunk/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/splunk/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/splunk/outputs.tf b/modules/terraform-aws-security-group-master/modules/splunk/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/splunk/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/splunk/variables.tf b/modules/terraform-aws-security-group-master/modules/splunk/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/splunk/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/squid/README.md b/modules/terraform-aws-security-group-master/modules/squid/README.md\nnew file mode 100755\nindex 0000000..1f2cee4\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/squid/README.md\n@@ -0,0 +1,97 @@\n+# squid - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"squid_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/squid\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **squid module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/squid/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"squid-proxy-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/squid/auto_values.tf b/modules/terraform-aws-security-group-master/modules/squid/auto_values.tf\nnew file mode 100755\nindex 0000000..d083715\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/squid/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"squid-proxy-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/squid/main.tf b/modules/terraform-aws-security-group-master/modules/squid/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/squid/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/squid/outputs.tf b/modules/terraform-aws-security-group-master/modules/squid/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/squid/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/squid/variables.tf b/modules/terraform-aws-security-group-master/modules/squid/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/squid/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ssh/README.md b/modules/terraform-aws-security-group-master/modules/ssh/README.md\nnew file mode 100755\nindex 0000000..33ee04a\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ssh/README.md\n@@ -0,0 +1,97 @@\n+# ssh - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"ssh_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/ssh\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **ssh module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/ssh/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"ssh-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/ssh/auto_values.tf b/modules/terraform-aws-security-group-master/modules/ssh/auto_values.tf\nnew file mode 100755\nindex 0000000..0641e7d\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ssh/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"ssh-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ssh/main.tf b/modules/terraform-aws-security-group-master/modules/ssh/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ssh/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ssh/outputs.tf b/modules/terraform-aws-security-group-master/modules/ssh/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ssh/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/ssh/variables.tf b/modules/terraform-aws-security-group-master/modules/ssh/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/ssh/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/storm/README.md b/modules/terraform-aws-security-group-master/modules/storm/README.md\nnew file mode 100755\nindex 0000000..816fae1\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/storm/README.md\n@@ -0,0 +1,97 @@\n+# storm - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"storm_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/storm\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **storm module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/storm/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"storm-nimbus-tcp\", \"storm-ui-tcp\", \"storm-supervisor-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/storm/auto_values.tf b/modules/terraform-aws-security-group-master/modules/storm/auto_values.tf\nnew file mode 100755\nindex 0000000..77928b6\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/storm/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"storm-nimbus-tcp\", \"storm-ui-tcp\", \"storm-supervisor-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/storm/main.tf b/modules/terraform-aws-security-group-master/modules/storm/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/storm/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/storm/outputs.tf b/modules/terraform-aws-security-group-master/modules/storm/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/storm/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/storm/variables.tf b/modules/terraform-aws-security-group-master/modules/storm/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/storm/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/web/README.md b/modules/terraform-aws-security-group-master/modules/web/README.md\nnew file mode 100755\nindex 0000000..94e1df6\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/web/README.md\n@@ -0,0 +1,97 @@\n+# web - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"web_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/web\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **web module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/web/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"http-80-tcp\", \"http-8080-tcp\", \"https-443-tcp\", \"web-jmx-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/web/auto_values.tf b/modules/terraform-aws-security-group-master/modules/web/auto_values.tf\nnew file mode 100755\nindex 0000000..2a359de\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/web/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"http-80-tcp\", \"http-8080-tcp\", \"https-443-tcp\", \"web-jmx-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/web/main.tf b/modules/terraform-aws-security-group-master/modules/web/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/web/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/web/outputs.tf b/modules/terraform-aws-security-group-master/modules/web/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/web/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/web/variables.tf b/modules/terraform-aws-security-group-master/modules/web/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/web/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/winrm/README.md b/modules/terraform-aws-security-group-master/modules/winrm/README.md\nnew file mode 100755\nindex 0000000..1e2587c\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/winrm/README.md\n@@ -0,0 +1,97 @@\n+# winrm - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"winrm_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/winrm\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **winrm module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/winrm/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"winrm-http-tcp\", \"winrm-https-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/winrm/auto_values.tf b/modules/terraform-aws-security-group-master/modules/winrm/auto_values.tf\nnew file mode 100755\nindex 0000000..3af0e0b\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/winrm/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"winrm-http-tcp\", \"winrm-https-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/winrm/main.tf b/modules/terraform-aws-security-group-master/modules/winrm/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/winrm/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/winrm/outputs.tf b/modules/terraform-aws-security-group-master/modules/winrm/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/winrm/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/winrm/variables.tf b/modules/terraform-aws-security-group-master/modules/winrm/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/winrm/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/zipkin/README.md b/modules/terraform-aws-security-group-master/modules/zipkin/README.md\nnew file mode 100755\nindex 0000000..0364a51\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/zipkin/README.md\n@@ -0,0 +1,97 @@\n+# zipkin - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"zipkin_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/zipkin\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **zipkin module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/zipkin/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"zipkin-admin-tcp\", \"zipkin-admin-query-tcp\", \"zipkin-admin-web-tcp\", \"zipkin-query-tcp\", \"zipkin-web-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/zipkin/auto_values.tf b/modules/terraform-aws-security-group-master/modules/zipkin/auto_values.tf\nnew file mode 100755\nindex 0000000..193b13c\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/zipkin/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"zipkin-admin-tcp\", \"zipkin-admin-query-tcp\", \"zipkin-admin-web-tcp\", \"zipkin-query-tcp\", \"zipkin-web-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/zipkin/main.tf b/modules/terraform-aws-security-group-master/modules/zipkin/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/zipkin/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/zipkin/outputs.tf b/modules/terraform-aws-security-group-master/modules/zipkin/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/zipkin/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/zipkin/variables.tf b/modules/terraform-aws-security-group-master/modules/zipkin/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/zipkin/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/zookeeper/README.md b/modules/terraform-aws-security-group-master/modules/zookeeper/README.md\nnew file mode 100755\nindex 0000000..e85df3e\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/zookeeper/README.md\n@@ -0,0 +1,97 @@\n+# zookeeper - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+```hcl\n+module \"zookeeper_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/zookeeper\"\n+\n+  # omitted...\n+}\n+```\n+\n+All automatic values **zookeeper module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/zookeeper/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| auto\\_computed\\_egress\\_rules | List of computed egress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_egress\\_with\\_self | List of maps defining computed egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_rules | List of ingress rules to add automatically | list | `[]` | no |\n+| auto\\_computed\\_ingress\\_with\\_self | List of maps defining computed ingress rules with self to add automatically | list | `[]` | no |\n+| auto\\_egress\\_rules | List of egress rules to add automatically | list | `[ \"all-all\" ]` | no |\n+| auto\\_egress\\_with\\_self | List of maps defining egress rules with self to add automatically | list | `[]` | no |\n+| auto\\_ingress\\_rules | List of ingress rules to add automatically | list | `[ \"zookeeper-2181-tcp\", \"zookeeper-2888-tcp\", \"zookeeper-3888-tcp\", \"zookeeper-jmx-tcp\" ]` | no |\n+| auto\\_ingress\\_with\\_self | List of maps defining ingress rules with self to add automatically | list | `[ { \"rule\": \"all-all\" } ]` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| auto\\_number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| computed\\_egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| computed\\_egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed egress rules | list | `[ \"::/0\" ]` | no |\n+| computed\\_egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | list | `[]` | no |\n+| computed\\_egress\\_rules | List of computed egress rules to create by name | list | `[]` | no |\n+| computed\\_egress\\_with\\_cidr\\_blocks | List of computed egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | List of computed egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_egress\\_with\\_self | List of computed egress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_egress\\_with\\_source\\_security\\_group\\_id | List of computed egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| computed\\_ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | list | `[]` | no |\n+| computed\\_ingress\\_rules | List of computed ingress rules to create by name | list | `[]` | no |\n+| computed\\_ingress\\_with\\_cidr\\_blocks | List of computed ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | List of computed ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| computed\\_ingress\\_with\\_self | List of computed ingress rules to create where 'self' is defined | list | `[]` | no |\n+| computed\\_ingress\\_with\\_source\\_security\\_group\\_id | List of computed ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| create | Whether to create security group and all rules | string | `\"true\"` | no |\n+| description | Description of security group | string | `\"Security Group managed by Terraform\"` | no |\n+| egress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all egress rules | list | `[ \"0.0.0.0/0\" ]` | no |\n+| egress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all egress rules | list | `[ \"::/0\" ]` | no |\n+| egress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules | list | `[]` | no |\n+| egress\\_rules | List of egress rules to create by name | list | `[]` | no |\n+| egress\\_with\\_cidr\\_blocks | List of egress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_ipv6\\_cidr\\_blocks | List of egress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| egress\\_with\\_self | List of egress rules to create where 'self' is defined | list | `[]` | no |\n+| egress\\_with\\_source\\_security\\_group\\_id | List of egress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| ingress\\_cidr\\_blocks | List of IPv4 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_ipv6\\_cidr\\_blocks | List of IPv6 CIDR ranges to use on all ingress rules | list | `[]` | no |\n+| ingress\\_prefix\\_list\\_ids | List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules | list | `[]` | no |\n+| ingress\\_rules | List of ingress rules to create by name | list | `[]` | no |\n+| ingress\\_with\\_cidr\\_blocks | List of ingress rules to create where 'cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_ipv6\\_cidr\\_blocks | List of ingress rules to create where 'ipv6_cidr_blocks' is used | list | `[]` | no |\n+| ingress\\_with\\_self | List of ingress rules to create where 'self' is defined | list | `[]` | no |\n+| ingress\\_with\\_source\\_security\\_group\\_id | List of ingress rules to create where 'source_security_group_id' is used | list | `[]` | no |\n+| name | Name of security group | string | n/a | yes |\n+| number\\_of\\_computed\\_egress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_rules | Number of computed egress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_cidr\\_blocks | Number of computed egress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed egress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_self | Number of computed egress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_egress\\_with\\_source\\_security\\_group\\_id | Number of computed egress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_cidr\\_blocks | Number of IPv4 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_ipv6\\_cidr\\_blocks | Number of IPv6 CIDR ranges to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_prefix\\_list\\_ids | Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_rules | Number of computed ingress rules to create by name | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_cidr\\_blocks | Number of computed ingress rules to create where 'cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_ipv6\\_cidr\\_blocks | Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_self | Number of computed ingress rules to create where 'self' is defined | string | `\"0\"` | no |\n+| number\\_of\\_computed\\_ingress\\_with\\_source\\_security\\_group\\_id | Number of computed ingress rules to create where 'source_security_group_id' is used | string | `\"0\"` | no |\n+| tags | A mapping of tags to assign to security group | map | `{}` | no |\n+| use\\_name\\_prefix | Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation | string | `\"true\"` | no |\n+| vpc\\_id | ID of the VPC where to create security group | string | n/a | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this\\_security\\_group\\_description | The description of the security group |\n+| this\\_security\\_group\\_id | The ID of the security group |\n+| this\\_security\\_group\\_name | The name of the security group |\n+| this\\_security\\_group\\_owner\\_id | The owner ID |\n+| this\\_security\\_group\\_vpc\\_id | The VPC ID |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\ndiff --git a/modules/terraform-aws-security-group-master/modules/zookeeper/auto_values.tf b/modules/terraform-aws-security-group-master/modules/zookeeper/auto_values.tf\nnew file mode 100755\nindex 0000000..b6a2466\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/zookeeper/auto_values.tf\n@@ -0,0 +1,77 @@\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"zookeeper-2181-tcp\", \"zookeeper-2888-tcp\", \"zookeeper-3888-tcp\", \"zookeeper-jmx-tcp\"]\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+\n+  default = [{\n+    \"rule\" = \"all-all\"\n+  }]\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = [\"all-all\"]\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = []\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/zookeeper/main.tf b/modules/terraform-aws-security-group-master/modules/zookeeper/main.tf\nnew file mode 100755\nindex 0000000..8d89d1f\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/zookeeper/main.tf\n@@ -0,0 +1,116 @@\n+module \"sg\" {\n+  source = \"../../\"\n+\n+  create          = \"${var.create}\"\n+  name            = \"${var.name}\"\n+  use_name_prefix = \"${var.use_name_prefix}\"\n+  description     = \"${var.description}\"\n+  vpc_id          = \"${var.vpc_id}\"\n+  tags            = \"${var.tags}\"\n+\n+  ##########\n+  # Ingress\n+  ##########\n+  # Rules by names - open for default CIDR\n+  ingress_rules = [\"${sort(distinct(concat(var.auto_ingress_rules, var.ingress_rules)))}\"]\n+\n+  # Open for self\n+  ingress_with_self = [\"${concat(var.auto_ingress_with_self, var.ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  ingress_with_cidr_blocks = [\"${var.ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  ingress_with_ipv6_cidr_blocks = [\"${var.ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  ingress_with_source_security_group_id = [\"${var.ingress_with_source_security_group_id}\"]\n+\n+  # Default ingress CIDR blocks\n+  ingress_cidr_blocks      = [\"${var.ingress_cidr_blocks}\"]\n+  ingress_ipv6_cidr_blocks = [\"${var.ingress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  ingress_prefix_list_ids = [\"${var.ingress_prefix_list_ids}\"]\n+\n+  ###################\n+  # Computed Ingress\n+  ###################\n+  # Rules by names - open for default CIDR\n+  computed_ingress_rules = [\"${sort(distinct(concat(var.auto_computed_ingress_rules, var.computed_ingress_rules)))}\"]\n+\n+  # Open for self\n+  computed_ingress_with_self = [\"${concat(var.auto_computed_ingress_with_self, var.computed_ingress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_ingress_with_cidr_blocks = [\"${var.computed_ingress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_ingress_with_ipv6_cidr_blocks = [\"${var.computed_ingress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_ingress_with_source_security_group_id = [\"${var.computed_ingress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed ingress\n+  #############################\n+  number_of_computed_ingress_rules = \"${var.auto_number_of_computed_ingress_rules + var.number_of_computed_ingress_rules}\"\n+\n+  number_of_computed_ingress_with_self                     = \"${var.auto_number_of_computed_ingress_with_self + var.number_of_computed_ingress_with_self}\"\n+  number_of_computed_ingress_with_cidr_blocks              = \"${var.number_of_computed_ingress_with_cidr_blocks}\"\n+  number_of_computed_ingress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_ingress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_ingress_with_source_security_group_id = \"${var.number_of_computed_ingress_with_source_security_group_id}\"\n+\n+  #########\n+  # Egress\n+  #########\n+  # Rules by names - open for default CIDR\n+  egress_rules = [\"${sort(distinct(concat(var.auto_egress_rules, var.egress_rules)))}\"]\n+\n+  # Open for self\n+  egress_with_self = [\"${concat(var.auto_egress_with_self, var.egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  egress_with_cidr_blocks = [\"${var.egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  egress_with_ipv6_cidr_blocks = [\"${var.egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  egress_with_source_security_group_id = [\"${var.egress_with_source_security_group_id}\"]\n+\n+  # Default egress CIDR blocks\n+  egress_cidr_blocks      = [\"${var.egress_cidr_blocks}\"]\n+  egress_ipv6_cidr_blocks = [\"${var.egress_ipv6_cidr_blocks}\"]\n+\n+  # Default prefix list ids\n+  egress_prefix_list_ids = [\"${var.egress_prefix_list_ids}\"]\n+\n+  ##################\n+  # Computed Egress\n+  ##################\n+  # Rules by names - open for default CIDR\n+  computed_egress_rules = [\"${sort(distinct(concat(var.auto_computed_egress_rules, var.computed_egress_rules)))}\"]\n+\n+  # Open for self\n+  computed_egress_with_self = [\"${concat(var.auto_computed_egress_with_self, var.computed_egress_with_self)}\"]\n+\n+  # Open to IPv4 cidr blocks\n+  computed_egress_with_cidr_blocks = [\"${var.computed_egress_with_cidr_blocks}\"]\n+\n+  # Open to IPv6 cidr blocks\n+  computed_egress_with_ipv6_cidr_blocks = [\"${var.computed_egress_with_ipv6_cidr_blocks}\"]\n+\n+  # Open for security group id\n+  computed_egress_with_source_security_group_id = [\"${var.computed_egress_with_source_security_group_id}\"]\n+\n+  #############################\n+  # Number of computed egress\n+  #############################\n+  number_of_computed_egress_rules = \"${var.auto_number_of_computed_egress_rules + var.number_of_computed_egress_rules}\"\n+\n+  number_of_computed_egress_with_self                     = \"${var.auto_number_of_computed_egress_with_self + var.number_of_computed_egress_with_self}\"\n+  number_of_computed_egress_with_cidr_blocks              = \"${var.number_of_computed_egress_with_cidr_blocks}\"\n+  number_of_computed_egress_with_ipv6_cidr_blocks         = \"${var.number_of_computed_egress_with_ipv6_cidr_blocks}\"\n+  number_of_computed_egress_with_source_security_group_id = \"${var.number_of_computed_egress_with_source_security_group_id}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/zookeeper/outputs.tf b/modules/terraform-aws-security-group-master/modules/zookeeper/outputs.tf\nnew file mode 100755\nindex 0000000..4129cf9\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/zookeeper/outputs.tf\n@@ -0,0 +1,24 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${module.sg.this_security_group_id}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${module.sg.this_security_group_vpc_id}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${module.sg.this_security_group_owner_id}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${module.sg.this_security_group_name}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${module.sg.this_security_group_description}\"\n+}\ndiff --git a/modules/terraform-aws-security-group-master/modules/zookeeper/variables.tf b/modules/terraform-aws-security-group-master/modules/zookeeper/variables.tf\nnew file mode 100755\nindex 0000000..070cc30\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/modules/zookeeper/variables.tf\n@@ -0,0 +1,288 @@\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed ingress rules\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"computed_egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"computed_egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_cidr_blocks\" {\n+  description = \"Number of IPv4 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_ipv6_cidr_blocks\" {\n+  description = \"Number of IPv6 CIDR ranges to use on all computed egress rules\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_prefix_list_ids\" {\n+  description = \"Number of prefix list IDs (for allowing access to VPC endpoints) to use on all computed egress rules\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-security-group-master/outputs.tf b/modules/terraform-aws-security-group-master/outputs.tf\nnew file mode 100755\nindex 0000000..9fb8e36\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/outputs.tf\n@@ -0,0 +1,36 @@\n+output \"this_security_group_id\" {\n+  description = \"The ID of the security group\"\n+  value       = \"${element(concat(coalescelist(aws_security_group.this.*.id, aws_security_group.this_name_prefix.*.id), list(\"\")), 0)}\"\n+}\n+\n+output \"this_security_group_vpc_id\" {\n+  description = \"The VPC ID\"\n+  value       = \"${element(concat(coalescelist(aws_security_group.this.*.vpc_id, aws_security_group.this_name_prefix.*.vpc_id), list(\"\")), 0)}\"\n+}\n+\n+output \"this_security_group_owner_id\" {\n+  description = \"The owner ID\"\n+  value       = \"${element(concat(coalescelist(aws_security_group.this.*.owner_id, aws_security_group.this_name_prefix.*.owner_id), list(\"\")), 0)}\"\n+}\n+\n+output \"this_security_group_name\" {\n+  description = \"The name of the security group\"\n+  value       = \"${element(concat(coalescelist(aws_security_group.this.*.name, aws_security_group.this_name_prefix.*.name), list(\"\")), 0)}\"\n+}\n+\n+output \"this_security_group_description\" {\n+  description = \"The description of the security group\"\n+  value       = \"${element(concat(coalescelist(aws_security_group.this.*.description, aws_security_group.this_name_prefix.*.description), list(\"\")), 0)}\"\n+}\n+\n+//output \"this_security_group_ingress\" {\n+//  description = \"The ingress rules\"\n+//  value       = \"${element(concat(aws_security_group.this.*.ingress, list(\"\")), 0)}\"\n+//}\n+\n+\n+//output \"this_security_group_egress\" {\n+//  description = \"The egress rules\"\n+//    value       = \"${element(concat(aws_security_group.this.*.egress, list(\"\")), 0)\"\n+//}\n+\ndiff --git a/modules/terraform-aws-security-group-master/rules.tf b/modules/terraform-aws-security-group-master/rules.tf\nnew file mode 100755\nindex 0000000..eb2ced0\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/rules.tf\n@@ -0,0 +1,389 @@\n+variable \"rules\" {\n+  description = \"Map of known security group rules (define as 'name' = ['from port', 'to port', 'protocol', 'description'])\"\n+  type        = \"map\"\n+\n+  # Protocols (tcp, udp, icmp, all - are allowed keywords) or numbers (from https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml):\n+  # All = -1, IPV4-ICMP = 1, TCP = 6, UDP = 16, IPV6-ICMP = 58\n+  default = {\n+    # Carbon relay\n+    carbon-line-in-tcp = [2003, 2003, \"tcp\", \"Carbon line-in\"]\n+    carbon-line-in-udp = [2003, 2003, \"udp\", \"Carbon line-in\"]\n+    carbon-pickle-tcp  = [2013, 2013, \"tcp\", \"Carbon pickle\"]\n+    carbon-pickle-udp  = [2013, 2013, \"udp\", \"Carbon pickle\"]\n+    carbon-admin-tcp   = [2004, 2004, \"tcp\", \"Carbon admin\"]\n+    carbon-gui-udp     = [8081, 8081, \"tcp\", \"Carbon GUI\"]\n+\n+    # Cassandra\n+    cassandra-clients-tcp        = [9042, 9042, \"tcp\", \"Cassandra clients\"]\n+    cassandra-thrift-clients-tcp = [9160, 9160, \"tcp\", \"Cassandra Thrift clients\"]\n+    cassandra-jmx-tcp            = [7199, 7199, \"tcp\", \"JMX\"]\n+\n+    # Consul\n+    consul-tcp          = [8300, 8300, \"tcp\", \"Consul server\"]\n+    consul-cli-rpc-tcp  = [8400, 8400, \"tcp\", \"Consul CLI RPC\"]\n+    consul-webui-tcp    = [8500, 8500, \"tcp\", \"Consul web UI\"]\n+    consul-dns-tcp      = [8600, 8600, \"tcp\", \"Consul DNS\"]\n+    consul-dns-udp      = [8600, 8600, \"udp\", \"Consul DNS\"]\n+    consul-serf-lan-tcp = [8301, 8301, \"tcp\", \"Serf LAN\"]\n+    consul-serf-lan-udp = [8301, 8301, \"udp\", \"Serf LAN\"]\n+    consul-serf-wan-tcp = [8302, 8302, \"tcp\", \"Serf WAN\"]\n+    consul-serf-wan-udp = [8302, 8302, \"udp\", \"Serf WAN\"]\n+\n+    # Docker Swarm\n+    docker-swarm-mngmt-tcp   = [2377, 2377, \"tcp\", \"Docker Swarm cluster management\"]\n+    docker-swarm-node-tcp    = [7946, 7946, \"tcp\", \"Docker Swarm node\"]\n+    docker-swarm-node-udp    = [7946, 7946, \"udp\", \"Docker Swarm node\"]\n+    docker-swarm-overlay-udp = [4789, 4789, \"udp\", \"Docker Swarm Overlay Network Traffic\"]\n+\n+    # DNS\n+    dns-udp = [53, 53, \"udp\", \"DNS\"]\n+    dns-tcp = [53, 53, \"tcp\", \"DNS\"]\n+\n+    # NTP - Network Time Protocol\n+    ntp-udp = [123, 123, \"udp\", \"NTP\"]\n+\n+    # Elasticsearch\n+    elasticsearch-rest-tcp = [9200, 9200, \"tcp\", \"Elasticsearch REST interface\"]\n+    elasticsearch-java-tcp = [9300, 9300, \"tcp\", \"Elasticsearch Java interface\"]\n+\n+    # HTTP\n+    http-80-tcp   = [80, 80, \"tcp\", \"HTTP\"]\n+    http-8080-tcp = [8080, 8080, \"tcp\", \"HTTP\"]\n+\n+    # HTTPS\n+    https-443-tcp  = [443, 443, \"tcp\", \"HTTPS\"]\n+    https-8443-tcp = [8443, 8443, \"tcp\", \"HTTPS\"]\n+\n+    # IPSEC\n+    ipsec-500-udp  = [500, 500, \"udp\", \"IPSEC ISAKMP\"]\n+    ipsec-4500-udp = [4500, 4500, \"udp\", \"IPSEC NAT-T\"]\n+\n+    # Kafka\n+    kafka-broker-tcp = [9092, 9092, \"tcp\", \"Kafka broker 0.8.2+\"]\n+\n+    # LDAPS\n+    ldaps-tcp = [636, 636, \"tcp\", \"LDAPS\"]\n+\n+    # Memcached\n+    memcached-tcp = [11211, 11211, \"tcp\", \"Memcached\"]\n+\n+    # MongoDB\n+    mongodb-27017-tcp = [27017, 27017, \"tcp\", \"MongoDB\"]\n+    mongodb-27018-tcp = [27018, 27018, \"tcp\", \"MongoDB shard\"]\n+    mongodb-27019-tcp = [27019, 27019, \"tcp\", \"MongoDB config server\"]\n+\n+    # MySQL\n+    mysql-tcp = [3306, 3306, \"tcp\", \"MySQL/Aurora\"]\n+\n+    # MSSQL Server\n+    mssql-tcp           = [1433, 1433, \"tcp\", \"MSSQL Server\"]\n+    mssql-udp           = [1434, 1434, \"udp\", \"MSSQL Browser\"]\n+    mssql-analytics-tcp = [2383, 2383, \"tcp\", \"MSSQL Analytics\"]\n+    mssql-broker-tcp    = [4022, 4022, \"tcp\", \"MSSQL Broker\"]\n+\n+    # NFS/EFS\n+    nfs-tcp = [2049, 2049, \"tcp\", \"NFS/EFS\"]\n+\n+    # Nomad\n+    nomad-http-tcp = [4646, 4646, \"tcp\", \"Nomad HTTP\"]\n+    nomad-rpc-tcp  = [4647, 4647, \"tcp\", \"Nomad RPC\"]\n+    nomad-serf-tcp = [4648, 4648, \"tcp\", \"Serf\"]\n+    nomad-serf-udp = [4648, 4648, \"udp\", \"Serf\"]\n+\n+    # OpenVPN\n+    openvpn-udp       = [1194, 1194, \"udp\", \"OpenVPN\"]\n+    openvpn-tcp       = [943, 943, \"tcp\", \"OpenVPN\"]\n+    openvpn-https-tcp = [443, 443, \"tcp\", \"OpenVPN\"]\n+\n+    # PostgreSQL\n+    postgresql-tcp = [5432, 5432, \"tcp\", \"PostgreSQL\"]\n+\n+    # Oracle Database\n+    oracle-db-tcp = [1521, 1521, \"tcp\", \"Oracle\"]\n+\n+    # Puppet\n+    puppet-tcp = [8140, 8140, \"tcp\", \"Puppet\"]\n+\n+    # RabbitMQ\n+    rabbitmq-4369-tcp  = [4369, 4369, \"tcp\", \"RabbitMQ epmd\"]\n+    rabbitmq-5671-tcp  = [5671, 5671, \"tcp\", \"RabbitMQ\"]\n+    rabbitmq-5672-tcp  = [5672, 5672, \"tcp\", \"RabbitMQ\"]\n+    rabbitmq-15672-tcp = [15672, 15672, \"tcp\", \"RabbitMQ\"]\n+    rabbitmq-25672-tcp = [25672, 25672, \"tcp\", \"RabbitMQ\"]\n+\n+    # RDP\n+    rdp-tcp = [3389, 3389, \"tcp\", \"Remote Desktop\"]\n+    rdp-udp = [3389, 3389, \"udp\", \"Remote Desktop\"]\n+\n+    # Redis\n+    redis-tcp = [6379, 6379, \"tcp\", \"Redis\"]\n+\n+    # Redshift\n+    redshift-tcp = [5439, 5439, \"tcp\", \"Redshift\"]\n+\n+    # Splunk\n+    splunk-indexer-tcp = [9997, 9997, \"tcp\", \"Splunk indexer\"]\n+    splunk-clients-tcp = [8080, 8080, \"tcp\", \"Splunk clients\"]\n+    splunk-splunkd-tcp = [8089, 8089, \"tcp\", \"Splunkd\"]\n+    splunk-hec-tcp     = [8088, 8088, \"tcp\", \"Splunk HEC\"]\n+\n+    # Squid\n+    squid-proxy-tcp = [3128, 3128, \"tcp\", \"Squid default proxy\"]\n+\n+    # SSH\n+    ssh-tcp = [22, 22, \"tcp\", \"SSH\"]\n+\n+    # Storm\n+    storm-nimbus-tcp     = [6627, 6627, \"tcp\", \"Nimbus\"]\n+    storm-ui-tcp         = [8080, 8080, \"tcp\", \"Storm UI\"]\n+    storm-supervisor-tcp = [6700, 6703, \"tcp\", \"Supervisor\"]\n+\n+    # Web\n+    web-jmx-tcp = [1099, 1099, \"tcp\", \"JMX\"]\n+\n+    # WinRM\n+    winrm-http-tcp  = [5985, 5985, \"tcp\", \"WinRM HTTP\"]\n+    winrm-https-tcp = [5986, 5986, \"tcp\", \"WinRM HTTPS\"]\n+\n+    # Zipkin\n+    zipkin-admin-tcp       = [9990, 9990, \"tcp\", \"Zipkin Admin port collector\"]\n+    zipkin-admin-query-tcp = [9901, 9901, \"tcp\", \"Zipkin Admin port query\"]\n+    zipkin-admin-web-tcp   = [9991, 9991, \"tcp\", \"Zipkin Admin port web\"]\n+    zipkin-query-tcp       = [9411, 9411, \"tcp\", \"Zipkin query port\"]\n+    zipkin-web-tcp         = [8080, 8080, \"tcp\", \"Zipkin web port\"]\n+\n+    # Zookeeper\n+    zookeeper-2181-tcp = [2181, 2181, \"tcp\", \"Zookeeper\"]\n+    zookeeper-2888-tcp = [2888, 2888, \"tcp\", \"Zookeeper\"]\n+    zookeeper-3888-tcp = [3888, 3888, \"tcp\", \"Zookeeper\"]\n+    zookeeper-jmx-tcp  = [7199, 7199, \"tcp\", \"JMX\"]\n+\n+    # Open all ports & protocols\n+    all-all       = [-1, -1, \"-1\", \"All protocols\"]\n+    all-tcp       = [0, 65535, \"tcp\", \"All TCP ports\"]\n+    all-udp       = [0, 65535, \"udp\", \"All UDP ports\"]\n+    all-icmp      = [-1, -1, \"icmp\", \"All IPV4 ICMP\"]\n+    all-ipv6-icmp = [-1, -1, 58, \"All IPV6 ICMP\"]\n+\n+    # This is a fallback rule to pass to lookup() as default. It does not open anything, because it should never be used.\n+    _ = [\"\", \"\", \"\"]\n+  }\n+}\n+\n+variable \"auto_groups\" {\n+  description = \"Map of groups of security group rules to use to generate modules (see update_groups.sh)\"\n+  type        = \"map\"\n+\n+  # Valid keys - ingress_rules, egress_rules, ingress_with_self, egress_with_self\n+  default = {\n+    carbon-relay-ng = {\n+      ingress_rules     = [\"carbon-line-in-tcp\", \"carbon-line-in-udp\", \"carbon-pickle-tcp\", \"carbon-pickle-udp\", \"carbon-gui-udp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    cassandra = {\n+      ingress_rules     = [\"cassandra-clients-tcp\", \"cassandra-thrift-clients-tcp\", \"cassandra-jmx-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    consul = {\n+      ingress_rules     = [\"consul-tcp\", \"consul-cli-rpc-tcp\", \"consul-webui-tcp\", \"consul-dns-tcp\", \"consul-dns-udp\", \"consul-serf-lan-tcp\", \"consul-serf-lan-udp\", \"consul-serf-wan-tcp\", \"consul-serf-wan-udp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    docker-swarm = {\n+      ingress_rules     = [\"docker-swarm-mngmt-tcp\", \"docker-swarm-node-tcp\", \"docker-swarm-node-udp\", \"docker-swarm-overlay-udp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    elasticsearch = {\n+      ingress_rules     = [\"elasticsearch-rest-tcp\", \"elasticsearch-java-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    http-80 = {\n+      ingress_rules     = [\"http-80-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    http-8080 = {\n+      ingress_rules     = [\"http-8080-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    https-443 = {\n+      ingress_rules     = [\"https-443-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    https-8443 = {\n+      ingress_rules     = [\"https-8443-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    ipsec-500 = {\n+      ingress_rules     = [\"ipsec-500-udp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    ipsec-4500 = {\n+      ingress_rules     = [\"ipsec-4500-udp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    kafka = {\n+      ingress_rules     = [\"kafka-broker-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    ldaps = {\n+      ingress_rules     = [\"ldaps-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    memcached = {\n+      ingress_rules     = [\"memcached-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    mongodb = {\n+      ingress_rules     = [\"mongodb-27017-tcp\", \"mongodb-27018-tcp\", \"mongodb-27019-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    mysql = {\n+      ingress_rules     = [\"mysql-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    mssql = {\n+      ingress_rules     = [\"mssql-tcp\", \"mssql-udp\", \"mssql-analytics-tcp\", \"mssql-broker-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    nfs = {\n+      ingress_rules     = [\"nfs-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    nomad = {\n+      ingress_rules     = [\"nomad-http-tcp\", \"nomad-rpc-tcp\", \"nomad-serf-tcp\", \"nomad-serf-udp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    openvpn = {\n+      ingress_rules     = [\"openvpn-udp\", \"openvpn-tcp\", \"openvpn-https-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    postgresql = {\n+      ingress_rules     = [\"postgresql-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    oracle-db = {\n+      ingress_rules     = [\"oracle-db-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    ntp = {\n+      ingress_rules     = [\"ntp-udp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    rabbitmq = {\n+      ingress_rules     = [\"rabbitmq-4369-tcp\", \"rabbitmq-5671-tcp\", \"rabbitmq-5672-tcp\", \"rabbitmq-15672-tcp\", \"rabbitmq-25672-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    rdp = {\n+      ingress_rules     = [\"rdp-tcp\", \"rdp-udp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    redis = {\n+      ingress_rules     = [\"redis-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    redshift = {\n+      ingress_rules     = [\"redshift-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    splunk = {\n+      ingress_rules     = [\"splunk-indexer-tcp\", \"splunk-clients-tcp\", \"splunk-splunkd-tcp\", \"splunk-hec-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    squid = {\n+      ingress_rules     = [\"squid-proxy-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    ssh = {\n+      ingress_rules     = [\"ssh-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    storm = {\n+      ingress_rules     = [\"storm-nimbus-tcp\", \"storm-ui-tcp\", \"storm-supervisor-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    web = {\n+      ingress_rules     = [\"http-80-tcp\", \"http-8080-tcp\", \"https-443-tcp\", \"web-jmx-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    winrm = {\n+      ingress_rules     = [\"winrm-http-tcp\", \"winrm-https-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    zipkin = {\n+      ingress_rules     = [\"zipkin-admin-tcp\", \"zipkin-admin-query-tcp\", \"zipkin-admin-web-tcp\", \"zipkin-query-tcp\", \"zipkin-web-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+\n+    zookeeper = {\n+      ingress_rules     = [\"zookeeper-2181-tcp\", \"zookeeper-2888-tcp\", \"zookeeper-3888-tcp\", \"zookeeper-jmx-tcp\"]\n+      ingress_with_self = [\"all-all\"]\n+      egress_rules      = [\"all-all\"]\n+    }\n+  }\n+}\ndiff --git a/modules/terraform-aws-security-group-master/update_groups.sh b/modules/terraform-aws-security-group-master/update_groups.sh\nnew file mode 100755\nindex 0000000..c580a81\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/update_groups.sh\n@@ -0,0 +1,243 @@\n+#!/usr/bin/env bash\n+\n+# This script generates each public module (eg, \"http-80\", \"ssh\") and specify rules required for each group.\n+# This script should be run after rules.tf is changed to refresh all related modules.\n+# outputs.tf and variables.tf for all group modules are the same for all\n+\n+set -e\n+\n+# Change location to the directory where this script it located\n+cd \"$(dirname \"${BASH_SOURCE[0]}\")\"\n+\n+check_dependencies() {\n+  if [[ ! $(command -v json2hcl) ]]; then\n+    echo \"ERROR: The binary 'json2hcl' is required by this script but is not installed or in the system's PATH.\"\n+    echo \"Check documentation: https://github.com/kvz/json2hcl\"\n+    exit 1\n+  fi\n+\n+  if [[ ! $(command -v jq) ]]; then\n+    echo \"ERROR: The binary 'jq' is required by this script but is not installed or in the system's PATH.\"\n+    echo \"Check documentation: https://github.com/stedolan/jq\"\n+    exit 1\n+  fi\n+}\n+\n+auto_groups_data() {\n+  json2hcl -reverse < rules.tf | jq -r '..|.auto_groups?|values|.[0]|.default|.[0]'\n+}\n+\n+auto_groups_keys() {\n+  local data=$1\n+\n+  echo \"$data\" | jq -r \".|keys|@sh\" | tr -d \"'\"\n+}\n+\n+get_auto_value() {\n+  local data=$1\n+  local group=$2\n+  local var=$3\n+\n+  echo \"$data\" | jq -rc '.[$group][0][$var]' --arg group \"$group\" --arg var \"$var\"\n+}\n+\n+set_list_if_null() {\n+  if [[ \"null\" == \"$1\" ]]; then\n+    echo \"[]\"\n+  else\n+    echo \"$1\"\n+  fi\n+}\n+\n+set_zero_if_null() {\n+  if [[ \"null\" == \"$1\" ]]; then\n+    echo 0\n+  else\n+    echo \"$1\"\n+  fi\n+}\n+\n+main() {\n+  check_dependencies\n+\n+  readonly local auto_groups_data=\"$(auto_groups_data)\"\n+\n+  if [[ -z \"$(auto_groups_data)\" ]]; then\n+    echo \"There are no modules to update. Check values of auto_groups inside rules.tf\"\n+    exit 0\n+  fi\n+\n+  readonly local auto_groups_keys=($(auto_groups_keys \"$auto_groups_data\"))\n+\n+  local ingress_rules=\"\"\n+  local ingress_with_self=\"\"\n+  local egress_rules=\"\"\n+  local egress_with_self=\"\"\n+  local list_of_modules=\"\"\n+\n+  for group in \"${auto_groups_keys[@]}\"; do\n+\n+    echo \"Making group: $group\"\n+\n+    mkdir -p \"modules/$group\"\n+    cp modules/_templates/{main,outputs,variables}.tf \"modules/$group\"\n+\n+    # Get group values\n+    ingress_rules=$(get_auto_value \"$auto_groups_data\" \"$group\" \"ingress_rules\")\n+    ingress_with_self=$(get_auto_value \"$auto_groups_data\" \"$group\" \"ingress_with_self\")\n+    egress_rules=$(get_auto_value \"$auto_groups_data\" \"$group\" \"egress_rules\")\n+    egress_with_self=$(get_auto_value \"$auto_groups_data\" \"$group\" \"egress_with_self\")\n+\n+    # Computed values\n+    computed_ingress_rules=$(get_auto_value \"$auto_groups_data\" \"$group\" \"computed_ingress_rules\")\n+    computed_ingress_with_self=$(get_auto_value \"$auto_groups_data\" \"$group\" \"computed_ingress_with_self\")\n+    computed_egress_rules=$(get_auto_value \"$auto_groups_data\" \"$group\" \"computed_egress_rules\")\n+    computed_egress_with_self=$(get_auto_value \"$auto_groups_data\" \"$group\" \"computed_egress_with_self\")\n+\n+    # Number of computed values\n+    number_of_computed_ingress_rules=$(get_auto_value \"$auto_groups_data\" \"$group\" \"number_of_computed_ingress_rules\")\n+    number_of_computed_ingress_with_self=$(get_auto_value \"$auto_groups_data\" \"$group\" \"number_of_computed_ingress_with_self\")\n+    number_of_computed_egress_rules=$(get_auto_value \"$auto_groups_data\" \"$group\" \"number_of_computed_egress_rules\")\n+    number_of_computed_egress_with_self=$(get_auto_value \"$auto_groups_data\" \"$group\" \"number_of_computed_egress_with_self\")\n+\n+    # Set to empty lists, if no value was specified\n+    ingress_rules=$(set_list_if_null \"$ingress_rules\")\n+    ingress_with_self=$(set_list_if_null \"$ingress_with_self\")\n+    egress_rules=$(set_list_if_null \"$egress_rules\")\n+    egress_with_self=$(set_list_if_null \"$egress_with_self\")\n+\n+    # Set to empty lists, if no computed value was specified\n+    computed_ingress_rules=$(set_list_if_null \"$computed_ingress_rules\")\n+    computed_ingress_with_self=$(set_list_if_null \"$computed_ingress_with_self\")\n+    computed_egress_rules=$(set_list_if_null \"$computed_egress_rules\")\n+    computed_egress_with_self=$(set_list_if_null \"$computed_egress_with_self\")\n+\n+    # Set to zero, if no value was specified\n+    number_of_computed_ingress_rules=$(set_zero_if_null \"$number_of_computed_ingress_rules\")\n+    number_of_computed_ingress_with_self=$(set_zero_if_null \"$number_of_computed_ingress_with_self\")\n+    number_of_computed_egress_rules=$(set_zero_if_null \"$number_of_computed_egress_rules\")\n+    number_of_computed_egress_with_self=$(set_zero_if_null \"$number_of_computed_egress_with_self\")\n+\n+    # ingress_with_self and egress_with_self are stored as simple lists (like this - [\"all-all\",\"all-tcp\"]),\n+    # so we make map (like this - [{\"rule\"=\"all-all\"},{\"rule\"=\"all-tcp\"}])\n+    ingress_with_self=$(echo \"$ingress_with_self\" | jq -rc \"[{rule:.[]}]\" | tr ':' '=')\n+    egress_with_self=$(echo \"$egress_with_self\" | jq -rc \"[{rule:.[]}]\" | tr ':' '=')\n+\n+    cat <<EOF > \"modules/$group/auto_values.tf\"\n+# This file was generated from values defined in rules.tf using update_groups.sh.\n+###################################\n+# DO NOT CHANGE THIS FILE MANUALLY\n+###################################\n+\n+variable \"auto_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = $ingress_rules\n+}\n+\n+variable \"auto_ingress_with_self\" {\n+  description = \"List of maps defining ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = $ingress_with_self\n+}\n+\n+variable \"auto_egress_rules\" {\n+  description = \"List of egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = $egress_rules\n+}\n+\n+variable \"auto_egress_with_self\" {\n+  description = \"List of maps defining egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = $egress_with_self\n+}\n+\n+# Computed\n+variable \"auto_computed_ingress_rules\" {\n+  description = \"List of ingress rules to add automatically\"\n+  type        = \"list\"\n+  default     = $computed_ingress_rules\n+}\n+\n+variable \"auto_computed_ingress_with_self\" {\n+  description = \"List of maps defining computed ingress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = $computed_ingress_with_self\n+}\n+\n+variable \"auto_computed_egress_rules\" {\n+  description = \"List of computed egress rules to add automatically\"\n+  type        = \"list\"\n+  default     = $computed_egress_rules\n+}\n+\n+variable \"auto_computed_egress_with_self\" {\n+  description = \"List of maps defining computed egress rules with self to add automatically\"\n+  type        = \"list\"\n+  default     = $computed_egress_with_self\n+}\n+\n+# Number of computed rules\n+variable \"auto_number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = $number_of_computed_ingress_rules\n+}\n+\n+variable \"auto_number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = $number_of_computed_ingress_with_self\n+}\n+\n+variable \"auto_number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = $number_of_computed_egress_rules\n+}\n+\n+variable \"auto_number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = $number_of_computed_egress_with_self\n+}\n+\n+EOF\n+\n+    cat <<EOF > \"modules/$group/README.md\"\n+# $group - AWS EC2-VPC Security Group Terraform module\n+\n+## Usage\n+\n+\\`\\`\\`hcl\n+module \"${group/-/_}_security_group\" {\n+  source = \"terraform-aws-modules/security-group/aws//modules/${group}\"\n+\n+  # omitted...\n+}\n+\\`\\`\\`\n+\n+All automatic values **${group} module** is using are available [here](https://github.com/terraform-aws-modules/terraform-aws-security-group/blob/master/modules/${group}/auto_values.tf).\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+EOF\n+\n+    list_of_modules=$(echo \"$list_of_modules\"; echo \"* [$group](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/$group)\")\n+\n+    terraform fmt \"modules/$group\"\n+  done\n+\n+\n+  echo \"Updating list of security group modules\"\n+\n+  cat <<EOF > modules/README.md\n+List of Security Groups implemented as Terraform modules\n+========================================================\n+\n+$list_of_modules\n+* [_templates](https://github.com/terraform-aws-modules/terraform-aws-security-group/tree/master/modules/_templates) - Source templates for all other modules. Change carefully, test thoughtfully!\n+\n+EOF\n+\n+  echo \"Done!\"\n+}\n+\n+main\ndiff --git a/modules/terraform-aws-security-group-master/variables.tf b/modules/terraform-aws-security-group-master/variables.tf\nnew file mode 100755\nindex 0000000..3230b70\n--- /dev/null\n+++ b/modules/terraform-aws-security-group-master/variables.tf\n@@ -0,0 +1,258 @@\n+# variable \"namespace\" {\n+#   type        = \"string\"\n+#   description = \"Namespace, which could be your organization name, e.g. 'eg' or 'cp'\"\n+# }\n+#\n+# variable \"stage\" {\n+#   type        = \"string\"\n+#   description = \"Stage, e.g. 'prod', 'staging', 'dev', or 'test'\"\n+# }\n+\n+variable \"environment\" {\n+  type        = \"string\"\n+  default     = \"\"\n+  description = \"Environment, e.g. 'testing', 'UAT'\"\n+}\n+\n+\n+variable \"delimiter\" {\n+  type        = \"string\"\n+  default     = \"-\"\n+  description = \"Delimiter to be used between `name`, `namespace`, `stage`, etc.\"\n+}\n+\n+variable \"attributes\" {\n+  type        = \"list\"\n+  default     = []\n+  description = \"Additional attributes (e.g. `1`)\"\n+}\n+\n+\n+#################\n+# Security group\n+#################\n+variable \"create\" {\n+  description = \"Whether to create security group and all rules\"\n+  default     = true\n+}\n+\n+variable \"vpc_id\" {\n+  description = \"ID of the VPC where to create security group\"\n+}\n+\n+variable \"name\" {\n+  description = \"Name of security group\"\n+}\n+\n+variable \"use_name_prefix\" {\n+  description = \"Whether to use name_prefix or fixed name. Should be true to able to update security group name after initial creation\"\n+  default     = true\n+}\n+\n+variable \"description\" {\n+  description = \"Description of security group\"\n+  default     = \"Security Group managed by Terraform\"\n+}\n+\n+variable \"tags\" {\n+  description = \"A mapping of tags to assign to security group\"\n+  default     = {}\n+}\n+\n+##########\n+# Ingress\n+##########\n+variable \"ingress_rules\" {\n+  description = \"List of ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_self\" {\n+  description = \"List of ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_with_source_security_group_id\" {\n+  description = \"List of ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"ingress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all ingress rules\"\n+  default     = []\n+}\n+\n+variable \"ingress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules\"\n+  default     = []\n+}\n+\n+###################\n+# Computed Ingress\n+###################\n+variable \"computed_ingress_rules\" {\n+  description = \"List of computed ingress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_self\" {\n+  description = \"List of computed ingress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_ingress_with_source_security_group_id\" {\n+  description = \"List of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+###################################\n+# Number of computed ingress rules\n+###################################\n+variable \"number_of_computed_ingress_rules\" {\n+  description = \"Number of computed ingress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_self\" {\n+  description = \"Number of computed ingress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_ingress_with_source_security_group_id\" {\n+  description = \"Number of computed ingress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\n+\n+#########\n+# Egress\n+#########\n+variable \"egress_rules\" {\n+  description = \"List of egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"egress_with_self\" {\n+  description = \"List of egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"egress_with_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_with_source_security_group_id\" {\n+  description = \"List of egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+variable \"egress_cidr_blocks\" {\n+  description = \"List of IPv4 CIDR ranges to use on all egress rules\"\n+  default     = [\"0.0.0.0/0\"]\n+}\n+\n+variable \"egress_ipv6_cidr_blocks\" {\n+  description = \"List of IPv6 CIDR ranges to use on all egress rules\"\n+  default     = [\"::/0\"]\n+}\n+\n+variable \"egress_prefix_list_ids\" {\n+  description = \"List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules\"\n+  default     = []\n+}\n+\n+##################\n+# Computed Egress\n+##################\n+variable \"computed_egress_rules\" {\n+  description = \"List of computed egress rules to create by name\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_self\" {\n+  description = \"List of computed egress rules to create where 'self' is defined\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"List of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = []\n+}\n+\n+variable \"computed_egress_with_source_security_group_id\" {\n+  description = \"List of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = []\n+}\n+\n+##################################\n+# Number of computed egress rules\n+##################################\n+variable \"number_of_computed_egress_rules\" {\n+  description = \"Number of computed egress rules to create by name\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_self\" {\n+  description = \"Number of computed egress rules to create where 'self' is defined\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_ipv6_cidr_blocks\" {\n+  description = \"Number of computed egress rules to create where 'ipv6_cidr_blocks' is used\"\n+  default     = 0\n+}\n+\n+variable \"number_of_computed_egress_with_source_security_group_id\" {\n+  description = \"Number of computed egress rules to create where 'source_security_group_id' is used\"\n+  default     = 0\n+}\ndiff --git a/modules/terraform-aws-sns-master/.editorconfig b/modules/terraform-aws-sns-master/.editorconfig\nnew file mode 100755\nindex 0000000..71f6718\n--- /dev/null\n+++ b/modules/terraform-aws-sns-master/.editorconfig\n@@ -0,0 +1,30 @@\n+# EditorConfig is awesome: http://EditorConfig.org\n+# Uses editorconfig to maintain consistent coding styles\n+\n+# top-most EditorConfig file\n+root = true\n+\n+# Unix-style newlines with a newline ending every file\n+[*]\n+charset = utf-8\n+end_of_line = lf\n+indent_size = 2\n+indent_style = space\n+insert_final_newline = true\n+max_line_length = 80\n+trim_trailing_whitespace = true\n+\n+[*.{tf,tfvars}]\n+indent_size = 2\n+indent_style = space\n+\n+[*.md]\n+max_line_length = 0\n+trim_trailing_whitespace = false\n+\n+[Makefile]\n+tab_width = 2\n+indent_style = tab\n+\n+[COMMIT_EDITMSG]\n+max_line_length = 0\n\\ No newline at end of file\ndiff --git a/modules/terraform-aws-sns-master/.gitignore b/modules/terraform-aws-sns-master/.gitignore\nnew file mode 100755\nindex 0000000..4fa2920\n--- /dev/null\n+++ b/modules/terraform-aws-sns-master/.gitignore\n@@ -0,0 +1,4 @@\n+.terraform\n+terraform.tfstate\n+*.tfstate*\n+terraform.tfvars\ndiff --git a/modules/terraform-aws-sns-master/.pre-commit-config.yaml b/modules/terraform-aws-sns-master/.pre-commit-config.yaml\nnew file mode 100755\nindex 0000000..3b420cb\n--- /dev/null\n+++ b/modules/terraform-aws-sns-master/.pre-commit-config.yaml\n@@ -0,0 +1,10 @@\n+repos:\n+- repo: git://github.com/antonbabenko/pre-commit-terraform\n+  rev: v1.7.1\n+  hooks:\n+    - id: terraform_fmt\n+    - id: terraform_docs\n+- repo: git://github.com/pre-commit/pre-commit-hooks\n+  rev: v1.2.3\n+  hooks:\n+    - id: check-merge-conflict\ndiff --git a/modules/terraform-aws-sns-master/LICENSE b/modules/terraform-aws-sns-master/LICENSE\nnew file mode 100755\nindex 0000000..51fca54\n--- /dev/null\n+++ b/modules/terraform-aws-sns-master/LICENSE\n@@ -0,0 +1,11 @@\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\ndiff --git a/modules/terraform-aws-sns-master/README.md b/modules/terraform-aws-sns-master/README.md\nnew file mode 100755\nindex 0000000..ba3114b\n--- /dev/null\n+++ b/modules/terraform-aws-sns-master/README.md\n@@ -0,0 +1,42 @@\n+# AWS SNS Topic Terraform module\n+\n+Terraform module which creates SNS resources on AWS\n+\n+This type of resources are supported:\n+\n+* [SNS topic](https://www.terraform.io/docs/providers/aws/r/sns_topic.html)\n+\n+## Usage\n+\n+```hcl\n+module \"sns_topic\" {\n+  source = \"terraform-aws-modules/sns/aws\"\n+\n+  name  = \"my-topic\"\n+}\n+```\n+\n+<!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+\n+## Inputs\n+\n+| Name | Description | Type | Default | Required |\n+|------|-------------|:----:|:-----:|:-----:|\n+| create_sns_topic | Whether to create the SNS topic | string | `true` | no |\n+| sns_topic_name | The name of the SNS topic to create | string | - | yes |\n+\n+## Outputs\n+\n+| Name | Description |\n+|------|-------------|\n+| this_sns_topic_arn | ARN of SNS topic |\n+\n+<!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->\n+\n+## Authors\n+\n+Module managed by [Anton Babenko](https://github.com/antonbabenko).\n+\n+## License\n+\n+Apache 2 Licensed. See LICENSE for full details.\ndiff --git a/modules/terraform-aws-sns-master/main.tf b/modules/terraform-aws-sns-master/main.tf\nnew file mode 100755\nindex 0000000..5b37642\n--- /dev/null\n+++ b/modules/terraform-aws-sns-master/main.tf\n@@ -0,0 +1,14 @@\n+module \"sns_label\" {\n+  source     = \"../../modules/terraform-null-label-master\"\n+  namespace  = \"${var.namespace}\"\n+  stage      = \"${var.stage}\"\n+  name       = \"sns_topic\"\n+  attributes = \"${var.attributes}\"\n+  delimiter  = \"${var.delimiter}\"\n+  tags       = \"${var.tags}\"\n+}\n+\n+resource \"aws_sns_topic\" \"sns_topic\" {\n+  count               = \"${var.create_sns_topic}\"\n+  name                = \"${module.sns_label.id}\"\n+}\ndiff --git a/modules/terraform-aws-sns-master/output.tf b/modules/terraform-aws-sns-master/output.tf\nnew file mode 100755\nindex 0000000..96a4a27\n--- /dev/null\n+++ b/modules/terraform-aws-sns-master/output.tf\n@@ -0,0 +1,4 @@\n+output \"sns_topic_arn\" {\n+  description = \"ARN of SNS topic\"\n+  value       = \"${element(concat(aws_sns_topic.sns_topic.*.arn, list(\"\")), 0)}\"\n+}\ndiff --git a/modules/terraform-aws-sns-master/variables.tf b/modules/terraform-aws-sns-master/variables.tf\nnew file mode 100755\nindex 0000000..f9da525\n--- /dev/null\n+++ b/modules/terraform-aws-sns-master/variables.tf\n@@ -0,0 +1,37 @@\n+variable \"create_sns_topic\" {\n+  description = \"Whether to create the SNS topic\"\n+  default     = true\n+}\n+\n+variable \"namespace\" {\n+  type        = \"string\"\n+  description = \"Namespace (e.g. `cp` or `cloudposse`)\"\n+}\n+\n+variable \"stage\" {\n+  type        = \"string\"\n+  description = \"Stage (e.g. `prod`, `dev`, `staging`)\"\n+}\n+\n+variable \"name\" {\n+  type        = \"string\"\n+  description = \"Application or solution name (e.g. `app`)\"\n+}\n+\n+variable \"delimiter\" {\n+  type        = \"string\"\n+  default     = \"-\"\n+  description = \"Delimiter to be used between `namespace`, `stage`, `name` and `attributes`\"\n+}\n+\n+variable \"attributes\" {\n+  type        = \"list\"\n+  default     = []\n+  description = \"Additional attributes (e.g. `1`)\"\n+}\n+\n+variable \"tags\" {\n+  type        = \"map\"\n+  default     = {}\n+  description = \"Additional tags (e.g. map(`BusinessUnit`,`XYZ`)\"\n+}\ndiff --git a/modules/terraform-aws-vpc-master/main.tf b/modules/terraform-aws-vpc-master/main.tf\nindex 2ed8430..b4fbfbb 100755\n--- a/modules/terraform-aws-vpc-master/main.tf\n+++ b/modules/terraform-aws-vpc-master/main.tf\n@@ -1,7 +1,7 @@\n-module \"label\" {\n+module \"vpc_label\" {\n   source     = \"../../modules/terraform-null-label-master\"\n   namespace  = \"${var.namespace}\"\n-  name       = \"${var.name}\"\n+  name       = \"vpc\"\n   stage      = \"${var.stage}\"\n   delimiter  = \"${var.delimiter}\"\n   attributes = \"${var.attributes}\"\n@@ -16,10 +16,10 @@ resource \"aws_vpc\" \"default\" {\n   enable_classiclink               = \"${var.enable_classiclink}\"\n   enable_classiclink_dns_support   = \"${var.enable_classiclink_dns_support}\"\n   assign_generated_ipv6_cidr_block = true\n-  tags                             = \"${module.label.tags}\"\n+  tags                             = \"${module.vpc_label.tags}\"\n }\n\n resource \"aws_internet_gateway\" \"default\" {\n   vpc_id = \"${aws_vpc.default.id}\"\n-  tags   = \"${module.label.tags}\"\n+  tags   = \"${module.vpc_label.tags}\"\n }\ndiff --git a/modules/vpc/main.tf b/modules/vpc/main.tf\ndeleted file mode 100644\nindex 6c5dffe..0000000\n--- a/modules/vpc/main.tf\n+++ /dev/null\n@@ -1,37 +0,0 @@\n-resource \"aws_vpc\" \"infra-vpc\" {\n-  cidr_block = \"${var.aws_vpc_cidr_block}\"\n-\n-  #DNS Related Entries\n-  enable_dns_support = true\n-  enable_dns_hostnames = true\n-\n-  tags = \"${merge(var.default_tags, map(\n-    \"Name\", \"${var.aws_infra_name}-vpc\"\n-    ))}\"\n-\n-  }\n-\n-  resource \"aws_eip\" \"infra-nat-eip\" {\n-    count    = \"${length(var.aws_cidr_subnets_public)}\"\n-    vpc      = true\n-  }\n-\n-\n-  resource \"aws_internet_gateway\" \"infra-vpc-internetgw\" {\n-    vpc_id = \"${aws_vpc.infra-vpc.id}\"\n-\n-    tags = \"${merge(var.default_tags, map(\n-      \"Name\", \"${var.aws_infra_name}-internetgw\"\n-      ))}\"\n-    }\n-\n-    resource \"aws_subnet\" \"infra-vpc-subnets-public\" {\n-      vpc_id = \"${aws_vpc.infra-vpc.id}\"\n-      count=\"${length(var.aws_avail_zones)}\"\n-      availability_zone = \"${element(var.aws_avail_zones, count.index)}\"\n-      cidr_block = \"${element(var.aws_cidr_subnets_public, count.index)}\"\n-\n-      tags = \"${merge(var.default_tags, map(\n-        \"Name\", \"${var.aws_infra_name}-${element(var.aws_avail_zones, count.index)}-public\"\n-        ))}\"\n-      }\ndiff --git a/modules/vpc/outputs.tf b/modules/vpc/outputs.tf\ndeleted file mode 100644\nindex d893fb0..0000000\n--- a/modules/vpc/outputs.tf\n+++ /dev/null\n@@ -1,16 +0,0 @@\n-output \"aws_vpc_id\" {\n-    value = \"${aws_vpc.infra-vpc.id}\"\n-}\n-\n-# output \"aws_subnet_ids_private\" {\n-#     value = [\"${aws_subnet.infra-vpc-subnets-private.*.id}\"]\n-# }\n-#\n-# output \"aws_subnet_ids_public\" {\n-#     value = [\"${aws_subnet.infra-vpc-subnets-public.*.id}\"]\n-# }\n-\n-\n-output \"default_tags\" {\n-    value = \"${var.default_tags}\"\n-}\ndiff --git a/modules/vpc/variables.tf b/modules/vpc/variables.tf\ndeleted file mode 100644\nindex 369bbc6..0000000\n--- a/modules/vpc/variables.tf\n+++ /dev/null\n@@ -1,27 +0,0 @@\n-variable \"aws_vpc_cidr_block\" {\n-  description = \"CIDR Blocks for AWS VPC\"\n-}\n-\n-variable \"aws_infra_name\" {\n-  description = \"Name of AWS Infra\"\n-}\n-\n-variable \"aws_avail_zones\" {\n-  description = \"AWS Availability Zones Used\"\n-  type        = \"list\"\n-}\n-\n-variable \"aws_cidr_subnets_private\" {\n-  description = \"CIDR Blocks for private subnets in Availability zones\"\n-  type        = \"list\"\n-}\n-\n-variable \"aws_cidr_subnets_public\" {\n-  description = \"CIDR Blocks for public subnets in Availability zones\"\n-  type        = \"list\"\n-}\n-\n-variable \"default_tags\" {\n-  description = \"Default tags for all resources\"\n-  type = \"map\"\n-}\ndiff --git a/terraform.tfvars b/terraform.tfvars\nindex ecf84fe..7718143 100644\n--- a/terraform.tfvars\n+++ b/terraform.tfvars\n@@ -1,5 +1,5 @@\n #Global Vars\n-name      = \"michael-terraform\"\n+name      = \"terraform\"\n namespace = \"michael\"\n stage     = \"dev\"\n region    = \"eu-west-1\"\n@@ -7,14 +7,24 @@ region    = \"eu-west-1\"\n\n #VPC Vars\n cidr_block = \"10.250.192.0/18\"\n-cidr_subnets_private = [\"10.250.192.0/20\",\"10.250.208.0/20\"]\n-cidr_subnets_public = [\"10.250.224.0/20\",\"10.250.240.0/20\"]\n-pub_az = [\"eu-west-1a\",\"eu-west-1b\"]\n-pri_az = [\"eu-west-1c\",\"eu-west-1d\"]\n+cidr_subnets_private = [\"10.250.192.0/20\"]\n+cidr_subnets_public = [\"10.250.224.0/20\"]\n+pub_az = [\"eu-west-1a\"]\n+pri_az = [\"eu-west-1c\"]\n+\n+# cidr_subnets_public = [\"10.250.224.0/20\",\"10.250.240.0/20\"]\n+# cidr_subnets_private = [\"10.250.192.0/20\",\"10.250.208.0/20\"]\n+\n+# pub_az = [\"eu-west-1a\",\"eu-west-1b\"]\n+# pri_az = [\"eu-west-1c\",\"eu-west-1d\"]\n\n # ASG stuff\n cpu_utilization_low_threshold_percent = 10\n cpu_utilization_high_threshold_percent = 75\n+\n+memory_utilization_low_threshold = 10\n+memory_utilization_high_threshold = 90\n+\n wait_for_capacity_timeout = \"5m\"\n max_size =  2\n min_size = 1\ndiff --git a/variables.tf b/variables.tf\nindex 3ab7027..cfd4dff 100644\n--- a/variables.tf\n+++ b/variables.tf\n@@ -81,6 +81,20 @@ variable \"cpu_utilization_low_threshold_percent\" {\n   description = \"CPU utilization loq threshold\"\n }\n\n+\n+variable \"memory_utilization_high_threshold\" {\n+  type        = \"string\"\n+  description = \"The maximum percentage of Memory utilization average.\"\n+  default     = \"80\"\n+}\n+\n+variable \"memory_utilization_low_threshold\" {\n+  type        = \"string\"\n+  description = \"The minimum percentage of Memory utilization average.\"\n+  default     = \"20\"\n+}\n+\n+\n variable \"health_check_type\" {\n   default = \"EC2\"\n   description = \"Controls how health checking is done. Valid values are EC2 or ELB\"", "date": "2019-04-20 09:11:47+03:00", "modified_files": [".gitignore", "create-infra.tf", ".gitignore", "main.tf", ".gitignore", ".travis.yml", "Makefile", "README.md", "README.yaml", "alarms.tf", "targets.md", "terraform.md", "README.md", "main.tf", "main.tf", "outputs.tf", "variables.tf", ".gitignore", "main.tf", "multi-az-subnets.tfvars", "private.tf", "public.tf", ".editorconfig", ".gitignore", ".pre-commit-config.yaml", "LICENSE", "README.md", "README.md", "main.tf", "outputs.tf", "README.md", "main.tf", "outputs.tf", "README.md", "main.tf", "outputs.tf", "notify_slack.py", "iam.tf", "main.tf", "outputs.tf", "variables.tf", ".editorconfig", ".gitignore", ".pre-commit-config.yaml", "LICENSE", "README.md", "README.md", "main.tf", "outputs.tf", "README.md", "main.tf", "outputs.tf", "README.md", "main.tf", "outputs.tf", "README.md", "main.tf", "outputs.tf", "README.md", "main.tf", "outputs.tf", "main.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "auto_values.tf", "main.tf", "outputs.tf", "variables.tf", "outputs.tf", "rules.tf", "update_groups.sh", "variables.tf", ".editorconfig", ".gitignore", ".pre-commit-config.yaml", "LICENSE", "README.md", "main.tf", "output.tf", "variables.tf", "main.tf", "main.tf", "outputs.tf", "variables.tf", "terraform.tfvars", "variables.tf"]}]}, {"name": "https://github.com/robgeiner/hello-containers-20171114184238928.git", "commits": [{"id": "0368a0c7e83d1d660033561a23d0cc2d83df71c5", "msg": "add billing code to bastion.... enven that it's not currently accepted by the module", "date": "2017-07-13 11:40:45-04:00", "modified_files": [".log", "variables.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/vuvuzella/jt-aws-serverless-app.git", "commits": [{"id": "53d023dc22daa7b4181b8ea51ce72c6b857aa553", "msg": "removed codebuild because it's hella expensive\nadded .circleci to use circleci for ci instead", "date": "2022-02-24 22:06:03+11:00", "modified_files": ["config.yml", ".terraform.lock.hcl", "artifacts.buildspec.yml", "deploy.buildspec.yml", "main.tf", "test.buildspec.yml", "main.tf", "terragrunt.hcl"]}]}, {"name": "https://github.com/utilitywarehouse/tf_telecom.git", "commits": [{"id": "17007456991c1a8faa26b1f4ac993883f577d124", "msg": "feat: Cold Storage for S3 (#15)\n\nadds functionality to move old s3 objects into\r\ncold storage for cost saving", "date": "2020-03-06 12:58:27+00:00", "modified_files": ["main.tf", "vars.tf"]}]}, {"name": "https://github.com/hmcts/cnp-module-app-service-plan.git", "commits": [{"id": "e55f546d1fbe5e9e4df97e748073f923968d9b7b", "msg": "uncomment-fees-pay-build", "date": "2019-10-22 11:46:00+01:00", "modified_files": ["outputs.tf"]}]}, {"name": "https://github.com/danielpodwysocki/infra.git", "commits": [{"id": "d8cb608a3c38868c99d4e7868488162b81f8fb06", "msg": "feat: remove kubernetes nodes, downgrade Xardas hardware to save costs", "date": "2022-01-20 20:24:09+01:00", "modified_files": ["instances.tf"]}]}, {"name": "https://github.com/cds-snc/terraform-modules.git", "commits": [{"id": "75fc899c58848b290a31ff92bab92c27b3f6bf53", "msg": "feat: S3 delete marker replication status (#110)\n\nUpdate to allow the S3 bucket's replication rule to specify if delete\r\nmarkers are replicated to the destination bucket.\r\n\r\nThis is being done to support the Cloud Based Sensor so that\r\nsatellite buckets can have a shorter expiration time and save\r\nstorage costs.", "date": "2022-02-08 12:49:56-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/rribeiro1/terraform-aws-budget-alarms.git", "commits": [{"id": "cd81824b92fb7205071ca00359ce4bd86412af10", "msg": "Billing alert changes (#9)\n\n* Add chatbot integration", "date": "2020-09-08 09:43:56+02:00", "modified_files": ["README.md", "cover.png", "cloudformation.yml", "main.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/FairwindsOps/terraform-vpc.git", "commits": [{"id": "d33edac2ceb5e7bfaa8cbb6b01b2c35dc68dbad8", "msg": "Added refactor supporting multiple AZs\n\nThis supports 2, 3 & 4 AZs by using another module inside the \"single-cluster\" module.\n\nThis method does not allow for scaling a cluster AZ footprint but would support different\ntypes of VPC architectures for accommodating subnet sizes and efficient usage of IPv4\nspace.", "date": "2019-07-01 12:22:09-06:00", "modified_files": ["README.md", "dynamics.tf", "subnets.tf", "outputs.tf", "subnet.tf", "subnets.tf", "subnets.tf", "variables.tf", "vpc.tf"]}]}, {"name": "https://github.com/sammaritan12/terraform-personal-website.git", "commits": [{"id": "b7d9c92e0960fd067d9fa0f520da027a581b702e", "msg": "Remove cert validation in terraform - will do it in namecheap\n\n- Need an automatic email redirect and namecheap provides this automatically", "date": "2022-01-03 13:49:23+11:00", "modified_files": ["main.tf"]}, {"id": "068c9515909d448f4f8cc80757653df6e7a2477f", "msg": "Remove more cert validation as that's done in namecheap", "date": "2022-01-03 14:03:11+11:00", "modified_files": ["certs.tf", "dns_markpatricio-com.tf"]}, {"id": "7353415164c56051e08438fe1bacab24c91f6ced", "msg": "Add back acm cert validation on cloudfront acm cert\n\n- Can wait on it but done in namecheap", "date": "2022-01-03 14:11:00+11:00", "modified_files": ["main.tf"]}, {"id": "446175b95dd939e57ca9cf72e5cdbcfa8f8f6b78", "msg": "Remove hosted zone because it's not being used\n\n- Changed to namecheap", "date": "2022-01-03 14:45:32+11:00", "modified_files": ["dns_markpatricio-com.tf", "locals.tf"]}]}, {"name": "https://github.com/willfarrell/terraform-logs-module.git", "commits": [{"id": "545b0bb763a4dbaab6b262c4b9642767e2434d07", "msg": "docs: costing", "date": "2018-12-30 16:37:44-07:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/nilessssh/bp.git", "commits": [{"id": "e811cce588263128c5fc395231ebed7744363e81", "msg": "terraform for bigpay", "date": "2022-02-02 07:11:36+00:00", "modified_files": ["main.tf", "user-data.sh", "auto.tf", "ec2.tf", "lb.tf", "provider.tf", "security.tf", "variables.tf"]}]}, {"name": "https://github.com/mantvydasb/Red-Team-Infrastructure-Automation.git", "commits": [{"id": "a55841593ca677774d26c6194d33afa7cb451a14", "msg": "renamed payload droplets to phishing", "date": "2019-01-25 16:20:26+00:00", "modified_files": ["dns.tf", "finalize.sh", "firewalls.tf", "outputs.tf", "phishing-rdr.tf", "phishing.tf"]}, {"id": "9902e2229b1f0f31e5be1e3680d2cfc705591103", "msg": "added back in payload and payload-rdr configs", "date": "2019-01-25 16:37:06+00:00", "modified_files": ["payload-rdr.tf", "payload.tf"]}, {"id": "0d96784ebda12f861048c7dda266e563a3cf4201", "msg": "printing out payload and its redirector IPs", "date": "2019-01-26 16:05:59+00:00", "modified_files": ["outputs.tf"]}, {"id": "6b73b59093e1214c01a4161a3438b82dcd5ee734", "msg": "printing out payload and its redirector IPs", "date": "2019-01-26 16:06:14+00:00", "modified_files": ["outputs.tf"]}]}, {"name": "https://github.com/falldamagestudio/UE4-GHA-BuildSystem.git", "commits": [{"id": "e58083adbf91e7daa8ddb5db6c3b2e5c8c0a906c", "msg": "Change pd-ssd to pd-balanced\n\nTests have shown pd-balanced to have performance reasonably close to that of pd-ssd, but at half the cost", "date": "2020-11-01 22:19:13+01:00", "modified_files": ["terraform.tfvars", "terraform.tfvars"]}]}, {"name": "https://github.com/NaamaCohenIvgi/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/chrislittle/AzureSubscriptionAutomation.git", "commits": [{"id": "8ed39817d03816edf0d11a7e801b6d709d77348b", "msg": "moving to billing account mca", "date": "2022-04-01 14:24:29-04:00", "modified_files": ["main.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/cookpad/terraform-aws-eks.git", "commits": [{"id": "59c40286757e1fa5cb5391421c5380e5ad506387", "msg": "Run GPU node group tests with on_demand instances (#236)\n\nThis should fix the flakiness we have seen with this test recently.\r\n\r\nUsing g4dn.xlarge instance type as this is currently the lowest cost\r\nNvidia GPU node", "date": "2021-08-13 12:05:43+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/web3-storage/ipfs-elastic-provider-infrastructure.git", "commits": [{"id": "55ea76056607df283d226fe26f0ab296e40dcc87", "msg": "Terratest (#27)\n\n* Improving workflow - shared workflow receives inputs\r\n\r\n* Will test PR to terratest branch\r\n\r\n* pull-request paths test\r\n\r\n* path with ** at the end\r\n\r\n* Trying to fix path trigger\r\n\r\n* New workflows\r\n\r\n* Shared pipe question\r\n\r\n* First working test case\r\n\r\n* Correctly validating complex output\r\n\r\n* All planned test cases working awesomely\r\n\r\n* New test cases: Call AWS API to verify that table is active\r\n\r\n* A few basic test cases working for gateway endpoint\r\n\r\n* New test cases\r\n\r\n* Destroy infra + radme cd explaining\r\n\r\n* Big progress with getting AWS information through SDK\r\n\r\n* Validating vpc_id\r\n\r\n* Route table association validation\r\n\r\n* lambda module - examples\r\n\r\n* Working test structure for api-gateway-to-lambda-module\r\n\r\n* Lambda execution test success\r\n\r\n* Validating APIGateway URL\r\n\r\n* lambda_permission to apigateway inside module\r\n\r\n* Just rename terratest tables\r\n\r\n* Base structure for testing lambda-from-s3 module and renaming/adjusting lambda function base code\r\n\r\n* Good progress on lambda-from-s3_test\r\n\r\n* Gave up on checking metrics to see if lambda was invoked. Simplified and more efficient test will be look at bucket notification config and invoking lambda\r\n\r\n* Lambda from s3 test worked\r\n\r\n* Improving tests by validating lambda function name from output\r\n\r\n* Messing up with kube-specs module (Now called as base-components)\r\n\r\n* Was able to create cluster and execute client command from Go Kubernetes client. Also renaming terraform outputs and variableNames to match convention using _\r\n\r\n* Metrics server properly tested\r\n\r\n* Code improvement: Creating different service accounts with different role association\r\n\r\n* First assertions: about serviceAccount names, namespaces and annotations\r\n\r\n* Validating connection between annotation and the real role-arn created\r\n\r\n* Progress: Was able to create policies inside the correct roles\r\n\r\n* Typo fixing\r\n\r\n* OIDC Test\r\n\r\n* All just tested, working properly\r\n\r\n* Returning workflow branch configurations to main\r\n\r\n* Remove manual trigger", "date": "2022-01-17 17:31:45-03:00", "modified_files": ["dns-auto-deploy.yaml", "indexing-subsystem-auto-deploy.yaml", "peer-subsystem-auto-deploy.yaml", "peer-subsystem-manual-deploy.yaml", "shared-subsystem-auto-deploy.yaml", "terraform-aws-shared-workflow.yaml", ".gitignore", "README.md", "main.tf", "variables.tf", "auth.tf", "index.js", "index_call_sqs.js", "index_hello.js", "index_save_to_db.js", "lambda_function_base_code.zip", "main.tf", "index_hello.js", "variables.tf", "auth.tf", "auth.tf", "lambda_function_base_code.zip", "main.tf", "output.tf", "variables.tf", "main.tf", "outputs.tf", "api-gateway-to-lambda_test.go", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "dynamodb_test.go", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "outputs.tf", "gateway-endpoint-to-s3-dynamo_test.go", "variables.tf", "auth.tf", "auth.tf", "main.tf", "outputs.tf", "variables.tf", "helm.tf", "infinitecalls.yaml", "sleep.yaml", "ubuntu.yaml", "locals.tf", "main.tf", "outputs.tf", "kube-base-components_test.go", ".dockerignore", "Dockerfile", "index.js", "package-lock.json", "package.json", "variables.tf", "auth.tf", "output.tf", "peer-deploy.tf", "peer-svc.tf", "peer_hpa.tf", "provider-deploy.tf", "provider-svc.tf", "readme.md", "variables.tf", "auth.tf", "lambda_function_base_code.zip", "main.tf", "output.tf", "variables.tf", "locals.tf", "log.tf", "main.tf", "outputs.tf", "lambda-from-s3_test.go", "variables.tf", "main.tf", "output.tf", "outputs.tf", "variables.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/robertlupinek/rh-ex407.git", "commits": [{"id": "0c679d7adfa5bf38d5c7846958f3508fc036b3e9", "msg": "Adding set private IP addresses and allowing public IP addresses on non-jump hosts.  Too cheap for Nat instance. :)", "date": "2020-03-16 20:28:39-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/dmolchanov/tf-nextcloud.git", "commits": [{"id": "c083f94bd10eca8a536321cdfc6c457959171737", "msg": "ELB+AS. with no rules for autoscaling. Only one instance by default to avoid bills.", "date": "2018-06-05 23:19:17+03:00", "modified_files": ["README.md", "init.sh", "nextcloud.tf", "out.tf", "vars.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-aws-workspaces.git", "commits": [{"id": "e4558e322cd6af610c43a840a59af8dad41f307f", "msg": "cost", "date": "2021-05-11 11:10:31+01:00", "modified_files": ["CODEOWNERS", "compare.yml", "master.yml", "pull_request.yml", ".gitignore", ".markdownlint.json", ".pre-commit-config.yaml", "README.md", "Makefile", "terraform.tf", "validate.ps1", "validate.sh"]}]}, {"name": "https://github.com/dtelaroli/devops-test.git", "commits": [{"id": "a96558b80950db58f0486534e242e399f37d466b", "msg": "Create PayOrder feature", "date": "2020-05-11 23:13:32-03:00", "modified_files": ["orders.js", "type-defs.js", "index.js", "sqs.js", "throw-if-error.js", "order.js", "container.tsx", "view.tsx", "container.tsx", "view.tsx", "mutations.ts", "mutation.ts", "mutation-create-order.ts", "mutation-pay-order.ts", "queries.ts", "locals.tf", "out.tf", "sqs.tf"]}]}, {"name": "https://github.com/Rich3185/analytical-platform-iam.git", "commits": [{"id": "d5b2905a48826f9ebf90a4d7a3dd77d59ace13f4", "msg": "create billing viewer role/group (#139)\n\n* create billing viewer role/group\r\n\r\n* terraform fmt\r\n\r\n* add billing viewer role link in readme\r\n\r\n* remove users from read only due to IAM group membership limits\r\n\r\n* rename billing viewer link name to `data`", "date": "2020-01-29 10:57:56+00:00", "modified_files": ["README.md", "assume-data.tf", "policy-billing-viewer.tf", "variables.tf"]}, {"id": "a225ae09a3699301588d8b5345e18ff0ec4f26bd", "msg": "Remove the Analytical Platform Team from billing viewers (#180)\n\nThis is a temporary measure as we've reached the maximum number of\r\ngroups for the Platform Team. This doesn't remove access to the Billing\r\nConsole", "date": "2020-07-23 10:58:43+01:00", "modified_files": ["assume-data.tf"]}]}, {"name": "https://github.com/kmarilleau/a-cloud-guru-gcp-cloud-engineer-terraform.git", "commits": [{"id": "49da63aaa729a81bb65eaf47716fd3b6a8722e75", "msg": "set billing account", "date": "2020-12-21 01:12:01+01:00", "modified_files": ["main.tf", "vars.tf"]}]}, {"name": "https://github.com/traveloka/terraform-aws-deprecated-asg.git", "commits": [{"id": "ef6234daeae0d240fe8f93a8a12ced0f3a0a28e0", "msg": "add new variable for costumizing user data", "date": "2017-12-11 11:04:52+07:00", "modified_files": ["user-data.tf", "variables.tf"]}]}, {"name": "https://github.com/ndebuhr/cloud-native-workstation.git", "commits": [{"id": "301244e00d9f359f964242849462704f80e8db13", "msg": "\ud83e\udde0 Parameterize Jupyter GPU provisioning, for more flexibility in AI/ML/GPU workload cost-performance decisions", "date": "2021-10-13 01:34:53+00:00", "modified_files": ["jupyter.yaml", "values.yaml", "gke.tf", "variables.tf"]}]}, {"name": "https://github.com/Bot-Casey/pdf_billing_generator.git", "commits": [{"id": "bb18fd25b4b2af96ac150bd55aebaa9902ce61e5", "msg": "init. 1. Created users defined in users.tf, assigned each to inputbucketgroup and attached policies for said users to access the s3_input_bucket and billing_sqs_queue. 2. Created each of the above resources.", "date": "2022-05-03 22:26:30-05:00", "modified_files": [".gitignore", ".terraform.lock.hcl", "billing_sqs_queue.tf", "groups.tf", "iam_input_bucket_users.tf", "main.tf", "policies.tf", "s3_input_bucket.tf"]}]}, {"name": "https://github.com/ghoshkunal123/aws-infra-as-code.git", "commits": [{"id": "9e18cd456faf2be7dd85ea748c9836faf67ed473", "msg": "ANLY-3144: add tags to all resources for cost evaluation, etc. +review FINR @dchou", "date": "2018-02-27 09:46:11-08:00", "modified_files": ["alb.tf", "redshift.tf", "securitygroup.tf", "terraform.tfvars"]}]}, {"name": "https://github.com/keithnoguchi/do-in-action.git", "commits": [{"id": "2291a1ac7e47009d058a1a448760cd5559e5946e", "msg": "vars.tf: Increase the number of droplets to 40 each\n\nTo hit the 40Gig total with cheapest droplets :)", "date": "2018-06-04 23:27:39-07:00", "modified_files": ["vars.tf"]}]}, {"name": "https://github.com/bastiandg/scaling-in-the-cloud.git", "commits": [{"id": "28e774b02ce6cdc252d9d1d919f436d2d3c4c6cd", "msg": "Increase hash cost; Add health endpoint", "date": "2019-09-02 12:19:46+02:00", "modified_files": ["main.tf", "hashy", "hashy.go"]}]}, {"name": "https://github.com/ayltai/hknews-infrastructure.git", "commits": [{"id": "68171be117d3997b84253258f41fad6daedbc76a", "msg": "Use a bigger but cheaper EC2 instance", "date": "2019-09-26 15:26:37+08:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/AaronForce1/terraform-aws-infrastructure-eks.git", "commits": [{"id": "10430d141339062ab1a9f5882689399f21e7c3f9", "msg": "Setting up infracost components and other pre-commit states", "date": "2022-01-05 22:01:15+08:00", "modified_files": [".gitignore", ".pre-commit-config.yaml", ".terraform.lock.hcl", "Makefile", "README.md", ".infracost-usage.yml", "main.tf", "providers.tf", "vars.tf", ".gitignore"]}]}, {"name": "https://github.com/sika-training-examples/2022-04-22--heidelbergcement--terraform-monorepo.git", "commits": [{"id": "1aaaf47e12a8eb57112cfb887f95c1b3cf025ffe", "msg": "feat(env/gitlab): Add INFRACOST_API_KEY", "date": "2022-04-22 13:47:24+02:00", "modified_files": ["main.tf", "main.tf", "variables.auto.EXAMPLE.tfvars", "variables.tf"]}, {"id": "0a98e0b72eb915a558f5a6ac33f3831db1f0231c", "msg": "feat(env/gitlab): Add GITLAB_TOKEN for infracost comment", "date": "2022-04-22 13:58:52+02:00", "modified_files": ["main.tf", "main.tf"]}]}, {"name": "https://github.com/skehlet/aws-batch-processing.git", "commits": [{"id": "decdbce98d33cf2599aee554779ef5d8b5361d8f", "msg": "updated lambda to use SQS as an event source; added NAT instance option (cheaper than NAT GW)", "date": "2018-07-31 17:55:11-07:00", "modified_files": [".gitignore", "Batch processing using lambda.png", "README.md", "index.js", "package-lock.json", "init.sh", "keep-feeding", "launch-feeder.bat", "launch-feeder.js", "main.tf", "package-lock.json", "package.json", "index.js", "index.js", "package-lock.json", "package.json", "variables.tf", "vpc.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-azurerm-mysql.git", "commits": [{"id": "ab28ba331929475431fe695036d0863d329cdac2", "msg": "costs", "date": "2021-05-18 08:24:40+01:00", "modified_files": ["compare.yml", "main.yml", "pull_request.yml", "Makefile", "infracost-usage.yml", "terraform.tf"]}]}, {"name": "https://github.com/ae-lexs/terraform_modules.git", "commits": [{"id": "84628710c900b2d1db058aa0e339134f24e6d20c", "msg": "billing_cloudwatch_alarm module documentation (#5)\n\n* Rename cloudwatch_alarm to billing_cloudwatch_alarm\r\n\r\n* Add documentation for the billing_cloudwatch_alarm module", "date": "2020-07-25 12:06:27-05:00", "modified_files": ["README.md", "main.tf", ".gitignore", "README.md", "main.tf", "outputs.tf", "variables.tf", "outputs.tf"]}, {"id": "8cd62acc20ce3418eaf4cdd9d8b472091101cdbd", "msg": "Fix the issue with threshold variable of the billing_cloudwatch_alarm module (#6)", "date": "2020-07-25 12:30:21-05:00", "modified_files": ["README.md", "variables.tf"]}, {"id": "76b52b2de84ca6215dea8b733f7bb6ba2d453cd3", "msg": "Add S3 Versioned Bucket Module (#8)\n\n* Update the README file of the root module\r\n\r\n* Add basic structure for the s3_bucket_versioned module\r\n\r\n* Create versioned_bucket module\r\n\r\n* Update the documentation of the s3_versioned_bucket\r\n\r\n* Update the format of the code in the billing_cloudwatch_alarm module\r\n\r\n* Use s3_versioned_bucket module\r\n\r\n* Rename the outputs of the s3_versioned_bucket\r\n\r\n* Remove deprecated syntax of the modules\r\n\r\n* Create an S3 versioned bucket called terraform_state_of_terraform_modules_project\r\n\r\n* Add the section outout to the root module documentation\r\n\r\n* Add bucket_name output to the s3_versioned_bucket module\r\n\r\n* Remove bucket_name output to the s3_versioned_bucket module\r\n\r\n* Add two aws_s3_bucket_objects called terraform_state_object and terraform_state_backup_object\r\n\r\n* Add etag for the terraform_state_object and the terraform_state_backup_object reources", "date": "2020-07-30 11:11:56-05:00", "modified_files": ["README.md", "main.tf", "main.tf", ".gitignore", "README.md", "main.tf", "outputs.tf", "variables.tf", "outputs.tf"]}, {"id": "92b6cc7b622788e4c7414149cffef5e6296adb64", "msg": "Add tags to the modules and resources (#10)\n\n* Add variables for tags to the s3_versioned_bucket module\r\n\r\n* Add tags to the terraform-state-of-terraform-modules-project resource\r\n\r\n* Add variables for tags to the billing_cloudwatch_alarm module\r\n\r\n* Add tags to the Resources Expenses Metrict resource", "date": "2020-08-06 10:29:51-05:00", "modified_files": ["main.tf", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf"]}, {"id": "f030716f82bfd2d3817fd2c51b1e2a8564424d6a", "msg": "perf: Delete unused infrastructure (#13)\n\n* Remove the use of the billing_cloudwatch_alarm module\r\n\r\n* Remove the use of the replicated_s3_bucket module\r\n\r\n* Change the user of the providers\r\n\r\n* Remove the terraform state files\r\n\r\n* Remove the use of the s3_versioned_bucket module", "date": "2020-08-29 10:56:33-05:00", "modified_files": ["main.tf", "main.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/vrutkovs/okd-singlenode-on-aws.git", "commits": [{"id": "86d6243e4d811796216552f8e2bd34912e208b92", "msg": "Extract openshift-install from the payload", "date": "2021-03-10 12:10:20+01:00", "modified_files": ["README.md", "config.tf", "installer.tf", "variables.tf", "main.tf", "terraform.tfvars.example"]}]}, {"name": "https://github.com/GaloyMoney/charts.git", "commits": [{"id": "49e8d84d17a5b1b46b5ce07dd9c2b65ab5f9dcff", "msg": "Merge pull request #207 from GaloyMoney/separate_galoy_pay_chart\n\nSeparate galoy pay chart", "date": "2021-11-12 13:51:22+05:18", "modified_files": [".helmignore", "Chart.yaml", "_helpers.tpl", "deployment.yaml", "ingress.yaml", "service.yaml", "values.yaml", "galoy-pay-smoketest.sh", "main.tf", "galoy-pay.tf"]}, {"id": "517ededa7632a66d8d107e923bcf32ae07dccc64", "msg": "Fix galoy pay testflight", "date": "2021-11-12 14:00:38+05:18", "modified_files": ["main.tf"]}, {"id": "10d7ebc5e4f435dc0198e8951ddc5b152333d72e", "msg": "Change galoy pay port number in testflight", "date": "2021-12-02 20:53:51+05:18", "modified_files": ["main.tf"]}, {"id": "569bd7043b5b9bf02d434bd71455037c24a7a88e", "msg": "Revert galoy-pay image bump that introduces next.js", "date": "2021-12-02 17:00:29+01:00", "modified_files": ["values.yaml", "main.tf"]}, {"id": "3c858a93cb97595f43cfac79733642d1d7511b23", "msg": "Remove galoy pay repo field from dev", "date": "2021-12-09 16:16:49+05:18", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/reschouw-homelab/terraform-homelab.git", "commits": [{"id": "e19dd7497737376a07e62042ed9fb3e8ad9739a9", "msg": "Moving eks project to archive\n\neks was cool but cost-prohibitive for a homelab", "date": "2021-06-26 06:46:37-07:00", "modified_files": ["cluster-iam.tf", "cluster.tf", "data.tf", "nodes-iam.tf", "nodes.tf", "provider.tf", "terraform.tf", "versions.tf"]}]}, {"name": "https://github.com/yangpeng66/SnappayTest.git", "commits": [{"id": "6b427e55dfa85ebd08761f4d085dfab8c1aba080", "msg": "push SnapPay Test answers", "date": "2019-08-29 23:52:03-04:00", "modified_files": [".DS_Store", ".DS_Store", "challenge1.md", ".gitignore", "aws_ami.tf", "create-elasticsearch.tf", "provider.tf", ".gitignore", "aws_ami.tf", "create-kibana.tf", "provider.tf", ".DS_Store", "challenge2.md", ".gitignore", "build-dev-server.sh", "build-server.yml", "certbot_inventory", "local_inventory", "setup-certbot.sh", "InstallingAnsible-Playbook.README.md", "PreparingTheServer.README.md", "default.conf", "setup_certbot.yml", "create_app_dirs.yml", "create_dirs.yml", "http_redirect.yml", "setup_packages.yml", "manageSSL.yml", "snappay_user.yml"]}]}, {"name": "https://github.com/sassoftware/viya4-iac-aws.git", "commits": [{"id": "fe331528238d9f11a439803e64c6b14a16951215", "msg": "low-cost sample file added. (#71)", "date": "2021-06-22 17:38:24-04:00", "modified_files": ["sample-input-minimal.tfvars", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/marck-oemar/rancher-quickstart.git", "commits": [{"id": "90944271b4e8bd46e3d42ac64bc4964a33a8fdc3", "msg": "Updated server from t2 to t3\n\nDue to better performance and cost savings updating from t2 to t3.", "date": "2018-10-11 11:26:37-05:00", "modified_files": ["terraform.tfvars.example"]}]}, {"name": "https://github.com/masanchezp/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/caruccio/getup-engine-installer.git", "commits": [{"id": "8e4bd98c0310f563edb459690597a8e1a958fce4", "msg": "Upgrade to v3.10 (#84)\n\n- OKD v3.10\r\n- Limit journald total files\r\n- Fix limits\r\n- Fix alertmanager pagerduty integration\r\n- Ansible pre/post upgrade\r\n- Clean exit after built azure images\r\n- Optional billing usage install\r\n- Preparing for new images\r\n- Update alerts", "date": "2018-08-10 22:45:59-03:00", "modified_files": [".dockerignore", ".gitignore", "Dockerfile-v3.10", "Dockerfile-v3.9", "README.md", "deploy", "hosts-v3.10.in", "hosts-v3.9.in", "v3.10-ansible_set_nodename.diff", "v3.10-hawkular_metrics_rc.j2", "v3.9-ansible_cloudprovider_storageclass_azure.diff", "v3.9-ansible_set_nodename.diff", "v3.9-hawkular_metrics_rc.j2", "config.yml", "upgrade_control_plane.yml", "upgrade_nodes.yml", "eventrouter.yml.j2", "main.yml", "main.yml", "alertmanager.yml.j2", "prometheus.getup.rules.j2", "main.yaml", "main.yaml", "install.sh", "scaleup.sh", "gen-config", "gen-hosts", "build", "build-all", "bastion.json", "openshift.json", "deploy", "run", "origin-build.sh", "openshift.tf", "terraform.tfvars.in"]}]}, {"name": "https://github.com/austin1237/gifbot.git", "commits": [{"id": "c11dabf1ea02c0e044c62448986bb3f9abdf3967", "msg": "reducing read and write capacity to 1 to reduce costs.", "date": "2017-12-14 23:58:16-07:00", "modified_files": ["main.tf", "main.tf"]}]}, {"name": "https://github.com/joelchrist/terraform.git", "commits": [{"id": "bbf18d695bd7597977ea7a97d5434ca7f1a37d57", "msg": "Downgrade machine type to save costs", "date": "2018-05-31 13:01:28+02:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/ToruMakabe/aks-anti-dry-iac.git", "commits": [{"id": "4ba7a9dc3085ab701c85737a4f36dd57fcd7596f", "msg": "improve: cost reduction (test env.)", "date": "2022-03-15 14:55:43+09:00", "modified_files": ["deployment-values.yaml", "kustomization.yaml", "kustomization.yaml", "kustomization.yaml", "kustomization.yaml", "deployment-values.yaml", "kustomization.yaml", "kustomization.yaml", "kustomization.yaml", "kustomization.yaml", "apps.yaml", "infrastructure.yaml", "kustomization.yaml", "apps-values.yaml", "infrastructure-values.yaml", "kustomization.yaml", "apps-values.yaml", "infrastructure-values.yaml", "kustomization.yaml", "apps-values.yaml", "infrastructure-values.yaml", "kustomization.yaml", "apps-values.yaml", "apps.yaml", "infrastructure-values.yaml", "infrastructure.yaml", "kustomization.yaml", "release.yaml", "release.yaml", "chaos-mesh-values.yaml", "kustomization.yaml", "nginx-values.yaml", "chaos-mesh-values.yaml", "kustomization.yaml", "nginx-values.yaml", "chaos-mesh-values.yaml", "kustomization.yaml", "nginx-values.yaml", "chaos-mesh-values.yaml", "kustomization.yaml", "nginx-values.yaml", "bootstrap.sh", "setup-dev-test.sh", "setup-dev.sh", "main.tf", "variables.tf", "dev.tfvars", "prod.tfvars", "variables.tf", "main.tf", "variables.tf", "dev.tfvars", "prod.tfvars", "variables.tf", "Makefile", "e2e_test.go", "e2e.tfvars", "integration.tfvars", "variables.tf", "e2e.tfvars", "integration.tfvars", "variables.tf", "diff-flux.sh"]}]}, {"name": "https://github.com/Sri-TF/Terraform.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/nce/k8s-hard-way.git", "commits": [{"id": "5eda3e31fcd25423a25226720d8b44458ab74807", "msg": "Retag for cost-explorer seperation", "date": "2022-03-25 17:13:19+01:00", "modified_files": ["_provider.tf"]}]}, {"name": "https://github.com/servers-tf/infrastructure.git", "commits": [{"id": "cc9e50a3864511f9fb9f871293e6a6e7e2719d2c", "msg": "Make dynamodb cheap", "date": "2021-01-24 21:59:59-06:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/openoakland/terraform-modules.git", "commits": [{"id": "ec0252ad006a62d39a0a14ee36da5339b080a30d", "msg": "Allow \"site\" module to specify alias domains\n\nThere is a bit of assumption baked into this module about the fact that\nthe site is accessible at a URL in the format of\nbeta.aws.openoakland.org (i.e. a Route53 zone). By adding an \"aliases\"\noption, we can tell Cloudfront that our site should also be accessible\nvia other domains, namely our preferred \"openoakland.org\".\n\nThe caveat here is that for the TLS certificate, Amazon makes us\nvalidate all aliases. We can automatically validate the primary fqdn\nsince it's in Route53, but not any aliases. So, when running the\nterraform for the first time, the user will have to manually create the\nother domains (in Namecheap or wherever else) during the validation\nstep.", "date": "2020-01-17 17:13:59-08:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/hmcts/terraform-offboarding-alerts.git", "commits": [{"id": "cad03757d74d448a18b9afb2da88386572ccd1ae", "msg": "DTSPO-440 - remove custome payload and add action group", "date": "2021-02-16 15:40:20+00:00", "modified_files": ["log-alert.tf"]}, {"id": "da55024f4773d843188cdcf10c0a47f740c62e20", "msg": "DTSPO-440 - remove custome payload and add action group (#10)\n\n* DTSPO-440 - remove custome payload and add action group\r\n\r\n* DTSPO-440 - fix action group", "date": "2021-02-16 15:51:45+00:00", "modified_files": ["log-alert.tf"]}, {"id": "dee7194ff8d7c41eac184c5cff0f665ebb00f4c9", "msg": "DTSPO-658 - add webhook filter to custom payload (#18)\n\n* DTSPO-658 - add webhook filter to custom payload\r\n\r\n* DTSPO-658 - add random string to job value", "date": "2021-03-05 13:50:38+00:00", "modified_files": ["log-alert.tf"]}, {"id": "200e4edfcc2299b0a859150bdafcf83ee2f8218e", "msg": "DTSPO-440 - use token (#19)\n\n* DTSPO-440 - add token to payload and store as secret\r\n\r\n* DTSPO-440 - add token to payload and store as secret\r\n\r\n* DTSPO-440 -change secret name\r\n\r\n* DTSPO-440 - use random password", "date": "2021-03-09 09:45:53+00:00", "modified_files": ["log-alert.tf"]}]}, {"name": "https://github.com/chetanbothra/Terraform_AWS_Billing_Alert.git", "commits": [{"id": "43b0d3b4cef0d3f57d4f5d4f1c7aeb9bfc3e362a", "msg": "Terraform Script for AWS Billing Alerts", "date": "2020-06-24 13:37:16+05:18", "modified_files": [".gitignore", "README.md", "provider.tf", "servicebudgets.tf", "variable.tf"]}]}, {"name": "https://github.com/cts-terraform-modules/terraform-google-project-factory.git", "commits": [{"id": "39891d950433a683da2c75b4187728f9af1c5441", "msg": "Fix typo, rename billing acount and services variables", "date": "2019-05-15 08:19:09+02:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}, {"id": "6c93392a5ff6bc45a36eba689d44980ce5f0baf8", "msg": "Grant billing user permission during testing", "date": "2019-11-19 00:37:17+00:00", "modified_files": ["iam.tf"]}, {"id": "1b4954a704fc03d5109b5615f7cfef824ff7211a", "msg": "enable google billing budget apis in parent project", "date": "2020-01-06 16:22:29-08:00", "modified_files": ["main.tf"]}, {"id": "f580cae362e7bd01e9b52ff6fb329c19ccebc3da", "msg": "give test user billing admin to billing account to create budgets", "date": "2020-01-07 14:00:42-08:00", "modified_files": ["iam.tf"]}, {"id": "bc9891a7b6f3b576ca7cf7ddeb23022efa000a4c", "msg": "enable pubsub for setup project for billing test", "date": "2020-01-08 12:51:10-08:00", "modified_files": ["main.tf"]}, {"id": "64461a22b225960357ef866bdef8c1d2693733f7", "msg": "fix: billing budget tests (#594)", "date": "2021-06-10 23:40:05-05:00", "modified_files": ["outputs.tf", "budget.rb", "inspec.yml"]}]}, {"name": "https://github.com/testaccount0510/terraform.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/cloudhnl/ghost-blog.git", "commits": [{"id": "40bd157e8f79545cc070d6fb20370194c1450daa", "msg": "Add autoscalling group\n\nAWS Auto Scaling lets you build scaling plans that automate how groups\nof different resources respond to changes in demand. You can optimize\navailability, costs, or a balance of both. AWS Auto Scaling\nautomatically creates all of the scaling policies and sets targets.", "date": "2018-03-02 01:10:55+00:00", "modified_files": ["ami.tf", "asg.tf", "variables.tf"]}]}, {"name": "https://github.com/poseidon/terraform-azure-kubernetes.git", "commits": [{"id": "633eb938742a43be09612b944c29aaaf70dac119", "msg": "Change Azure default controller_type and worker_type\n\n* Change default controller_type to Standard_B2s. A B2s is cheaper\nby $17/month and provides 2 vCPU, 4GB RAM (vs 1 vCPU, 3.5GB RAM)\n* Change default worker_type to Standard_DS1_v2. F1 was the previous\ngeneration. The DS1_v2 is newer, similar cost, more memory, and still\nsupports Low Priority mode, if desired", "date": "2019-09-09 22:24:10-07:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/mozilla-platform-ops/devservices-aws.git", "commits": [{"id": "02e89289d88225ec61fa284dd47a39c4ed044926", "msg": "hgmo: s3 bucket for holding events (bug 1316952)\n\nWe want hg.mo to write a stream of log events to S3 for data\nretention and for reference by other services. Some events are on\nthe larger side and exceed size limits in SNS and Kinesis Firehose.\nSo, we'll write all events to S3 and then reference the object URL\nin SNS/Kinesis/etc events if the event is too large to fit in a payload.\n\nThis commit introduces an S3 bucket and policy to hold hg.mo\nevents. The hgnotifier user can write to the bucket. Anybody can\nread from the bucket (because all data is public and already posted\nto Pulse).", "date": "2016-11-14 13:40:30-08:00", "modified_files": ["iam-roles.tf", "s3.tf"]}, {"id": "ebb4040f6ad47d3e41c5ddf2cdceac3b3a8abead", "msg": "Add s3 bucket to store Mercurial backups\n\nWe have several gigabytes of old repos sitting on an NFS volume\nin SCL3. It's cheaper to store them in S3. Plus, we'll soon be\nmigrating a bunch of data and it is easier if we have less data to\nmigrate.", "date": "2018-02-07 14:47:40-08:00", "modified_files": ["iam-roles.tf", "s3.tf"]}]}, {"name": "https://github.com/poseidon/terraform-aws-kubernetes.git", "commits": [{"id": "12f8972a912d97427fe0ef1b84becdc8a2993022", "msg": "Change kube-apiserver port from 443 to 6443\n\n* Adjust firewall rules, security groups, cloud load balancers,\nand generated kubeconfig's\n* Facilitates some future simplifications and cost reductions\n* Bare-Metal users who exposed kube-apiserver on a WAN via their\nrouter or load balancer will need to adjust its configuration.\nThis is uncommon, most apiserver are on LAN and/or behind VPN\nso no routing infrastructure is configured with the port number", "date": "2018-06-18 21:57:58-07:00", "modified_files": ["apiserver.tf", "bootkube.tf", "security.tf"]}, {"id": "ef0372d2684ef920c6e54cf8b9f80d87db90e636", "msg": "Combine NLBs to use one NLB per cluster\n\n* Simplify clusters to come with a single NLB\n* Listen for apiserver traffic on port 6443 and forward\nto controllers (with healthy apiserver)\n* Listen for ingress traffic on ports 80/443 and forward\nto workers (with healthy ingress controller)\n* Reduce cost of default clusters by 1 NLB ($18.14/month)\n* Keep using CNAME records to the `ingress_dns_name` NLB and\nthe nginx-ingress addon for Ingress (up to a few million RPS)\n* Users with heavy traffic (many million RPS) can create their\nown separate NLB(s) for Ingress and use the new output worker\ntarget groups\n* Fix issue where additional worker pools come with an\nextraneous network load balancer", "date": "2018-06-18 22:56:32-07:00", "modified_files": ["nlb.tf", "outputs.tf", "ingress.tf", "outputs.tf"]}, {"id": "e09126b45746f1c967d1990fa04ce781a0478c6d", "msg": "Change AWS default type from t2.small to t3.small\n\n* T3 is the next generation general purpose burstable\ninstance type. Compared with t2.small, the t3.small is\ncheaper, has 2 vCPU (instead of 1) and provides 5 Gbps\nof pod-to-pod bandwidth (instead of 1 Gbps)", "date": "2018-12-18 12:29:27-08:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/homeroahm/terraform-gcp.git", "commits": [{"id": "4f72ebd2f834d697ba27316bb4edac0ed38bd04d", "msg": "commented out var billing account in main-gke", "date": "2021-11-24 09:33:15-05:00", "modified_files": ["main-gke.tf"]}, {"id": "e8d00e147f78c4ef8ee8c66f043b33f49aa81d1f", "msg": "fixed duplicated references to billing_account", "date": "2021-11-26 21:26:58-05:00", "modified_files": ["main-gke.tf", "main-gke.tf_remote", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/checkmarxSE/Kics_demo.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/dfds-data/terraform-modules.git", "commits": [{"id": "2688487eb7d81e834529f212730bbb5d4e23a9d4", "msg": "add lambda function payload as output", "date": "2021-08-20 16:27:21+02:00", "modified_files": ["outputs.tf", "main.tf"]}, {"id": "2d44a226b431b31bbd9592dd9c5b7ea08cd62789", "msg": "remove lambda_layer_payload variable", "date": "2021-09-01 13:40:12+02:00", "modified_files": ["variables.tf"]}, {"id": "c1bd1fbef6426c625b7c4ddb52f13582245192e3", "msg": "remove lambda layer payload from required variables", "date": "2021-09-06 15:50:59+02:00", "modified_files": ["variables.tf", "README.md"]}, {"id": "661324c6704a26753aa3c72a6638aa148e441b1d", "msg": "add possibility to specify environment variables and lambda function payload", "date": "2021-09-13 15:15:01+02:00", "modified_files": ["assume_role_policy.json", "assume_role_policy.json", "data.tf", "main.tf", "variables.tf", "assume_role_policy.json"]}, {"id": "28e34e5486271290125b913d5f29e1a6d28e696a", "msg": "add default lambda_function_payload_key to sns subscription", "date": "2021-09-22 11:56:27+02:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/paperphyte/terraform-drone.git", "commits": [{"id": "79f4b7c2cf3ad2d1a6d2646eaf27a08fd2611d07", "msg": "feat: aws spot fleet for cheap build agents", "date": "2019-02-27 01:23:17+01:00", "modified_files": ["main.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "output.tf", "cloud-config.yml", "spot-fleet.json", "variables.tf", "variables.tf"]}, {"id": "f62bfebb54530c9466cfdb21336794f24bcd63a7", "msg": "feat: optimize cost and upgrade to terraform12\n\n* feat: remove task load balancer\r\n* feat: update dns on task state change\r\n* feat: enable drone built-in autocert for https\r\n* fix: allow less with improved dns policy\r\n* fix: default port for build agent\r\n* feat: convert to terraform12 syntax and functions (#7)", "date": "2019-07-15 17:02:27+02:00", "modified_files": [".gitignore", "README.md", "main.tf", "main.tf", "outputs.tf", "cloud-config.yml", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "event-pattern.json", "update-dns-policy.json", "update-dns.js", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "task-definition.json", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "output.tf", "variables.tf", "outputs.tf", "provider.tf", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/eutambem/eutambem-serverless.git", "commits": [{"id": "43182470f02a463a4b9ee5ed3ec899f5d7de9653", "msg": "descrease max capacity of rds cluster for cost efficiency", "date": "2018-09-26 19:39:34-03:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/federatedcloud/kubernetes-mpi-clusters.git", "commits": [{"id": "332953843d99a6e91dd15bc5444b1d510dbdaed2", "msg": "Added tags for costs and forced naming runs", "date": "2020-08-04 18:45:22+00:00", "modified_files": ["build.sh", "run.sh", "rerun.sh", ".txt", "gke.tf", "providers.tf", "terraform.tfvars", "variables.tf"]}]}, {"name": "https://github.com/lupaos/aws-security-services-with-terraform.git", "commits": [{"id": "c16481a84d5823b65ce96bd811a265222385b43b", "msg": "Reduced preset variables for better cost optimization", "date": "2020-01-22 21:45:52-05:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/mellena1/GKE-Terraform.git", "commits": [{"id": "47e322b4357dfc75cf933c75867b730017a0342f", "msg": "Get rid of cheap pool\n\nf1-micros just can't run k8s, too little resources I guess", "date": "2019-01-02 20:39:26-05:00", "modified_files": ["gke.tf"]}]}, {"name": "https://github.com/openfun/jitsi-meet-torture-rocket.git", "commits": [{"id": "349c94aeffffb4eef513107d281d59ef6dd33962", "msg": ":sparkles:(terraform) possibility to deploy stacks of instances\n\nWe will use small instances because they are cheaper, but we cannot\nsupport too many instances on the same conference. Thus, we have to\nseparate meet-torture instances in stacks.", "date": "2022-03-03 16:06:29+01:00", "modified_files": ["cloud-init.sh", "instance.tf", "variables.tf"]}]}, {"name": "https://github.com/moov-io/infra.git", "commits": [{"id": "b76fe4ef01327e0daf4d5ad8f1de08ba6f8a6505", "msg": "modules: add basic customers, fed, paygate, sftp, and watchman setups", "date": "2020-06-19 13:05:49-05:00", "modified_files": ["deployment.tf", "service.tf", "storage.tf", "variables.tf", "deployment.tf", "service.tf", "variables.tf", "deployment.tf", "secrets.tf", "service.tf", "storage.tf", "variables.tf", "deployment.tf", "service.tf", "variables.tf", "service.tf", "variables.tf", "watchman.tf"]}, {"id": "35aa7249321f688fde094e4cf763f401615852ed", "msg": "modules/paygate: update health checks", "date": "2020-09-29 17:02:22-05:00", "modified_files": ["deployment.tf"]}, {"id": "8e196def982ff6ccb3ec4a794d76e03d3b0d3a08", "msg": "modules/paygate: allow optional sqlite mount, PVC for merging", "date": "2020-10-03 11:58:58-05:00", "modified_files": ["deployment.tf", "storage.tf", "variables.tf"]}, {"id": "e66e4e3ac8c53574428cac1aa7f3fdf05f34282e", "msg": "modules/paygate: mount GOOGLE_APPLICATION_CREDENTIALS as filepath, not file contents", "date": "2021-01-20 15:46:10-06:00", "modified_files": ["deployment.tf", "secrets.tf"]}]}, {"name": "https://github.com/costco-ignw/azure.git", "commits": [{"id": "e409429d951ecbfe9d34063b93d7f97e788a6bf1", "msg": "costco", "date": "2020-11-02 16:13:43-06:00", "modified_files": [".gitignore", "main.tf", "data.tf", "main.tf", "variable.tf", "README.md", "local.tfvars", "azure-pipelines.yml", "main.tf", "network.tf", "providers.tf", "snippets.md", "variables.tf", "virtual.machine.tf"]}, {"id": "c971a9c5c9c4dbcd817c80870c6887eaee000b4f", "msg": "costco", "date": "2020-11-02 16:16:38-06:00", "modified_files": ["providers.tf"]}]}, {"name": "https://github.com/bculberson/btc2snowflake.git", "commits": [{"id": "9f8227bf53ebc2b1bb0b99d0697f9f66eed7ab6d", "msg": "optimize ebs costs", "date": "2021-01-22 10:39:03-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/chadgeary/cloudblock.git", "commits": [{"id": "d07636fefff91101ba40341577070dad799005c9", "msg": "notes about billing maximum and new free-tier VM", "date": "2021-07-20 14:09:35-04:00", "modified_files": ["README.md", "gcp.tfvars"]}]}, {"name": "https://github.com/nomansadiq11/Azure-Kubernetes-Terraform.git", "commits": [{"id": "86b2f7e1813fadfe8f964e68c2d39b42bd1651a4", "msg": "Added payment collection function", "date": "2019-11-10 12:06:45+04:00", "modified_files": ["main.tf"]}, {"id": "609da8e2280249f09df3bf8caf71bd1769afb066", "msg": "new function added for payment response", "date": "2019-11-10 13:28:37+04:00", "modified_files": ["main.tf"]}, {"id": "5583fbf44cdc60a371c756c4aefc43caeb27b6c2", "msg": "created new function called OsnCloudPaymentsExternal", "date": "2019-11-12 13:18:40+04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/mancej/ecs-flapping-container-detector.git", "commits": [{"id": "9f0117663019fd7cf1262a258ec73cece6779553", "msg": "Updating dynamodb table to use pay per request", "date": "2019-07-20 10:09:05-04:00", "modified_files": ["dynamo.tf"]}]}, {"name": "https://github.com/kesavakadiyala/terraform-user.git", "commits": [{"id": "c322fe235371a899bf627173f945969d7d6afdfa", "msg": "Added User, Payment, Cart, Shipping Services", "date": "2022-03-06 13:53:22+05:18", "modified_files": ["Makefile", "dev.tfvars", "prod.tfvars", "main.tf", "provider.tf", "state.tf", "dev.tfvars", "prod.tfvars", "vars.tf"]}]}, {"name": "https://github.com/ministryofjustice/github-collaborators.git", "commits": [{"id": "25b2c4edd7decadf375b18723cb4dd3c71d10e36", "msg": "Delete hmpps-delius-spg-testing-payload-generator.tf", "date": "2021-08-18 09:53:03+01:00", "modified_files": ["hmpps-delius-spg-testing-payload-generator.tf"]}]}, {"name": "https://github.com/Kishorem05/terraform-google-project-factory.git", "commits": [{"id": "39891d950433a683da2c75b4187728f9af1c5441", "msg": "Fix typo, rename billing acount and services variables", "date": "2019-05-15 08:19:09+02:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}, {"id": "6c93392a5ff6bc45a36eba689d44980ce5f0baf8", "msg": "Grant billing user permission during testing", "date": "2019-11-19 00:37:17+00:00", "modified_files": ["iam.tf"]}, {"id": "1b4954a704fc03d5109b5615f7cfef824ff7211a", "msg": "enable google billing budget apis in parent project", "date": "2020-01-06 16:22:29-08:00", "modified_files": ["main.tf"]}, {"id": "f580cae362e7bd01e9b52ff6fb329c19ccebc3da", "msg": "give test user billing admin to billing account to create budgets", "date": "2020-01-07 14:00:42-08:00", "modified_files": ["iam.tf"]}, {"id": "bc9891a7b6f3b576ca7cf7ddeb23022efa000a4c", "msg": "enable pubsub for setup project for billing test", "date": "2020-01-08 12:51:10-08:00", "modified_files": ["main.tf"]}, {"id": "64461a22b225960357ef866bdef8c1d2693733f7", "msg": "fix: billing budget tests (#594)", "date": "2021-06-10 23:40:05-05:00", "modified_files": ["outputs.tf", "budget.rb", "inspec.yml"]}, {"id": "b6d7bf1af2062e557b3fb2c883879554e10d7702", "msg": "fix: billing_budget resource should use GA provider (#626)\n\nCo-authored-by: Morgante Pell <morgantep@google.com>", "date": "2021-10-13 16:17:46-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/HumanCellAtlas/dcp-monitoring.git", "commits": [{"id": "4fd89da7e37ce7f22d920e3584761f702383a8ba", "msg": "Add alert description to alert payload.\n\nThis will enable more informative slack alerts.", "date": "2018-09-06 16:52:44-07:00", "modified_files": ["lambda.tf", "logs.tf", "rds.tf", "analysis.tf", "dcp.tf", "dss.tf", "ingest.tf", "upload.tf"]}]}, {"name": "https://github.com/GlueOps/terraform-gcp-organization-bootstrap.git", "commits": [{"id": "e7001c911d6456c499d6fedd6494d8205e1bb600", "msg": "feat: configuring gcp billing account on project creation", "date": "2022-04-30 18:31:54+00:00", "modified_files": ["projects.tf"]}, {"id": "c299e69aeaf0582ae875f1e197d4c75c7f13a8cb", "msg": "feat: adding cloudbilling.googleapis.com to the list of APIs to activate", "date": "2022-04-30 18:33:58+00:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/hashicorp/learn-nomad-external-alb.git", "commits": [{"id": "8426d0352d8431149b6895c82eb67c563bebd5af", "msg": "Updated example scenario to load balance based on which service is being requested (api or payments) instead of /datacenter.", "date": "2022-02-10 15:05:13-05:00", "modified_files": ["alb.tf", "user-data-client.sh", "nginx.nomad", "webapp.nomad", "terraform.tfvars", "nomad_client.hcl"]}]}, {"name": "https://github.com/openinfrastructure/terraform-google-github-runner.git", "commits": [{"id": "8429375df72b04cc6fedc1ebb5f2c2e4ba18b9f2", "msg": "Add preemptible feature flag, default to true\n\nCreate preemptible instances by default to reduce cost.  The managed\ninstance group will recreate preempted instances.\n\nSee: https://cloud.google.com/compute/docs/instances/preemptible", "date": "2019-10-04 13:56:56-07:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/NDPH-ARTS/mts-trial-deployment-config.git", "commits": [{"id": "0cb5e776b8695da57892560c89010a8abd817afc", "msg": "Include role-service (#39)\n\n* move to app service premuim\r\n\r\n* move the sql serverless to save costs\r\n\r\n* add role-service app\r\n\r\n* add a new trial\r\n\r\n* move to mssql\r\n\r\n* update sql\r\n\r\n* create a tfvars file\r\n\r\n* update ports\r\n\r\n* update\r\n\r\n* update\r\n\r\n* Update terraform/trial_rg/modules/kv/main.tf", "date": "2021-02-08 19:25:15+02:00", "modified_files": ["terraform-plan-apply.yml", "definition.json", "main.tf", "main.tf", "main.tf", "main.tf", "main.tf", "outputs.tf", "main.tf", "outputs.tf", "services.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/sthamma/cloud-foundations.git", "commits": [{"id": "c486bfc66f9814e33b410602cb557a5e4d532912", "msg": "Merge development branch (#44)\n\n* VPN-HA module initial commit\r\n\r\n* Added readme for net-vpn-ha module\r\n\r\n* Update readme, add simple description\r\n\r\n* Merge new modules list and environments foundation example (#30)\r\n\r\n* gke-cluster\r\n\r\n* net-vpc module and tests\r\n\r\n* add TODO to net-vpc module\r\n\r\n* add minimal README files with input/output variables to gke and net-vpc modules\r\n\r\n* BigQuery Module (#24)\r\n\r\n* Bigquery Module\r\n\r\n* Added README file\r\n\r\n* Added type hints\r\n\r\n* gke-cluster\r\n\r\n* net-vpc module and tests\r\n\r\n* add TODO to net-vpc module\r\n\r\n* add minimal README files with input/output variables to gke and net-vpc modules\r\n\r\n* BigQuery Module (#24)\r\n\r\n* Bigquery Module\r\n\r\n* Added README file\r\n\r\n* Added type hints\r\n\r\n* GCS module\r\n\r\n* net vpc module: improve secondary range outputs\r\n\r\n* net vpc module: add serve project registration\r\n\r\n* project module\r\n\r\n* move bigquery module to not-ready folder\r\n\r\n* folders module\r\n\r\n* rename project module's iam variables\r\n\r\n* slight tweak to folder module outputs\r\n\r\n* gcs module\r\n\r\n* simplify net-vpc module variables\r\n\r\n* fix module tests configurations, fix net-vpc module tests\r\n\r\n* add pydoc utility\r\n\r\n* add/update module READMEs\r\n\r\n* add/update module READMEs\r\n\r\n* add/update module READMEs\r\n\r\n* improve variable type summary generation in tfdoc\r\n\r\n* tfdoc: add support for replacing doc in README.md files\r\n\r\n* improve module READMEs\r\n\r\n* net-vpc-firewall module\r\n\r\n* add support for sensitive output attribute in tfdoc\r\n\r\n* remove empty function from tfdoc\r\n\r\n* render variable type as code in tfdoc\r\n\r\n* update module READMEs\r\n\r\n* net address module\r\n\r\n* net cloudnat module\r\n\r\n* remove redundant variable from net-cloudnat module\r\n\r\n* vpc module: add support for peering, use network name as subnet name prefix\r\n\r\n* net-vpn-static module\r\n\r\n* net-vpn-static module README\r\n\r\n* net-vpn-static module README\r\n\r\n* tfdoc: fix error on undeclared variable type\r\n\r\n* dns module\r\n\r\n* set version for all modules\r\n\r\n* kms module (untested)\r\n\r\n* change kms key self links output to map, fix gcs and kms iam variable descriptions\r\n\r\n* fix kms module\r\n\r\n* update kms module readme\r\n\r\n* simplify local iam pairs in modules\r\n\r\n* service accounts module (unfinished)\r\n\r\n* work on service accounts module\r\n\r\n* project module: add gcr service account\r\n\r\n* project module: update outputs in README\r\n\r\n* first working version of the iam service accounts module\r\n\r\n* iam service accounts module: extra checks in locals\r\n\r\n* modules/net-cloudnat: reorder variables\r\n\r\n* modules/net-vpn-dynamic: initial import (untested)\r\n\r\n* modules/net-vpn-dynamic: first working version\r\n\r\n* modules/net-vpn-dynamic: add outputs for auto-created router\r\n\r\n* modules/net-vpn-dynamic: update README\r\n\r\n* modules/net-[vpn,cloudnat]: clean up variable,s remove prefix\r\n\r\n* modules/net-vpn-dynamic: add advertisement configuration to tunnel bgp peer, refactor variables\r\n\r\n* tfdoc: add tooltips for variable types and defaults\r\n\r\n* modules: update README variables and outputs\r\n\r\n* tfdoc: improve variable default rendering\r\n\r\n* modules: update README variables and outputs\r\n\r\n* modules/net-vpc: minimal output refactoring\r\n\r\n* modules/vm-cos: initial import, base resources working, no outputs\r\n\r\n* modules/vm-cos: add variable descriptions\r\n\r\n* tfdoc: fix parsing in type and default blocks\r\n\r\n* modules/vm-cos: fix README\r\n\r\n* tfdoc: fix parsing in type and default blocks\r\n\r\n* modules/vm-cos: fix README\r\n\r\n* modules/compute-vm: initial working import (not fully tested)\r\n\r\n* modules/vm-cos: move to not-ready\r\n\r\n* tfdoc: fix variable defaults formatting\r\n\r\n* modules: update README files with tfdoc fixes\r\n\r\n* modules: add initial examples\r\n\r\n* gke-nodepool: initial import, untested\r\n\r\n* gke nodepool: add README, fix location variable, set node count default to 1\r\n\r\n* gke cluster: fix private cluster variables\r\n\r\n* gke nodepool: fix README title\r\n\r\n* gke cluster: add output for cluster location\r\n\r\n* gke nodepool: add missing variables for project id and cluster name, remove default from location variable, fix gke version assignment\r\n\r\n* gke nodepool: update README\r\n\r\n* net-cloudnat: fix router name when creating default router\r\n\r\n* fix variables used for address and router optional creation\r\n\r\n* vpn dynamic: fix README\r\n\r\n* modules/net-vpn-dynamic: fix router name output\r\n\r\n* modules/compute-vm: remove unused variable\r\n\r\n* modules/compute-vm-cos-coredns: initial import\r\n\r\n* Update foundations modules versions (#26)\r\n\r\n* update foundations modules versions\r\n\r\n* update Terraform version to v0.12.19 in CI test configuration\r\n\r\n* backport tfdoc from Ludo's branch (#27)\r\n\r\n* Update docs using tfdoc format (#28)\r\n\r\n* update README files\r\n\r\n* set all types on variables\r\n\r\n* foundations/environments: move log filter to a variable, use org for xpn by default\r\n\r\n* foundations/environments: do not use liens by default\r\n\r\n* modules/ntp-vpc: better shared_vpc_host variable description\r\n\r\n* modules/logging-sinks: initial version\r\n\r\n* modules/logging-sinks: streamline options in sinks variable\r\n\r\n* modules/compute-vm-cos-coredns: add support for additional files\r\n\r\n* modules/folders: rename from 'folder'\r\n\r\n* modules/logging-sinks: fix circular dependencies and improve variables\r\n\r\n* modules/project: remove extra variable\r\n\r\n* modules/bigquery: new module with dataset support only\r\n\r\n* foundations/environments: refactor using local modules\r\n\r\n* modules/bigquery: better variables, README description and example\r\n\r\n* modules: fix a few READMEs\r\n\r\nCo-authored-by: Julio Castillo <juliocc@gmail.com>\r\n\r\n* modules/net-vpc: README description and examples\r\n\r\n* modules/net-vpc: tweak README description and examples\r\n\r\n* modules/net-vpc: tweak README description and examples\r\n\r\n* modules/net-vpc-firewall: change tag-based rule default ranges, improve README examples and description\r\n\r\n* modules/compute-vm: README changes\r\n\r\n* modules/compute-vm: use an object for the service account variable, update README\r\n\r\n* modules/compute-vm: update README variables table\r\n\r\n* modules/compute-vm: add TODO list to README\r\n\r\n* modules/compute-vm: add TODO list to README\r\n\r\n* modules/compute-vm: add outputs for service account\r\n\r\n* modules/net-cloudnat: README\r\n\r\n* modules/net-cloudnat: README\r\n\r\n* modules/net-cloudnat: add router_create variable\r\n\r\n* modules/compute-vm: simplify service account variables\r\n\r\n* modules/net-vpn-dynamic: fix README example, use local secret for both empty string and null\r\n\r\n* modules/net-vpn-dynamic: improve README example\r\n\r\n* modules/gke-cluster: minimal README tweaks\r\n\r\n* modules/kms: fix ephemeral keys resource name\r\n\r\n* modules/iam-service-accounts: add storage roles\r\n\r\n* modules/gke-nodepool: fix node default scopes\r\n\r\n* New project variable to prevent deletion of default network (#32)\r\n\r\n* New project variable to prevent deletion of default network\r\n\r\nThis is a workaround to fix\r\nterraform-google-modules/cloud-foundation-fabric#31 while the GCP\r\nterraform provider is fixed\r\n\r\n* Add TODOs to remove workarounds in the project module\r\n\r\n* Fix Cloud Build files\r\n\r\n* modules/gke-nodepool: add monitoring scope to defaults\r\n\r\n* modules/iam-service-accounts: add support for IAM bindings onthe service accounts\r\n\r\n* playground module in sandbox, remove not ready modules\r\n\r\n* Fix ci configurations in development branch (#33)\r\n\r\n* try fixing ci confgurations\r\n\r\n* add exclusion match to ci boilerplate check\r\n\r\n* add skip boilerplate comment to compute-vm-cos-coredns template fragment\r\n\r\n* modules/gke-cluster: fix boilerplate in outputs\r\n\r\n* Simplify tests, re-enable CI\r\n\r\n* add instance group support to compute-vm, start tests refactoring\r\n\r\n* modules/compute-vm: group fixes, tests\r\n\r\n* modules/compute-vm: minimal test beautification\r\n\r\n* simplify top-level pytest fixture\r\n\r\n* modules/dns: tests and minor tweaks\r\n\r\n* fix missing boilerplate in tests\r\n\r\n* re-add requirements file to tests folder\r\n\r\n* re-enable tests in ci build configuration\r\n\r\n* Folder module tests and fixes (#38)\r\n\r\n* folder tests wip\r\n\r\n* modules/folders: tests and tweaks\r\n\r\n* update folders and compute-vm README files\r\n\r\n* modules/gcs: tests and minor tweaks\r\n\r\n* Create README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Added docker image for strongSwan\r\n\r\n* Add support for routes and tests to net-vpc module (#39)\r\n\r\n* modules/net-vpc: add routes (untested)\r\n\r\n* initial tests\r\n\r\n* modules/net-vpc: add test for flow logs\r\n\r\n* modules/net-vpc: split tests into two separate files\r\n\r\n* modules/net-vpc: routes test\r\n\r\n* modules/net-vpc: test routes\r\n\r\n* Add support for Terraform plugin cache in ci test build file (#40)\r\n\r\n* add Terraform plugin caching to test ci build configuration\r\n\r\n* fix mkdir in test build configuration\r\n\r\n* trigger test check\r\n\r\n* Refactor dynamic vpn configuration for on-prem-in-a-box module\r\n\r\n* Fix dynamic vpn for onprem-in-a-box module\r\n\r\n* Migrate Shared VPC example to local modules (#41)\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* validated, untested\r\n\r\n* modules/compute-vm: make service account email in locals resilient to destroy\r\n\r\n* modules/project: make project id output depend on iam roles\r\n\r\n* fixes\r\n\r\n* shared-vpc tweaks\r\n\r\n* update diagram\r\n\r\n* update README input output tables\r\n\r\n* modules/compute-vm: add service account IAM email output\r\n\r\n* move GKE service account roles at the project level, add GCE service account roles\r\n\r\n* update diagram and README\r\n\r\n* modules/project: add extra output for IAM-dependent project id\r\n\r\n* update modules READMEs\r\n\r\n* minor tweaks\r\n\r\n* modules/compute-vm: fix service account output\r\n\r\n* remove static address from NAT\r\n\r\n* fix container service agent binding dependency\r\n\r\n* rename shared vpc\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Add static vpn gw to on-prem-in-a-box module\r\n\r\n* Refactor hub and spoke to use new modules (#42)\r\n\r\n* modules/compute-vm: saner defaults for service account scopes\r\n\r\n* hub and spoke refactor, docs still missing\r\n\r\n* complete hub and spoke\r\n\r\n* Update README.md\r\n\r\n* Add toolbox docker container, fix gw routing to the internet\r\n\r\n* Add DNS Hybrid connectivity parameters\r\n\r\n* Fix onprem dns zone for the static vpn configuration\r\n\r\n* Added readme.md for on-prem module\r\n\r\n* Add new line at the end of the files\r\n\r\n* Add boilerplate for cloudbuild config files\r\n\r\n* fix boilerplate in strongswan shell script\r\n\r\n* Update README.md\r\n\r\n* include missing file to fix merge conflict\r\n\r\n* remove missing file to fix merge conflict\r\n\r\n* include missing file to fix merge conflict (again)\r\n\r\n* remove content from spurious file used to avoid merge conflicts\r\n\r\n* Add net-vpc-peering module\r\n\r\n* Initial commit for hub-and-spoke-peering infrastructure example\r\n\r\n* Fix typos in infrastructure/ READMEs\r\n\r\n* remove stale file\r\n\r\n* use larger resolution version of hub and spoke diagram\r\n\r\n* Update README.md\r\n\r\n* Update hub-and-spoke-peerings example to use internal modules\r\n\r\n* Add initial project tests (#46)\r\n\r\n* modules/project: make prefix optional\r\n\r\n* initial project module tests\r\n\r\n* modules/project: use null for unset parent\r\n\r\n* modules/dns: backport PR6 from the CFT dns module\r\n\r\n* Add testing resources including on-prem-in-a-box to hub-and-spoke-peerings example\r\n\r\n* Fix firewall rules to allow connectivity, switch to custom route advertisement for onprem -> spokes connectivity\r\n\r\n* Move locals out of main.tf\r\n\r\n* remove ssh tag from compute-vm variable default\r\n\r\n* Add ssh tag to the test vms\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Hub and spoke peering changes (#48)\r\n\r\n* rename hub-and-spoke-vpn\r\n\r\n* add ssh tag to shared-vpc-gke instance\r\n\r\n* rename and rework hub and spoke peering\r\n\r\n* fix test requirements\r\n\r\n* align hub and spoke peering with module contents\r\n\r\n* diagram\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* minimal fixes to onprem examples variable files\r\n\r\n* onprem example stub, missing DNS zones and private.googleapis records onprem\r\n\r\n* add missing boilerplate\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* infra/onprem: add test instance and minimal outputs\r\n\r\n* add DNS modules and resource\r\n\r\n* infra/onprem: diagram and initial README\r\n\r\n* minor changes to onprem module and example (#49)\r\n\r\n* update toolbox image\r\n\r\n* infra/onprem: add zone for private access, add metadata domain to onprem dns\r\n\r\n* infra/onprem: onnprem service account, add testing procedure in README\r\n\r\n* Update README.md\r\n\r\n* infra/onprem: remove extra variable\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* infra/onprem: rename forwarder address variable\r\n\r\n* Update README:\r\n\r\nAdded explicit --tunnel-through-iap for gcloud compute ssh commands\r\n\r\n* Update top-level and section READMEs (#50)\r\n\r\n* top-level README WIP\r\n\r\n* rewrite top-level README\r\n\r\n* change top-level README title\r\n\r\n* remove initial quote in top-level README\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* foundations README\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* add experimental scheduled cloud function module\r\n\r\n* scheduled cloud function module: allow disabling schedule\r\n\r\n* business-units foundation example (#52)\r\n\r\n* Added folder-units module.\r\n\r\n* Business units example update (WIP)\r\n\r\n* Update all BU modules to internal ones\r\n\r\n* Refactoring business-units example, add billing and org IAM handling\r\n\r\n* update projects tests for new iam additive naming\r\n\r\n* update project README for new iam additive naming\r\n\r\n* streamline bu example and module (#53)\r\n\r\nCo-authored-by: Ludovico Magnocavallo <ludomagno@google.com>\r\n\r\n* align net-vpn-ha interface with the other vpn modules\r\n\r\n* update module README files\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Create CHANGELOG.md\r\n\r\n* Refactor COS module to be generic (#51)\r\n\r\n* Create generic COS module and update CoreDNS module to use it\r\n\r\n* Update compute-vm-cos README\r\n\r\n* Fix COS README\r\n\r\n* Update COS example\r\n\r\n* Skip boilerplate check for COS file template\r\n\r\n* Make COS module more generic and provide preset configurations\r\n\r\n* Update COS module documentation\r\n\r\n* tfdoc: add support for multiple variables files\r\n\r\n* compute-vm: split boot disk in separate variable file for cos module support\r\n\r\n* Streamline cos modules (#54)\r\n\r\n* tfdoc: fix bug in last commit\r\n\r\n* compute-vm: add support for user-data\r\n\r\n* compute-vm: restore noncos variable split\r\n\r\n* remove compute-vm-cos-coredns\r\n\r\n* compute-vm: revert to original state\r\n\r\n* cos-container/coredns\r\n\r\n* fix variables mess\r\n\r\n* cos/coredns fixes\r\n\r\n* cos/mysql\r\n\r\n* remove stale compute-vm-cos module\r\n\r\n* add test instance to cos modules\r\n\r\n* tfdoc: add support for multiple output files\r\n\r\n* cos: add initial READMEs\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* add test apply fixture\r\n\r\n* cos-coredns: tested\r\n\r\n* Update README.md\r\n\r\n* Fix typo\r\n\r\n* cos-coredns: refactor README\r\n\r\n* Update README.md\r\n\r\n* test yaml validity in cos modules tests\r\n\r\n* cos mysql tests\r\n\r\n* cos mysql: refactor and test (disk tests missing)\r\n\r\n* onprem: fix Coredns\r\n\r\n* cos mysql: additional disk working\r\n\r\n* cos modules: fix instance disks for no instance\r\n\r\n* update some modules READMEs\r\n\r\n* update some modules READMEs\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* add simple tests for foundations/environments\r\n\r\n* change default for org id in foundations/environments to avoid errors when none is specified\r\n\r\n* fix null/empty organization id in foundations/environments\r\n\r\n* fix errors when destroying on empty state in foundations/environments\r\n\r\n* fundations/bu: fix errors when destroying with empty state\r\n\r\n* modules/gcs: make outputs resilient on destroy with empty state\r\n\r\n* modules/folders: make outputs resilient on destroy with empty state\r\n\r\n* switch organization_id variable to long form in foundations/bu and modules/folders-unit\r\n\r\n* Update README.md\r\n\r\n* infra/shared-vpc: remove duplicate tag attribute from bastion\r\n\r\nCo-authored-by: Aleksandr Averbukh <averbukh@google.com>\r\nCo-authored-by: Julio Castillo <juliocc@gmail.com>\r\nCo-authored-by: Julio Castillo <jccb@google.com>", "date": "2020-04-03 14:06:48+02:00", "modified_files": [".terraformrc", "cloudbuild.lint.yaml", "cloudbuild.test.yaml", "check_boilerplate.py", "CHANGELOG.md", "README.md", "Dockerfile", "README.md", "cloudbuild.yaml", "entrypoint.sh", "ipsec-vti.sh", "Dockerfile", "README.md", "cloudbuild.yaml", "entrypoint.sh", "README.md", "README.md", "backend.tf.sample", "main.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "outputs.tf", "providers.tf", "terraform.tfvars.sample", "variables.tf", "versions.tf", "README.md", "locals.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "README.md", "backend.tf.sample", "diagram.png", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "backend.tf.sample", "diagram.png", "main.tf", "outputs.tf", "provider.tf", "variables.tf", "README.md", "diagram.png", "main.tf", "outputs.tf", "terraform.tfvars.sample", "test-resources.tf", "variables.tf", "README.md", "Corefile", "diagram.png", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "backend.tf.sample", "diagram.gcpdraw", "diagram.png", "main.tf", "outputs.tf", "variables.tf", "versions.tf", ".terraform.tfstate.lock.info", "README.md", "diagram.png", "locals.tf", "main.tf", "outputs.tf", "test-resources.tf", "variables.tf", "README.md", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "instance_group.tf", "main.tf", "outputs.tf", "variables.tf", ".gitignore", "README.md", "Corefile", "Corefile-hosts", "README.md", "cloud-config.yaml", "instance.tf", "main.tf", "outputs-instance.tf", "outputs.tf", "variables-instance.tf", "variables.tf", "instance.tf", ".gitignore", "README.md", "cloud-config.yaml", "instance.tf", "main.tf", "outputs-instance.tf", "outputs.tf", "variables-instance.tf", "variables.tf", "outputs-instance.tf", "variables-instance.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "locals.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "Corefile", "dynamic-vpn-gw-cloud-init.yaml", "static-vpn-gw-cloud-init.yaml", "main.tf", "outputs.tf", "variables.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "__init__.py", "conftest.py", "__init__.py", "terraform.tfvars", "test_folders.py", "test_outputs.py", "test_projects.py", "test_service_accounts.py", "__init__.py", "conftest.py", "main.tf", "variables.tf", "terraform.tfvars", "test_outputs.py", "test_plan.py", "test_projects.py", "test_service_accounts.py", "terraform.tfvars", "test_cloud_routers.py", "test_firewall.py", "test_outputs.py", "test_vpns.py", "conftest.py", "terraform.tfvars", "test_outputs.py", "test_svpc_resources.py", "__init__.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "test_plan_group.py", "__init__.py", "main.tf", "outputs.tf", "variables.tf", "test_apply.py", "__init__.py", "main.tf", "outputs.tf", "variables.tf", "test_apply.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "test_plan_subnets.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "requirements.txt", "tfdoc.py"]}, {"id": "036b9ea95085163313f70cefbaf85e4e07a7543c", "msg": "Obey var.iam_billing_config.grant (#113)\n\n* Update main.tf\r\n\r\n* Update main.tf", "date": "2020-07-15 13:18:42+02:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/picatz/terraform-google-nomad.git", "commits": [{"id": "3c48151cd75447f7fbd3e6ce14c491cd28e2442c", "msg": "Bump client machine type\n\nMight change back to the cheaper one by default, but having more power for clients out-of-the-box has been preferable in my situation.", "date": "2021-03-25 11:47:50-04:00", "modified_files": ["vars.tf"]}]}, {"name": "https://github.com/mozilla-platform-ops/relops_infra_as_code.git", "commits": [{"id": "0f6a4039002ea6a67dc2de82d591e4d18b0f2427", "msg": "[vault] change dynamodb to pay-as-you-go throughput", "date": "2019-05-28 23:08:14-07:00", "modified_files": ["dynamodb.tf"]}]}, {"name": "https://github.com/y-miyazaki/terraform-aws-base.git", "commits": [{"id": "a8b148a047fded0b3bda2ed4f7f8ac647743ba10", "msg": "fixed cost budgets bug.", "date": "2021-05-07 10:29:27+00:00", "modified_files": ["README-jp.md", "README.md", "main.tf", "variables.tf", "cloudwatch_event_budgets_to_slack.zip", "terraform.example.tfvars"]}]}, {"name": "https://github.com/damianr78/terraform-aws-lambda.git", "commits": [{"id": "5d8599b774b257705269bfc50e77db7f7451b9c5", "msg": "Add support for lambda layers (#39)\n\n* Add support for lambda layers\r\n\r\n* Add support for lambda layers\r\n\r\nCo-authored-by: Juan Pablo Dacosta <juanpablodacosta@WKSAR444L.local>", "date": "2020-09-04 16:17:18-03:00", "modified_files": ["CHANGELOG.md", "README.md", "main.tf", "variables.tf"]}, {"id": "eeee3b31511882ba4bc863305d41c610a7c25df1", "msg": "Disable vpc default (#40)\n\n* Modify Lambda Module\r\n\r\n- Add Input dynamodb_trigger_batch_size\r\n- Security Group Ids and Subnet Ids are optionals\r\n\r\n* add github actions for terraform modules\r\n\r\n\r\n* terraform-docs: automated action\r\n\r\nCo-authored-by: Juan Pablo Dacosta <juanpablodacosta@WKSAR444L.local>\r\nCo-authored-by: juampydacosta <juampydacosta@users.noreply.github.com>", "date": "2020-09-14 13:43:11-03:00", "modified_files": ["terraform_modules_check.yaml", "CHANGELOG.md", "README.md", "USAGE.md", "main.tf", "variables.tf"]}, {"id": "b85449288543b07bbb3304b2a49ab047b0c4cb4c", "msg": "delete versions file and fix readme (#60)\n\n* delete versions file and fix readme\r\n\r\n* terraform-docs: automated action\r\n\r\n* delete versions file and fix readme\r\n\r\n* delete versions file and fix readme\r\n\r\n* delete versions file and fix readme\r\n\r\nCo-authored-by: juampydacosta <juampydacosta@users.noreply.github.com>", "date": "2021-07-01 10:12:35-03:00", "modified_files": ["README.md", "USAGE.md", "main.tf", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/seiji/terraform-aws-modules.git", "commits": [{"id": "856878b48250d2e5e09d210e237a84d5d26661bf", "msg": "Add budgets-cost", "date": "2019-11-16 11:57:42+09:00", "modified_files": ["main.tf", "variables.tf", "main.tf"]}, {"id": "40ae3b4a56efad95392b50a8a1bf625a5a229f65", "msg": "Add budgets-cost", "date": "2019-11-16 14:03:33+09:00", "modified_files": ["main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf"]}, {"id": "21e5799024484dd2c8eaec542c07ec66431159df", "msg": "Add budget-cost", "date": "2020-10-24 19:09:19+09:00", "modified_files": ["main.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf"]}]}, {"name": "https://github.com/bkottarathil/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/SrividhyaVaradhan/tf12.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/terraform-google-modules/terraform-example-foundation.git", "commits": [{"id": "735837b7e959cc33f35a7d1b3ac25ffb5202a5e5", "msg": "fix: add biling account viewer permissions to billing-data-users group (#105)", "date": "2020-07-23 03:19:52-03:00", "modified_files": ["iam.tf"]}, {"id": "6c13d3383700fddfa8ef4dd35e6fa66d3b449431", "msg": "add billing.admin role to terraform SA and remove budget from projects in 0-bootstrap. (#205)", "date": "2020-08-05 15:59:04-03:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}, {"id": "a18b2036531d9529778d6a0e6b6c9583a0ec76a2", "msg": "feat: Add permissions for SFB recommended groups (#446)\n\n* Added group and firecall permissions\r\n\r\naccording to SFB on orgnization level.\r\n\r\n* 1-org README.md updated with new variables\r\n\r\n* Corrected permissions for firewall billing admin user\r\n\r\n* Corrected permissions for firewall billing admin user\r\n\r\n* Variable description and comments updates\r\n\r\n* Added group and firecall permissions\r\n\r\naccording to SFB on orgnization level.\r\n\r\n* 1-org README.md updated with new variables\r\n\r\n* Corrected permissions for firewall billing admin user\r\n\r\n* Corrected permissions for firewall billing admin user\r\n\r\n* Variable description and comments updates", "date": "2021-07-14 16:29:41+02:00", "modified_files": ["README.md", "iam.tf", "variables.tf"]}, {"id": "8391f1bd4322fec04fda7509b537c5f66cddbbd9", "msg": "fix: data_access_logs_enabled now enables read and write audit logs, defaults to false for cost savings (#630)\n\n* Comment enabling Read and Write\r\n\r\n* Fix code review issues\r\n\r\n* Fix code review issues\r\n\r\n* Changes default value to false\r\n\r\n* Fix build error\r\n\r\n* Fix dynamic code", "date": "2022-02-09 04:00:09-03:00", "modified_files": ["README.md", "iam.tf", "variables.tf"]}]}, {"name": "https://github.com/DaveButland/sans-terraform.git", "commits": [{"id": "ecb072a77c1c0d4837f9d10d2976ec8b9ee4f33c", "msg": "Fixed lambda payload name issue", "date": "2019-07-06 16:03:23+01:00", "modified_files": ["lambda.tf"]}]}, {"name": "https://github.com/ministryofjustice/opg-infra-costs-action.git", "commits": [{"id": "892f17b79fade1cf760ee45719a7f9a1c449fd65", "msg": "create a lambda function to ship to costs", "date": "2022-01-28 16:27:00+00:00", "modified_files": ["costs-to-queue.tf"]}]}, {"name": "https://github.com/asbubam/2dal-infrastructure.git", "commits": [{"id": "430fe7aacd5d72a820264baf8cb3bb837f1728d4", "msg": "Add cheap_vpc for personal account", "date": "2018-12-31 23:18:04+09:00", "modified_files": ["dev_vpc.tf", "variables.tf", ".main.tf.swp", "README.md", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "29a1e1af2804caafbfc21195c6adfcdb0d7064ad", "msg": "Use github address for cheap_vpc module", "date": "2018-12-31 23:23:53+09:00", "modified_files": ["dev_vpc.tf"]}, {"id": "434c00ba51c061bb41bc5a80c80964cfc77afcfb", "msg": "Rename bastion variables in cheap_vpc module", "date": "2019-01-01 01:05:02+09:00", "modified_files": ["dev_vpc.tf", "variables.tf", ".main.tf.swp", "README.md", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "975c915a83b808fa22ad81d9983195860e011a45", "msg": "Add instance profile variable to cheap_vpc module", "date": "2019-04-24 19:25:47+09:00", "modified_files": ["dev_vpc.tf", "variables.tf", "README.md", "main.tf", "variables.tf"]}, {"id": "88002fc9819744f8579eaf57756e19f19a837f1d", "msg": "Add public, private subnet tags to cheap vpc module", "date": "2019-04-24 19:41:24+09:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/filhodanuvem/from-dev-to-ops.git", "commits": [{"id": "998be8119321e8812884075b078a1d5fb36cfa69", "msg": "Use EC2 spot instances to reduce cost", "date": "2021-12-04 10:12:57+00:00", "modified_files": ["eks.tf"]}]}, {"name": "https://github.com/liamstevens/gcp-pca-prep.git", "commits": [{"id": "78f6930b0c6d672619c3d566adae106a6d6f38c9", "msg": "fix project config for billing", "date": "2022-01-02 13:52:04+11:00", "modified_files": ["projects.tf"]}]}, {"name": "https://github.com/octodemo/advanced-security-terraform.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/h0ngcha0/bitcoin-gcp-k8s.git", "commits": [{"id": "b8f36b8aae50750443324e5a614725e322db7bc6", "msg": "update lower cost machine type", "date": "2020-12-12 23:57:22+01:00", "modified_files": [".gitignore", "README.md", "bitcoind-deployment.tf", "default.tf", "kubernetes.tf", "variables.tf"]}]}, {"name": "https://github.com/sivaganesan23/EKS-Terraform.git", "commits": [{"id": "c82a19d98673c1aeeb1fa26afb983acbfbea272f", "msg": "Add ec2 cost optimination using tags", "date": "2018-10-31 11:55:59+05:18", "modified_files": ["lambda.js", "main.tf", "variables.tf"]}, {"id": "5f0c515e6b145f244be7ef2492d9a700de5743e8", "msg": "Refactored ec2-cost-optimization-using-tags lambda", "date": "2018-11-16 18:56:15+05:18", "modified_files": ["lambda.js", "main.tf", "variables.tf"]}, {"id": "65f7112ea071383a397ab3bd34491c35d9265dd9", "msg": "Refactored config-rules and changed ec2-cost-optimization-using-tags to ec2-tags-checker", "date": "2018-11-20 12:48:58+05:18", "modified_files": ["instance_tags.js", "lambda.tf", "security_groups.js", "utills.js", "variables.tf", "lambda.js", "lambda.js", "utils.js", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/UKHomeOffice/dq-tf-infra.git", "commits": [{"id": "98f0588a35955f825ff0ad75401df108973327ac", "msg": "add pwd payload data resource", "date": "2018-01-04 16:05:55+00:00", "modified_files": ["data.tf"]}]}, {"name": "https://github.com/dhoppeIT/terraform-tfe-organization.git", "commits": [{"id": "be76f29b1cb1d655c4148471d7bb14ed11c58905", "msg": "fix: Change default value / type for some variables (#23)\n\n* fix: Change type of variable cost_estimation_enabled\r\n\r\n* fix: Change default value of the following variables\r\n* session_timeout_minutes\r\n* session_remember_minutes\r\n* collaborator_auth_policy\r\n\r\n* docs: Generate README.md\r\n\r\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>", "date": "2022-02-02 10:16:25+01:00", "modified_files": ["README.md", "variables.tf"]}]}, {"name": "https://github.com/F-Boujmai/network_tutorials.git", "commits": [{"id": "75f6428388a46f3c14595f6ffdf6ecb5edac70dd", "msg": "gcp before billing", "date": "2021-08-11 15:29:52+02:00", "modified_files": [".terraform.lock.hcl", "main.tf"]}]}, {"name": "https://github.com/GoogleCloudPlatform/pbmm-on-gcp-onboarding.git", "commits": [{"id": "da2470b0e4f3dc4bba1cce82c5fa7ce053033bfe", "msg": "#41 - automate billing/org/folder id write/unwrite", "date": "2022-04-04 12:21:54-04:00", "modified_files": ["bootstrap.auto.tfvars", "organization-config.auto.tfvars", "common.auto.tfvars", "nonp-network.auto.tfvars", "perimeter-network.auto.tfvars", "prod-network.auto.tfvars"]}]}, {"name": "https://github.com/lejmr/docs-transit-network-in-a-cloud.git", "commits": [{"id": "a8a00264d750771ca319d0d57452b55425116030", "msg": "Code cleanup for calculating cost per 10GB", "date": "2020-05-14 09:58:40+02:00", "modified_files": ["default.auto.tfvars", "ec2.tf", "peering.tf", "variables.tf", "vpc.tf", "ec2.tf", "peering.tf", "vpc.tf", "default.auto.tfvars", "ec2.tf", "tgw.tf", "variables.tf", "vpc.tf", "ec2.tf", "tgw.tf", "vpc.tf"]}]}, {"name": "https://github.com/andreishappy/clouduru-infra.git", "commits": [{"id": "991915ce492e074d8df658aa54c902b52f9c4cc5", "msg": "Fargate cluster (commented out to avoid costs)", "date": "2021-05-18 13:13:09+01:00", "modified_files": ["main.tf", "ecr-access-policy.json", "ecr-lifecycle-policy.json", "main.tf", "task-definition.json"]}]}, {"name": "https://github.com/atilaromero/personal-calendar-aws.git", "commits": [{"id": "1d6d87557b037dd66d9e4fc4637740f4e593dc48", "msg": "WIP zero cost", "date": "2021-02-03 21:06:54-03:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/UKHomeOffice/dq-tf-apps.git", "commits": [{"id": "ae493017f0056db3489c4736591efe09b09cc288", "msg": "Db name now passed in lambda payload; added fms address", "date": "2019-04-08 17:49:51+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/andyfangdz/aws-crawler.git", "commits": [{"id": "7f2ffcc3cbb8538f82cb14377edb08b49105baf7", "msg": "did you know dynamo read capacity is really expensive", "date": "2018-02-01 05:37:51-05:00", "modified_files": [".gitignore", "settings.json", "dynamo.tf", "lambda.tf", "sns.tf", "indexer.py"]}]}, {"name": "https://github.com/mudathirlawal/azure-terraform-packer-iac.git", "commits": [{"id": "587d3a91c12aae8f0dd4b34a46d03f919ea385c6", "msg": "\"feat: Remove update domain options\"\n\nRemove fault domain count as well as\nupdate domain count options from scale\n(availability) set. This keeps both the\nfault domains and update domains at five\neach. This is necessary since we are try-\ning  to minimize cost.", "date": "2021-01-21 23:39:10+01:00", "modified_files": ["main.tf", "vars.tf"]}]}, {"name": "https://github.com/gforinger/terraform-random.git", "commits": [{"id": "4adcfda95b1d033b4e717d595aa30f8963b41b02", "msg": "Payload1", "date": "2019-07-09 09:27:04-07:00", "modified_files": ["main.tf"]}, {"id": "046fc0a66c6e241ce0fb371a77978cb7a72e5bbd", "msg": "payload2", "date": "2019-07-09 09:28:58-07:00", "modified_files": ["main.tf"]}, {"id": "43768a057f36268a16837cc4c5bc839309ff00b2", "msg": "payload2", "date": "2019-07-09 09:33:41-07:00", "modified_files": ["main.tf"]}, {"id": "ad346597f7993d55f45b09418104e685870e48e0", "msg": "payload 3", "date": "2019-07-09 11:11:23-07:00", "modified_files": ["variables.tf"]}, {"id": "4c73982fa35f3416f78bf2bd62961c4816b6d57d", "msg": "payload4", "date": "2019-07-09 11:14:43-07:00", "modified_files": ["main.tf"]}, {"id": "b931f269303a64d3fa78daa6ec5dc916e33fc9b2", "msg": "payload5", "date": "2019-07-09 11:22:30-07:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/mambotangu/my-foundation.git", "commits": [{"id": "329a935f6d9f7b2917213a76a1277c6969df67e4", "msg": "mothballing billing atm", "date": "2021-10-28 13:24:56-04:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "28cb59105b516edc3bafa20e2f429a88594f7a17", "msg": "Modularize the billing export", "date": "2021-10-28 19:03:59-07:00", "modified_files": ["main.tf"]}, {"id": "213de9f7494f2cd4c37f95974231320bdce1dc87", "msg": "add billing export variables", "date": "2021-10-28 19:04:07-07:00", "modified_files": ["variables.tf"]}, {"id": "ccd76152996d46c2f4feafcf2abec29384446f8f", "msg": "Added billing alertd to shared tier.", "date": "2021-11-15 10:39:51-05:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/ntk1000/aws-terraform-template.git", "commits": [{"id": "d016b96d89370b8039817fabdfa055576cf6b4cc", "msg": "billing alert", "date": "2016-11-19 00:24:18+09:00", "modified_files": ["main.tf", "variables.tf", "cloudwatch.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/bishoybassem/aws-jenkins.git", "commits": [{"id": "3f27fe4cb4b75bffb7c1cf754f3f22a61cad9bfd", "msg": "Use the same AZ for the subnets to avoid regional data transfer costs", "date": "2019-03-08 10:39:54+01:00", "modified_files": ["1_network.tf", "2_master.tf", "3_slaves.tf"]}]}, {"name": "https://github.com/Azure-Terraform/terraform-azurerm-metadata.git", "commits": [{"id": "cf36a872cba80135d02ec8be64154da86c27d8c4", "msg": "Cost Center updated to value not descriptive name e.g aa101", "date": "2020-05-22 11:01:45+01:00", "modified_files": ["main.tf"]}, {"id": "1a2a52290aea26369f831aabf9ba97e8bfbf71d3", "msg": "Remove cost center tag  (#2)\n\n* Removed cost_center tag\r\n\r\n* terraform-docs: automated action\r\n\r\nCo-authored-by: hiscjo01 <hiscjo01@users.noreply.github.com>", "date": "2020-06-15 13:28:53+01:00", "modified_files": ["README.md", "data_sources.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/galvezlj/cloudposse-terraform-aws-dynamodb.git", "commits": [{"id": "545115800c52b8b038eb461448c5d6f8964a3bbc", "msg": "add billing_mode support (#31)", "date": "2019-04-04 12:25:56-04:00", "modified_files": ["README.md", "terraform.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/TonyMarfil/f5agility2020-pc201.git", "commits": [{"id": "52028cc81e017bc407fff7a97bd98d76813346cb", "msg": "Updated ami to Advanced WAF Plus 16.0.1.1\n\n\"ami-00cf39e517abf14a6\"\r\n\"F5 BIGIP-16.0.1.1-0.0.6 PAYG-Adv WAF Plus 25Mbps-210129034806-3c272b55-0405-4478-a772-d0402ccf13f9-ami-0b5e58d5bca2c99a1.4\"", "date": "2021-03-15 17:19:13-04:00", "modified_files": ["lab2-bigips.tf"]}]}, {"name": "https://github.com/testtf01/tf.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/brodiemackenzie/secure-bqdw.git", "commits": [{"id": "486d5ce0d5c8d2d4a38929d6a0c19ae159d677e3", "msg": "add billing account to projects", "date": "2022-01-21 15:50:22+00:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/demoqa/tf.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/StratusGrid/terraform-aws-single-account-starter.git", "commits": [{"id": "c291c0954c89e1bfbdb76d4c8990baf9db986343", "msg": "Feature/billing alerts (#6)\n\n* Updated required_version as the previous one was way out of date.\r\n\r\n* Uncommented parts of code designed to be used for other regions.\r\n\r\n* Removed unnecessary variables in code.\r\n\r\n* Reverted the version as the new one broke stuff.\r\n\r\n* Added EventBridge rules, ran terraform FMT\r\n\r\n* Added Environment tag back into config rule and updated the name of the eventbridge rule.\r\n\r\n* Fixed a typo.\r\n\r\n* Updated terraform version.\r\n\r\n* Added billing alerts for billing anomalies", "date": "2021-11-18 12:00:43-05:00", "modified_files": ["-inputs.tf", "-outputs.tf", "-provider.tf", "billng-alerts.tf"]}]}, {"name": "https://github.com/jg210/aws-experiments.git", "commits": [{"id": "5ff37f12a421fdd902d8eb1e6d7491ee181fd179", "msg": "t2.nano costs half as much as t2.micro.", "date": "2020-04-11 19:44:38+01:00", "modified_files": ["TODO", "packer.json", "provision", "ec2.tf"]}]}, {"name": "https://github.com/nikhil1328/Terraform.git", "commits": [{"id": "1f504937d3d54fd1cd1cd7b927f05cd6a3123440", "msg": "RDS Instance Configuration \n\nAmazon Relational Database Service (Amazon RDS) is a web service that makes it easier to set up, operate, and scale a relational database in the AWS Cloud. It provides cost-efficient, resizable capacity for an industry-standard relational database and manages common database administration tasks.\r\n\r\nDB Instances\r\nThe basic building block of Amazon RDS is the DB instance. A DB instance is an isolated database environment in the AWS Cloud. Your DB instance can contain multiple user-created databases. You can access your DB instance by using the same tools and applications that you use with a standalone database instance. You can create and modify a DB instance by using the AWS Command Line Interface, the Amazon RDS API, or the AWS Management Console.\r\n\r\nEach DB instance runs a DB engine. Amazon RDS currently supports the MySQL, MariaDB, PostgreSQL, Oracle, and Microsoft SQL Server DB engines. Each DB engine has its own supported features, and each version of a DB engine may include specific features. Additionally, each DB engine has a set of parameters in a DB parameter group that control the behavior of the databases that it manages.\r\n\r\nThe computation and memory capacity of a DB instance is determined by its DB instance class. You can select the DB instance that best meets your needs. If your needs change over time, you can change DB instances.\r\n\r\n\r\nFor more infomation, see  https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html", "date": "2020-06-07 18:01:26+05:18", "modified_files": ["AWS-RDS-Instance.tf"]}]}, {"name": "https://github.com/concourse/infrastructure.git", "commits": [{"id": "84868d7bdcf88be6a2f612af884e9b32a663933e", "msg": "Starts moving towards new cluster w/ metrics segregation\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-01-21 07:59:41-05:00", "modified_files": ["main.tf", "outputs.tf", "variables.tf", "backend.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "gcp.tf", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "1dd2431f449ff442d661c88649147d2396a8cffd", "msg": "Make use of non local disk; adds gcp-key make target\n\nWith the current version of the chart that we use, local ssds can't\nreally be used given that we can't make use of PVCs for local storage,\nso, in this commit we go back to using a `pd-ssd` that is big enough for\nour workloads.\n\nThis commit also includes a `gcp-key` make target that grabs the gcp key\nfrom lpass.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-02-22 08:13:26-05:00", "modified_files": ["main.tf"]}, {"id": "459f323424001c1b31c3809354d89bf97a99f644", "msg": "hh: make use of local storage; adds provisionar bootstraping\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-03-03 09:40:39-05:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "b9bae48b1d9329b3d64c94fc5ebce18b0d8ef051", "msg": "tf: remove autoscaling; hh: bump garden net pool; metrics: upgd panels\n\n- given that we can't autoscale with the local SSDs that we've been\nusing, removed that completely for now.\n\n- updated the panels that relate to network metrics to use bits instead\nof bytes in the data rate panels;\n\n- increased the garden network pool and max number of containers to play\nwith the idea of running a bunch of containers per host to explore\nwhat can happen there.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-03-04 13:32:43-05:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "2e5be3b62e9736333869d026f42f8c20bb29360f", "msg": "hh: move out of local ssds and preemptible machines; updates pools\n\nThis commit:\n- removes the use of preemptible instances\n  - jobs that had to run for a very long time and have multiple steps\n  being run across different workers would make the whole build fail\n  when a single worker goes away, making our use of preemptible\n  instances hard.\n- removes the use of local ssds\n  - given that a pod that uses a pv provisioned by a local provisioner\n  can only get scheduled again against that particular node (and in our\n  use case, we expect to have VMs coming and going), that makes it a\n  no-no.\n- creates a `generic` pool for non-worker workloads (like metrics, web\n  ...). This way we can not rely on the default pool that gke\n  automatically creates for us.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-03-08 08:39:30-05:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "ea4fd5d22b5086a611ec091a597e104052e34220", "msg": "Add bootstrapping section to README, re-bootstrap, remove internal db ip\n\n- we were missing a bootstrapping section that detailed the process of\n  getting the cluster from nothing to a fully formed one;\n- `terraform/main.tf` was using the `-test` suffix in some resources\n  like the CloudSQL and the k8s cluster, so I got rid of them all and\n  re-bootstrapped the whole thing without those suffixes;\n- using internal connections for CloudSQL end up being too complicated\n  in terms of allowing the connections to happen using the beta\n  \"internal svcs connection\" feature from GCP (see [1]).\n\n[1]: https://issuetracker.google.com/issues/123276199\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-03-19 22:20:58-04:00", "modified_files": ["outputs.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "variables.tf", "gcp.tf", "main.tf", "outputs.tf"]}, {"id": "c3988811813dd29f64e26daa73dc2bdcce12f028", "msg": "add creation of certificates for the db\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-03-20 07:30:15-04:00", "modified_files": ["main.tf", "outputs.tf", "outputs.tf"]}, {"id": "6da14f602d27a2cfaaa275defd003ed6c7aff37d", "msg": "add `all` whitelisting for cloudsql; use 5.0 instead of rc (hh)\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-03-20 07:46:54-04:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "0656bb74a84d0b8efd5beeebbe686a0e61cdd980", "msg": "update load-balancer ips; exposes addresses again (tf)\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-03-20 08:02:25-04:00", "modified_files": ["outputs.tf", "outputs.tf"]}, {"id": "340484f454f66c360b9ce64c1a08af683cf0d769", "msg": "switch machine types to ubuntu; add nodeselector for metrics\n\nWe've been seeing some weird CPU utilizations when strabo workers kick\nin, this is an attempt to compare that to Ubuntu machines instead of the\nCOS that we were using.\n\nRegarding `nodeSelector`, this is to make sure that we don't have\n`prometheus` or `grafana` pods getting into worker VMs.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-04-26 08:43:55-04:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "997c32b21475f88c11abc239763e4e0ce53e90fa", "msg": "iaas: remove `hush-house.concourse-ci.org` A record\n\nPreviously, `hush-house.concourse-ci.org` was a record that we kept\nunder `concourse-ci.org`. Having moved to `pivotal.io`, we don't need to\nmaintain that anymore.\n\nAs we needed to maintain the reserved IP address that was created\nbefore, the migration was performed with a `terraform state mv` before.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-05-02 16:07:52-04:00", "modified_files": ["main.tf", "outputs.tf"]}, {"id": "5c1348acecc504106871093054ae50b52530ef04", "msg": "iaas: add descriptions and update deprecated fields\n\ncloses #44\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-05-03 11:10:36-04:00", "modified_files": ["main.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "gcp.tf", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "b2bac033512b623bee4d4e2eba284e1c3ee20d51", "msg": "bump local storage provisioner; update workers-1 node_count\n\nThere were new commits to the local storage provisionar submodule, and\nwe had the autoscale triggered for `worker-1`, so, by keeping that up to\ndate, we don't have surprises when performing terraform ops.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-05-12 08:34:31-04:00", "modified_files": ["main.tf"]}, {"id": "b89994aea8f05a52173df7487c56e1ca35da40a0", "msg": "iaas: go back to COS workers\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-05-15 08:25:38-04:00", "modified_files": ["main.tf"]}, {"id": "15da660e5e4cd58108840bc98ced6dcd74e26b19", "msg": "Parameterize disk size for the database\n\nSigned-off-by: Taylor Silva <tsilva@pivotal.io>\nCo-authored-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-06-06 14:36:54-04:00", "modified_files": ["main.tf", "variables.tf", "main.tf"]}, {"id": "f4f41581b526ad6c8315eb66a19cbfdb7c3c86c3", "msg": "update modules to be terraform 0.12.3-ready\n\nit seems like either some of the breaking changes that 0.12 introduced\nor changes to the plugins (google_*) used affected us. This commit\naddresses such problems.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-07-14 09:21:16-04:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "4521dbc38533cef8ad2003b0871808fde574578f", "msg": "iaas: add a `workers-2` to test out rootless\n\nFrom https://github.com/moby/buildkit/issues/879, it seems like GKE's\ncontainer-optimized instances introduce trouble for running\nrootless containers - adding an ubuntu pool to test it out.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-07-14 09:28:18-04:00", "modified_files": ["main.tf"]}, {"id": "09aecf74b211400d32e681077560627c612d864e", "msg": "move to single worker node-pool\n\nthis commit changes our distribution of concourse workers in a way to\nhave more web nodes that are half the size (vertically) than before, as\nwe've never been really fully utilizing their resources anyway.\n\nit moves us from having 2 worker node pools of vertically large\nmachines, to a single pool with more nodes that are half the size that\nthey previously were (16vcpu 32GBram 1TBdisk --> 8vcpu 16GBram\n750GBdisk).\n\nthe reasoning for not performing a \"divide by 2\" on `disk` is that\nthat's a resource that's still very highly utilized mostly in terms of\nIOPS, but eventually, in terms of space too.\n\nto achieve that, the `cluster` terraform module was updated to use a map\nof node pools (rather than a list) so that we can update the set of\npools without needing to manually perform terraform surgery.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-11-03 17:05:55-05:00", "modified_files": ["main.tf", "variables.tf", "main.tf"]}, {"id": "ea078cd2804ec94a0a27708d367e812548df5e1d", "msg": "terraform/deployments: add ci-pr workers\n\nthis commit is intended to allow the [`prs` pipeline] to co-exist with\n`nci` in the `hush-house` gke cluster.\n\nit does so by:\n\n- adding a node pool to the cluster (`ci-workers-pr`) whose size is the\n  same as we had previously in our BOSH deployment\n- adding a deployment (`ci-pr`) that puts workers in such node pool.\n\nAs such deployment is supposed to run untrusted workloads, we needed a\nway of restricting the network access that this deployment could have in\norder to avoid lateral movements in the internal net (in the case of our\nBOSH environment, we had a totally different network - in k8s, we'd need\nto be in a separate cluster if we wanted to go w/ the same approach of\ndifferent nets).\n\nThis led us to enabling the enforcement of network policies in the\ncluster, and creating a policy for `ci-pr` that would target the pods\ndelpoyed by it, effectively blocking internal connectivity to anything\nwe didn't want (i.e., anything that's not ci's TSA).\n\nps.: these changes have already been applied.\n\n[`prs` pipeline]: https://nci.concourse-ci.org/teams/main/pipelines/prs\n\nSigned-off-by: Denise Yu <dyu@pivotal.io>\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-11-22 08:46:41-05:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "cd40d4bdd4113a2611c0d5f579a052606ac254c4", "msg": "increase max_node_count for workers-3 pool to 25\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>\nCo-authored-by: Krishna Mannem <kmannem@pivotal.io>", "date": "2019-11-27 16:01:11-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/robertdebock/terraform-azurerm-container-group.git", "commits": [{"id": "c0d6578f1ebbdcc9cab091017259e4d596bfe8c9", "msg": "Cheaper, that's how I am...", "date": "2021-05-31 14:12:58+02:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/alphagov/tech-ops.git", "commits": [{"id": "62bbd04d33d3170b9237ba6ae6155c02af08114b", "msg": "Revert one of the idiomatic v0.12 Terraform changes\n\nI don't particularly want to spend any time figuring out why this breaks but\nwithout reverting this change we see errors like this using Terraform v0.12.20:\n\n```\nError: Invalid index\n\n  on .terraform/modules/concourse_pay_subnets/reliability-engineering/terraform/modules/concourse-subnets/routes.tf line 52, in resource \"aws_route_table_association\" \"concourse_public\":\n  52:   route_table_id = aws_route_table.concourse_public[count.index].id\n    |----------------\n    | aws_route_table.concourse_public is object with 6 attributes\n    | count.index is 1\n\nThe given key does not identify an element in this collection value.\n```\n\nWhat's curious is that this seems to work fine for the equivalent\n`aws_route_table_association` for the private subnet.", "date": "2020-01-28 10:59:36+00:00", "modified_files": ["routes.tf"]}]}, {"name": "https://github.com/al12gamer/school-sandbox.git", "commits": [{"id": "95171f15cf94e80f8ba22b7d5e9f27fd2b3e7c8b", "msg": "payment id, need gitignore working", "date": "2019-02-28 12:43:22-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/timstott/forward.git", "commits": [{"id": "ae123dbb5974a7913159681d7c4ddbaab2d9370f", "msg": ":love_letter: Use AWS SES to forward Twilio payload with recipient in\nquery param", "date": "2017-09-17 17:44:23+01:00", "modified_files": ["envs.yml", "iam-runtime.tf", "aws.ts", "ses.ts", "twilio-sms-to-email.ts", "types.ts", "twilio-on-message-payload.txt", "ses.test.ts", "twilio-sms-to-email.test.ts"]}]}, {"name": "https://github.com/nsbno/terraform-aws-cost-alarm.git", "commits": [{"id": "7e135499d33f0a5c51602a506fefe258cac072c6", "msg": "cost alarm v1", "date": "2021-10-13 12:39:01+02:00", "modified_files": ["main.tf", "policies.tf", "variables.tf"]}]}, {"name": "https://github.com/wushin/ttrpg-tools.git", "commits": [{"id": "9604c14a781530129e47e7a7684a90db86a7f7a0", "msg": "Add Mongo back as a t2.micro for cost", "date": "2021-02-23 01:25:07-06:00", "modified_files": ["main.tf", "outputs.tf", "main.tf", "variables.tf", "main.tf"]}]}, {"name": "https://github.com/gpii-ops/gpii-infra.git", "commits": [{"id": "5c370b871f0a20e77ca6806f46e6bd486d646e08", "msg": "Add billing account and org id for project creation", "date": "2018-07-20 15:56:10+02:00", "modified_files": ["docker-compose.yaml", "main.tf"]}]}, {"name": "https://github.com/mambotangu/mamz-cloud-foundation1.git", "commits": [{"id": "329a935f6d9f7b2917213a76a1277c6969df67e4", "msg": "mothballing billing atm", "date": "2021-10-28 13:24:56-04:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "28cb59105b516edc3bafa20e2f429a88594f7a17", "msg": "Modularize the billing export", "date": "2021-10-28 19:03:59-07:00", "modified_files": ["main.tf"]}, {"id": "213de9f7494f2cd4c37f95974231320bdce1dc87", "msg": "add billing export variables", "date": "2021-10-28 19:04:07-07:00", "modified_files": ["variables.tf"]}, {"id": "ccd76152996d46c2f4feafcf2abec29384446f8f", "msg": "Added billing alertd to shared tier.", "date": "2021-11-15 10:39:51-05:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/grimoire-ca/dns.tf.git", "commits": [{"id": "2a362c145bd6220b2baf94608a866de8c9c8eafb", "msg": "Revert changes to support multiple zones.\n\nIt turns out the zones I was going to add lapsed last year, and there's no point in paying for R53 resources for them.", "date": "2018-12-05 21:31:28-05:00", "modified_files": [".gitignore", "dns.tf", "grimoire.ca-google.tf", "grimoire.ca-linode.tf", "grimoire.ca-zone.tf", "linode.tf", "terraform.tf"]}, {"id": "de637ed8a80faa4fe40907dd2aaa92cc735653ea", "msg": "Remove the Distant Shore zone.\n\nThis is costing us about 50\u00a2/mo, which isn't much, but we're getting nothing for that money because we're not using the domain.", "date": "2019-01-17 22:10:26-05:00", "modified_files": ["README.md", "check-delegation", "main.tf", "main.tf", "outputs.tf"]}, {"id": "a5361d1708d83ba9f74415b5b376662b16ef9120", "msg": "Tagged route53 zones.\n\nSadly, there's no tagging option for individual resources, but this is sufficient for slicing up billing info.", "date": "2019-03-05 20:54:55-05:00", "modified_files": ["main.tf", "main.tf"]}]}, {"name": "https://github.com/stephaneclavel/terraform.git", "commits": [{"id": "74b4ba406b9ea761d27298165d0e0de45c9d8491", "msg": "now using spot instance to reduce costs", "date": "2020-12-23 19:55:16+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/64kramsystem/ultimate_aws_certified_cloud_practitioner_course_terraform_configuration.git", "commits": [{"id": "2f36b8a5f2f818138da72d218c1f3c9666ed54aa", "msg": "CloudWatch Billing alarm", "date": "2020-07-26 13:42:21+02:00", "modified_files": ["cloudwatch_alarms.tf", "terraform.tf"]}]}, {"name": "https://github.com/michael-griehm/azure-data-streams.git", "commits": [{"id": "68c7b29b7142a634034a41fde5896846d0b4c493", "msg": "Reduced the amount of partitions in the event hub to reduce cost", "date": "2022-03-24 10:09:12-04:00", "modified_files": ["event-hub.tf"]}, {"id": "6eb6aced2b9ffb5190bec10322b23cde07ac783f", "msg": "Reduced the amount of partitions in the event hub to reduce cost", "date": "2022-03-24 10:24:16-04:00", "modified_files": ["event-hub.tf"]}, {"id": "02a82877d37eaa41f6f4bbda32d6ed6536da61d7", "msg": "Made the function always on so the trigger works as expected, also reduced the capture frequency and skipping empty archive to reduce data movement to reduce cost", "date": "2022-03-25 11:30:40-04:00", "modified_files": ["event-hub.tf", "function.tf"]}, {"id": "9a8221f612d32a4b4fadca51835e05906f93e023", "msg": "Reduced partition count to reduce cost", "date": "2022-03-25 11:49:35-04:00", "modified_files": ["event-hub.tf"]}]}, {"name": "https://github.com/00inboxtest/terraform-google-bootstrap.git", "commits": [{"id": "85e7a9cfb3210b315f2bc30a8bfecbba472c82bc", "msg": "feat: Add ability to disable granting billing IAM via grant_billing_user variable (#19)", "date": "2020-03-26 00:02:16+01:00", "modified_files": ["CHANGELOG.md", "README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/p3sky/stack.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-aws-lex-lambda.git", "commits": [{"id": "a39ed520b0048d54886d16c10c988ca905f64c58", "msg": "costs", "date": "2021-05-22 23:08:00+01:00", "modified_files": ["CODEOWNERS", "compare.yml", "master.yml", "pull_request.yml", "infracost-usage.yml", "terraform.tf"]}, {"id": "fdebf6be5efca6e570e0e146dcba13abffd07bf8", "msg": "costs", "date": "2021-05-22 23:18:22+01:00", "modified_files": ["terraform.tf"]}]}, {"name": "https://github.com/QuiNovas/terraform-aws-dynamodb-table.git", "commits": [{"id": "0da65e528503f276359627cb43227d0606e02e80", "msg": "Added billing_mode\n\nAnd conditioned the autoscaling on PROVISIONED billing mode.", "date": "2019-01-17 10:45:32-06:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/kelledge/idkfa.git", "commits": [{"id": "25cda0b77ff329a89551cc6f14fe8c62820fd424", "msg": "Add billing alarms\n\nEase of configuration for thresholds will be important", "date": "2017-10-22 23:45:40-05:00", "modified_files": ["billing.tf", "main.tf"]}]}, {"name": "https://github.com/scott45/vof-deployment-scripts.git", "commits": [{"id": "c6b2c1bee4c1e53e87fd3d94fc8c07cf64342d7b", "msg": "Updates machine type for jumpbox so it uses one with smaller specs to reduce the cost", "date": "2017-12-01 08:10:58+03:00", "modified_files": ["jumpbox.tf", "variables.tf"]}]}, {"name": "https://github.com/harinkj/terraform.git", "commits": [{"id": "f72dcade045e68aefcac16acb5dfdbe73f9dd1db", "msg": "terraform scripts to refer image from different project in same billing account", "date": "2016-09-30 00:39:26-04:00", "modified_files": ["main.tf", "terraform.tfstate", "terraform.tfstate.backup", "variables.tf"]}, {"id": "bb69c758d02ee842da59d039a820bc4a6870d10e", "msg": "terraform script to refer image from different billing accout project and spin instances", "date": "2016-09-30 00:45:22-04:00", "modified_files": ["main.tf", "terraform.tfstate", "terraform.tfstate.backup", "variables.tf"]}]}, {"name": "https://github.com/18F/dns.git", "commits": [{"id": "40ed4c39b0f8264e90cd116c94e60ad36c3dba32", "msg": "Moved Hack the Paygap to Federalist", "date": "2017-01-06 22:52:26-08:00", "modified_files": ["pif.gov.tf"]}, {"id": "4d65ca82202c8bb880813c3dae0ec76669a67363", "msg": "Deleted *.pif.gov, replaced with paygap-slack.pif.gov, the only PIF app still running on old cloud.gov", "date": "2017-01-15 10:59:50-08:00", "modified_files": ["pif.gov.tf"]}, {"id": "04dc4c05057a4996c10b8ec4495f77bbb235d6bb", "msg": "Updated slack-paygap.pif.gov to point to cloudfront distro in new cloud.gov", "date": "2017-01-17 19:01:52-08:00", "modified_files": ["pif.gov.tf"]}, {"id": "fe371afd0b2094b69745c26927269d672530f8e8", "msg": "Add acme challenge CNAMEs and comment out Federalist CNAMES\n\nFor paygap.pif.gov and tophealth.pif.gov", "date": "2022-04-04 16:42:01-04:00", "modified_files": ["pif.gov.tf"]}, {"id": "f5184a493cf49a4940b20acee5b17bca1aaf6335", "msg": "Change paygap and tophealth resource names", "date": "2022-04-04 17:14:02-04:00", "modified_files": ["pif.gov.tf"]}, {"id": "78192a3ecdc5f215f5fc5e90c0ba2fc627d976e3", "msg": "Add new CNAMEs for paygap and tophealth.pif.gov", "date": "2022-04-04 17:41:13-04:00", "modified_files": ["pif.gov.tf"]}]}, {"name": "https://github.com/cirocosta/concourse-s3-resource-iam-roles-sample.git", "commits": [{"id": "8bd9589d847ef575da070e007df0b0367b74a388", "msg": "init!\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-01-04 17:58:31-05:00", "modified_files": ["README.txt", ".gitignore", "Makefile", "README.txt", "ami.tf", "bucket.tf", "instance-init.sh", "key.rsa", "key.rsa.pub", "main.tf", "permissions.tf", "run-worker.sh", "vars.tf"]}, {"id": "53e88a3170078863360b4f6eacce924fc7d9afae", "msg": "wip\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-01-06 15:30:59-05:00", "modified_files": ["README.txt", "pipeline.yml", "Makefile", "bucket.tf", "instance-init.sh", "tsa-public-key", "main.tf", "permissions.tf", "run-worker.sh"]}]}, {"name": "https://github.com/jsoconno/aws-terraform-remote-state-infrastructure.git", "commits": [{"id": "fed8be2748bc2286a6f9888d282d66763ba612ed", "msg": "default dynamodb to pay per request", "date": "2022-05-09 11:24:21-04:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/benbense/terraform-aws-servers.git", "commits": [{"id": "158a26defa717a5d7939c047c1cfb01eb8aecbf2", "msg": "Added Costum Bastion SSH sg", "date": "2022-03-12 14:08:40+02:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/zwindler/terragrunt-101.git", "commits": [{"id": "a359236e4a21c40df53ec2b8352135daaab02410", "msg": "chore: switch to variables for billing and folder parent", "date": "2022-03-12 14:13:31+01:00", "modified_files": ["project.tf"]}]}, {"name": "https://github.com/SJ029626/Design-Provision-and-Monitor-AWS-Infrastructure.git", "commits": [{"id": "4d288e4f9399827db03e20f893ba090689dca899", "msg": "Design, Provision and Monitor AWS Infrastructure\n\nIn this project, I planned, design, provision, and monitor infrastructure in AWS using industry-standard and open source tools. I optimized infrastructure for cost and performance. I also used Terraform to provision and configure AWS services in a global configuration.", "date": "2020-10-06 10:41:23+05:18", "modified_files": ["CloudWatch_alarm.png", "Terraform_1_1.png", "Terraform_1_2.png", "main.tf", "terraform.tfstate", "terraform.tfstate.backup", "terraform_creation.png", "terraform_destroy.png", "Terraform_2_1.png", "Terraform_2_2.png", "Terraform_2_3.png", "Terraform_destroyed.png", "greet_lambda.py", "greet_lambda.zip", "main.tf", "outputs.tf", "terraform.tfstate", "terraform.tfstate.backup", "variables.tf", "Increased_Cost_Estimate.csv", "Initial_Cost_Estimate.csv", "Reduced_Cost_Estimate.csv", "UdacityCloudTrailLog.csv", "UdacityCloudTrailLogs.csv", "Udacity_Diagram_1.pdf", "Udacity_Diagram_2.pdf", "completion_image.PNG", "increased_cost_rationale.txt", "reduced_cost_rationale.txt", "udacity_groups.png", "udacity_password_policy.png"]}]}, {"name": "https://github.com/noorlan/terraform_google.git", "commits": [{"id": "bdbf96c5f05ab50c69e3852d2f522b3b655a7db8", "msg": "correct billing accout", "date": "2021-06-15 20:02:36+00:00", "modified_files": ["project.tf"]}]}, {"name": "https://github.com/digitalronin/digitalocean-build-machine.git", "commits": [{"id": "edbb68b29f7e055a50c16f62a71ee7be8c019407", "msg": "Use a larger VM size\n\nThis is the next size up, in terms of CPU power. The cost is $15/month,\nwhich is roughly $0.02/hour (I think).", "date": "2021-03-21 11:58:27+09:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/nisunisu/AWS_Blue_Green_Deployment.git", "commits": [{"id": "d0741cddb32ed7970904693e3a697603fa21bbbb", "msg": ":art: Start using terraform variables and Comment out Elastic-IP setting to prevent unexpected billings.", "date": "2020-06-07 15:05:42+09:00", "modified_files": ["example.tf", "variables.tf"]}]}, {"name": "https://github.com/recognizegroup/terraform.git", "commits": [{"id": "746430dcdb4a49c7696f65bd4a06ae0a76b444cb", "msg": "Implement monthly cost export to storage. DAT-5287", "date": "2021-01-11 16:12:45+02:00", "modified_files": ["main.tf", "outputs.tf", "variables.tf", "outputs.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-gcp-statebucket.git", "commits": [{"id": "41c7bb122d64d5466e7db1583a432130a09a6bd8", "msg": "cost", "date": "2021-05-15 08:33:18+01:00", "modified_files": ["CODEOWNERS", "compare.yml", "master.yml", "pull_request.yml", ".markdownlint.json", "terraform.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-aws-waf-global.git", "commits": [{"id": "7bd03b55400af452b20595dc82ffda727f07f281", "msg": "costs", "date": "2021-05-15 16:27:26+01:00", "modified_files": ["CODEOWNERS", "compare.yml", "master.yml", "pull_request.yml", ".markdownlint.json", "Makefile", "infracost-usage.yml", "terraform.tf"]}]}, {"name": "https://github.com/gomisantoine85/DNS.git", "commits": [{"id": "40ed4c39b0f8264e90cd116c94e60ad36c3dba32", "msg": "Moved Hack the Paygap to Federalist", "date": "2017-01-06 22:52:26-08:00", "modified_files": ["pif.gov.tf"]}, {"id": "4d65ca82202c8bb880813c3dae0ec76669a67363", "msg": "Deleted *.pif.gov, replaced with paygap-slack.pif.gov, the only PIF app still running on old cloud.gov", "date": "2017-01-15 10:59:50-08:00", "modified_files": ["pif.gov.tf"]}, {"id": "04dc4c05057a4996c10b8ec4495f77bbb235d6bb", "msg": "Updated slack-paygap.pif.gov to point to cloudfront distro in new cloud.gov", "date": "2017-01-17 19:01:52-08:00", "modified_files": ["pif.gov.tf"]}]}, {"name": "https://github.com/fdns/terraform-k8s.git", "commits": [{"id": "f106917bb7b2d8d4428022bb119585bf9f35769c", "msg": "Restore t3a.medium and adding a duplicaed cheap_compute2 instance with count", "date": "2020-07-22 23:49:23-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-gcp-network.git", "commits": [{"id": "a2c38dbc4d0f08e9b6e52146f546bc872eec8408", "msg": "costs", "date": "2021-05-15 09:57:28+01:00", "modified_files": ["CODEOWNERS", "compare.yml", "master.yml", "pull_request.yml", "Makefile", "terraform.tf"]}]}, {"name": "https://github.com/midl-dev/terraform-gke-blockchain.git", "commits": [{"id": "12e61bf3be66ae94b38f2fca25c95c085c3f16e4", "msg": "fix deprecated syntax, add cloudbilling api to eliminate NAT errors", "date": "2020-05-26 16:26:09+08:00", "modified_files": ["gcp.tf", "variables.tf"]}]}, {"name": "https://github.com/VJftw/infrastructure.git", "commits": [{"id": "3008ce0a3cb43802579ba6f33d400bdafdea504d", "msg": "Add initial infrastructure (#1)\n\n* Add initial infrastructure\r\n\r\n* minify output\r\n\r\n* remove new line from output\r\n\r\n* add needs\r\n\r\n* disable fail-fast, fix plan\r\n\r\n* add cloudresourcemanager\r\n\r\n* make repository consistent\r\n\r\n* add services to github-actions project\r\n\r\n* fix org iam bindings\r\n\r\n* add billing permissions to gha identities\r\n\r\n* add serviceusage apis\r\n\r\n* try new repo_address normaliser\r\n\r\n* debug remote origin url\r\n\r\n* fix remote url consistency\r\n\r\n* add cloudkms\r\n\r\n* add commenting on PR\r\n\r\n* shorten job names\r\n\r\n* add separate privileges for PRs\r\n\r\n* remove state locking in plan\r\n\r\n* add iam.securityReviewer to PR", "date": "2021-12-28 04:09:08+00:00", "modified_files": [".editorconfig", "terraform.yml", ".gitignore", ".plzconfig", "BUILD", "terraform.build_defs", "BUILD", "terraform_apply.sh", "terraform_plan.sh", "terraform_workspaces.sh", "BUILD", "main.tf", "BUILD", "main.tf", "main_branch.tf", "oidc.tf", "pull_requests.tf", "repositories.tf", "services.tf", "BUILD", "bucket.tf", "main.tf", "pleasew", "BUILD", "BUILD", "BUILD"]}, {"id": "205cc733112c2182f4a9840821f0e52fb05e5c9a", "msg": "fix billing permissions (#9)\n\n* fix billing permissions\r\n\r\n* add compute.googleapis.com\r\n\r\n* appease linter", "date": "2021-12-29 18:56:50+00:00", "modified_files": ["main_branch.tf", "pull_requests.tf", "repositories.tf", "services.tf"]}]}, {"name": "https://github.com/ryanchanwj/platform_joker-thekween.git", "commits": [{"id": "d3839cf1d59743c2f51d2752516e87f80ae1bb49", "msg": "add cognito and lambda for product and payment", "date": "2022-03-10 22:12:37+08:00", "modified_files": [".terraform.lock.hcl", ".tfvars", "api_gateway.tf", "appsync.tf", "cognito.tf", "datasource.tf", "add_group.ts", "pre_auth.js", "iam.tf", "lambda_pre_auth.tf", "main.tf", "schema.graphql", "variables.tf", "api_gateway.tf", "datasource.tf", "add_to_cart.js", "checkout_cart.js", "iam.tf", "lambda_checkout_cart.tf", "outputs.tf", "sqs.tf", "api_gateway.tf", "cloudwatch.tf", "datasource.tf", "generate_report.py", "iam.tf", "lambda_create_order.tf", "lambda_delete_orders.tf", "lambda_generate_report.tf", "lambda_view_orders.tf", "main.tf", "variables.tf", "s3_customer.tf", ".terraform.lock.hcl", ".tfvars", "api_gateway.tf", "appsync.tf", "cognito.tf", "datasource.tf", "add_group.ts", "pre_auth.js", "iam.tf", "lambda_pre_auth.tf", "main.tf", "schema.graphql", "variables.tf", "api_gateway.tf", "datasource.tf", "add_to_cart.js", "checkout_cart.js", "iam.tf", "lambda_checkout_cart.tf", "outputs.tf", "sqs.tf", ".terraform.lock.hcl", "api_gateway.tf", "datasource.tf", "lambda_create_order.tf", "lambda_delete_orders.tf", "lambda_generate_report.tf", "lambda_view_orders.tf", "main.tf", "variables.tf", ".terraform.lock.hcl", "datasource.tf", "process_payment.js", "iam.tf", "lambda_process_payment.tf", "main.tf", "variables.tf", "versions.tf", "s3_customer.tf", "acm.tf", "cloudfront.tf", "route53.tf"]}]}, {"name": "https://github.com/mesoform/terraform-infrastructure-modules.git", "commits": [{"id": "0a1f058fbd52f8eb45d880bafe669477b5ef7c4c", "msg": "mcp: gae enable billing when creating new project", "date": "2020-05-27 00:33:32+01:00", "modified_files": ["README.md", "gcp_ae.tf"]}, {"id": "0f0fc68b8eec960f7170a00fc1f10270ee811e4f", "msg": "mcp: remove billing api definition", "date": "2020-05-27 08:42:20+01:00", "modified_files": ["README.md", "gcp_ae.tf"]}, {"id": "ced6a0ec994d2e3e6a121361e39d939dfa220eb3", "msg": "fix billing and dependencies", "date": "2020-09-28 11:33:12+01:00", "modified_files": ["README.md", "gcp_cloudrun.tf"]}, {"id": "8e320b62a74552cd4f841e4e52cea31bf24c30f3", "msg": "INFRA-45 Update mcp project name, fix billing command error, destroy vpc, remove artifact creation", "date": "2021-09-08 15:43:34+01:00", "modified_files": ["deploy_gcp_vpc.yml", "deploy_mcp.yml", "vpc_logs.tflogs"]}]}, {"name": "https://github.com/tale-toul/SingleNodeOpenshiftOnLibvirt.git", "commits": [{"id": "638430604158044fcf123adaf8dfdcc91b1a873e", "msg": "Creates an AWS spot instance instead of the normal one for cost reduction.\n\nThe spot instance cannot use an AMI with RHEL 8.5 at the moment, AWS returns an error; it can use a RHEL 8.4 though\n\nSigned-off-by: Jose Ignacio Jerez Rodriguez <jjerezro@redhat.com>", "date": "2022-04-26 12:03:11+02:00", "modified_files": ["support_setup.yaml", "README.md", "main.tf", "output-vars.tf"]}]}, {"name": "https://github.com/oke-py/aws-tf.git", "commits": [{"id": "ec2982c8742cc7bc294f8a3cc07ae9ba5ffcaced", "msg": "create budget to notify me if actual cost > $30", "date": "2020-05-03 14:57:10+09:00", "modified_files": ["budget.tf"]}, {"id": "6efd66d443c5bda9c0378316dba48a4cfbd26b5f", "msg": "fix cost limit_amount", "date": "2020-05-03 15:38:44+09:00", "modified_files": ["budget.tf"]}, {"id": "e101c554f3477cb31a4f81f567989e2132677aae", "msg": "enable Cost & Usage Reports", "date": "2020-05-03 16:54:57+09:00", "modified_files": ["billing.tf", "budget.tf"]}, {"id": "1a7098d6cf8e1e90b5c157d5981a936a48438924", "msg": "chore: fix deprecated interpolation-only expressions (#17)\n\nWarning: Interpolation-only expressions are deprecated\r\n\r\n  on billing.tf line 40, in data \"aws_iam_policy_document\" \"s3bucket-policy\":\r\n  40:       \"${aws_s3_bucket.cost-report.arn}\"\r\n\r\nTerraform 0.11 and earlier required all non-constant expressions to be\r\nprovided via interpolation syntax, but this pattern is now deprecated. To\r\nsilence this warning, remove the \"${ sequence from the start and the }\"\r\nsequence from the end of this expression, leaving just the inner expression.\r\n\r\nTemplate interpolation syntax is still used to construct strings from\r\nexpressions when the template includes multiple interpolation sequences or a\r\nmixture of literal strings and interpolations. This deprecation applies only\r\nto templates that consist entirely of a single interpolation sequence.\r\n\r\n(and 3 more similar warnings elsewhere)", "date": "2021-01-26 21:42:59+09:00", "modified_files": ["billing.tf", "cloudtrail.tf", "config.tf"]}, {"id": "288edee9b13a59c4125bec59a5645e2c43bc72f2", "msg": "s3-bucket-ssl-requests-only for cost report bucket (#45)\n\n* s3-bucket-ssl-requests-only for cost report bucket\r\n\r\n* update aws-actions/configure-aws-credentials\r\n\r\n* fix type of values", "date": "2021-10-25 22:10:17+09:00", "modified_files": ["pr.yml", "push.yml", "billing.tf"]}]}, {"name": "https://github.com/terraform-google-modules/terraform-google-cloud-datastore.git", "commits": [{"id": "718eea075f2d1757e1577dd2772c720616469939", "msg": "Extract inline provisioner scripts to external files\n\nThis commit extracts the inline calls to `gcloud` to external scripts,\nand replaces the `gcloud `service account activation with a credentials\noverride that doesn't need setup. Extracting these scripts allows us to\nrun linters on the scripts, call and test them independently, and\nreduces the cost of development on those scripts.", "date": "2018-09-27 12:11:08-07:00", "modified_files": ["main.tf", "create-indexes.sh", "destroy-indexes.sh"]}]}, {"name": "https://github.com/lsst/idf_deploy.git", "commits": [{"id": "27d2e0248c33a0ae7fe7d39293a9416c9491cbda", "msg": "added new roles for monitoring, billing, and other existing groups", "date": "2021-01-08 13:40:05-06:00", "modified_files": ["iam.tf", "variables.tf"]}, {"id": "7e97deaea17f72451ea49016a14df9ce57b1850a", "msg": "added billing vars", "date": "2021-01-19 13:47:16-06:00", "modified_files": ["terraform.tfvars", "variables.tf"]}, {"id": "ff0861306c1cab27d8db63a6f8261c360b3f1ab2", "msg": "new billing admin roles for prj SA accounts", "date": "2021-01-19 13:58:36-06:00", "modified_files": ["main.tf"]}, {"id": "8e573c7be2b82747f6a7a4d1e0726a6dbde46453", "msg": "add new cluster label for cost tracking", "date": "2021-09-28 12:27:41-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/alkiranet/terraform-alkira-cxp-baseline.git", "commits": [{"id": "80a36db560f995c3017d7355e8fff49bc2522bf4", "msg": "Update alkira_billing_tag.tf", "date": "2021-10-08 16:41:37-04:00", "modified_files": ["alkira_billing_tag.tf"]}]}, {"name": "https://github.com/wellcomecollection/platform-infrastructure.git", "commits": [{"id": "cc8cb3ab5e257109ea9f6c19f4d034b1ac7ca4ca", "msg": "Snapshot bucket (#4132)\n\n* Adds an S3 bucket for Elastic Cloud snapshots\r\n\r\nWe currently rely on Elastic Cloud to hold our snapshots for the catalogue API ES cluster.\r\n\r\nIn order to make working with Catalogue API ES data easy to do locally and to do outside of Elastic Cloud for reduced time and expense, it is useful and more arguably more reliable to hold these in an S3 bucket we have direct access to.\r\n\r\nTo complete this change we will need to make some changes to the Elastic Cloud configuration.\r\n\r\nSee: https://www.elastic.co/guide/en/cloud/current/ec-aws-custom-repository.html\r\n\r\n* add some documentation for ES snapshot storage\r\n\r\n* moved to critical stack\r\n\r\n* principals needs to be a list", "date": "2020-01-07 16:17:46+00:00", "modified_files": ["README.md", "iam.tf", "locals.tf", "outputs.tf", "s3_elasticsearch.tf", "wellcomedigitalplatform.pub", "main.tf", "outputs.tf", "variables.tf", "iam.tf", "locals.tf"]}, {"id": "815259ab3239a9fdc04a95e9a0dad926c2f6a1dc", "msg": "Set up a basic Terraform stack for costs reporting", "date": "2021-09-02 07:18:04+01:00", "modified_files": [".gitignore", "costs_report.py", ".terraform.lock.hcl", "lambda.tf", "provider.tf", "terraform.tf"]}, {"id": "e0192c6a06d17753dbabd5b644b7f7ab4a63770c", "msg": "Get the initial costs data working", "date": "2021-09-02 07:51:05+01:00", "modified_files": ["costs_report.py", "iam.tf", "lambda.tf", "locals.tf", "provider.tf", "main.tf", "provider.tf", "outputs.tf"]}, {"id": "121a1a89f279345fa840b4ba4e6e84ec687e36eb", "msg": "get a costs graph printing in the lambda, do cross-account billing", "date": "2021-09-02 08:53:22+01:00", "modified_files": ["costs_report.py", "costs_report.py", "tabulate.py", "iam.tf", "lambda.tf", "provider.tf", "main.tf", "rolesets.tf"]}, {"id": "2af1f1bc24d282c13f5ce290c27a60cc2e7286dc", "msg": "Add the digirati account to the costs report", "date": "2021-09-02 11:03:25+01:00", "modified_files": ["iam.tf", "provider.tf", "rolesets.tf"]}, {"id": "cb2a39fcde4b65f6ab51e1a34f782e442ded720b", "msg": "Add data/digirati/reporting to the regular costs report", "date": "2021-09-08 12:12:22+01:00", "modified_files": ["costs_report.py", "provider.tf", "rolesets.tf"]}, {"id": "b23e2b661977a4203919d2df24d5670586568883", "msg": "Add the missing roles to the costs report Lambda\n\nWe create roles in each account for the Lambda to assume, so it can\nfetch the costs associated with that account.  The permissions for the\nrole need to be configured in two places:\n\n1) In the other account (\"Anyone in platform can assume role X\")\n2) In the platform account (\"Lambda can assume role X\")\n\nBut for these three accounts, only (1) was configured.  This patch adds\n(2).", "date": "2021-10-18 09:26:22+01:00", "modified_files": ["iam.tf"]}, {"id": "918e12aee0014569fd2f0e5ac8128fb7a1e8cdf2", "msg": "Add the microsites account to our costs report", "date": "2021-12-14 11:09:31+00:00", "modified_files": ["costs_report.py", "iam.tf", "rolesets.tf"]}, {"id": "39f87cedaaeaccdc85887168edcc34304c17ba13", "msg": "Remove costs reporter from the repo", "date": "2022-03-01 12:55:22+00:00", "modified_files": ["README.md", ".gitignore", "README.md", "costs_report.py", "tabulate.py", "screenshot.png", ".terraform.lock.hcl", "cloudwatch.tf", "iam.tf", "lambda.tf", "locals.tf", "provider.tf", "main.tf", "provider.tf", "rolesets.tf", "terraform.tf"]}]}, {"name": "https://github.com/carlo1999go/cmarini-cloud-foundation-fabric.git", "commits": [{"id": "c486bfc66f9814e33b410602cb557a5e4d532912", "msg": "Merge development branch (#44)\n\n* VPN-HA module initial commit\r\n\r\n* Added readme for net-vpn-ha module\r\n\r\n* Update readme, add simple description\r\n\r\n* Merge new modules list and environments foundation example (#30)\r\n\r\n* gke-cluster\r\n\r\n* net-vpc module and tests\r\n\r\n* add TODO to net-vpc module\r\n\r\n* add minimal README files with input/output variables to gke and net-vpc modules\r\n\r\n* BigQuery Module (#24)\r\n\r\n* Bigquery Module\r\n\r\n* Added README file\r\n\r\n* Added type hints\r\n\r\n* gke-cluster\r\n\r\n* net-vpc module and tests\r\n\r\n* add TODO to net-vpc module\r\n\r\n* add minimal README files with input/output variables to gke and net-vpc modules\r\n\r\n* BigQuery Module (#24)\r\n\r\n* Bigquery Module\r\n\r\n* Added README file\r\n\r\n* Added type hints\r\n\r\n* GCS module\r\n\r\n* net vpc module: improve secondary range outputs\r\n\r\n* net vpc module: add serve project registration\r\n\r\n* project module\r\n\r\n* move bigquery module to not-ready folder\r\n\r\n* folders module\r\n\r\n* rename project module's iam variables\r\n\r\n* slight tweak to folder module outputs\r\n\r\n* gcs module\r\n\r\n* simplify net-vpc module variables\r\n\r\n* fix module tests configurations, fix net-vpc module tests\r\n\r\n* add pydoc utility\r\n\r\n* add/update module READMEs\r\n\r\n* add/update module READMEs\r\n\r\n* add/update module READMEs\r\n\r\n* improve variable type summary generation in tfdoc\r\n\r\n* tfdoc: add support for replacing doc in README.md files\r\n\r\n* improve module READMEs\r\n\r\n* net-vpc-firewall module\r\n\r\n* add support for sensitive output attribute in tfdoc\r\n\r\n* remove empty function from tfdoc\r\n\r\n* render variable type as code in tfdoc\r\n\r\n* update module READMEs\r\n\r\n* net address module\r\n\r\n* net cloudnat module\r\n\r\n* remove redundant variable from net-cloudnat module\r\n\r\n* vpc module: add support for peering, use network name as subnet name prefix\r\n\r\n* net-vpn-static module\r\n\r\n* net-vpn-static module README\r\n\r\n* net-vpn-static module README\r\n\r\n* tfdoc: fix error on undeclared variable type\r\n\r\n* dns module\r\n\r\n* set version for all modules\r\n\r\n* kms module (untested)\r\n\r\n* change kms key self links output to map, fix gcs and kms iam variable descriptions\r\n\r\n* fix kms module\r\n\r\n* update kms module readme\r\n\r\n* simplify local iam pairs in modules\r\n\r\n* service accounts module (unfinished)\r\n\r\n* work on service accounts module\r\n\r\n* project module: add gcr service account\r\n\r\n* project module: update outputs in README\r\n\r\n* first working version of the iam service accounts module\r\n\r\n* iam service accounts module: extra checks in locals\r\n\r\n* modules/net-cloudnat: reorder variables\r\n\r\n* modules/net-vpn-dynamic: initial import (untested)\r\n\r\n* modules/net-vpn-dynamic: first working version\r\n\r\n* modules/net-vpn-dynamic: add outputs for auto-created router\r\n\r\n* modules/net-vpn-dynamic: update README\r\n\r\n* modules/net-[vpn,cloudnat]: clean up variable,s remove prefix\r\n\r\n* modules/net-vpn-dynamic: add advertisement configuration to tunnel bgp peer, refactor variables\r\n\r\n* tfdoc: add tooltips for variable types and defaults\r\n\r\n* modules: update README variables and outputs\r\n\r\n* tfdoc: improve variable default rendering\r\n\r\n* modules: update README variables and outputs\r\n\r\n* modules/net-vpc: minimal output refactoring\r\n\r\n* modules/vm-cos: initial import, base resources working, no outputs\r\n\r\n* modules/vm-cos: add variable descriptions\r\n\r\n* tfdoc: fix parsing in type and default blocks\r\n\r\n* modules/vm-cos: fix README\r\n\r\n* tfdoc: fix parsing in type and default blocks\r\n\r\n* modules/vm-cos: fix README\r\n\r\n* modules/compute-vm: initial working import (not fully tested)\r\n\r\n* modules/vm-cos: move to not-ready\r\n\r\n* tfdoc: fix variable defaults formatting\r\n\r\n* modules: update README files with tfdoc fixes\r\n\r\n* modules: add initial examples\r\n\r\n* gke-nodepool: initial import, untested\r\n\r\n* gke nodepool: add README, fix location variable, set node count default to 1\r\n\r\n* gke cluster: fix private cluster variables\r\n\r\n* gke nodepool: fix README title\r\n\r\n* gke cluster: add output for cluster location\r\n\r\n* gke nodepool: add missing variables for project id and cluster name, remove default from location variable, fix gke version assignment\r\n\r\n* gke nodepool: update README\r\n\r\n* net-cloudnat: fix router name when creating default router\r\n\r\n* fix variables used for address and router optional creation\r\n\r\n* vpn dynamic: fix README\r\n\r\n* modules/net-vpn-dynamic: fix router name output\r\n\r\n* modules/compute-vm: remove unused variable\r\n\r\n* modules/compute-vm-cos-coredns: initial import\r\n\r\n* Update foundations modules versions (#26)\r\n\r\n* update foundations modules versions\r\n\r\n* update Terraform version to v0.12.19 in CI test configuration\r\n\r\n* backport tfdoc from Ludo's branch (#27)\r\n\r\n* Update docs using tfdoc format (#28)\r\n\r\n* update README files\r\n\r\n* set all types on variables\r\n\r\n* foundations/environments: move log filter to a variable, use org for xpn by default\r\n\r\n* foundations/environments: do not use liens by default\r\n\r\n* modules/ntp-vpc: better shared_vpc_host variable description\r\n\r\n* modules/logging-sinks: initial version\r\n\r\n* modules/logging-sinks: streamline options in sinks variable\r\n\r\n* modules/compute-vm-cos-coredns: add support for additional files\r\n\r\n* modules/folders: rename from 'folder'\r\n\r\n* modules/logging-sinks: fix circular dependencies and improve variables\r\n\r\n* modules/project: remove extra variable\r\n\r\n* modules/bigquery: new module with dataset support only\r\n\r\n* foundations/environments: refactor using local modules\r\n\r\n* modules/bigquery: better variables, README description and example\r\n\r\n* modules: fix a few READMEs\r\n\r\nCo-authored-by: Julio Castillo <juliocc@gmail.com>\r\n\r\n* modules/net-vpc: README description and examples\r\n\r\n* modules/net-vpc: tweak README description and examples\r\n\r\n* modules/net-vpc: tweak README description and examples\r\n\r\n* modules/net-vpc-firewall: change tag-based rule default ranges, improve README examples and description\r\n\r\n* modules/compute-vm: README changes\r\n\r\n* modules/compute-vm: use an object for the service account variable, update README\r\n\r\n* modules/compute-vm: update README variables table\r\n\r\n* modules/compute-vm: add TODO list to README\r\n\r\n* modules/compute-vm: add TODO list to README\r\n\r\n* modules/compute-vm: add outputs for service account\r\n\r\n* modules/net-cloudnat: README\r\n\r\n* modules/net-cloudnat: README\r\n\r\n* modules/net-cloudnat: add router_create variable\r\n\r\n* modules/compute-vm: simplify service account variables\r\n\r\n* modules/net-vpn-dynamic: fix README example, use local secret for both empty string and null\r\n\r\n* modules/net-vpn-dynamic: improve README example\r\n\r\n* modules/gke-cluster: minimal README tweaks\r\n\r\n* modules/kms: fix ephemeral keys resource name\r\n\r\n* modules/iam-service-accounts: add storage roles\r\n\r\n* modules/gke-nodepool: fix node default scopes\r\n\r\n* New project variable to prevent deletion of default network (#32)\r\n\r\n* New project variable to prevent deletion of default network\r\n\r\nThis is a workaround to fix\r\nterraform-google-modules/cloud-foundation-fabric#31 while the GCP\r\nterraform provider is fixed\r\n\r\n* Add TODOs to remove workarounds in the project module\r\n\r\n* Fix Cloud Build files\r\n\r\n* modules/gke-nodepool: add monitoring scope to defaults\r\n\r\n* modules/iam-service-accounts: add support for IAM bindings onthe service accounts\r\n\r\n* playground module in sandbox, remove not ready modules\r\n\r\n* Fix ci configurations in development branch (#33)\r\n\r\n* try fixing ci confgurations\r\n\r\n* add exclusion match to ci boilerplate check\r\n\r\n* add skip boilerplate comment to compute-vm-cos-coredns template fragment\r\n\r\n* modules/gke-cluster: fix boilerplate in outputs\r\n\r\n* Simplify tests, re-enable CI\r\n\r\n* add instance group support to compute-vm, start tests refactoring\r\n\r\n* modules/compute-vm: group fixes, tests\r\n\r\n* modules/compute-vm: minimal test beautification\r\n\r\n* simplify top-level pytest fixture\r\n\r\n* modules/dns: tests and minor tweaks\r\n\r\n* fix missing boilerplate in tests\r\n\r\n* re-add requirements file to tests folder\r\n\r\n* re-enable tests in ci build configuration\r\n\r\n* Folder module tests and fixes (#38)\r\n\r\n* folder tests wip\r\n\r\n* modules/folders: tests and tweaks\r\n\r\n* update folders and compute-vm README files\r\n\r\n* modules/gcs: tests and minor tweaks\r\n\r\n* Create README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Added docker image for strongSwan\r\n\r\n* Add support for routes and tests to net-vpc module (#39)\r\n\r\n* modules/net-vpc: add routes (untested)\r\n\r\n* initial tests\r\n\r\n* modules/net-vpc: add test for flow logs\r\n\r\n* modules/net-vpc: split tests into two separate files\r\n\r\n* modules/net-vpc: routes test\r\n\r\n* modules/net-vpc: test routes\r\n\r\n* Add support for Terraform plugin cache in ci test build file (#40)\r\n\r\n* add Terraform plugin caching to test ci build configuration\r\n\r\n* fix mkdir in test build configuration\r\n\r\n* trigger test check\r\n\r\n* Refactor dynamic vpn configuration for on-prem-in-a-box module\r\n\r\n* Fix dynamic vpn for onprem-in-a-box module\r\n\r\n* Migrate Shared VPC example to local modules (#41)\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* validated, untested\r\n\r\n* modules/compute-vm: make service account email in locals resilient to destroy\r\n\r\n* modules/project: make project id output depend on iam roles\r\n\r\n* fixes\r\n\r\n* shared-vpc tweaks\r\n\r\n* update diagram\r\n\r\n* update README input output tables\r\n\r\n* modules/compute-vm: add service account IAM email output\r\n\r\n* move GKE service account roles at the project level, add GCE service account roles\r\n\r\n* update diagram and README\r\n\r\n* modules/project: add extra output for IAM-dependent project id\r\n\r\n* update modules READMEs\r\n\r\n* minor tweaks\r\n\r\n* modules/compute-vm: fix service account output\r\n\r\n* remove static address from NAT\r\n\r\n* fix container service agent binding dependency\r\n\r\n* rename shared vpc\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Add static vpn gw to on-prem-in-a-box module\r\n\r\n* Refactor hub and spoke to use new modules (#42)\r\n\r\n* modules/compute-vm: saner defaults for service account scopes\r\n\r\n* hub and spoke refactor, docs still missing\r\n\r\n* complete hub and spoke\r\n\r\n* Update README.md\r\n\r\n* Add toolbox docker container, fix gw routing to the internet\r\n\r\n* Add DNS Hybrid connectivity parameters\r\n\r\n* Fix onprem dns zone for the static vpn configuration\r\n\r\n* Added readme.md for on-prem module\r\n\r\n* Add new line at the end of the files\r\n\r\n* Add boilerplate for cloudbuild config files\r\n\r\n* fix boilerplate in strongswan shell script\r\n\r\n* Update README.md\r\n\r\n* include missing file to fix merge conflict\r\n\r\n* remove missing file to fix merge conflict\r\n\r\n* include missing file to fix merge conflict (again)\r\n\r\n* remove content from spurious file used to avoid merge conflicts\r\n\r\n* Add net-vpc-peering module\r\n\r\n* Initial commit for hub-and-spoke-peering infrastructure example\r\n\r\n* Fix typos in infrastructure/ READMEs\r\n\r\n* remove stale file\r\n\r\n* use larger resolution version of hub and spoke diagram\r\n\r\n* Update README.md\r\n\r\n* Update hub-and-spoke-peerings example to use internal modules\r\n\r\n* Add initial project tests (#46)\r\n\r\n* modules/project: make prefix optional\r\n\r\n* initial project module tests\r\n\r\n* modules/project: use null for unset parent\r\n\r\n* modules/dns: backport PR6 from the CFT dns module\r\n\r\n* Add testing resources including on-prem-in-a-box to hub-and-spoke-peerings example\r\n\r\n* Fix firewall rules to allow connectivity, switch to custom route advertisement for onprem -> spokes connectivity\r\n\r\n* Move locals out of main.tf\r\n\r\n* remove ssh tag from compute-vm variable default\r\n\r\n* Add ssh tag to the test vms\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Hub and spoke peering changes (#48)\r\n\r\n* rename hub-and-spoke-vpn\r\n\r\n* add ssh tag to shared-vpc-gke instance\r\n\r\n* rename and rework hub and spoke peering\r\n\r\n* fix test requirements\r\n\r\n* align hub and spoke peering with module contents\r\n\r\n* diagram\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* minimal fixes to onprem examples variable files\r\n\r\n* onprem example stub, missing DNS zones and private.googleapis records onprem\r\n\r\n* add missing boilerplate\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* infra/onprem: add test instance and minimal outputs\r\n\r\n* add DNS modules and resource\r\n\r\n* infra/onprem: diagram and initial README\r\n\r\n* minor changes to onprem module and example (#49)\r\n\r\n* update toolbox image\r\n\r\n* infra/onprem: add zone for private access, add metadata domain to onprem dns\r\n\r\n* infra/onprem: onnprem service account, add testing procedure in README\r\n\r\n* Update README.md\r\n\r\n* infra/onprem: remove extra variable\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* infra/onprem: rename forwarder address variable\r\n\r\n* Update README:\r\n\r\nAdded explicit --tunnel-through-iap for gcloud compute ssh commands\r\n\r\n* Update top-level and section READMEs (#50)\r\n\r\n* top-level README WIP\r\n\r\n* rewrite top-level README\r\n\r\n* change top-level README title\r\n\r\n* remove initial quote in top-level README\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* foundations README\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* add experimental scheduled cloud function module\r\n\r\n* scheduled cloud function module: allow disabling schedule\r\n\r\n* business-units foundation example (#52)\r\n\r\n* Added folder-units module.\r\n\r\n* Business units example update (WIP)\r\n\r\n* Update all BU modules to internal ones\r\n\r\n* Refactoring business-units example, add billing and org IAM handling\r\n\r\n* update projects tests for new iam additive naming\r\n\r\n* update project README for new iam additive naming\r\n\r\n* streamline bu example and module (#53)\r\n\r\nCo-authored-by: Ludovico Magnocavallo <ludomagno@google.com>\r\n\r\n* align net-vpn-ha interface with the other vpn modules\r\n\r\n* update module README files\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Create CHANGELOG.md\r\n\r\n* Refactor COS module to be generic (#51)\r\n\r\n* Create generic COS module and update CoreDNS module to use it\r\n\r\n* Update compute-vm-cos README\r\n\r\n* Fix COS README\r\n\r\n* Update COS example\r\n\r\n* Skip boilerplate check for COS file template\r\n\r\n* Make COS module more generic and provide preset configurations\r\n\r\n* Update COS module documentation\r\n\r\n* tfdoc: add support for multiple variables files\r\n\r\n* compute-vm: split boot disk in separate variable file for cos module support\r\n\r\n* Streamline cos modules (#54)\r\n\r\n* tfdoc: fix bug in last commit\r\n\r\n* compute-vm: add support for user-data\r\n\r\n* compute-vm: restore noncos variable split\r\n\r\n* remove compute-vm-cos-coredns\r\n\r\n* compute-vm: revert to original state\r\n\r\n* cos-container/coredns\r\n\r\n* fix variables mess\r\n\r\n* cos/coredns fixes\r\n\r\n* cos/mysql\r\n\r\n* remove stale compute-vm-cos module\r\n\r\n* add test instance to cos modules\r\n\r\n* tfdoc: add support for multiple output files\r\n\r\n* cos: add initial READMEs\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* add test apply fixture\r\n\r\n* cos-coredns: tested\r\n\r\n* Update README.md\r\n\r\n* Fix typo\r\n\r\n* cos-coredns: refactor README\r\n\r\n* Update README.md\r\n\r\n* test yaml validity in cos modules tests\r\n\r\n* cos mysql tests\r\n\r\n* cos mysql: refactor and test (disk tests missing)\r\n\r\n* onprem: fix Coredns\r\n\r\n* cos mysql: additional disk working\r\n\r\n* cos modules: fix instance disks for no instance\r\n\r\n* update some modules READMEs\r\n\r\n* update some modules READMEs\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* add simple tests for foundations/environments\r\n\r\n* change default for org id in foundations/environments to avoid errors when none is specified\r\n\r\n* fix null/empty organization id in foundations/environments\r\n\r\n* fix errors when destroying on empty state in foundations/environments\r\n\r\n* fundations/bu: fix errors when destroying with empty state\r\n\r\n* modules/gcs: make outputs resilient on destroy with empty state\r\n\r\n* modules/folders: make outputs resilient on destroy with empty state\r\n\r\n* switch organization_id variable to long form in foundations/bu and modules/folders-unit\r\n\r\n* Update README.md\r\n\r\n* infra/shared-vpc: remove duplicate tag attribute from bastion\r\n\r\nCo-authored-by: Aleksandr Averbukh <averbukh@google.com>\r\nCo-authored-by: Julio Castillo <juliocc@gmail.com>\r\nCo-authored-by: Julio Castillo <jccb@google.com>", "date": "2020-04-03 14:06:48+02:00", "modified_files": [".terraformrc", "cloudbuild.lint.yaml", "cloudbuild.test.yaml", "check_boilerplate.py", "CHANGELOG.md", "README.md", "Dockerfile", "README.md", "cloudbuild.yaml", "entrypoint.sh", "ipsec-vti.sh", "Dockerfile", "README.md", "cloudbuild.yaml", "entrypoint.sh", "README.md", "README.md", "backend.tf.sample", "main.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "outputs.tf", "providers.tf", "terraform.tfvars.sample", "variables.tf", "versions.tf", "README.md", "locals.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "README.md", "backend.tf.sample", "diagram.png", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "backend.tf.sample", "diagram.png", "main.tf", "outputs.tf", "provider.tf", "variables.tf", "README.md", "diagram.png", "main.tf", "outputs.tf", "terraform.tfvars.sample", "test-resources.tf", "variables.tf", "README.md", "Corefile", "diagram.png", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "backend.tf.sample", "diagram.gcpdraw", "diagram.png", "main.tf", "outputs.tf", "variables.tf", "versions.tf", ".terraform.tfstate.lock.info", "README.md", "diagram.png", "locals.tf", "main.tf", "outputs.tf", "test-resources.tf", "variables.tf", "README.md", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "instance_group.tf", "main.tf", "outputs.tf", "variables.tf", ".gitignore", "README.md", "Corefile", "Corefile-hosts", "README.md", "cloud-config.yaml", "instance.tf", "main.tf", "outputs-instance.tf", "outputs.tf", "variables-instance.tf", "variables.tf", "instance.tf", ".gitignore", "README.md", "cloud-config.yaml", "instance.tf", "main.tf", "outputs-instance.tf", "outputs.tf", "variables-instance.tf", "variables.tf", "outputs-instance.tf", "variables-instance.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "locals.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "Corefile", "dynamic-vpn-gw-cloud-init.yaml", "static-vpn-gw-cloud-init.yaml", "main.tf", "outputs.tf", "variables.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "__init__.py", "conftest.py", "__init__.py", "terraform.tfvars", "test_folders.py", "test_outputs.py", "test_projects.py", "test_service_accounts.py", "__init__.py", "conftest.py", "main.tf", "variables.tf", "terraform.tfvars", "test_outputs.py", "test_plan.py", "test_projects.py", "test_service_accounts.py", "terraform.tfvars", "test_cloud_routers.py", "test_firewall.py", "test_outputs.py", "test_vpns.py", "conftest.py", "terraform.tfvars", "test_outputs.py", "test_svpc_resources.py", "__init__.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "test_plan_group.py", "__init__.py", "main.tf", "outputs.tf", "variables.tf", "test_apply.py", "__init__.py", "main.tf", "outputs.tf", "variables.tf", "test_apply.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "test_plan_subnets.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "requirements.txt", "tfdoc.py"]}, {"id": "036b9ea95085163313f70cefbaf85e4e07a7543c", "msg": "Obey var.iam_billing_config.grant (#113)\n\n* Update main.tf\r\n\r\n* Update main.tf", "date": "2020-07-15 13:18:42+02:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/combinator-ml/terraform-google-kubernetes.git", "commits": [{"id": "703ef359dbe7d4d2f2bbf9c0bbd31f5b4bc30e68", "msg": "feat: initial cheap gke cluster", "date": "2021-05-12 20:32:56+01:00", "modified_files": [".gitignore", "component.tf", "main.tf", "iam.tf", "kubernetes.tf", "locals.tf", "variables.tf"]}, {"id": "27deaade65fd58e978b0a604c6c3fcd6683306bb", "msg": "feat: add cheap(est) cpu autoscaling example", "date": "2021-05-15 13:06:17+01:00", "modified_files": [".header.md", "main.tf", "kubernetes.tf"]}]}, {"name": "https://github.com/davidjeddy/aws_terraform_lambda_vpc_endpoint.git", "commits": [{"id": "6c2be85a0c61e8d450649cdb631b85a5c5509137", "msg": "MOVED private lambda into private_lambda_0. UPDATED private lambda src code to output TEST event json payload.", "date": "2020-03-29 14:15:31-04:00", "modified_files": ["BLOG.md", ".terraform.tfstate.lock.info", "index.py", "file.zip", "policy.json", "role.json", "output.tf", "resource.tf", "index.py", "variables.tf", "modules.tf", "security_group.tf"]}]}, {"name": "https://github.com/tsirlucas/soundplace-infra.git", "commits": [{"id": "0dba111409b459a1501c84a16d0fa4ff95610438", "msg": "fix(project): v3 update + billing fixes", "date": "2018-08-13 00:20:44-03:00", "modified_files": ["main.tf", "cluster.tf", "autoescaling.tf", "gateway.tf", "rcontrollers.tf", "main.tf"]}]}, {"name": "https://github.com/cob16/aws_static_website.git", "commits": [{"id": "0d4fbd0a7b296a5c9377a835dff89d1499716082", "msg": "add pagerduty alerting\n\nThis is to avoid this site becoming unexpectedly expensive based of high traffic", "date": "2020-08-18 22:24:19+01:00", "modified_files": ["README.md", "example.tfvars", "main.tf", "service.tf", "sns-subscription.tf", "variables.tf", "outputs.tf", "sns.tf", "variables.tf", "outputs.tf", "alarms.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/zbmowrey/version-control.git", "commits": [{"id": "647981dc60d3c59317b2e9a6e358f5a7045a82a2", "msg": "Add cost-anomaly-tool repo", "date": "2022-02-13 11:29:37-05:00", "modified_files": ["repo-zbmowrey-cost-anomaly-tool.tf"]}]}, {"name": "https://github.com/rhoribe/terraform-lab.git", "commits": [{"id": "912b06587b45ce75b1fe637db13f8604025a56ec", "msg": "test infracost", "date": "2022-02-05 15:11:39-03:00", "modified_files": ["main.tf"]}, {"id": "c0214828468563a6edc275f38cf2ac3b1bdf6d46", "msg": "test infracost", "date": "2022-02-05 15:12:39-03:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/deadlysyn/terraform-keycloak-aws.git", "commits": [{"id": "1c982ac4120ae3ed5a88c38f2a4d568ad9a83d22", "msg": "use cheaper graviton rds instance type", "date": "2021-09-21 20:54:03-04:00", "modified_files": ["terraform.tfvars"]}]}, {"name": "https://github.com/steven85048/Expense_Tracker.git", "commits": [{"id": "0452de12bc8db5e69046cab81bd227e085240a8d", "msg": "Loosen resource matching on passrole; transaction-service successfully deployed! Start to add ansible-playbook configuration for expense-tracker", "date": "2019-10-25 13:29:01-07:00", "modified_files": ["cd-push-host.tf", "vars.tf"]}, {"id": "9a778a09cb8ae6611c8c604c22df373f7f66fe9a", "msg": "Add and deploy ecr for expense_tracker", "date": "2019-12-05 23:15:52-07:00", "modified_files": ["ecr.tf", "main.tf", "terragrunt.hcl", "vars.tf", "versions.tf"]}]}, {"name": "https://github.com/GSA/odp-tf-aws-ref-arch-iam.git", "commits": [{"id": "1fb90375378f4550513c42c71673adff46a00955", "msg": "Update - removing deployer user and unique attached policies.  Removing the billing admin groups and policies.", "date": "2019-12-17 15:31:34-05:00", "modified_files": ["assume_billing_management.json", "billing_management.json", "iam_admin_operations.json", "restrict_region_ci.json", "user_deployer.json", "main.tf", "assume_full_admin_management.tpl", "assume_iam_admin_operations.tpl", "remote_access.tpl"]}, {"id": "d11c46d0484a7a2674bbb81373a5bc7497175b7d", "msg": "Update - removing deployer user and unique attached policies.  Removing the billing admin groups and policies.", "date": "2019-12-17 15:34:07-05:00", "modified_files": ["main.tf"]}, {"id": "a2f7e672ab00d034e8f5242ccf81e130e88a9434", "msg": "Update - removing deployer user and unique attached policies.  Removing the billing admin groups and policies.", "date": "2019-12-17 15:46:15-05:00", "modified_files": ["main.tf"]}, {"id": "1f286fd7394f31ac80154be0034d623f40cbfb04", "msg": "Update - removing deployer user and unique attached policies.  Removing the billing admin groups and policies.", "date": "2019-12-17 15:50:54-05:00", "modified_files": ["main.tf"]}, {"id": "30bb0de4f29d0e6da0c9b2746841e2fc0cd8e556", "msg": "Update - removing deployer user and unique attached policies.  Removing the billing admin groups and policies.", "date": "2019-12-17 16:03:23-05:00", "modified_files": ["main.tf"]}, {"id": "73895c62a4493404ce3a4cb713e5602fd70f8f75", "msg": "Update - removing deployer user and unique attached policies.  Removing the billing admin groups and policies.", "date": "2019-12-17 16:11:25-05:00", "modified_files": ["main.tf"]}, {"id": "636c9816ece15f42ef62363610a73544e7bdaaf0", "msg": "Update - removing deployer user and unique attached policies.  Removing the billing admin groups and policies.", "date": "2019-12-17 16:16:43-05:00", "modified_files": ["main.tf"]}, {"id": "2bc4db7480ac99450ac3a54d0234fb6ea421ee84", "msg": "Update - removing deployer user and unique attached policies.  Removing the billing admin groups and policies.", "date": "2019-12-17 16:19:14-05:00", "modified_files": ["main.tf"]}, {"id": "dbb49a037709ce831334c8ead7fef2f3da3fa1ce", "msg": "Update - removing deployer user and unique attached policies.  Removing the billing admin groups and policies.", "date": "2019-12-17 16:23:43-05:00", "modified_files": ["main.tf"]}, {"id": "2f1ac9a96d3027ecf4a5749b48acd05a91b844b7", "msg": "Update - removing deployer user and unique attached policies.  Removing the billing admin groups and policies.", "date": "2019-12-17 16:36:18-05:00", "modified_files": ["main.tf", "assume_full_admin_management.tpl", "assume_iam_admin_operations.tpl", "remote_access.tpl"]}, {"id": "8d37e4b5cd81ffadcc7cc3d1e741b928fbb7f9fb", "msg": "Update - removing deployer user and unique attached policies.  Removing the billing admin groups and policies.", "date": "2019-12-17 16:49:35-05:00", "modified_files": ["variables.tf"]}, {"id": "7645907c5533f9707b33cab3206ddfc568a5bab3", "msg": "Update - removing deployer user and unique attached policies.  Removing the billing admin groups and policies.", "date": "2019-12-17 17:26:13-05:00", "modified_files": ["remote_access.tpl", "variables.tf"]}]}, {"name": "https://github.com/rugamaga/rugamaga-terraform.git", "commits": [{"id": "6aedbc89a3b6885938a844db1eacd2a531808c12", "msg": "re-change dev-env machine-type\n\nbecause e2-micro needs 4 nodes for this env and it increase cost.", "date": "2020-08-09 15:18:44+09:00", "modified_files": ["variables_dev.tf"]}]}, {"name": "https://github.com/davidcelis/my-tfe.git", "commits": [{"id": "eb7709f2f643f01c6a57c7fe2376af903ab64ede", "msg": "Add workspace to test Cost Estimation", "date": "2019-06-26 18:35:32-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/JaredStufftGD/grok-airflow.git", "commits": [{"id": "7ac9544b0c651fd8193eb063079514d0aa41e290", "msg": "adding fargate spot as the capacity provider for the worker node for cost optimization", "date": "2021-03-31 10:18:05-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/rajesh-nitc/gcp-foundation.git", "commits": [{"id": "fc054a7183757d1e51e371e7329c5cf848cc6dd8", "msg": "feat:save costs for personal organization", "date": "2021-08-11 18:01:51+05:18", "modified_files": ["log_sinks.tf", "outputs.tf", "dns-hub.tf", "hierarchical_firewall.tf", "net-hubs.tf", "dns.tf", "main.tf", "outputs.tf", "variables.tf", "cicd_pipeline.tf", "README.md"]}, {"id": "eaf81b5f5ca1dbdd8951d4179a631818139566a5", "msg": "feat:destroy dns zones when not in use to save cost", "date": "2021-10-19 17:55:21+05:18", "modified_files": ["development_env.auto.tfvars", "main.tf", "variables.tf"]}, {"id": "0db462f5528100ece08d85366fc777cd59fad473", "msg": "feat:create spoke dns zones on demand to save cost", "date": "2021-11-07 00:19:52+05:18", "modified_files": ["main.tf", "terraform.tfvars", "variables.tf", "dns-hub.tf", "net-hubs-transitivity.tf", "net-hubs.tf", "dns.tf", "variables.tf"]}]}, {"name": "https://github.com/datarootsio/terraform-module-azure-datalake.git", "commits": [{"id": "4907fd7598d0083705494182d985c6b3b58db2c0", "msg": "Provision databricks resources with built-in token management (#29)\n\n* change default region to eastus2 for cheaper demos and faster provisioning\r\n\r\nhttps://azureprice.net/Region\r\n\r\n* use built-in token mgmt for databricks cluster creation\r\n\r\nCo-authored-by: samueldumont <samuel@dumont.info>", "date": "2020-04-24 21:19:58+02:00", "modified_files": ["databricks.tf", "main.tf", "variables.tf", "defaults.tfvars", "generate_databricks_token.sh", "variables.tf"]}]}, {"name": "https://github.com/mintak21/terraform-old.git", "commits": [{"id": "c10b476d869282ed6cf55def47445b9c703788fe", "msg": "Add aws bill alert :sparkles: (#6)\n\n* [feat] add budget cost module :sparkles:\r\n\r\n* [feat] add budget notification alert :sparkles:\r\n\r\n* [feat] lambda notification go src ver1 :+1:\r\n\r\n* [feat] use logging library :orange_book:\r\n\r\n* [feat] add lambda module :sparkles:\r\n\r\n* [structure] rename dir :railway_car:\r\n\r\n* [fear] create Makefile :sparkles:\r\n\r\n* [feat] fix details :shirt:\r\n\r\n* [feat] put ssm_parameter by terraform :sparkles:\r\n\r\n* [fix] make terraform formt :orange_book:\r\n\r\n* [fix] fix method scope :shirt:\r\n\r\n* [fix] fix dependency :bug:\r\n\r\n* [fix] del unused data :shirt:\r\n\r\n* [feat] add cloudwatch logs module :sparkles:", "date": "2020-07-18 22:29:59+09:00", "modified_files": ["Makefile", "Makefile", "backend.tf", "go.mod", "go.sum", "main.go", "main.tf", "output.tf", "providers.tf", "variables.tf", "Makefile", "main.tf", "output.tf", "variables.tf", "main.tf", "output.tf", "variables.tf", "main.tf", "output.tf", "variables.tf"]}]}, {"name": "https://github.com/mahakamcloud/single-iface-libvirt-domain-pg.git", "commits": [{"id": "000e932c7e86eacb14d5b560e197b33b530689d3", "msg": "Fix curl payload\n\nCo-authored-by: Himani Agrawal <himani93@gmail.com>", "date": "2019-04-30 16:48:41+05:18", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/ministryofjustice/hmpps-env-configs.git", "commits": [{"id": "64d9da482a81fd1a841c309ba79fd2f6c9f2e858", "msg": "Feature/rebase-master (#800)\n\n* Test Values\r\n\r\n* Add high availabilty count var\r\n\r\n* Updating GD\r\n\r\n* Test value\r\n\r\n* Update GDPR to version 0.12.0\r\n\r\n* Test value\r\n\r\n* Change test value back\r\n\r\n* Replace database_standby_unique_name with database_standby_unique and database_standby_sid\r\n\r\n* Deploy UMT 1.7.0 to Stage\r\n\r\n* Update default non-prod version to latest snapshot\r\n\r\n* Add Management Packs where Licenced According to Spreadsheet\r\n\r\n* Remove Non-Existent MIS Hosts\r\n\r\n* AP Tracker API uplift to 1.13\r\n\r\n* GDPR Uplift to 0.13.0\r\n\r\n* Uplift GDPR to 0.13.0\r\n\r\n* Update UMT to 1.7.1 in Stage\r\n\r\n* adding vars for autostop lambda\r\n\r\n* enable lambda ec2 and asg schedule\r\n\r\n* DAM-785 remove SPG image version from config\r\n\r\n* Dev/dam 919 (#759)\r\n\r\n* DAM-919 Align ECS docker stop timeout with camel shutdown strategy\r\n\r\n* DAM-919 Add ecs minimum healthy percent\r\n\r\n* image_verson should no longer be in spg.tfvars (#768)\r\n\r\nIt is controlled from the jenkins deployment jobs\r\n\r\n* DAM-1014 Fix cludwatch aMQ widgets (#779)\r\n\r\nCo-authored-by: bill-buchan <55987520+bill-buchan@users.noreply.github.com>\r\nCo-authored-by: Paul Miller <paul.miller@bconline.co.uk>\r\nCo-authored-by: Marcus Aspin <maspin@unilink.com>\r\nCo-authored-by: ranbeersingh1 <43067999+ranbeersingh1@users.noreply.github.com>\r\nCo-authored-by: enyambudzi <e.nyambudzi@googlemail.com>\r\nCo-authored-by: Don Nyambudzi <Don.Nyambudzi@madiro.co.uk>\r\nCo-authored-by: Paul Crimes <paul.crimes@solirius.com>\r\nCo-authored-by: Mark Butler <42868152+mark-butler-solirius@users.noreply.github.com>", "date": "2020-02-25 15:44:03+00:00", "modified_files": ["common.tfvars", "common.properties", "common.tfvars", "delius-auto-test.properties", "delius-auto-test.tfvars", "delius-core-dev.properties", "delius-core-dev.tfvars", "delius-core-sandpit.properties", "delius-core-sandpit.tfvars", "delius-core.tfvars", "mis_standbydb1.yml", "mis_standbydb2.yml", "misboe_standbydb1.yml", "misboe_standbydb2.yml", "misdsd_standbydb1.yml", "misdsd_standbydb2.yml", "hosts", "delius_primarydb.yml", "delius_standbydb1.yml", "delius_standbydb2.yml", "mis_primarydb.yml", "mis_standbydb1.yml", "mis_standbydb2.yml", "delius_primarydb.yml", "delius_standbydb1.yml", "delius_standbydb2.yml", "mis_primarydb.yml", "mis_standbydb1.yml", "mis_standbydb2.yml", "misboe_primarydb.yml", "misboe_standbydb1.yml", "misboe_standbydb2.yml", "delius-core.tfvars"]}, {"id": "62834c96ee50e10a5ebbb29ed024b82a0bb14299", "msg": "Release/dam 6447 spg 2 5 5 (#861)\n\n* Test Values\r\n\r\n* Add high availabilty count var\r\n\r\n* Updating GD\r\n\r\n* Test value\r\n\r\n* Update GDPR to version 0.12.0\r\n\r\n* Test value\r\n\r\n* Change test value back\r\n\r\n* Replace database_standby_unique_name with database_standby_unique and database_standby_sid\r\n\r\n* Deploy UMT 1.7.0 to Stage\r\n\r\n* Update default non-prod version to latest snapshot\r\n\r\n* Add Management Packs where Licenced According to Spreadsheet\r\n\r\n* Remove Non-Existent MIS Hosts\r\n\r\n* AP Tracker API uplift to 1.13\r\n\r\n* GDPR Uplift to 0.13.0\r\n\r\n* Uplift GDPR to 0.13.0\r\n\r\n* Update UMT to 1.7.1 in Stage\r\n\r\n* adding vars for autostop lambda\r\n\r\n* enable lambda ec2 and asg schedule\r\n\r\n* ND Version -> 4.5.5\r\n\r\n* DT-466 Turn on booking number updates in production\r\n\r\n* Defined the patch ID and variables so jenkins knows what file to download and apply\r\n\r\n* Updated the correct files, removed the error in all.yml\r\n\r\n* NDelius -> 4.6.1\r\n\r\n* adding vars to enable/disable lambda event rule (#805)\r\n\r\n* temporarily disabling autostart in dev and autotest\r\n\r\n* DAM-785 remove SPG image version from config\r\n\r\n* Dev/dam 919 (#759)\r\n\r\n* DAM-919 Align ECS docker stop timeout with camel shutdown strategy\r\n\r\n* DAM-919 Add ecs minimum healthy percent\r\n\r\n* image_verson should no longer be in spg.tfvars (#768)\r\n\r\nIt is controlled from the jenkins deployment jobs\r\n\r\n* DAM-1014 Fix cludwatch aMQ widgets (#779)\r\n\r\n* fix minimum healthy deploy to 100%\r\n\r\n* Remove the \"latest\" image tag\r\n\r\nCo-authored-by: bill-buchan <bill.buchan@digital.justice.gov.uk>\r\nCo-authored-by: ranbeersingh1 <ranbeersingh@Ranbeers-MacBook-Pro.local>\r\nCo-authored-by: bill-buchan <55987520+bill-buchan@users.noreply.github.com>\r\nCo-authored-by: Paul Miller <paul.miller@bconline.co.uk>\r\nCo-authored-by: Marcus Aspin <maspin@unilink.com>\r\nCo-authored-by: ranbeersingh1 <43067999+ranbeersingh1@users.noreply.github.com>\r\nCo-authored-by: eddie nyambudzi <e.nyambudzi@googlemail.com>\r\nCo-authored-by: Don Nyambudzi <Don.Nyambudzi@madiro.co.uk>\r\nCo-authored-by: Andy Marke <andy.marke@gmail.com>\r\nCo-authored-by: Andy Marke <andy.marke@digital.justice.gov.uk>\r\nCo-authored-by: Isaiah Lakanu <ilakanu@googlemail.com>\r\nCo-authored-by: Semenu Aggor <semenu.aggor@solirius.com>\r\nCo-authored-by: Paul Crimes <paul.crimes@solirius.com>\r\nCo-authored-by: Martin Spasov <martin.y.spasov@gmail.com>\r\nCo-authored-by: Mark Butler <mgb777@outlook.com>", "date": "2020-03-20 10:00:32+00:00", "modified_files": ["spg.tfvars", "all.yml", "spg.tfvars", "delius-core-sandpit.tfvars", "spg.tfvars", "spg.tfvars", "spg.tfvars", "delius_primarydb.yml", "delius_standbydb1.yml", "delius_standbydb2.yml", "new-tech.tfvars", "spg.tfvars", "all.yml", "spg.tfvars"]}, {"id": "627f0230eec5245eaa8462540c4aaf6b5220dd44", "msg": "Develop (#872)\n\n* DAM-785 remove SPG image version from config\r\n\r\n* Dev/dam 919 (#759)\r\n\r\n* DAM-919 Align ECS docker stop timeout with camel shutdown strategy\r\n\r\n* DAM-919 Add ecs minimum healthy percent\r\n\r\n* image_verson should no longer be in spg.tfvars (#768)\r\n\r\nIt is controlled from the jenkins deployment jobs\r\n\r\n* DAM-1014 Fix cludwatch aMQ widgets (#779)\r\n\r\n* Feature/rebase-master (#800)\r\n\r\n* Test Values\r\n\r\n* Add high availabilty count var\r\n\r\n* Updating GD\r\n\r\n* Test value\r\n\r\n* Update GDPR to version 0.12.0\r\n\r\n* Test value\r\n\r\n* Change test value back\r\n\r\n* Replace database_standby_unique_name with database_standby_unique and database_standby_sid\r\n\r\n* Deploy UMT 1.7.0 to Stage\r\n\r\n* Update default non-prod version to latest snapshot\r\n\r\n* Add Management Packs where Licenced According to Spreadsheet\r\n\r\n* Remove Non-Existent MIS Hosts\r\n\r\n* AP Tracker API uplift to 1.13\r\n\r\n* GDPR Uplift to 0.13.0\r\n\r\n* Uplift GDPR to 0.13.0\r\n\r\n* Update UMT to 1.7.1 in Stage\r\n\r\n* adding vars for autostop lambda\r\n\r\n* enable lambda ec2 and asg schedule\r\n\r\n* DAM-785 remove SPG image version from config\r\n\r\n* Dev/dam 919 (#759)\r\n\r\n* DAM-919 Align ECS docker stop timeout with camel shutdown strategy\r\n\r\n* DAM-919 Add ecs minimum healthy percent\r\n\r\n* image_verson should no longer be in spg.tfvars (#768)\r\n\r\nIt is controlled from the jenkins deployment jobs\r\n\r\n* DAM-1014 Fix cludwatch aMQ widgets (#779)\r\n\r\nCo-authored-by: bill-buchan <55987520+bill-buchan@users.noreply.github.com>\r\nCo-authored-by: Paul Miller <paul.miller@bconline.co.uk>\r\nCo-authored-by: Marcus Aspin <maspin@unilink.com>\r\nCo-authored-by: ranbeersingh1 <43067999+ranbeersingh1@users.noreply.github.com>\r\nCo-authored-by: enyambudzi <e.nyambudzi@googlemail.com>\r\nCo-authored-by: Don Nyambudzi <Don.Nyambudzi@madiro.co.uk>\r\nCo-authored-by: Paul Crimes <paul.crimes@solirius.com>\r\nCo-authored-by: Mark Butler <42868152+mark-butler-solirius@users.noreply.github.com>\r\n\r\n* Release/dam 6447 spg 2 5 5 (#861)\r\n\r\n* Test Values\r\n\r\n* Add high availabilty count var\r\n\r\n* Updating GD\r\n\r\n* Test value\r\n\r\n* Update GDPR to version 0.12.0\r\n\r\n* Test value\r\n\r\n* Change test value back\r\n\r\n* Replace database_standby_unique_name with database_standby_unique and database_standby_sid\r\n\r\n* Deploy UMT 1.7.0 to Stage\r\n\r\n* Update default non-prod version to latest snapshot\r\n\r\n* Add Management Packs where Licenced According to Spreadsheet\r\n\r\n* Remove Non-Existent MIS Hosts\r\n\r\n* AP Tracker API uplift to 1.13\r\n\r\n* GDPR Uplift to 0.13.0\r\n\r\n* Uplift GDPR to 0.13.0\r\n\r\n* Update UMT to 1.7.1 in Stage\r\n\r\n* adding vars for autostop lambda\r\n\r\n* enable lambda ec2 and asg schedule\r\n\r\n* ND Version -> 4.5.5\r\n\r\n* DT-466 Turn on booking number updates in production\r\n\r\n* Defined the patch ID and variables so jenkins knows what file to download and apply\r\n\r\n* Updated the correct files, removed the error in all.yml\r\n\r\n* NDelius -> 4.6.1\r\n\r\n* adding vars to enable/disable lambda event rule (#805)\r\n\r\n* temporarily disabling autostart in dev and autotest\r\n\r\n* DAM-785 remove SPG image version from config\r\n\r\n* Dev/dam 919 (#759)\r\n\r\n* DAM-919 Align ECS docker stop timeout with camel shutdown strategy\r\n\r\n* DAM-919 Add ecs minimum healthy percent\r\n\r\n* image_verson should no longer be in spg.tfvars (#768)\r\n\r\nIt is controlled from the jenkins deployment jobs\r\n\r\n* DAM-1014 Fix cludwatch aMQ widgets (#779)\r\n\r\n* fix minimum healthy deploy to 100%\r\n\r\n* Remove the \"latest\" image tag\r\n\r\nCo-authored-by: bill-buchan <bill.buchan@digital.justice.gov.uk>\r\nCo-authored-by: ranbeersingh1 <ranbeersingh@Ranbeers-MacBook-Pro.local>\r\nCo-authored-by: bill-buchan <55987520+bill-buchan@users.noreply.github.com>\r\nCo-authored-by: Paul Miller <paul.miller@bconline.co.uk>\r\nCo-authored-by: Marcus Aspin <maspin@unilink.com>\r\nCo-authored-by: ranbeersingh1 <43067999+ranbeersingh1@users.noreply.github.com>\r\nCo-authored-by: eddie nyambudzi <e.nyambudzi@googlemail.com>\r\nCo-authored-by: Don Nyambudzi <Don.Nyambudzi@madiro.co.uk>\r\nCo-authored-by: Andy Marke <andy.marke@gmail.com>\r\nCo-authored-by: Andy Marke <andy.marke@digital.justice.gov.uk>\r\nCo-authored-by: Isaiah Lakanu <ilakanu@googlemail.com>\r\nCo-authored-by: Semenu Aggor <semenu.aggor@solirius.com>\r\nCo-authored-by: Paul Crimes <paul.crimes@solirius.com>\r\nCo-authored-by: Martin Spasov <martin.y.spasov@gmail.com>\r\nCo-authored-by: Mark Butler <mgb777@outlook.com>\r\n\r\n* Release/dst 6558 spg 2.5.6 (#863)\r\n\r\n* Test Values\r\n\r\n* Add high availabilty count var\r\n\r\n* Updating GD\r\n\r\n* Test value\r\n\r\n* Update GDPR to version 0.12.0\r\n\r\n* Test value\r\n\r\n* Change test value back\r\n\r\n* Replace database_standby_unique_name with database_standby_unique and database_standby_sid\r\n\r\n* Deploy UMT 1.7.0 to Stage\r\n\r\n* Update default non-prod version to latest snapshot\r\n\r\n* Add Management Packs where Licenced According to Spreadsheet\r\n\r\n* Remove Non-Existent MIS Hosts\r\n\r\n* AP Tracker API uplift to 1.13\r\n\r\n* GDPR Uplift to 0.13.0\r\n\r\n* Uplift GDPR to 0.13.0\r\n\r\n* Update UMT to 1.7.1 in Stage\r\n\r\n* adding vars for autostop lambda\r\n\r\n* enable lambda ec2 and asg schedule\r\n\r\n* ND Version -> 4.5.5\r\n\r\n* DT-466 Turn on booking number updates in production\r\n\r\n* Defined the patch ID and variables so jenkins knows what file to download and apply\r\n\r\n* Updated the correct files, removed the error in all.yml\r\n\r\n* NDelius -> 4.6.1\r\n\r\n* adding vars to enable/disable lambda event rule (#805)\r\n\r\n* temporarily disabling autostart in dev and autotest\r\n\r\n* DAM-785 remove SPG image version from config\r\n\r\n* Dev/dam 919 (#759)\r\n\r\n* DAM-919 Align ECS docker stop timeout with camel shutdown strategy\r\n\r\n* DAM-919 Add ecs minimum healthy percent\r\n\r\n* image_verson should no longer be in spg.tfvars (#768)\r\n\r\nIt is controlled from the jenkins deployment jobs\r\n\r\n* DAM-1014 Fix cludwatch aMQ widgets (#779)\r\n\r\n* fix minimum healthy deploy to 100%\r\n\r\n* Remove the \"latest\" image tag\r\n\r\nCo-authored-by: bill-buchan <bill.buchan@digital.justice.gov.uk>\r\nCo-authored-by: ranbeersingh1 <ranbeersingh@Ranbeers-MacBook-Pro.local>\r\nCo-authored-by: bill-buchan <55987520+bill-buchan@users.noreply.github.com>\r\nCo-authored-by: Paul Miller <paul.miller@bconline.co.uk>\r\nCo-authored-by: Marcus Aspin <maspin@unilink.com>\r\nCo-authored-by: ranbeersingh1 <43067999+ranbeersingh1@users.noreply.github.com>\r\nCo-authored-by: eddie nyambudzi <e.nyambudzi@googlemail.com>\r\nCo-authored-by: Don Nyambudzi <Don.Nyambudzi@madiro.co.uk>\r\nCo-authored-by: Andy Marke <andy.marke@gmail.com>\r\nCo-authored-by: Andy Marke <andy.marke@digital.justice.gov.uk>\r\nCo-authored-by: Isaiah Lakanu <ilakanu@googlemail.com>\r\nCo-authored-by: Semenu Aggor <semenu.aggor@solirius.com>\r\nCo-authored-by: Paul Crimes <paul.crimes@solirius.com>\r\nCo-authored-by: Martin Spasov <martin.y.spasov@gmail.com>\r\nCo-authored-by: Mark Butler <mgb777@outlook.com>\r\n\r\n* added dynamic env vars for alfresco config (#886)\r\n\r\n* added dynamic env vars for alfresco config\r\n\r\n* added proxy address env var\r\n\r\n* used SPG as prefix\r\n\r\n* added PO facing domains to env\r\n\r\n* set correct common folder for properties\r\n\r\n* Hotfix/als 281 remove pf config (#896)\r\n\r\n* Remove Purple Futures from the list of active POs\r\nThis will ensure that their endpoints are not deployed to MPX/ISO\r\n\r\n* Make sure that the DAM-695 branch is still deployed\r\nAnd that there are 3 instances of the MPX\r\n\r\n* Force remote refresh\r\n\r\n* The Purple Futures config removal for po-test1, pre-prod and prod\r\n\r\nCo-authored-by: Mark Butler <mgb777@outlook.com>\r\n\r\nCo-authored-by: Semenu Aggor <semenu.aggor@solirius.com>\r\nCo-authored-by: Paul Crimes <paul.crimes@solirius.com>\r\nCo-authored-by: Martin Spasov <martin.y.spasov@gmail.com>\r\nCo-authored-by: Mark Butler <mgb777@outlook.com>\r\nCo-authored-by: bill-buchan <55987520+bill-buchan@users.noreply.github.com>\r\nCo-authored-by: Paul Miller <paul.miller@bconline.co.uk>\r\nCo-authored-by: Marcus Aspin <maspin@unilink.com>\r\nCo-authored-by: ranbeersingh1 <43067999+ranbeersingh1@users.noreply.github.com>\r\nCo-authored-by: enyambudzi <e.nyambudzi@googlemail.com>\r\nCo-authored-by: Don Nyambudzi <Don.Nyambudzi@madiro.co.uk>\r\nCo-authored-by: bill-buchan <bill.buchan@digital.justice.gov.uk>\r\nCo-authored-by: ranbeersingh1 <ranbeersingh@Ranbeers-MacBook-Pro.local>\r\nCo-authored-by: Andy Marke <andy.marke@gmail.com>\r\nCo-authored-by: Andy Marke <andy.marke@digital.justice.gov.uk>\r\nCo-authored-by: Isaiah Lakanu <ilakanu@googlemail.com>", "date": "2020-04-07 16:45:53+01:00", "modified_files": [".gitignore", "spg.tfvars", "spg.tfvars", "spg.tfvars", "spg.tfvars", "parent-orgs.tfvars", "spg.tfvars", "parent-orgs.tfvars", "spg.tfvars", "parent-orgs.tfvars", "spg.tfvars", "spg.tfvars", "spg.tfvars"]}, {"id": "ccd52c6ce80cabd3aebd87964c63ec80b1895172", "msg": "Release/spg 2.6.1 master merge (#985)\n\n* NDelius => 4.6.10\r\n\r\n* delius-test UMT version to latest\r\n\r\n* Added ansible config for the new databases\r\n\r\n* added github action\r\n\r\n* remove tag action until team agrees\r\n\r\n* github action to tag after merge\r\n\r\n* Added detail of action to readme\r\n\r\n* Patching for Prod\r\n\r\n* Corrected the db name for delius-int\r\n\r\n* Changed the remainig references to reflect new environment\r\n\r\n* Attached 'autostop' tag for asg & other instances\r\n\r\n* Update common.tfvars (#945)\r\n\r\n* removed-pos-access\r\n\r\n* Removed the branch deleter action as the authore explained GitHub has this already as an action.\r\n\r\n* Update all.yml\r\n\r\n* 4.6.10-session-persistence-2 to DEV\r\n\r\n* 4.6.10-session-persistence.1 on Dev\r\n\r\n* Throttle MIS Stage Backup Load by Spreading over 19 hours\r\n\r\n* rbac_version => 4.5.7\r\n\r\n* NDelius => 4.6.11\r\n\r\n* NDelius => 4.6.9\r\n\r\n* RBAC => 4.5.7\r\n\r\n* NDelius => 4.6.11\r\n\r\n* NDelius => 4_6_10-session-persistence_2\r\n\r\n* override file not getting picked up (#960)\r\n\r\n* override file not getting picked up\r\n\r\n* short tf var updated\r\n\r\n* Add Mike Halma read only user\r\n\r\n* Enable DSS batch job in Stage\r\n\r\n* NDelius -> 4_6_10-session-persistence_3\r\n\r\n* Uplift RBAC to 4.5.7 in Prod\r\n\r\n* Disable use of the 'strategic' zone in Prod, as it doesn't exist there yet\r\n\r\n* Remove some whitespace, so that the commented out account_id isn't matched by the hacky regex in delius-manual-deployments. The delius-manual-deployments repo will be updated next week to handle this scenario.\r\n\r\n* Enabled pre prod and training test for code pipeline\r\n\r\n* Uplift Delius to 4.6.12 in Pre-Prod and Training\r\n\r\n* Update common.tfvars\r\n\r\n* Enabling delius-training for codepipeline builds\r\n\r\n* Removed extra source line\r\n\r\n* updated IAPS configs\r\n\r\n* rempved ;\r\n\r\n* Update mis-dev rbac version to 4.5.7 (#976)\r\n\r\n* NDelius => 4.6.12\r\n\r\n* Turn off DSS integration while a bug is investigated\r\n\r\n* Update UMT to 1.7.3\r\n\r\n* Deploy session persistence build to perf\r\n\r\n* Added config for IAPS AMI\r\n\r\n* Remove session persistence changes from perf\r\n\r\n* Setting Perf to 4_6_10-session-persistence_3\r\n\r\nCo-authored-by: James MacBeth <56261600+jamesmacbeth-unilink@users.noreply.github.com>\r\nCo-authored-by: joseph-bcl <41573782+joseph-bcl@users.noreply.github.com>\r\nCo-authored-by: smjmoj <smjmoj@gmail.com>\r\nCo-authored-by: ChrisMKinsella <chris.kinsella@helkinsoft.com>\r\nCo-authored-by: bill-buchan <bill.buchan@digital.justice.gov.uk>\r\nCo-authored-by: ranbeersingh1 <43067999+ranbeersingh1@users.noreply.github.com>\r\nCo-authored-by: Isaiah Lakanu <ilakanu@googlemail.com>\r\nCo-authored-by: izzy-ol <30699331+izzy-ol@users.noreply.github.com>\r\nCo-authored-by: Zak Hammed <zak.hammed@digital.justice.gov.uk>\r\nCo-authored-by: Zak Hammed <35330323+zakqavalley@users.noreply.github.com>\r\nCo-authored-by: Don Nyambudzi <Don.Nyambudzi@madiro.co.uk>\r\nCo-authored-by: Marcus Aspin <maspin@unilink.com>\r\nCo-authored-by: Paul Miller <pmiller@unilink.com>\r\nCo-authored-by: ranbeersingh1 <ranbeersingh@Ranbeers-MacBook-Pro.local>\r\nCo-authored-by: bill-buchan <55987520+bill-buchan@users.noreply.github.com>\r\nCo-authored-by: Don Nyambudzi <Don.Nyambudzi@gmail.com>\r\nCo-authored-by: Andy Marke <andy.marke@digital.justice.gov.uk>", "date": "2020-05-26 14:41:58+01:00", "modified_files": ["tag-master-branch-on-merge.yaml", "README.md", "all.yml", "common.tfvars", "delius-core.tfvars", "all.yml", "oracle_11g.yml", "oracle_18c.yml", "oracle_19c.yml", "hosts", "delius-core.tfvars", "delius-core.tfvars", "ldap.yml", "all.yml", "all.yml", "ldap.yml", "common.properties", "delius-po-test1.properties", "all.yml", "ldap.yml", "delius-pre-prod.properties", "delius-core.tfvars", "all.yml", "ldap.yml", "delius-core.tfvars", "iaps.tfvars", "new-tech.tfvars", "zone_file.yml", "all.yml", "ldap.yml", "mis_primarydb.yml", "delius-core.tfvars", "iaps.tfvars", "all.yml", "delius_primarydb.yml", "delius-test.properties", "delius-core.tfvars", "delius-training-test.properties", "all.yml", "ldap.yml", "delius-training.properties"]}, {"id": "80e814bb0a3d580bf30c7ad61526a644fa5813d8", "msg": "Set number of HA in each env in conjuction with Ranbeer & Bill (DBAs)", "date": "2020-05-27 17:48:54+01:00", "modified_files": ["delius-core.tfvars", "delius-core.tfvars", "delius-core.tfvars", "delius-core.tfvars", "delius-core.tfvars", "delius-core.tfvars", "delius-core.tfvars", "delius-core.tfvars", "delius-core.tfvars", "delius-core.tfvars", "delius-core.tfvars"]}, {"id": "d1868ea1f4e57a71bc5b59ba070ce9010fe3fd20", "msg": "Develop (#1004)\n\n* DAM-785 remove SPG image version from config\r\n\r\n* Dev/dam 919 (#759)\r\n\r\n* DAM-919 Align ECS docker stop timeout with camel shutdown strategy\r\n\r\n* DAM-919 Add ecs minimum healthy percent\r\n\r\n* image_verson should no longer be in spg.tfvars (#768)\r\n\r\nIt is controlled from the jenkins deployment jobs\r\n\r\n* DAM-1014 Fix cludwatch aMQ widgets (#779)\r\n\r\n* Feature/rebase-master (#800)\r\n\r\n* Test Values\r\n\r\n* Add high availabilty count var\r\n\r\n* Updating GD\r\n\r\n* Test value\r\n\r\n* Update GDPR to version 0.12.0\r\n\r\n* Test value\r\n\r\n* Change test value back\r\n\r\n* Replace database_standby_unique_name with database_standby_unique and database_standby_sid\r\n\r\n* Deploy UMT 1.7.0 to Stage\r\n\r\n* Update default non-prod version to latest snapshot\r\n\r\n* Add Management Packs where Licenced According to Spreadsheet\r\n\r\n* Remove Non-Existent MIS Hosts\r\n\r\n* AP Tracker API uplift to 1.13\r\n\r\n* GDPR Uplift to 0.13.0\r\n\r\n* Uplift GDPR to 0.13.0\r\n\r\n* Update UMT to 1.7.1 in Stage\r\n\r\n* adding vars for autostop lambda\r\n\r\n* enable lambda ec2 and asg schedule\r\n\r\n* DAM-785 remove SPG image version from config\r\n\r\n* Dev/dam 919 (#759)\r\n\r\n* DAM-919 Align ECS docker stop timeout with camel shutdown strategy\r\n\r\n* DAM-919 Add ecs minimum healthy percent\r\n\r\n* image_verson should no longer be in spg.tfvars (#768)\r\n\r\nIt is controlled from the jenkins deployment jobs\r\n\r\n* DAM-1014 Fix cludwatch aMQ widgets (#779)\r\n\r\nCo-authored-by: bill-buchan <55987520+bill-buchan@users.noreply.github.com>\r\nCo-authored-by: Paul Miller <paul.miller@bconline.co.uk>\r\nCo-authored-by: Marcus Aspin <maspin@unilink.com>\r\nCo-authored-by: ranbeersingh1 <43067999+ranbeersingh1@users.noreply.github.com>\r\nCo-authored-by: enyambudzi <e.nyambudzi@googlemail.com>\r\nCo-authored-by: Don Nyambudzi <Don.Nyambudzi@madiro.co.uk>\r\nCo-authored-by: Paul Crimes <paul.crimes@solirius.com>\r\nCo-authored-by: Mark Butler <42868152+mark-butler-solirius@users.noreply.github.com>\r\n\r\n* Release/dam 6447 spg 2 5 5 (#861)\r\n\r\n* Test Values\r\n\r\n* Add high availabilty count var\r\n\r\n* Updating GD\r\n\r\n* Test value\r\n\r\n* Update GDPR to version 0.12.0\r\n\r\n* Test value\r\n\r\n* Change test value back\r\n\r\n* Replace database_standby_unique_name with database_standby_unique and database_standby_sid\r\n\r\n* Deploy UMT 1.7.0 to Stage\r\n\r\n* Update default non-prod version to latest snapshot\r\n\r\n* Add Management Packs where Licenced According to Spreadsheet\r\n\r\n* Remove Non-Existent MIS Hosts\r\n\r\n* AP Tracker API uplift to 1.13\r\n\r\n* GDPR Uplift to 0.13.0\r\n\r\n* Uplift GDPR to 0.13.0\r\n\r\n* Update UMT to 1.7.1 in Stage\r\n\r\n* adding vars for autostop lambda\r\n\r\n* enable lambda ec2 and asg schedule\r\n\r\n* ND Version -> 4.5.5\r\n\r\n* DT-466 Turn on booking number updates in production\r\n\r\n* Defined the patch ID and variables so jenkins knows what file to download and apply\r\n\r\n* Updated the correct files, removed the error in all.yml\r\n\r\n* NDelius -> 4.6.1\r\n\r\n* adding vars to enable/disable lambda event rule (#805)\r\n\r\n* temporarily disabling autostart in dev and autotest\r\n\r\n* DAM-785 remove SPG image version from config\r\n\r\n* Dev/dam 919 (#759)\r\n\r\n* DAM-919 Align ECS docker stop timeout with camel shutdown strategy\r\n\r\n* DAM-919 Add ecs minimum healthy percent\r\n\r\n* image_verson should no longer be in spg.tfvars (#768)\r\n\r\nIt is controlled from the jenkins deployment jobs\r\n\r\n* DAM-1014 Fix cludwatch aMQ widgets (#779)\r\n\r\n* fix minimum healthy deploy to 100%\r\n\r\n* Remove the \"latest\" image tag\r\n\r\nCo-authored-by: bill-buchan <bill.buchan@digital.justice.gov.uk>\r\nCo-authored-by: ranbeersingh1 <ranbeersingh@Ranbeers-MacBook-Pro.local>\r\nCo-authored-by: bill-buchan <55987520+bill-buchan@users.noreply.github.com>\r\nCo-authored-by: Paul Miller <paul.miller@bconline.co.uk>\r\nCo-authored-by: Marcus Aspin <maspin@unilink.com>\r\nCo-authored-by: ranbeersingh1 <43067999+ranbeersingh1@users.noreply.github.com>\r\nCo-authored-by: eddie nyambudzi <e.nyambudzi@googlemail.com>\r\nCo-authored-by: Don Nyambudzi <Don.Nyambudzi@madiro.co.uk>\r\nCo-authored-by: Andy Marke <andy.marke@gmail.com>\r\nCo-authored-by: Andy Marke <andy.marke@digital.justice.gov.uk>\r\nCo-authored-by: Isaiah Lakanu <ilakanu@googlemail.com>\r\nCo-authored-by: Semenu Aggor <semenu.aggor@solirius.com>\r\nCo-authored-by: Paul Crimes <paul.crimes@solirius.com>\r\nCo-authored-by: Martin Spasov <martin.y.spasov@gmail.com>\r\nCo-authored-by: Mark Butler <mgb777@outlook.com>\r\n\r\n* Release/dst 6558 spg 2.5.6 (#863)\r\n\r\n* Test Values\r\n\r\n* Add high availabilty count var\r\n\r\n* Updating GD\r\n\r\n* Test value\r\n\r\n* Update GDPR to version 0.12.0\r\n\r\n* Test value\r\n\r\n* Change test value back\r\n\r\n* Replace database_standby_unique_name with database_standby_unique and database_standby_sid\r\n\r\n* Deploy UMT 1.7.0 to Stage\r\n\r\n* Update default non-prod version to latest snapshot\r\n\r\n* Add Management Packs where Licenced According to Spreadsheet\r\n\r\n* Remove Non-Existent MIS Hosts\r\n\r\n* AP Tracker API uplift to 1.13\r\n\r\n* GDPR Uplift to 0.13.0\r\n\r\n* Uplift GDPR to 0.13.0\r\n\r\n* Update UMT to 1.7.1 in Stage\r\n\r\n* adding vars for autostop lambda\r\n\r\n* enable lambda ec2 and asg schedule\r\n\r\n* ND Version -> 4.5.5\r\n\r\n* DT-466 Turn on booking number updates in production\r\n\r\n* Defined the patch ID and variables so jenkins knows what file to download and apply\r\n\r\n* Updated the correct files, removed the error in all.yml\r\n\r\n* NDelius -> 4.6.1\r\n\r\n* adding vars to enable/disable lambda event rule (#805)\r\n\r\n* temporarily disabling autostart in dev and autotest\r\n\r\n* DAM-785 remove SPG image version from config\r\n\r\n* Dev/dam 919 (#759)\r\n\r\n* DAM-919 Align ECS docker stop timeout with camel shutdown strategy\r\n\r\n* DAM-919 Add ecs minimum healthy percent\r\n\r\n* image_verson should no longer be in spg.tfvars (#768)\r\n\r\nIt is controlled from the jenkins deployment jobs\r\n\r\n* DAM-1014 Fix cludwatch aMQ widgets (#779)\r\n\r\n* fix minimum healthy deploy to 100%\r\n\r\n* Remove the \"latest\" image tag\r\n\r\nCo-authored-by: bill-buchan <bill.buchan@digital.justice.gov.uk>\r\nCo-authored-by: ranbeersingh1 <ranbeersingh@Ranbeers-MacBook-Pro.local>\r\nCo-authored-by: bill-buchan <55987520+bill-buchan@users.noreply.github.com>\r\nCo-authored-by: Paul Miller <paul.miller@bconline.co.uk>\r\nCo-authored-by: Marcus Aspin <maspin@unilink.com>\r\nCo-authored-by: ranbeersingh1 <43067999+ranbeersingh1@users.noreply.github.com>\r\nCo-authored-by: eddie nyambudzi <e.nyambudzi@googlemail.com>\r\nCo-authored-by: Don Nyambudzi <Don.Nyambudzi@madiro.co.uk>\r\nCo-authored-by: Andy Marke <andy.marke@gmail.com>\r\nCo-authored-by: Andy Marke <andy.marke@digital.justice.gov.uk>\r\nCo-authored-by: Isaiah Lakanu <ilakanu@googlemail.com>\r\nCo-authored-by: Semenu Aggor <semenu.aggor@solirius.com>\r\nCo-authored-by: Paul Crimes <paul.crimes@solirius.com>\r\nCo-authored-by: Martin Spasov <martin.y.spasov@gmail.com>\r\nCo-authored-by: Mark Butler <mgb777@outlook.com>\r\n\r\n* added dynamic env vars for alfresco config (#886)\r\n\r\n* added dynamic env vars for alfresco config\r\n\r\n* added proxy address env var\r\n\r\n* used SPG as prefix\r\n\r\n* added PO facing domains to env\r\n\r\n* set correct common folder for properties\r\n\r\n* Hotfix/als 281 remove pf config (#896)\r\n\r\n* Remove Purple Futures from the list of active POs\r\nThis will ensure that their endpoints are not deployed to MPX/ISO\r\n\r\n* Make sure that the DAM-695 branch is still deployed\r\nAnd that there are 3 instances of the MPX\r\n\r\n* Force remote refresh\r\n\r\n* The Purple Futures config removal for po-test1, pre-prod and prod\r\n\r\nCo-authored-by: Mark Butler <mgb777@outlook.com>\r\n\r\n* Release/dst 6558 spg 2.5.6 (#927)\r\n\r\n* DAM-785 remove SPG image version from config\r\n\r\n* Dev/dam 919 (#759)\r\n\r\n* DAM-919 Align ECS docker stop timeout with camel shutdown strategy\r\n\r\n* DAM-919 Add ecs minimum healthy percent\r\n\r\n* image_verson should no longer be in spg.tfvars (#768)\r\n\r\nIt is controlled from the jenkins deployment jobs\r\n\r\n* DAM-1014 Fix cludwatch aMQ widgets (#779)\r\n\r\n* fix minimum healthy deploy to 100%\r\n\r\n* Remove the \"latest\" image tag\r\n\r\n* updated hosted zone\r\n\r\n* aligned sizing configs with original DAM-695 release branch\r\n\r\n* synced PO vars with DAM 695 releae branch\r\n\r\nCo-authored-by: Semenu Aggor <semenu.aggor@solirius.com>\r\nCo-authored-by: Paul Crimes <paul.crimes@solirius.com>\r\nCo-authored-by: Martin Spasov <martin.y.spasov@gmail.com>\r\nCo-authored-by: Mark Butler <mgb777@outlook.com>\r\n\r\n* ALS-573\r\n- Added internal schema version\r\n\r\n* ALS-573\r\n- Added PO schema version for sandpit\r\n\r\n* ALS-573 renamed and reconfigured crc stub schema version mappings\r\n- POSTUB prefix removed from env var as the configs relate to all CRCs\r\n- lower environments up to and including delius test mirror the current requirements of MTS team (schema 0-9-14 for CRCS C01, C14 - schema 0-9-13 for others)\r\n- all higher integrated environments set to match what is required in production (MTC C16 & C17 set to 0-9-13, all others to 0-9-14)\r\n- universally, this means C01 & C14 are the only CRCs that share the same schema version everywhere\r\n\r\n* Added all envs for environment config. 0-9-14 for all environments from test (#955)\r\n\r\n* Remove the 2 DIGITAL_STUDIO ip addresses from the spg-parent-ors.tfvars in every env\r\nThese are now specified in their own individual security groups in spg-haproxy\r\n\r\nCo-authored-by: Semenu Aggor <semenu.aggor@solirius.com>\r\nCo-authored-by: Paul Crimes <paul.crimes@solirius.com>\r\nCo-authored-by: Martin Spasov <martin.y.spasov@gmail.com>\r\nCo-authored-by: Mark Butler <mgb777@outlook.com>\r\nCo-authored-by: bill-buchan <55987520+bill-buchan@users.noreply.github.com>\r\nCo-authored-by: Paul Miller <paul.miller@bconline.co.uk>\r\nCo-authored-by: Marcus Aspin <maspin@unilink.com>\r\nCo-authored-by: ranbeersingh1 <43067999+ranbeersingh1@users.noreply.github.com>\r\nCo-authored-by: enyambudzi <e.nyambudzi@googlemail.com>\r\nCo-authored-by: Don Nyambudzi <Don.Nyambudzi@madiro.co.uk>\r\nCo-authored-by: bill-buchan <bill.buchan@digital.justice.gov.uk>\r\nCo-authored-by: ranbeersingh1 <ranbeersingh@Ranbeers-MacBook-Pro.local>\r\nCo-authored-by: Andy Marke <andy.marke@gmail.com>\r\nCo-authored-by: Andy Marke <andy.marke@digital.justice.gov.uk>\r\nCo-authored-by: Isaiah Lakanu <ilakanu@googlemail.com>", "date": "2020-06-03 09:09:01+01:00", "modified_files": ["parent-orgs.tfvars", "parent-orgs.tfvars", "parent-orgs.tfvars", "spg.tfvars", "parent-orgs.tfvars", "spg.tfvars", "parent-orgs.tfvars", "spg.tfvars", "parent-orgs.tfvars", "spg.tfvars", "parent-orgs.tfvars", "spg.tfvars", "parent-orgs.tfvars", "spg.tfvars", "parent-orgs.tfvars", "spg.tfvars", "parent-orgs.tfvars", "spg.tfvars", "parent-orgs.tfvars", "spg.tfvars", "parent-orgs.tfvars", "spg.tfvars", "parent-orgs.tfvars", "spg.tfvars"]}, {"id": "0328838420ac0d3754cf772a7d2f5bb1612193ed", "msg": "Added configuration for LDAP EFS + reduced specs for root EBS volume\n\nProvisioned IOPS is no longer required for the root volume, as the LDAP data is now hosted on EFS. This should result in an EBS cost reduction.", "date": "2020-12-16 11:18:40+00:00", "modified_files": ["common.tfvars", "common.tfvars"]}, {"id": "28e80387490ac5303782b4762f1d42cac394464c", "msg": "ALS-1712 Set ActiveMQ EFS throughput to 16MiB/s\n\nFollowing performance test results, and risk/cost evaluation here: https://jira.engineering-dev.probation.hmpps.dsd.io/browse/ALS-1712", "date": "2021-01-14 11:13:16+00:00", "modified_files": ["common.tfvars"]}, {"id": "670c006bad288d0360c3811aa63b3c323753c385", "msg": "ALS-3882 Set LDAP instance type to m5.8xlarge\nEven though m5.8xlarge ($1.776) has more memory, it costs less than the c5.9xlarge ($1.818) in the eu-west-2 region", "date": "2021-07-07 11:02:37+01:00", "modified_files": ["common.tfvars"]}, {"id": "954dda617d47007a8a1ff5780d3174e900e95be1", "msg": "Reducde DFI Instances size for identified cost savings", "date": "2021-08-25 10:46:18+01:00", "modified_files": ["mis.tfvars"]}]}, {"name": "https://github.com/nephosolutions/terraform-google-gcp-project.git", "commits": [{"id": "908c3fd85a60090cdd06f6f4b46893ceeeaf99fb", "msg": "enable cloudbilling.googleapis.com by default\n\nThe Cloud Billing API is required to attach a billing account to the\nproject.", "date": "2019-09-20 22:08:04+02:00", "modified_files": ["CHANGELOG.md", "main.tf"]}]}, {"name": "https://github.com/cmartinsjr/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/yveshwang/paywall.git", "commits": [{"id": "d73b7d141ebe87e353b17537e3e3421f7bc9b79e", "msg": "added  paywall.test.gneis.io", "date": "2017-10-03 16:01:39+02:00", "modified_files": ["demo.tf", "terraform.tfstate"]}]}, {"name": "https://github.com/Tripstagger-AA/tripstagger-google-infrastructure.git", "commits": [{"id": "35cb09210e5d7c95e3bce8d92911407d4366cda5", "msg": "chore(Orchestration): Cleanup expensive kubernetes", "date": "2022-04-19 22:53:47+02:00", "modified_files": ["main.tf", "outputs.tf"]}, {"id": "d89eab7b799c356608b95264ee04beb52f99c242", "msg": "feat(Cluster): Cheap gke configuration", "date": "2022-04-20 09:40:04+02:00", "modified_files": ["gke.tf", "gloo.tf", "http.tf", "https.tf", "load-balancer.tf", "main.tf", "nat.tf", "providers.tf", "install-gloo.sh", "values.yaml", "variables.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/jackofallops/terraform-aws-mysql-cluster.git", "commits": [{"id": "7b2a446b0915a3ad26093f8234f7493ff152138a", "msg": "Update variables.tf\n\nReduced default values for cost purposes during development...", "date": "2018-08-21 10:14:28+01:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/bphan75/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/cloudposse/terraform-aws-ecs-codepipeline.git", "commits": [{"id": "92884f373deca624055c299d82e312444048bac7", "msg": "Terraform 0.14 upgrade (#54)\n\n* update to latest null-label for terraform 14.x support\r\n\r\n* add github_anonymous variable to pass tests\r\n\r\n* upgrading modules and workflows\r\n\r\n* terraform formatting\r\n\r\n* terraform-aws-ecs-container-definition doesn't support context\r\n\r\n* workflow updated, documentation fixed\r\n\r\nCo-authored-by: Dmitrij Nikitenko <dn@paybis.com>\r\nCo-authored-by: Dmitrij Nikitenko <dmitrij@nikitenko.lv>", "date": "2021-01-23 22:25:18+07:00", "modified_files": ["CODEOWNERS", "auto-release.yml", "mergify.yml", "renovate.json", "auto-context.yml", "auto-format.yml", "auto-release.yml", "chatops.yml", "validate-codeowners.yml", "README.md", "README.yaml", "context.tf", "terraform.md", "context.tf", "fixtures.us-east-2.tfvars", "main.tf", "variables.tf", "versions.tf", "main.tf", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-aws-config.git", "commits": [{"id": "9df6f6e72cd4fa33003fa5498c796bd129c99d0f", "msg": "costs", "date": "2021-05-22 11:19:17+01:00", "modified_files": ["compare.yml", "master.yml", "pull_request.yml", "README.md", "aws_s3_bucket.config.tf", "aws_s3_bucket_public_access_block.config.tf", "infracost-usage.yml", "terraform.tf"]}]}, {"name": "https://github.com/tlc-pack/ci-terraform.git", "commits": [{"id": "b93d225cc274dba55027a4a3db2475e78c77018f", "msg": "Add gd4n.4xlarge instances\n\nWe have these reserved so we're paying for them regardless, we should use them in CI", "date": "2022-04-20 13:23:40-07:00", "modified_files": ["tvm-ci-prod.auto.tfvars"]}, {"id": "aae09ea0dc9f394bd83e640ae003ba336a28a2b5", "msg": "Add CPU-SMALL instances\n\nThis adds a class of CPU instances that are far cheaper than the current `CPU` instances that we can use for certain tasks that don't require big instances, I'm thinking for linting and builds (since those are mostly cached anyways). We could also potentially move certain test steps to these instances such as the unit tests but reliability.", "date": "2022-04-20 14:22:49-07:00", "modified_files": ["tvm-ci-prod.auto.tfvars"]}, {"id": "9a51a8ae697b9f9df1c05c8276a871b614be2da9", "msg": "Bump minimum capacity to num reserved instances\n\nWe should set this as a minimum for the autoscaler since they're reserved and we pay for them either way", "date": "2022-04-20 13:25:06-07:00", "modified_files": ["tvm-ci-prod.auto.tfvars"]}]}, {"name": "https://github.com/hmcts/azure-platform-terraform.git", "commits": [{"id": "cbc0c7d15a865b6d7fbaf56a453d43aead3f3a6d", "msg": "Add fees pay (#196)", "date": "2020-04-03 11:22:41+01:00", "modified_files": ["ithc.tfvars", "prod.tfvars", "stg.tfvars", "test.tfvars"]}, {"id": "723b4de06fa3934c0a39130b1bf80ac662ca8eb8", "msg": "Add paybubble and bar app to prod (#213)", "date": "2020-04-07 12:06:26+01:00", "modified_files": ["prod.tfvars"]}, {"id": "73cf18c83fcfeb964f03ccecba191b910e190edf", "msg": "migrate aat and prod paybubble to ukwest", "date": "2020-05-11 15:52:10+01:00", "modified_files": ["prod.tfvars", "stg.tfvars"]}, {"id": "954a818b09fd85f4a2142e0d89c46647bb187b42", "msg": "migrate aat and prod paybubble to uksouth", "date": "2020-05-12 08:42:29+01:00", "modified_files": ["prod.tfvars", "stg.tfvars"]}, {"id": "7064ea327c8bc717b1b4cd70f17cffdab6bf6337", "msg": "paybubble-waf", "date": "2020-06-05 12:29:37+01:00", "modified_files": ["ithc.tfvars"]}, {"id": "331456023adf64ce431aa88514229c7b89a2f6ce", "msg": "PAY-3311 - Paybubble WAF", "date": "2020-06-10 11:36:38+01:00", "modified_files": ["ithc.tfvars", "test.tfvars"]}, {"id": "ab7b7ac4f8165f70677217cf832fcca6b67ae2cd", "msg": "PAY-3311 - Paybubble WAF added exclusion for idam cookie", "date": "2020-06-11 10:26:13+01:00", "modified_files": ["test.tfvars"]}, {"id": "3294a329f951db651c85335bf4d6e39f7aecc5cb", "msg": "PAY-3311 - Changed detection to prevention on perftest", "date": "2020-06-11 11:25:11+01:00", "modified_files": ["test.tfvars"]}, {"id": "37fd295e7938c783f157d9041281c9a9853ffabc", "msg": "Front door WAF activation for paybubble on prod", "date": "2020-06-29 16:38:24+01:00", "modified_files": ["prod.tfvars"]}, {"id": "9c2908aed8b957fe8393217ee832ed32ae765e9c", "msg": "PAY-3311 - DTSA cookie fix", "date": "2020-07-14 22:50:38+01:00", "modified_files": ["test.tfvars"]}, {"id": "536b3a8f2ae017d9638287bf4002bfbeee187acf", "msg": "PAY-3311 - rf cookie fix", "date": "2020-07-14 22:52:14+01:00", "modified_files": ["test.tfvars"]}, {"id": "0652a0fc559ea69fd12031d7ab3c844fc1b72a42", "msg": "PAY-3343 - Fees register readonly access changes for whitelisting", "date": "2020-09-10 18:29:05+01:00", "modified_files": ["test.tfvars"]}, {"id": "df22e52d294422f6ebe2aa5b29ce2297ef1d1308", "msg": "PAY-3343 - Fees register readonly access changes for whitelisting", "date": "2020-09-11 13:18:11+01:00", "modified_files": ["test.tfvars"]}, {"id": "97ff2913d6c08254659520986713a3602fe5f3ca", "msg": "PAY-3343 - Fees register whitelisting of ips for new domain added certificate name", "date": "2020-09-11 15:22:24+01:00", "modified_files": ["test.tfvars"]}, {"id": "171e680aeb20fb358989af69a8b5b1d443acb9fa", "msg": "PAY-3343 - Added backend domain and mode", "date": "2020-09-11 15:31:35+01:00", "modified_files": ["test.tfvars"]}, {"id": "ee30b8d934431f9576dee4e42a353f7d985239e1", "msg": "PAY-3343 - Mode not required", "date": "2020-09-11 20:02:24+01:00", "modified_files": ["test.tfvars"]}, {"id": "140818476818f687e97fdcaf64ac2dc5aae01d22", "msg": "PAY-3243 - Front door WAF mode config from detection to prevention", "date": "2020-09-23 15:54:56+01:00", "modified_files": ["prod.tfvars"]}, {"id": "a52f991306b28299d8ce07fe1c56eee29308e177", "msg": "PAY-3849- PCI Pal antenna cookie exception (#573)", "date": "2020-11-23 17:41:37+00:00", "modified_files": ["test.tfvars"]}, {"id": "ebafc0d506d36f1966c7409d9e16a2859436037c", "msg": "update fees to feespay", "date": "2020-12-15 14:41:14+00:00", "modified_files": ["prod.tfvars"]}, {"id": "7e0ab5aa3740d5360e061b18f15d954472d6b585", "msg": "Update paybubble to feespay", "date": "2020-12-15 14:43:25+00:00", "modified_files": ["prod.tfvars"]}, {"id": "ae15eab072489c6bf75703a0bc76a044d386d101", "msg": "feespay to fees", "date": "2020-12-15 14:52:23+00:00", "modified_files": ["prod.tfvars"]}, {"id": "40ccda3446aa01b38531ea0c1ccb098afa658f28", "msg": "PAY-3882- Front door WAF enable to prevention mode", "date": "2021-01-12 13:21:08+00:00", "modified_files": ["test.tfvars"]}, {"id": "c0594c76cf48545559a7dd351696c0b8452ef31c", "msg": "exclude $a and $ni fields in payloads for blocked /rb_bf00910jpo calls", "date": "2021-01-20 17:02:22+00:00", "modified_files": ["prod.tfvars"]}, {"id": "04b30d308a49a6bab06f68a1cfb9b1543676d393", "msg": "PAY-3343 - WAF changes after prevention mode", "date": "2021-01-21 15:41:01+00:00", "modified_files": ["test.tfvars"]}, {"id": "ff7e4efc6dad1bc5ff570e6bf9f40f441bd86228", "msg": "PAY-3343 - WAF changes for Fees register for AAT,Prod", "date": "2021-02-23 12:26:28+00:00", "modified_files": ["prod.tfvars", "stg.tfvars"]}, {"id": "7ad22223c6b996084736664531642f36577c4404", "msg": "Adding request cookie names to paybubble\n\nAdding request cookie names to paybubble", "date": "2021-03-30 00:25:32+01:00", "modified_files": ["prod.tfvars"]}, {"id": "c8f7c9aa4c928e5219b4451f2c79a839172e56e8", "msg": "PAY-4345-Ip range for vpn without proxy", "date": "2021-04-07 11:57:34+01:00", "modified_files": ["ithc.tfvars", "prod.tfvars", "stg.tfvars", "test.tfvars"]}, {"id": "7633a1b0b7cf5dc0572e2c9a41f6d38af9f9660b", "msg": "PAY-4345-Prod change reverted to test in lower env first", "date": "2021-04-07 12:36:45+01:00", "modified_files": ["prod.tfvars"]}, {"id": "730c7db35b9054b47abcfbd854056dae612f3295", "msg": "PAY-4345-Adding ip config for production (#772)", "date": "2021-04-09 11:13:45+01:00", "modified_files": ["prod.tfvars"]}, {"id": "d0d0bcc58b267d57164a10a240fca522454ec5e0", "msg": "Added Payment-Outcome prod config.", "date": "2022-03-09 11:16:14+00:00", "modified_files": ["prod.tfvars"]}, {"id": "a98b12a863694f40c6c86a9a10729465ae1bc04d", "msg": "Updated payment-outcome certificate_name.", "date": "2022-03-09 11:36:22+00:00", "modified_files": ["prod.tfvars"]}, {"id": "72574cb3e00240f80788f21b80ef33a748791f34", "msg": "Corrected paymentoutcome-web custom domain.", "date": "2022-03-09 12:12:49+00:00", "modified_files": ["prod.tfvars"]}, {"id": "ff5f8d748c06becb33d93e6ef9727d79e31ba5a9", "msg": "Further corrected payment-outcome custom domain.", "date": "2022-03-09 12:14:04+00:00", "modified_files": ["prod.tfvars"]}]}, {"name": "https://github.com/jose-gonzalez-lw/jg-terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/mjmenger/localgooglemodule.git", "commits": [{"id": "312bcf9c6d311b50545930aa8895a3daeab690d0", "msg": "Refactor: default DO payload support\n - Add a sub-module that creates bare-bones DO payloads\n   with self-ips, routes, etc on internal/external interfaces", "date": "2020-12-07 10:20:23-08:00", "modified_files": [".talismanrc", "README.md", "main.tf", "variables.tf", "main.tf", "README.md", "do_replace_filter.jq", "main.tf", "outputs.tf", "README.md", "do.json", "variables.tf", "README.md", "declarativeOnboarding.sh", "main.tf", "cloud_config.yml", "do.json", "startup_script.sh", "variables.tf"]}, {"id": "bb0beda0d56908bcecd0d79bb0bf89e0206cde4b", "msg": "DO: automated DO payloads only touch interfaces/routes/etc if > 1 NIC", "date": "2020-12-07 14:30:42-08:00", "modified_files": ["main.tf", "README.md", "main.tf", "do.json", "variables.tf"]}]}, {"name": "https://github.com/ryanlg/ryhino-public.git", "commits": [{"id": "e51b9583b2df3154b5c82da361d411d65ed23bab", "msg": "Destroy private subnets cuz expensive", "date": "2019-08-10 15:42:04-05:00", "modified_files": ["eip.tf", "ngw.tf", "rt.tf", "rta.tf", "subnets.tf"]}]}, {"name": "https://github.com/galvezlj/cloudposse-terraform-aws-tfstate-backend.git", "commits": [{"id": "fd2053af80ec2738ca75350541df37e8acb2c2d6", "msg": "Add possibility to set billing mode for DynamoDB tables (#30)\n\n* Add possibility to set billing mode for DynamoDB tables\r\n\r\n* Updated README.md\r\n\r\nCo-authored-by: Maxim Mironenko <simixido@gmail.com>\r\nCo-authored-by: actions-bot <58130806+actions-bot@users.noreply.github.com>", "date": "2020-02-19 03:21:42+01:00", "modified_files": ["README.md", "terraform.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/aztfmod/terraform-azurerm-caf.git", "commits": [{"id": "1cf9f9e9e1ee2aeb4126ae1dc165d769d05eacf1", "msg": "Add module subscription_billing_role_assignments", "date": "2021-03-23 01:24:15+00:00", "modified_files": ["landingzone.tf", "variables.tf", "billing_role_assignment.tf", "billing_role_assignment.tf", "billing_role_assignment.sh", "variables.tf", "variables.tf", "subscriptions.tf", "variables.tf"]}, {"id": "7f8056129d67d587e5c193d17d9fbef3240083de", "msg": "Update billing role assignment", "date": "2021-04-06 12:49:01+00:00", "modified_files": ["billing_role_assignment.tf"]}, {"id": "33e29ee4fec412042a3efcf9fac36d4bc9e3a73b", "msg": "Add variable subscription_billing_role_assignments", "date": "2021-05-20 07:55:05+00:00", "modified_files": ["variables.tf", "README.md"]}, {"id": "ae13ab4b3138965fcfc00a79e451776296fae5d9", "msg": "Update billing role assignment", "date": "2021-06-05 06:59:43+00:00", "modified_files": ["billing_role_assignment.tf"]}, {"id": "d7613899129ce56b3c08287d40f7dae1730471c8", "msg": "Add support for alias and billing_scope_id for MCA", "date": "2021-10-01 05:44:51+00:00", "modified_files": ["subscriptions.tf"]}]}, {"name": "https://github.com/teopeurt/rancher-quickstarts.git", "commits": [{"id": "90944271b4e8bd46e3d42ac64bc4964a33a8fdc3", "msg": "Updated server from t2 to t3\n\nDue to better performance and cost savings updating from t2 to t3.", "date": "2018-10-11 11:26:37-05:00", "modified_files": ["terraform.tfvars.example"]}]}, {"name": "https://github.com/kesavakadiyala/terraform-shipping.git", "commits": [{"id": "df0185bb295b17fffccb48eb5b5430d43fea88cf", "msg": "Added User, Payment, Cart, Shipping Services", "date": "2022-03-06 13:53:19+05:18", "modified_files": ["Makefile", "dev.tfvars", "prod.tfvars", "main.tf", "provider.tf", "state.tf", "dev.tfvars", "prod.tfvars", "vars.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-azurerm-vpcpeer.git", "commits": [{"id": "9a2084dfca0248955cca1b4a56e7b69b9a54424e", "msg": "costs", "date": "2021-05-18 08:47:22+01:00", "modified_files": ["compare.yml", "main.yml", "pull_request.yml", "azurerm_virtual_network_peering.tf", "Makefile", "data.azurerm_resource_group.example.tf", "examplea.auto.tfvars", "infracost-usage.yml", "module.peer.tf", "terraform.tf", "variables.tf", "variables.tf"]}, {"id": "3832b4d7b9248d12b7c6fc1c360e82f5285d251c", "msg": "costs", "date": "2021-05-18 09:20:51+01:00", "modified_files": ["azurerm_virtual_network_peering.tf", "azurerm_resource_group.example.tf"]}]}, {"name": "https://github.com/BradleyChatha/infrastructure.git", "commits": [{"id": "418d0f2bcbb34d808f433d78306507e05c50c93e", "msg": "If only EKS were cheaper ;(", "date": "2021-11-25 04:57:34+00:00", "modified_files": ["hosts", "main.tf", "outputs.tf", "playbook.yml", "drone.yml", "personal.yml", "tls.yml", "variables.tf"]}]}, {"name": "https://github.com/masterpointio/terraform-aws-nuke-bomber.git", "commits": [{"id": "33fbb76715ce6e35565b5f83f7ece0f9df37d282", "msg": "Disables NAT Gateways\n\nI forgot how much these damn things cost.", "date": "2020-04-25 13:22:26-06:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/hardselius/terraform-namecheap-config.git", "commits": [{"id": "13c38d2624bcd3cf3341c80ddee14db889383e05", "msg": "Add terraform-provider-namecheap", "date": "2020-07-13 12:43:01+02:00", "modified_files": ["terraform.yaml", "main.tf", "terraform-provider-namecheap_v1.5.0", "terraform-provider-namecheap_v1.5.0"]}, {"id": "c4676fee32379b6b577823c5436add45c1623b9e", "msg": "Configure namecheap provider", "date": "2020-07-13 13:43:54+02:00", "modified_files": ["terraform.yaml", "main.tf", "varibles.tf"]}]}, {"name": "https://github.com/cbch1/tf.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/kurron/terraform-aws-alb.git", "commits": [{"id": "1aaecf355f0f680b389a3be411fc5045b5d16734", "msg": "For some reason, aws_billing_service_account is returning the wrong account number so I cannot use it in the bucket policy.  In this case, that is ok since the bucket is dedicated to the ALB logs.", "date": "2017-10-21 10:23:01-04:00", "modified_files": ["permissions.json.template", "main.tf"]}]}, {"name": "https://github.com/prannoymulmi/aws_infrastructure.git", "commits": [{"id": "5399091307b1420edc8e711a5316ee66ae7a2577", "msg": "WIP: Added terraform for billing initial", "date": "2020-06-20 16:04:34+02:00", "modified_files": ["aws-vault-setup.sh", "deploy.sh", "backend.tf", "billing.tf", "data.tf", "sns.tf"]}]}, {"name": "https://github.com/cloudposse/terraform-spacelift-cloud-infrastructure-automation.git", "commits": [{"id": "f1ad51c1ee8b96d7a60c23dbe49ccd5a3439a3dc", "msg": "Add Infracost (#82)\n\n* Add infracost_enabled\r\n\r\nCo-authored-by: cloudpossebot <11232728+cloudpossebot@users.noreply.github.com>", "date": "2022-05-03 12:43:44-05:00", "modified_files": ["README.md", "terraform.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/ONSdigital/eq-terraform.git", "commits": [{"id": "92ad9d1734550b8dfea0a8f0deae10aac0673984", "msg": "Make Python WSGI settings configurable\n\nThe default Elastic Beanstalk settings of 1 process and 15 threads is\nnot very efficient when the size of the instances is increased. This\npull request makes the number of processes and number of threads\nconfigurable so they can be changed per environment.", "date": "2017-02-20 12:43:55+00:00", "modified_files": ["global_vars.tf", "survey_runner.tf"]}, {"id": "a252266af60f5ab828ad9b81b17bb7b16a2fc52f", "msg": "Developer environment optimisations\nOptimised developer_defaults.tf to reduce cost of running dev environments\nUpdated default values to match production\nRemoved unused variable\nUpdated readme to target git commit rather and tagged version of alexeymedvedchikov.rabbitmq", "date": "2017-07-12 16:21:46+01:00", "modified_files": ["README.md", "developer_defaults.tf", "global_vars.tf", "survey_runner.tf", "global_vars.tf", "global_vars.tf", "message_queue.tf", "survey-runner.tf"]}, {"id": "79845fe095cd87287346f40d2adce9b28a32ef35", "msg": "User t3 instances for ECS\n - They are cheaper and faster\n - Removed the max limits on DynamoDB", "date": "2018-09-18 10:51:36+01:00", "modified_files": ["developer_defaults.tf", "survey-runner.tf"]}, {"id": "6eaf697bf9f111214a6d74ee3094e5784a57d1bb", "msg": "Switch to on-demand billing for DynamoDB", "date": "2019-01-31 15:13:20+00:00", "modified_files": ["survey-runner.tf"]}]}, {"name": "https://github.com/ops-guru/tf-aws-tfstate-backend.git", "commits": [{"id": "fd2053af80ec2738ca75350541df37e8acb2c2d6", "msg": "Add possibility to set billing mode for DynamoDB tables (#30)\n\n* Add possibility to set billing mode for DynamoDB tables\r\n\r\n* Updated README.md\r\n\r\nCo-authored-by: Maxim Mironenko <simixido@gmail.com>\r\nCo-authored-by: actions-bot <58130806+actions-bot@users.noreply.github.com>", "date": "2020-02-19 03:21:42+01:00", "modified_files": ["README.md", "terraform.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/mattermost/mattermost-cloud-monitoring.git", "commits": [{"id": "d5092178e7f95b1e72bf657e7cc41729fc3604cb", "msg": "Fixed CWS terraform scripts (#240)\n\n* Payment variables are not being used anymore\r\n\r\nThe old payment variables were deprecated and deleted in [this](https://github.com/mattermost/customer-web-server/commit/cbfb12422ebeeb0d66ac15581f8f90514228dbf9#diff-5dbee3ab19f33590cb8f06c1c3a5274e2d59ea4e530503d54802cf2d212f5cfc) commit.\r\n\r\nRight now the variable to be used is CWS_STRIPE_KEY\r\n\r\n* Use secret instead of using environment variables\r\n\r\nCreate the secret for CWS and use it to pick the env. variables\r\nneeded\r\n\r\n* Expose the internal port in the container\r\n\r\nSigned-off-by: Mario de Frutos <mario@defrutos.org>", "date": "2021-02-05 09:54:32+01:00", "modified_files": ["variables.tf", "web-server.tf"]}, {"id": "d411b75b6c2ba7fc820042e995ae864a2fb2fb5b", "msg": "[billing] fix wrong variable types", "date": "2022-02-15 16:01:30+02:00", "modified_files": ["README.md", "variables.tf"]}]}, {"name": "https://github.com/tintulip/pipelines.git", "commits": [{"id": "d51db8c5886cc11c845ea43f8adfc8b18055b21e", "msg": "#91 support base64 payloads, configure webpack to use node octokit and not the web one\n\nCo-authored-by: Yusra Dahir (TIN TULIP) <yusra.dahir+tintulip@thoughtworks.com>", "date": "2021-06-24 17:27:05+01:00", "modified_files": ["index.js", "package.json", "webhook_handler.js", "webhook_handler.test.js", "webpack.config.js", "webhook.tf"]}]}, {"name": "https://github.com/travis-infrastructure/terraform-stuff.git", "commits": [{"id": "1e208af4c83d093c900f4cccedbca6183142a07f", "msg": "Add \"ubuntu-trusty-micro-playground\" instance\n\nfor easy/forever access to an Ubuntu Trusty machine in GCE, estimated monthly\ncost of ~$4.75", "date": "2015-08-21 13:04:09-04:00", "modified_files": ["gce.tf"]}]}, {"name": "https://github.com/sdcote/cloudsql.git", "commits": [{"id": "dfe44fcf8f5a477e1fbc354f1b1d87af28895c0f", "msg": "Changed default disk type to cheaper HDD instead of SSD", "date": "2018-11-09 16:12:19+00:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/tmclaugh/straycat-terraform-aws-vpc.git", "commits": [{"id": "35d26fd046185ae079e09fa6435c41ae685e679e", "msg": "Disable NAT gateways for now.  We don't need them and they cost $$$", "date": "2017-02-15 15:20:06-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/basisai/terraform-modules-gcp.git", "commits": [{"id": "34d2e6204ed809efdfecc034087d39458e4e7e00", "msg": "GCP Billing Slack Notify (#24)\n\n* GCP Billing Slack Notify\r\n\r\n* tf module\r\n\r\n* json encode\r\n\r\n* fix defaults\r\n\r\n* fix variables\r\n\r\n* enable or disable function\r\n\r\n* create service account key and supply it\r\n\r\n* fix syntax\r\n\r\n* formatting fix\r\n\r\n* fix terraform fmt\r\n\r\n* project ids as tf list\r\n\r\n* Bump up chart version", "date": "2019-10-15 17:07:20+08:00", "modified_files": ["README.md", "gcp_secrets.tf", "main.tf", "values.yaml", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/shaharsa/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/timant-dev/gcp-lz-bootstrap.git", "commits": [{"id": "4fc505a1642640eb4bfd18e527845e30d32596f1", "msg": "Adds org level IAM role for billing.user", "date": "2021-06-21 17:28:19+01:00", "modified_files": ["main.tf", "terraform.tfvars.example", "variables.tf"]}, {"id": "f452958e7df682b47f5f68f4be319af1403750d2", "msg": "Updated variables and init script to include org domain. Added removal of billing and project creator roles for domain", "date": "2021-07-05 18:42:41+01:00", "modified_files": ["init-tfvars.sh", "main.tf", "terraform.tfvars.example", "variables.tf"]}, {"id": "257df10ace1f7dffc388780691195632a5106b1f", "msg": "Added billing account IAM role grant", "date": "2021-10-04 18:14:50+01:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "d98ea098f8f00142a6e605b4e5c5433c70244232", "msg": "Changed Org ID, Domain and Billing Account ID to .conf input", "date": "2021-10-07 12:03:07+01:00", "modified_files": ["bootstrap.sh", "client.conf", "init-tfvars.sh", "main.tf"]}]}, {"name": "https://github.com/damacus/terraform-aws-vpc.git", "commits": [{"id": "7e850e4dcc29898ef875af31435341ebc14a99cf", "msg": "csot --> cost_code", "date": "2016-05-24 16:39:42+01:00", "modified_files": ["subnet.tf"]}, {"id": "6425ff14640750b2ce907814f64d96c632d9c8d5", "msg": "cost --> cost_code", "date": "2016-05-25 11:39:18+01:00", "modified_files": ["routing.tf"]}, {"id": "e43a96070483f8428221c86d0c3b525c2f75bf71", "msg": "Fix VPC tags\nFix cost_code tags", "date": "2017-08-03 08:50:56+01:00", "modified_files": ["cloudwatch.tf", "gateway.tf", "iam.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/turnerlabs/airflow_stack_aws_ec2_tf.git", "commits": [{"id": "193053e3898d5a7089a2ed33f372f83090add6de", "msg": "added cw dashboard and cost explorer", "date": "2020-01-27 14:30:46-05:00", "modified_files": ["cloudwatchDashboard.tf", "costExplorer.tf", "rds.tf", "cloudwatchDashboard.tf", "costExplorer.tf", "rds.tf"]}, {"id": "81ba9d0cd89456d9227d485c354f4d777f827dc3", "msg": "Minor tweaks\n\n- adjusted cost explorer to 300.0 from 300\n- added role so bastion can become part of SSM.", "date": "2020-06-09 13:53:51-04:00", "modified_files": ["costExplorer.tf", "iamInstanceProfile.tf"]}]}, {"name": "https://github.com/hmcts/sendgrid.git", "commits": [{"id": "a634bc4039ad334f0635c12398383d363c809d6f", "msg": "Added payments to nonprod.tfvars", "date": "2021-04-12 16:07:41+01:00", "modified_files": ["nonprod.tfvars"]}, {"id": "34e513c9e254335fe7414d3476cee66c8623ecc9", "msg": "changed payments to payment", "date": "2021-04-12 16:27:04+01:00", "modified_files": ["nonprod.tfvars"]}, {"id": "7a3e5c3e663bfffe3f315530facd5e9f01cb59b8", "msg": "ACreating sendgrid account for payment in prod", "date": "2021-04-14 11:02:33+01:00", "modified_files": ["prod.tfvars"]}]}, {"name": "https://github.com/tbell83/lambda_logshipper.git", "commits": [{"id": "b38f4087be418bc3e2eb96d6b6ab659eb5936cd4", "msg": "use module path for payload", "date": "2018-04-09 10:30:49-04:00", "modified_files": ["lambda.tf"]}]}, {"name": "https://github.com/Wieschie/personal-infra.git", "commits": [{"id": "bfa7b3ae90f1d64d957700976080f9b1921dba30", "msg": "Disable ssm endpoint (it's an interface and costs money)", "date": "2020-06-15 09:40:22-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/Linaro/qa-reports.linaro.org.git", "commits": [{"id": "76c8d1ee35046912b6da4f1cc23e8b1dcc12abe9", "msg": "terraform: make staging a T3a instance type\n\nThis is slightly cheaper than regular T3 instances", "date": "2020-11-26 10:22:48-03:00", "modified_files": ["staging.tfvars"]}, {"id": "77116ea84b2e8d088c644723e787ad5d6d9677fd", "msg": "terraform: s3: enable S3 Glacier backups\n\nThis will replicate any incoming data to S3 bucket into\na backup bucket with \"Glacier Deep Archive\" storage type [1].\n\nThis storage type costs $ 0.00099 / GB / month. It's dirt cheap\nand it's made for cases where rare access is required, like\nonce or twice a year.\n\nOnly drawback of this storage type is the retriving time. It might\ntake up to 12 hours to retrive a file storage in Deep Archive mode.\n\nStoring files in standard S3 storage already has a redundancy, so having\na backup is a fall back of a fall back if data ever gets lost at some\npoint.\n\n[1] https://aws.amazon.com/blogs/aws/new-amazon-s3-storage-class-glacier-deep-archive/", "date": "2020-12-09 13:57:27-03:00", "modified_files": ["roles.tf", "s3.tf", "role_policy.json.tpl"]}]}, {"name": "https://github.com/kinvolk-archives/lokomotive-kubernetes.git", "commits": [{"id": "6c5a1964aadbb3d23a1c6c6b99cf8c44b763b21f", "msg": "Change kube-apiserver port from 443 to 6443\n\n* Adjust firewall rules, security groups, cloud load balancers,\nand generated kubeconfig's\n* Facilitates some future simplifications and cost reductions\n* Bare-Metal users who exposed kube-apiserver on a WAN via their\nrouter or load balancer will need to adjust its configuration.\nThis is uncommon, most apiserver are on LAN and/or behind VPN\nso no routing infrastructure is configured with the port number", "date": "2018-06-18 21:57:58-07:00", "modified_files": ["CHANGES.md", "apiserver.tf", "bootkube.tf", "security.tf", "bootkube.tf", "security.tf", "bootkube.tf", "bootkube.tf", "bootkube.tf", "network.tf", "bootkube.tf", "network.tf", "ingress.md", "bootkube.tf", "bootkube.tf"]}, {"id": "316f06df06a8c7660020babc5df96d1dea468f13", "msg": "Combine NLBs to use one NLB per cluster\n\n* Simplify clusters to come with a single NLB\n* Listen for apiserver traffic on port 6443 and forward\nto controllers (with healthy apiserver)\n* Listen for ingress traffic on ports 80/443 and forward\nto workers (with healthy ingress controller)\n* Reduce cost of default clusters by 1 NLB ($18.14/month)\n* Keep using CNAME records to the `ingress_dns_name` NLB and\nthe nginx-ingress addon for Ingress (up to a few million RPS)\n* Users with heavy traffic (many million RPS) can create their\nown separate NLB(s) for Ingress and use the new output worker\ntarget groups\n* Fix issue where additional worker pools come with an\nextraneous network load balancer", "date": "2018-06-18 22:56:32-07:00", "modified_files": ["CHANGES.md", "nlb.tf", "outputs.tf", "ingress.tf", "outputs.tf", "nlb.tf", "outputs.tf", "ingress.tf", "outputs.tf"]}, {"id": "0c4d59db87b67d7c7a0a0f54677961a01ed8fbe4", "msg": "Use global HTTP/TCP proxy load balancing for Ingress on GCP\n\n* Switch Ingress from regional network load balancers to global\nHTTP/TCP Proxy load balancing\n* Reduce cost by ~$19/month per cluster. Google bills the first 5\nglobal and regional forwarding rules separately. Typhoon clusters now\nuse 3 global and 0 regional forwarding rules.\n* Worker pools no longer include an extraneous load balancer. Remove\nworker module's `ingress_static_ip` output.\n* Add `ingress_static_ipv4` output variable\n* Add `worker_instance_group` output to allow custom global load\nbalancing\n* Deprecate `controllers_ipv4_public` module output\n* Deprecate `ingress_static_ip` module output. Use `ingress_static_ipv4`", "date": "2018-05-06 23:21:53-07:00", "modified_files": ["CHANGES.md", "ingress.tf", "network.tf", "outputs.tf", "ingress.tf", "outputs.tf", "workers.tf", "ingress.tf", "network.tf", "outputs.tf", "ingress.tf", "outputs.tf", "workers.tf"]}, {"id": "f2f4deb8bb44988eeb0b64b919e51fb556aef4fb", "msg": "Change AWS default type from t2.small to t3.small\n\n* T3 is the next generation general purpose burstable\ninstance type. Compared with t2.small, the t3.small is\ncheaper, has 2 vCPU (instead of 1) and provides 5 Gbps\nof pod-to-pod bandwidth (instead of 1 Gbps)", "date": "2018-12-18 12:29:27-08:00", "modified_files": ["CHANGES.md", "variables.tf", "variables.tf", "aws.md", "aws.md", "performance.md"]}, {"id": "aaa8e0261a01a62fa4a343788b3df20b9e93ee38", "msg": "Add Google Cloud worker instances to a target pool\n\n* Background: A managed instance group of workers is used in backend\nservices for global load balancing (HTTP/HTTPS Ingress) and output\nfor custom global load balancing use cases\n* Add worker instances to a target pool load balancing TCP/UDP\napplications (NodePort or proxied). Output as `worker_target_pool`\n* Health check for workers with a healthy Ingress controller. Forward\nrules (regional) to target pools don't support different external and\ninternal ports so choosing nodes with Ingress allows proxying as a\nworkaround\n* A target pool is a logical grouping only. It doesn't add costs to\nclusters or worker pools", "date": "2019-03-30 15:12:55-07:00", "modified_files": ["CHANGES.md", "network.tf", "outputs.tf", "outputs.tf", "target_pool.tf", "workers.tf"]}, {"id": "685f1074216667dd1a14cfa391edc39b95d0caf5", "msg": "Change Azure default controller_type and worker_type\n\n* Change default controller_type to Standard_B2s. A B2s is cheaper\nby $17/month and provides 2 vCPU, 4GB RAM (vs 1 vCPU, 3.5GB RAM)\n\n* Change default worker_type to Standard_DS1_v2. F1 was the previous\ngeneration. The DS1_v2 is newer, similar cost, more memory, and still\nsupports Low Priority mode, if desired\n\nThis commit was ported from https://github.com/poseidon/typhoon/commit/4a7083d94a6e199091f248f669516109fdbffb47\n\nSigned-off-by: Suraj Deshmukh <suraj@kinvolk.io>", "date": "2019-09-23 17:45:30+02:00", "modified_files": ["variables.tf", "variables.tf"]}]}, {"name": "https://github.com/GoogleCloudPlatform/reporting-api-forwarder.git", "commits": [{"id": "acd407470f15b4651203fdd31bb3e4a5c921fba9", "msg": "Add Terraform configurations to create GCP project and setup Kubernetes (#28)\n\n* Add Terraform config to set up Google Cloud and to create GKE cluster\r\n* Fix document to update the deployment process and to add caution around billing\r\n* Refactor .gitignore", "date": "2021-10-19 18:38:10+09:00", "modified_files": [".gitignore", "README.md", "Dockerfile.cloudmonitoring", "00_project.tf", "01_services.tf", "02_cluster.tf", "03_network.tf", "04_manifests.tf", "05_trigger.tf", "outputs.tf", "providers.tf", "certificate.yaml.tpl", "ingress.yaml.tpl", "init.sh.tpl", "terraform.tfvars.sample", "variables.tf"]}]}, {"name": "https://github.com/dvdhrm/imagebuilder-terraform.git", "commits": [{"id": "9e3285b91b2a95271c3b4d0c8777f5363bfdfd40", "msg": "Remove external VPC endpoints\n\nInterface-style VPC endpoints are not needed for our external\ninfrastructure and they are causing our AWS bill to increase by a large\namount.\n\nSigned-off-by: Major Hayden <major@redhat.com>", "date": "2021-02-08 08:14:40-06:00", "modified_files": ["vpc.tf"]}]}, {"name": "https://github.com/albumprinter/eops_tf_modules.git", "commits": [{"id": "e060731f6a2e4ff8c71fdb503c9aec2e0bd15edf", "msg": "MARIO-2180 remove default cost center", "date": "2019-07-23 15:13:26+02:00", "modified_files": ["variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/ministryofjustice/staff-device-logging-infrastructure.git", "commits": [{"id": "4f28c6636ff09f5626b9e5705aece4922cdc6e59", "msg": "Custom logging api (#3)\n\nAdd an API that forwards json payloads to an SQS queue", "date": "2020-07-02 12:12:48+01:00", "modified_files": ["main.tf", "apiGateway.tf", "apiGatewayPolicies.tf", "apiGatewayRole.tf", "apiIntegrations.tf", "outputs.tf", "apiGatewayAssumeRolePolicy.json", "apiGatewayCloudwatchPolicies.json", "apiGatewayKmsPolicies.json", "apiGatewaySqsPolicies.json", "sqs.tf", "variables.tf", "apiIntegrations.tf", "instance.tf", "outputs.tf", "policies.tf", "sqs.tf", "custom_log_gateway_test.go", "go.mod", "go.sum", "iam_role_test.go"]}, {"id": "efe2149b92e9df051daea05f8d3b2ebc9ac7744a", "msg": "Enrich payload with environment metadata", "date": "2020-07-10 15:23:14+01:00", "modified_files": ["main.tf"]}, {"id": "07900ce72e84cdd44c0739010f78dbec9761f2ce", "msg": "decode the JSON payload\n\nThis makes it show up as individual fields in Kibana", "date": "2020-07-16 07:58:57+01:00", "modified_files": ["main.tf"]}, {"id": "337df2f23c520c0f7e495748c9992284a5adc845", "msg": "Add tags to specific functions and enhanced decoding of message payload", "date": "2020-07-16 08:07:10+01:00", "modified_files": ["main.tf"]}, {"id": "be8c4cee4ca6cee9aa0d81dc45c4af3957dfaf4a", "msg": "Set timeout to 8 seconds for the Lambdas\n\nCurrent timeout is at 3 seconds and ever so often (once or twice a day),\nthis is reached and a CloudWatch alarm goes off saying there was an\nerror. This is in fact not an error and the payload is resent.", "date": "2020-07-16 15:14:06+01:00", "modified_files": ["main.tf"]}, {"id": "bed5ddc53bd75b40324437e2c476d043a77e42d9", "msg": "Add counter to heartbeat payloads\n\nThis makes it easier to identify gaps in logs that should be shipped.", "date": "2020-10-28 15:26:16+00:00", "modified_files": ["main.tf"]}, {"id": "70c5ae6a48c240fc59853e89665c0dda6f9f275f", "msg": "Escape special characters in API Gateway payload\n\nAmpersands are causing an error when trying to submit to SQS from API\nGateway. Escape these.", "date": "2020-11-02 11:56:35+00:00", "modified_files": ["apiIntegrations.tf"]}, {"id": "8d52fb6efbb320d2b427480b600993a3df5a1b1f", "msg": "URLEncode payload sent to SQS from API Gateway\n\nAn error is raised when special characters aren't escaped with the API\nGateway -> SQS integration.\n\nAPI Gateway calls SQS with a GET request and a body containing special\ncharacters will break this API call.", "date": "2020-11-02 12:42:06+00:00", "modified_files": ["apiIntegrations.tf"]}]}, {"name": "https://github.com/armand1m/terraform-gke-drone.git", "commits": [{"id": "e5dd322eadc9e0a00fd3a603d5a9e9e07a812df6", "msg": "feat: make it single node\n\nmake it single node so it gets cheaper", "date": "2020-03-04 13:33:45+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/reifnir/iac.git", "commits": [{"id": "baced6c85a92e5c39d6270397ab5471262748bf6", "msg": "double nodes, this is super cheap", "date": "2020-10-17 11:48:12-04:00", "modified_files": ["modules.tf"]}]}, {"name": "https://github.com/javier-lopez/terraforms.git", "commits": [{"id": "afed4b83a174335ec2b371061c81bc92938ecda3", "msg": "cheapest-aws-gpu-spot-instance.* => scripts", "date": "2018-04-15 13:26:52-05:00", "modified_files": ["blender.tf", "cheapest-aws-gpu-spot-instance.sh", "cheapest-aws-gpu-spot-instance.deps.pex", "cheapest-aws-gpu-spot-instance.py", "generate.deps.pex.sh"]}]}, {"name": "https://github.com/tdooner/flynn.git", "commits": [{"id": "8c9b77a9e28fe462c82451192cd6389c04d91f37", "msg": "Add status check module\n\nCheap status checking / alerting by AWS. This has to be in us-east-1\nbecause of silly problems. Also the SNS topic subscriptions have to be\ncreated manually since they require manual verification.", "date": "2017-03-23 23:55:45-07:00", "modified_files": ["disclosure-backend-static.tf", "sciolyreg.tf", "check.tf"]}, {"id": "a9ea9d09727825f9a047e70d94caf73c99e6b2a8", "msg": "Remove health check of disclosure-backend-static\n\nIt's costing me $2.75/mo. What a gigantic waste of money! /s", "date": "2017-04-08 13:32:51-07:00", "modified_files": ["disclosure-backend-static.tf"]}]}, {"name": "https://github.com/training3/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/dwp/dataworks-github-config.git", "commits": [{"id": "eb44d3f3980e3b3ab1cdb10c0b7f89a7e9c27c6a", "msg": "Creating repo for payloader (#66)", "date": "2020-03-23 12:12:58+00:00", "modified_files": ["aws-api-payloader.tf"]}, {"id": "de2518197a38ec8cd0bd97046cfdc7687257321b", "msg": "Renamed payloader repo (#71)", "date": "2020-03-24 08:34:00+00:00", "modified_files": ["aws-api-payloader.tf", "emr-cluster-broker-client.tf"]}]}, {"name": "https://github.com/umman-manda/Exampli.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/tomnz/rocketchat-tf.git", "commits": [{"id": "5298263d68548372c064b9d9c76977325a7373c8", "msg": "Upgrade instance size - costs seem reasonable", "date": "2021-07-25 12:08:06-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/ministryofjustice/cloud-platform-environments.git", "commits": [{"id": "d7afb9018e20ef85f1fbee2300dbf5c5cdf3cb0e", "msg": "Re-create live-1 MTP resources in AWS eu-west-2\n\u2026excluding prod RDS which is expensive and not yet needed", "date": "2019-03-28 15:39:00+00:00", "modified_files": ["ecr.tf", "main.tf", "main.tf", "rds.tf"]}, {"id": "051f166d537ea7cb07c4864e7379917a0e20dea9", "msg": "Create new namespace for project - calculate-journey-variable-payments-dev (#3187)\n\n* Create a new namespace for a project", "date": "2020-09-23 15:27:44+01:00", "modified_files": [".checksum", "00-namespace.yaml", "01-rbac.yaml", "02-limitrange.yaml", "03-resourcequota.yaml", "04-networkpolicy.yaml", "main.tf", "variables.tf", "versions.tf"]}, {"id": "031c5c5b8d7cccf4c35d62b17cb40bf5e511c83a", "msg": "Create a staging environment for calculate-journey-variable-payments (#3206)", "date": "2020-09-25 13:45:24+01:00", "modified_files": [".checksum", "00-namespace.yaml", "01-rbac.yaml", "02-limitrange.yaml", "03-resourcequota.yaml", "04-networkpolicy.yaml", "main.tf", "variables.tf", "versions.tf"]}, {"id": "fd2d0611acad145ed00cf4131eceeb6eef0b8ff9", "msg": "Add Dev environment for calculate-journey-variable-payments (#3410)\n\n* Add Dev environment\r\n\r\n* List replica sets", "date": "2020-10-02 12:20:53+01:00", "modified_files": ["00-namespace.yaml", "01-rbac.yaml", "02-limitrange.yaml", "03-resourcequota.yaml", "04-networkpolicy.yaml", "main.tf", "rds.tf", "s3.tf", "variables.tf", "versions.tf", "serviceaccount-circleci.yml"]}, {"id": "5199e517f5e08b8bed3f96334b102814b3e99200", "msg": "Add namespace tag to replica database\n\nThe replica RDS instance does not have a value for \"namespace\", so its\ncosts are not being allocated correctly.", "date": "2020-10-15 14:56:02+01:00", "modified_files": ["rds.tf"]}, {"id": "5744388e2d833a008e7c3d2f500fecd6248a0d68", "msg": "Upgrade elasticache module in non-prod namespaces\n\nThis version (4.2) adds the \"namespace\" tag, for cost allocation.", "date": "2020-10-19 11:07:56+01:00", "modified_files": ["redis.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "service_token_cache.tf", "service_token_cache.tf", "publisher.tf", "redis.tf", "redis.tf", "redis.tf", "redis.tf", "redis.tf", "redis.tf", "redis.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "redis.tf", "redis.tf", "redis.tf", "redis.tf", "redis.tf", "redis.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf"]}, {"id": "1fd10a8d868d1b3930cd89b6aaf473cdb8242ef1", "msg": "Upgrade elasticache module in prod namespaces\n\nThis version adds the \"namespace\" tag for cost allocation", "date": "2020-10-19 11:09:23+01:00", "modified_files": ["redis.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "service_token_cache.tf", "service_token_cache.tf", "publisher.tf", "redis.tf", "redis.tf", "elasticache.tf", "redis.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf", "elasticache.tf"]}, {"id": "cca186a0f7165b361f372c87524011e91b28f41a", "msg": "Delete the test SQL Server databases\n\nThey're not needed just yet and they're pretty expensive to leave just\nsitting there...", "date": "2021-06-02 16:29:25+01:00", "modified_files": ["sql-server.tf"]}]}, {"name": "https://github.com/CPWu/terraform_three_instances.git", "commits": [{"id": "faaecdc2e201a146f76f4a94f51e9fd5c5a428f3", "msg": "terraform destroy to save costs", "date": "2020-11-09 16:50:07-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/josephakeni/terraform_postgres.git", "commits": [{"id": "1cbe75a2b220921aea6e105ba5a732a1dae9061b", "msg": "Suspended the NAT Gateway in nat.tf file because of billing", "date": "2019-08-06 15:28:49+01:00", "modified_files": ["nat.tf", "network.tf"]}]}, {"name": "https://github.com/hmcts/bar-shared-infrastructure.git", "commits": [{"id": "97ff59ebd1cb8fc9ed24bb0c57f8a8cdddd280a4", "msg": "PAY-3742- error fixes for shared infra", "date": "2020-10-22 13:26:59+01:00", "modified_files": ["key-vault.tf", "main.tf"]}, {"id": "57e2d9c3173097a3ebeecbeeec7f4b1982bcebad", "msg": "PAY-3742- error fixes for shared infra", "date": "2020-10-22 13:44:25+01:00", "modified_files": ["variables.tf"]}, {"id": "bc7f69638554bf786f03652133ab0ac285b0542f", "msg": "PAY-3742- error fixes for shared infra", "date": "2020-10-22 13:52:51+01:00", "modified_files": ["state.tf"]}, {"id": "021e29f0f81388b776e7b9fd912f15e88d2da102", "msg": "PAY-3742- new Mi creation", "date": "2020-10-22 14:03:35+01:00", "modified_files": ["key-vault.tf"]}, {"id": "5e654fb34b0e6835e5f46a44d994229865f790b0", "msg": "PAY-3795- Terraform upgrade", "date": "2020-11-10 14:32:26+00:00", "modified_files": [".terraform-version", "main.tf", "state.tf", "versions.tf"]}, {"id": "2a60b3db830e990214c56e378f01070cdca69655", "msg": "PAY-4612:upgrade teraform version", "date": "2021-06-01 16:30:34+01:00", "modified_files": ["versions.tf"]}, {"id": "4c6f99a7b7dcd5ce6005bc3bc9a4f38a85554b17", "msg": "PAY-4612:removed the terraform upgrade changes", "date": "2021-06-01 16:38:29+01:00", "modified_files": ["versions.tf"]}, {"id": "19b84c7416051708bb50242ffc339d6fe5ea2347", "msg": "PAY-4612:update the key-vault download location from azuremv2 to master", "date": "2021-06-03 16:17:11+01:00", "modified_files": ["key-vault.tf"]}]}, {"name": "https://github.com/holgerson97/terraform-azure-network.git", "commits": [{"id": "6e5f541f7d88430a6c041499048c50a95d53c2b8", "msg": "Add: Cost Management configuration", "date": "2021-04-13 19:26:18+02:00", "modified_files": ["cost_management.tf"]}]}, {"name": "https://github.com/lmedinelli/hashicat-aws.git", "commits": [{"id": "4cbad252a48ab01c6aa7cd61451b40174dad4ce8", "msg": "Added the Billable tag", "date": "2020-10-30 02:21:54+00:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/Lemax-Dev/infrastructure-repo.git", "commits": [{"id": "ffd09b599d999216731757ec767a54d8f5114d38", "msg": "Create paymentteam.tf", "date": "2019-12-28 21:57:28+00:00", "modified_files": ["paymentteam.tf"]}, {"id": "1182fa31cf587bab3d37d94865935d0e50f5d9ea", "msg": "Update paymentteam.tf", "date": "2019-12-28 22:03:07+00:00", "modified_files": ["paymentteam.tf"]}, {"id": "aeb3b7c97687913db6c528bd106d94e26beaeb8e", "msg": "Delete paymentteam.tf", "date": "2019-12-28 23:09:23+00:00", "modified_files": ["paymentteam.tf"]}]}, {"name": "https://github.com/alphagov/govwifi-terraform.git", "commits": [{"id": "348b52a2ae5d6d242c8802644f9e3a5e6460de1d", "msg": "Add Autoscaling to Logging API (#97)\n\nThis adds 2 Cloudwatch alarms, one when the CPU is above 50% for 5\r\nminutes and another when the CPU is below 10% for 10 minutes.\r\n\r\nThese alarms will trigger an autoscaling action, adding or removing\r\nanother task.\r\n\r\nWe want this behaviour to accommodate traffic spikes and to scale down\r\nafterwards to save costs.", "date": "2018-07-24 09:57:53+01:00", "modified_files": ["alarms-logging.tf", "logging-scaling-policy.tf"]}, {"id": "38d0a67cf70d46c26675ce60a7a647eef0f11e52", "msg": "Reduce memory for containers in our API cluster (#101)\n\nCurrently we have just under 2Gb (1900MB) memory reserved for each container.\r\nThe memory utilisation never goes above 5%.\r\nReduce this memory reservation by half to 950MB per container.\r\n\r\nThis will save on AWS costs as we need less EC2 instances.\r\nWe could reduce this further but would do that\r\nas a separate task after having seen this work in production for a\r\nwhile.", "date": "2018-07-26 08:43:20+01:00", "modified_files": ["authorisation-api-cluster.tf", "logging-api-cluster.tf", "user-signup-api-cluster.tf"]}, {"id": "d75eace6e505fe5645647593ab8a9bb018db64c2", "msg": "Remove staging GovWifi devices cluster (#163)\n\nWe are able to broadcast GovWifi Devices on the same SSID, so currently\r\nthere is no need to have a standalone cluster to do this.\r\n\r\nIt will also save costs as we don't need to be running these unused EC2\r\ninstances.", "date": "2018-12-19 14:14:00+00:00", "modified_files": ["cluster.tf", "instances.tf", "variables.tf"]}]}, {"name": "https://github.com/mjmenger/terraform-bigip-postbuild-config.git", "commits": [{"id": "934fafcd2fb034194aa0bd1d5d9c00f262f82aa0", "msg": "fix to bigip_atc_payload description", "date": "2021-07-15 19:55:25+00:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/RagedUnicorn/tf-aws-rg-base.git", "commits": [{"id": "df2bfd188197969796e4e74f038332e723001007", "msg": "Add new module budget for tracking aws costs", "date": "2018-11-16 14:49:15+01:00", "modified_files": ["sns_subscription_1.png", "sns_subscription_2.png", "sns_subscription_3.png", "README.md", "budget.tf", "main.tf", "output.tf", "variables.tf"]}]}, {"name": "https://github.com/meshcloud/terraform-gcp-meshplatform.git", "commits": [{"id": "35ab65bc0205a2edb3e916c1863b9137c4099788", "msg": "feat: variables and outputs for cloud billing export", "date": "2022-03-30 11:00:41+02:00", "modified_files": ["main.tf", "main.tf", "main.tf", "module.tf", "variables.tf", "outputs.tf", "variables.tf"]}, {"id": "7b6ebea6de3c265c507df75564e9c1f3022d18d7", "msg": "docs: include cloud_billing_export_table_name in examples", "date": "2022-03-30 11:16:57+02:00", "modified_files": ["main.tf", "outputs.tf", "main.tf", "outputs.tf"]}]}, {"name": "https://github.com/dieple/terraform-aws-rds-aurora.git", "commits": [{"id": "921bfe229affa8ddaaecece8a3ebdaeb1c705902", "msg": "add kms payload resource", "date": "2019-06-17 15:26:30+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/kis9a/terraform.git", "commits": [{"id": "f70b95654a30088143a29a5d37a658b8d31540e7", "msg": "init alarm resources for billing", "date": "2021-11-23 20:51:07+09:00", "modified_files": [".terraform.lock.hcl", "alarm.tf", "backend.tf", "provider.tf", "sns.tf", "variables.tf"]}]}, {"name": "https://github.com/juegge/myterragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/Devgurusio/terraform-gcp-gke-ecommerce.git", "commits": [{"id": "f5af60ecda2c4ebeb8de222d4ffaae21e9977bcc", "msg": "Adding updateble node pools (#8)\n\n* Adding updateble node pools\r\n\r\n* Updating terraform version to 0.15.0\r\n\r\n* Updating pre-commit versions\r\n\r\n* Updating README\r\n\r\n* Updated cluster outputs description\r\n\r\n* Upgrade terraform and providers\r\nAdd low cost example\r\nRemove VSCode setting\r\n\r\nCo-authored-by: Jose Antonio Herna\u0300ndez Marti\u0301nez <jose@devgurus.io>", "date": "2021-04-28 05:11:04-03:00", "modified_files": ["lint.yaml", ".pre-commit-config.yaml", ".terraform.lock.hcl", "settings.json", "CONTRIBUTING.md", "README.md", "cluster.tf", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf", "network.tf", "nodes.tf", "outputs.tf", "versions.tf"]}]}, {"name": "https://github.com/eladidan/speedyhead.xyz-terraform.git", "commits": [{"id": "71f034f3e13e9118a2a954e1fc3c0d35153184f0", "msg": "add billing budget and cerebro project (#1)\n\nadd billing budget and cerebro project", "date": "2020-08-27 15:48:07-04:00", "modified_files": ["backend.tf", "main.tf", "main.tf", "outputs.tf", "variables.tf", "projects.tf", "providers.tf", "variables.tf"]}]}, {"name": "https://github.com/OpenClassrooms/terraform-aws-lambda-apigw-module.git", "commits": [{"id": "321689e9fe4d50062a4b5661f95e63994ce67715", "msg": "implement input/payload for scheduled lambda + multiple scheduling", "date": "2022-02-09 16:21:57+01:00", "modified_files": ["main.tf", "scheduling.tf", "variables.tf"]}]}, {"name": "https://github.com/Vinayaks439/terraform-devops.git", "commits": [{"id": "f084b69488ddcd98686bf3147fad40cf48486530", "msg": "Created a custom role for billing admin privel", "date": "2021-07-01 04:51:05+05:18", "modified_files": ["acl.tf"]}, {"id": "dd130b570ce669ba0b0a0ea02b6f1ef5d2dfb4fa", "msg": "Revert \"Created a custom role for billing admin privel\"", "date": "2021-07-01 04:56:39+05:18", "modified_files": ["acl.tf"]}]}, {"name": "https://github.com/globeandmail/aws-dynamodb.git", "commits": [{"id": "a13197640c424ce34b9669b8596c28d945b6e684", "msg": "only supports provisioned mode for billing", "date": "2020-01-03 15:21:29-05:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/j-lrx/tf-modules.git", "commits": [{"id": "22b7afc62fd009e5dba743cc7aaed29c2547a7d9", "msg": "Rename project/billing-budget/main.tf to gcp/project/billing-budget/main.tf", "date": "2022-02-05 13:56:17+01:00", "modified_files": ["main.tf"]}, {"id": "20b81b27079e1bec54898b0d8b5d82119d080e4a", "msg": "Rename project/billing-budget/output.tf to gcp/project/billing-budget/output.tf", "date": "2022-02-05 13:57:35+01:00", "modified_files": ["output.tf"]}, {"id": "334d1743446a371b03904ade309562454f33c0c8", "msg": "Rename project/billing-budget/variables.tf to gcp/project/billing-budget/variables.tf", "date": "2022-02-05 13:58:15+01:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/nikkiwritescode/flask-app-terraform-deployment.git", "commits": [{"id": "af47bb6201f1dcc8264e60da429e4ff8d126e56c", "msg": "Updated gunicorn to run 4 worker threads per instance; assigned public IPs to the instances so that they can update themselves on launch; updated DB to Pay Per Request instead of Provisioned; removed unneeded dependencies in the bash script; and added the EC2 Instance Profile to the second instance.", "date": "2021-06-05 20:08:43-05:00", "modified_files": ["main.tf", "ec2-user-data.sh.tpl", "main.tf", "variables.tf", "main.tf", "outputs.tf", "main.tf", "outputs.tf", "main.tf", "variables.tf", "outputs.tf"]}]}, {"name": "https://github.com/starcity-properties/terraform-modules.git", "commits": [{"id": "212f12b328ea37570a573113e11c4cb286214ebe", "msg": "Remove references to Billboard", "date": "2019-07-02 15:59:08-07:00", "modified_files": ["rds.tf"]}]}, {"name": "https://github.com/canada-ca/accelerators_accelerateurs-gcp.git", "commits": [{"id": "735837b7e959cc33f35a7d1b3ac25ffb5202a5e5", "msg": "fix: add biling account viewer permissions to billing-data-users group (#105)", "date": "2020-07-23 03:19:52-03:00", "modified_files": ["iam.tf"]}, {"id": "6c13d3383700fddfa8ef4dd35e6fa66d3b449431", "msg": "add billing.admin role to terraform SA and remove budget from projects in 0-bootstrap. (#205)", "date": "2020-08-05 15:59:04-03:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/KieniL/terraform_setups.git", "commits": [{"id": "f560dafa6d58ce4049f83ff0e90ded354a772e16", "msg": "added payg", "date": "2022-02-07 16:53:44+01:00", "modified_files": ["README.md", "main.tf", "main.tf"]}, {"id": "37f66bc43f57b1b7a5a897c58cefe09900afd7ef", "msg": "made default pool cost effective", "date": "2022-02-19 16:33:41+01:00", "modified_files": ["README.md", "README.md", "graph.svg", "README.md", "graph.svg", "variables.tf"]}]}, {"name": "https://github.com/pborzenkov/infra.git", "commits": [{"id": "50e963b72305d223e68c31144198ea99e5937b24", "msg": "namecheap: switch to MERGE config\n\nUntil Terraform supports DynDNS A entries, they have to be configured manually.", "date": "2022-05-08 15:44:30+02:00", "modified_files": ["borzenkov.net.tf", "flake.nix"]}]}, {"name": "https://github.com/alhardy-net/terraform-core-aws-alhardynet-networking.git", "commits": [{"id": "30be6aa1969e37d512153b558540fe714b635c4c", "msg": "disable nat gateways in vpc to save cost for now", "date": "2021-07-02 20:27:21+10:00", "modified_files": ["main.tf"]}, {"id": "f7b96f0b28008f8aed881cc211a5f3fdb3ae67ac", "msg": "disable nat gateways in vpc to save cost for now", "date": "2021-07-02 20:29:05+10:00", "modified_files": ["main.tf"]}, {"id": "b26b9e5d1b13602a4c192d9697a12df7770906b2", "msg": "disable nat gateway save cost", "date": "2021-07-02 20:30:32+10:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/kperson/terraform-modules.git", "commits": [{"id": "53bd2d84776f9ed7ae287fc59ed42f87bd7bbc4b", "msg": "allowed for pay per request", "date": "2020-04-25 07:06:34-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/kdustin117/TerraGoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/chandraummadi/Devops-projects.git", "commits": [{"id": "c52ce1dd49d0bdc7cfe9a1d14d67828cba5881ae", "msg": "updated terraform main file with mysql,shipping,rabitmq and payment services", "date": "2021-11-15 09:15:02+05:18", "modified_files": ["roboshop.yml", "main.tf"]}]}, {"name": "https://github.com/ibm-hcbt/acct-config-iam.git", "commits": [{"id": "8d703213281dcbb6f7397bfd56ffc9618840ba29", "msg": "added rule for viewer to billing on admin", "date": "2021-03-12 13:08:27-06:00", "modified_files": ["README.md", "main.tf"]}]}, {"name": "https://github.com/sanagupta0805/bridgeCrew.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/shaharsa/terragoat5.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/digio/terraform-google-gitlab-runner.git", "commits": [{"id": "07f8279fe65a35c0e595f3171f3d75791e49a9ae", "msg": "change default runner machine type to f1-micro\n\nA previous change set the default runner type to e2-micro in the\nmistaken belief that it was cheaper.  It _is_ cheaper per hour but is\nmore expensive per month due to lack of sustained use discounts.", "date": "2021-03-01 22:12:50+11:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/dahlke/terrasnek-unittest-config.git", "commits": [{"id": "7c9adc3bf560dc00b0b64824160239549debe253", "msg": "Upgrade the AWS config for TF 0.12 so it can be used with Cost\nEstimation.", "date": "2020-05-08 18:01:53-07:00", "modified_files": ["main.tf", "versions.tf"]}]}, {"name": "https://github.com/jharley/azure-basic-demo.git", "commits": [{"id": "7cd3d202d8723c565704f23c143cae3b1e1d6d2b", "msg": "OPS-7237 - switch machine type to DS1\n\nCost savings project", "date": "2018-12-18 13:00:00-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/juliandunn/terraform-chefserver.git", "commits": [{"id": "3971011e4253cb5b98fdf77a558f5ef8f34d2653", "msg": "Switch to Centos 7 for cheaper costs", "date": "2015-10-08 07:15:51-04:00", "modified_files": ["vars.tf"]}]}, {"name": "https://github.com/shiv-rajawat/aws_logging_solutions.git", "commits": [{"id": "8ee1910e95a6ceb9f51c2473f7a161fe23da5c07", "msg": "Removed the bug in main.tf of Cloudwatch_Logs_To_S3.\n\nIt turned out that the policy being created has the same name as the\npolicy that was created by Cloudtrail_logs_To_S3. There is still a bug\nin the lambda function inside lambda_payload.zip which is due to the\nlimit in AWS for having only one export task at a time.", "date": "2018-11-06 23:14:47+05:18", "modified_files": ["lambda_function_payload.zip", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/pcernek/cpsc534l-project.git", "commits": [{"id": "c8149b8eaa9afde65c3c350c6616f31de0df3598", "msg": "Add team inclusion cost adder, and convert k into budget", "date": "2018-01-03 17:56:32-08:00", "modified_files": ["main.cpp", "dblp_example1.tf", "dummy_example1.tf", "parse_dblp.py", "src.cmake", "team_inclusion_cost_adder.cpp", "team_inclusion_cost_adder.h", "instance.h", "instance_loader.cpp", "node.h", "greed_ratio_top_k_solver.cpp", "greed_ratio_top_k_solver.h", "top_k_solver.h"]}]}, {"name": "https://github.com/NedimRenesalis/demblock-pipeline.git", "commits": [{"id": "9edee1a04f6056f367ce5ef678775c1203d6a778", "msg": "infra: switch to cheaper region", "date": "2020-06-26 15:41:32+02:00", "modified_files": ["infra-deploy.yml", "infra-destroy.yml", "infra-pr.yml", "secrets-mgmt.yml", "main.tf"]}]}, {"name": "https://github.com/pangeo-data/terraform-deploy.git", "commits": [{"id": "f8163bd52bea3774e2f160cff0523c602e65d933", "msg": "Use smaller notebook instances\n\nCosts less money, given we can't scale to 0 yet.", "date": "2020-02-12 23:40:48+05:18", "modified_files": ["main.tf", "values.yaml"]}, {"id": "b7b26a9ef0616c85dfdd114c19811588e44d1fd6", "msg": "Added autotagging\n\nThis is for the UW groups' AWS resources. We have deployed an autotagging stack from GorillaStack to help us with billing. These lines help make sure Terraform tags resources the same way so that it doesn't undo changed made by the autotagging infrastructure.", "date": "2020-02-26 14:15:58-08:00", "modified_files": ["autoscaler.tf", "efs.tf", "main.tf"]}, {"id": "7244eed07a1008675f45cc4349bf68141bb29edc", "msg": "Use less expensive nodes for kubernetes by default\n\nWe are still testing, tearing things up and down - cheaper\nis better.", "date": "2020-04-03 15:38:30+05:18", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/Rpb1980/cloud-foundation-fabric.git", "commits": [{"id": "c486bfc66f9814e33b410602cb557a5e4d532912", "msg": "Merge development branch (#44)\n\n* VPN-HA module initial commit\r\n\r\n* Added readme for net-vpn-ha module\r\n\r\n* Update readme, add simple description\r\n\r\n* Merge new modules list and environments foundation example (#30)\r\n\r\n* gke-cluster\r\n\r\n* net-vpc module and tests\r\n\r\n* add TODO to net-vpc module\r\n\r\n* add minimal README files with input/output variables to gke and net-vpc modules\r\n\r\n* BigQuery Module (#24)\r\n\r\n* Bigquery Module\r\n\r\n* Added README file\r\n\r\n* Added type hints\r\n\r\n* gke-cluster\r\n\r\n* net-vpc module and tests\r\n\r\n* add TODO to net-vpc module\r\n\r\n* add minimal README files with input/output variables to gke and net-vpc modules\r\n\r\n* BigQuery Module (#24)\r\n\r\n* Bigquery Module\r\n\r\n* Added README file\r\n\r\n* Added type hints\r\n\r\n* GCS module\r\n\r\n* net vpc module: improve secondary range outputs\r\n\r\n* net vpc module: add serve project registration\r\n\r\n* project module\r\n\r\n* move bigquery module to not-ready folder\r\n\r\n* folders module\r\n\r\n* rename project module's iam variables\r\n\r\n* slight tweak to folder module outputs\r\n\r\n* gcs module\r\n\r\n* simplify net-vpc module variables\r\n\r\n* fix module tests configurations, fix net-vpc module tests\r\n\r\n* add pydoc utility\r\n\r\n* add/update module READMEs\r\n\r\n* add/update module READMEs\r\n\r\n* add/update module READMEs\r\n\r\n* improve variable type summary generation in tfdoc\r\n\r\n* tfdoc: add support for replacing doc in README.md files\r\n\r\n* improve module READMEs\r\n\r\n* net-vpc-firewall module\r\n\r\n* add support for sensitive output attribute in tfdoc\r\n\r\n* remove empty function from tfdoc\r\n\r\n* render variable type as code in tfdoc\r\n\r\n* update module READMEs\r\n\r\n* net address module\r\n\r\n* net cloudnat module\r\n\r\n* remove redundant variable from net-cloudnat module\r\n\r\n* vpc module: add support for peering, use network name as subnet name prefix\r\n\r\n* net-vpn-static module\r\n\r\n* net-vpn-static module README\r\n\r\n* net-vpn-static module README\r\n\r\n* tfdoc: fix error on undeclared variable type\r\n\r\n* dns module\r\n\r\n* set version for all modules\r\n\r\n* kms module (untested)\r\n\r\n* change kms key self links output to map, fix gcs and kms iam variable descriptions\r\n\r\n* fix kms module\r\n\r\n* update kms module readme\r\n\r\n* simplify local iam pairs in modules\r\n\r\n* service accounts module (unfinished)\r\n\r\n* work on service accounts module\r\n\r\n* project module: add gcr service account\r\n\r\n* project module: update outputs in README\r\n\r\n* first working version of the iam service accounts module\r\n\r\n* iam service accounts module: extra checks in locals\r\n\r\n* modules/net-cloudnat: reorder variables\r\n\r\n* modules/net-vpn-dynamic: initial import (untested)\r\n\r\n* modules/net-vpn-dynamic: first working version\r\n\r\n* modules/net-vpn-dynamic: add outputs for auto-created router\r\n\r\n* modules/net-vpn-dynamic: update README\r\n\r\n* modules/net-[vpn,cloudnat]: clean up variable,s remove prefix\r\n\r\n* modules/net-vpn-dynamic: add advertisement configuration to tunnel bgp peer, refactor variables\r\n\r\n* tfdoc: add tooltips for variable types and defaults\r\n\r\n* modules: update README variables and outputs\r\n\r\n* tfdoc: improve variable default rendering\r\n\r\n* modules: update README variables and outputs\r\n\r\n* modules/net-vpc: minimal output refactoring\r\n\r\n* modules/vm-cos: initial import, base resources working, no outputs\r\n\r\n* modules/vm-cos: add variable descriptions\r\n\r\n* tfdoc: fix parsing in type and default blocks\r\n\r\n* modules/vm-cos: fix README\r\n\r\n* tfdoc: fix parsing in type and default blocks\r\n\r\n* modules/vm-cos: fix README\r\n\r\n* modules/compute-vm: initial working import (not fully tested)\r\n\r\n* modules/vm-cos: move to not-ready\r\n\r\n* tfdoc: fix variable defaults formatting\r\n\r\n* modules: update README files with tfdoc fixes\r\n\r\n* modules: add initial examples\r\n\r\n* gke-nodepool: initial import, untested\r\n\r\n* gke nodepool: add README, fix location variable, set node count default to 1\r\n\r\n* gke cluster: fix private cluster variables\r\n\r\n* gke nodepool: fix README title\r\n\r\n* gke cluster: add output for cluster location\r\n\r\n* gke nodepool: add missing variables for project id and cluster name, remove default from location variable, fix gke version assignment\r\n\r\n* gke nodepool: update README\r\n\r\n* net-cloudnat: fix router name when creating default router\r\n\r\n* fix variables used for address and router optional creation\r\n\r\n* vpn dynamic: fix README\r\n\r\n* modules/net-vpn-dynamic: fix router name output\r\n\r\n* modules/compute-vm: remove unused variable\r\n\r\n* modules/compute-vm-cos-coredns: initial import\r\n\r\n* Update foundations modules versions (#26)\r\n\r\n* update foundations modules versions\r\n\r\n* update Terraform version to v0.12.19 in CI test configuration\r\n\r\n* backport tfdoc from Ludo's branch (#27)\r\n\r\n* Update docs using tfdoc format (#28)\r\n\r\n* update README files\r\n\r\n* set all types on variables\r\n\r\n* foundations/environments: move log filter to a variable, use org for xpn by default\r\n\r\n* foundations/environments: do not use liens by default\r\n\r\n* modules/ntp-vpc: better shared_vpc_host variable description\r\n\r\n* modules/logging-sinks: initial version\r\n\r\n* modules/logging-sinks: streamline options in sinks variable\r\n\r\n* modules/compute-vm-cos-coredns: add support for additional files\r\n\r\n* modules/folders: rename from 'folder'\r\n\r\n* modules/logging-sinks: fix circular dependencies and improve variables\r\n\r\n* modules/project: remove extra variable\r\n\r\n* modules/bigquery: new module with dataset support only\r\n\r\n* foundations/environments: refactor using local modules\r\n\r\n* modules/bigquery: better variables, README description and example\r\n\r\n* modules: fix a few READMEs\r\n\r\nCo-authored-by: Julio Castillo <juliocc@gmail.com>\r\n\r\n* modules/net-vpc: README description and examples\r\n\r\n* modules/net-vpc: tweak README description and examples\r\n\r\n* modules/net-vpc: tweak README description and examples\r\n\r\n* modules/net-vpc-firewall: change tag-based rule default ranges, improve README examples and description\r\n\r\n* modules/compute-vm: README changes\r\n\r\n* modules/compute-vm: use an object for the service account variable, update README\r\n\r\n* modules/compute-vm: update README variables table\r\n\r\n* modules/compute-vm: add TODO list to README\r\n\r\n* modules/compute-vm: add TODO list to README\r\n\r\n* modules/compute-vm: add outputs for service account\r\n\r\n* modules/net-cloudnat: README\r\n\r\n* modules/net-cloudnat: README\r\n\r\n* modules/net-cloudnat: add router_create variable\r\n\r\n* modules/compute-vm: simplify service account variables\r\n\r\n* modules/net-vpn-dynamic: fix README example, use local secret for both empty string and null\r\n\r\n* modules/net-vpn-dynamic: improve README example\r\n\r\n* modules/gke-cluster: minimal README tweaks\r\n\r\n* modules/kms: fix ephemeral keys resource name\r\n\r\n* modules/iam-service-accounts: add storage roles\r\n\r\n* modules/gke-nodepool: fix node default scopes\r\n\r\n* New project variable to prevent deletion of default network (#32)\r\n\r\n* New project variable to prevent deletion of default network\r\n\r\nThis is a workaround to fix\r\nterraform-google-modules/cloud-foundation-fabric#31 while the GCP\r\nterraform provider is fixed\r\n\r\n* Add TODOs to remove workarounds in the project module\r\n\r\n* Fix Cloud Build files\r\n\r\n* modules/gke-nodepool: add monitoring scope to defaults\r\n\r\n* modules/iam-service-accounts: add support for IAM bindings onthe service accounts\r\n\r\n* playground module in sandbox, remove not ready modules\r\n\r\n* Fix ci configurations in development branch (#33)\r\n\r\n* try fixing ci confgurations\r\n\r\n* add exclusion match to ci boilerplate check\r\n\r\n* add skip boilerplate comment to compute-vm-cos-coredns template fragment\r\n\r\n* modules/gke-cluster: fix boilerplate in outputs\r\n\r\n* Simplify tests, re-enable CI\r\n\r\n* add instance group support to compute-vm, start tests refactoring\r\n\r\n* modules/compute-vm: group fixes, tests\r\n\r\n* modules/compute-vm: minimal test beautification\r\n\r\n* simplify top-level pytest fixture\r\n\r\n* modules/dns: tests and minor tweaks\r\n\r\n* fix missing boilerplate in tests\r\n\r\n* re-add requirements file to tests folder\r\n\r\n* re-enable tests in ci build configuration\r\n\r\n* Folder module tests and fixes (#38)\r\n\r\n* folder tests wip\r\n\r\n* modules/folders: tests and tweaks\r\n\r\n* update folders and compute-vm README files\r\n\r\n* modules/gcs: tests and minor tweaks\r\n\r\n* Create README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Added docker image for strongSwan\r\n\r\n* Add support for routes and tests to net-vpc module (#39)\r\n\r\n* modules/net-vpc: add routes (untested)\r\n\r\n* initial tests\r\n\r\n* modules/net-vpc: add test for flow logs\r\n\r\n* modules/net-vpc: split tests into two separate files\r\n\r\n* modules/net-vpc: routes test\r\n\r\n* modules/net-vpc: test routes\r\n\r\n* Add support for Terraform plugin cache in ci test build file (#40)\r\n\r\n* add Terraform plugin caching to test ci build configuration\r\n\r\n* fix mkdir in test build configuration\r\n\r\n* trigger test check\r\n\r\n* Refactor dynamic vpn configuration for on-prem-in-a-box module\r\n\r\n* Fix dynamic vpn for onprem-in-a-box module\r\n\r\n* Migrate Shared VPC example to local modules (#41)\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* validated, untested\r\n\r\n* modules/compute-vm: make service account email in locals resilient to destroy\r\n\r\n* modules/project: make project id output depend on iam roles\r\n\r\n* fixes\r\n\r\n* shared-vpc tweaks\r\n\r\n* update diagram\r\n\r\n* update README input output tables\r\n\r\n* modules/compute-vm: add service account IAM email output\r\n\r\n* move GKE service account roles at the project level, add GCE service account roles\r\n\r\n* update diagram and README\r\n\r\n* modules/project: add extra output for IAM-dependent project id\r\n\r\n* update modules READMEs\r\n\r\n* minor tweaks\r\n\r\n* modules/compute-vm: fix service account output\r\n\r\n* remove static address from NAT\r\n\r\n* fix container service agent binding dependency\r\n\r\n* rename shared vpc\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Add static vpn gw to on-prem-in-a-box module\r\n\r\n* Refactor hub and spoke to use new modules (#42)\r\n\r\n* modules/compute-vm: saner defaults for service account scopes\r\n\r\n* hub and spoke refactor, docs still missing\r\n\r\n* complete hub and spoke\r\n\r\n* Update README.md\r\n\r\n* Add toolbox docker container, fix gw routing to the internet\r\n\r\n* Add DNS Hybrid connectivity parameters\r\n\r\n* Fix onprem dns zone for the static vpn configuration\r\n\r\n* Added readme.md for on-prem module\r\n\r\n* Add new line at the end of the files\r\n\r\n* Add boilerplate for cloudbuild config files\r\n\r\n* fix boilerplate in strongswan shell script\r\n\r\n* Update README.md\r\n\r\n* include missing file to fix merge conflict\r\n\r\n* remove missing file to fix merge conflict\r\n\r\n* include missing file to fix merge conflict (again)\r\n\r\n* remove content from spurious file used to avoid merge conflicts\r\n\r\n* Add net-vpc-peering module\r\n\r\n* Initial commit for hub-and-spoke-peering infrastructure example\r\n\r\n* Fix typos in infrastructure/ READMEs\r\n\r\n* remove stale file\r\n\r\n* use larger resolution version of hub and spoke diagram\r\n\r\n* Update README.md\r\n\r\n* Update hub-and-spoke-peerings example to use internal modules\r\n\r\n* Add initial project tests (#46)\r\n\r\n* modules/project: make prefix optional\r\n\r\n* initial project module tests\r\n\r\n* modules/project: use null for unset parent\r\n\r\n* modules/dns: backport PR6 from the CFT dns module\r\n\r\n* Add testing resources including on-prem-in-a-box to hub-and-spoke-peerings example\r\n\r\n* Fix firewall rules to allow connectivity, switch to custom route advertisement for onprem -> spokes connectivity\r\n\r\n* Move locals out of main.tf\r\n\r\n* remove ssh tag from compute-vm variable default\r\n\r\n* Add ssh tag to the test vms\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Hub and spoke peering changes (#48)\r\n\r\n* rename hub-and-spoke-vpn\r\n\r\n* add ssh tag to shared-vpc-gke instance\r\n\r\n* rename and rework hub and spoke peering\r\n\r\n* fix test requirements\r\n\r\n* align hub and spoke peering with module contents\r\n\r\n* diagram\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* minimal fixes to onprem examples variable files\r\n\r\n* onprem example stub, missing DNS zones and private.googleapis records onprem\r\n\r\n* add missing boilerplate\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* infra/onprem: add test instance and minimal outputs\r\n\r\n* add DNS modules and resource\r\n\r\n* infra/onprem: diagram and initial README\r\n\r\n* minor changes to onprem module and example (#49)\r\n\r\n* update toolbox image\r\n\r\n* infra/onprem: add zone for private access, add metadata domain to onprem dns\r\n\r\n* infra/onprem: onnprem service account, add testing procedure in README\r\n\r\n* Update README.md\r\n\r\n* infra/onprem: remove extra variable\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* infra/onprem: rename forwarder address variable\r\n\r\n* Update README:\r\n\r\nAdded explicit --tunnel-through-iap for gcloud compute ssh commands\r\n\r\n* Update top-level and section READMEs (#50)\r\n\r\n* top-level README WIP\r\n\r\n* rewrite top-level README\r\n\r\n* change top-level README title\r\n\r\n* remove initial quote in top-level README\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* foundations README\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* add experimental scheduled cloud function module\r\n\r\n* scheduled cloud function module: allow disabling schedule\r\n\r\n* business-units foundation example (#52)\r\n\r\n* Added folder-units module.\r\n\r\n* Business units example update (WIP)\r\n\r\n* Update all BU modules to internal ones\r\n\r\n* Refactoring business-units example, add billing and org IAM handling\r\n\r\n* update projects tests for new iam additive naming\r\n\r\n* update project README for new iam additive naming\r\n\r\n* streamline bu example and module (#53)\r\n\r\nCo-authored-by: Ludovico Magnocavallo <ludomagno@google.com>\r\n\r\n* align net-vpn-ha interface with the other vpn modules\r\n\r\n* update module README files\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Create CHANGELOG.md\r\n\r\n* Refactor COS module to be generic (#51)\r\n\r\n* Create generic COS module and update CoreDNS module to use it\r\n\r\n* Update compute-vm-cos README\r\n\r\n* Fix COS README\r\n\r\n* Update COS example\r\n\r\n* Skip boilerplate check for COS file template\r\n\r\n* Make COS module more generic and provide preset configurations\r\n\r\n* Update COS module documentation\r\n\r\n* tfdoc: add support for multiple variables files\r\n\r\n* compute-vm: split boot disk in separate variable file for cos module support\r\n\r\n* Streamline cos modules (#54)\r\n\r\n* tfdoc: fix bug in last commit\r\n\r\n* compute-vm: add support for user-data\r\n\r\n* compute-vm: restore noncos variable split\r\n\r\n* remove compute-vm-cos-coredns\r\n\r\n* compute-vm: revert to original state\r\n\r\n* cos-container/coredns\r\n\r\n* fix variables mess\r\n\r\n* cos/coredns fixes\r\n\r\n* cos/mysql\r\n\r\n* remove stale compute-vm-cos module\r\n\r\n* add test instance to cos modules\r\n\r\n* tfdoc: add support for multiple output files\r\n\r\n* cos: add initial READMEs\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* add test apply fixture\r\n\r\n* cos-coredns: tested\r\n\r\n* Update README.md\r\n\r\n* Fix typo\r\n\r\n* cos-coredns: refactor README\r\n\r\n* Update README.md\r\n\r\n* test yaml validity in cos modules tests\r\n\r\n* cos mysql tests\r\n\r\n* cos mysql: refactor and test (disk tests missing)\r\n\r\n* onprem: fix Coredns\r\n\r\n* cos mysql: additional disk working\r\n\r\n* cos modules: fix instance disks for no instance\r\n\r\n* update some modules READMEs\r\n\r\n* update some modules READMEs\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* add simple tests for foundations/environments\r\n\r\n* change default for org id in foundations/environments to avoid errors when none is specified\r\n\r\n* fix null/empty organization id in foundations/environments\r\n\r\n* fix errors when destroying on empty state in foundations/environments\r\n\r\n* fundations/bu: fix errors when destroying with empty state\r\n\r\n* modules/gcs: make outputs resilient on destroy with empty state\r\n\r\n* modules/folders: make outputs resilient on destroy with empty state\r\n\r\n* switch organization_id variable to long form in foundations/bu and modules/folders-unit\r\n\r\n* Update README.md\r\n\r\n* infra/shared-vpc: remove duplicate tag attribute from bastion\r\n\r\nCo-authored-by: Aleksandr Averbukh <averbukh@google.com>\r\nCo-authored-by: Julio Castillo <juliocc@gmail.com>\r\nCo-authored-by: Julio Castillo <jccb@google.com>", "date": "2020-04-03 14:06:48+02:00", "modified_files": [".terraformrc", "cloudbuild.lint.yaml", "cloudbuild.test.yaml", "check_boilerplate.py", "CHANGELOG.md", "README.md", "Dockerfile", "README.md", "cloudbuild.yaml", "entrypoint.sh", "ipsec-vti.sh", "Dockerfile", "README.md", "cloudbuild.yaml", "entrypoint.sh", "README.md", "README.md", "backend.tf.sample", "main.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "outputs.tf", "providers.tf", "terraform.tfvars.sample", "variables.tf", "versions.tf", "README.md", "locals.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "README.md", "backend.tf.sample", "diagram.png", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "backend.tf.sample", "diagram.png", "main.tf", "outputs.tf", "provider.tf", "variables.tf", "README.md", "diagram.png", "main.tf", "outputs.tf", "terraform.tfvars.sample", "test-resources.tf", "variables.tf", "README.md", "Corefile", "diagram.png", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "backend.tf.sample", "diagram.gcpdraw", "diagram.png", "main.tf", "outputs.tf", "variables.tf", "versions.tf", ".terraform.tfstate.lock.info", "README.md", "diagram.png", "locals.tf", "main.tf", "outputs.tf", "test-resources.tf", "variables.tf", "README.md", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "instance_group.tf", "main.tf", "outputs.tf", "variables.tf", ".gitignore", "README.md", "Corefile", "Corefile-hosts", "README.md", "cloud-config.yaml", "instance.tf", "main.tf", "outputs-instance.tf", "outputs.tf", "variables-instance.tf", "variables.tf", "instance.tf", ".gitignore", "README.md", "cloud-config.yaml", "instance.tf", "main.tf", "outputs-instance.tf", "outputs.tf", "variables-instance.tf", "variables.tf", "outputs-instance.tf", "variables-instance.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "locals.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "Corefile", "dynamic-vpn-gw-cloud-init.yaml", "static-vpn-gw-cloud-init.yaml", "main.tf", "outputs.tf", "variables.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "__init__.py", "conftest.py", "__init__.py", "terraform.tfvars", "test_folders.py", "test_outputs.py", "test_projects.py", "test_service_accounts.py", "__init__.py", "conftest.py", "main.tf", "variables.tf", "terraform.tfvars", "test_outputs.py", "test_plan.py", "test_projects.py", "test_service_accounts.py", "terraform.tfvars", "test_cloud_routers.py", "test_firewall.py", "test_outputs.py", "test_vpns.py", "conftest.py", "terraform.tfvars", "test_outputs.py", "test_svpc_resources.py", "__init__.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "test_plan_group.py", "__init__.py", "main.tf", "outputs.tf", "variables.tf", "test_apply.py", "__init__.py", "main.tf", "outputs.tf", "variables.tf", "test_apply.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "test_plan_subnets.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "requirements.txt", "tfdoc.py"]}, {"id": "036b9ea95085163313f70cefbaf85e4e07a7543c", "msg": "Obey var.iam_billing_config.grant (#113)\n\n* Update main.tf\r\n\r\n* Update main.tf", "date": "2020-07-15 13:18:42+02:00", "modified_files": ["main.tf"]}, {"id": "3a8a040ff3efcec38c423d5249625ed2d87ab261", "msg": "Billing budget module", "date": "2021-08-12 19:43:09+02:00", "modified_files": ["README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "__init__.py", "main.tf", "variables.tf", "test_plan.py"]}]}, {"name": "https://github.com/fluent-labs/infrastructure.git", "commits": [{"id": "66889f6d34d74f16bd58df3692cadc7af934b32c", "msg": "Sematext logging (#69)\n\nLog in sematext. Why? We fit the free tier and hosting our own elasticsearch is expensive.", "date": "2021-03-20 22:51:35-07:00", "modified_files": ["infrastructure.tf", "main.tf", "fluentd.yml", "main.tf", "variables.tf", "variables.tf"]}, {"id": "c166c9356246b540be28f56c7240e69e45f5b973", "msg": "Bring down the digital ocean K8s cluster (#104)\n\nIt's been great digitalocean, but I'd rather use free credits than pay for compute.", "date": "2021-07-31 17:15:55-07:00", "modified_files": ["infrastructure.tf", "main.tf"]}]}, {"name": "https://github.com/pastis-hosting/net.pastis-hosting.k8s.git", "commits": [{"id": "c7d46985943a8c592dc3dd6b9c9a2dd5ea56885c", "msg": "infracost: typo", "date": "2022-05-02 01:59:51+02:00", "modified_files": ["infracost.yml", "main.tf", "kubernetes-dashboard-admin-rbac.yaml"]}, {"id": "b1750288f0e41ff6db8556e2da07a603b2726ee9", "msg": "tf: cloudbilling", "date": "2022-05-11 02:30:26+02:00", "modified_files": ["gke.tf"]}, {"id": "de3db2c19307f3aa7e2b7fd48808469ef96c3c58", "msg": "tf: gke billing", "date": "2022-05-11 02:57:29+02:00", "modified_files": ["gke.tf"]}, {"id": "c8fe20a3f0e7f24ca98f1a42a9aff42e2bc7fbdc", "msg": "tf: gke billing", "date": "2022-05-11 03:02:37+02:00", "modified_files": ["gke.tf"]}, {"id": "8ed17e89bc2c24fafdac697924eb21ea27b7ada5", "msg": "tf: gke billing", "date": "2022-05-11 03:04:38+02:00", "modified_files": ["gke.tf"]}, {"id": "ad5443560ac78b8252f59f350cb628100be76c2f", "msg": "tf: gke billing", "date": "2022-05-11 03:06:18+02:00", "modified_files": ["gke.tf"]}, {"id": "84dacc27c505b5f65fd1c301ae8b560639d8a40f", "msg": "tf: gke billing", "date": "2022-05-11 03:07:46+02:00", "modified_files": ["gke.tf"]}, {"id": "942ddc816927701a637256d67a94764deb22ff00", "msg": "tf: billing", "date": "2022-05-11 03:19:29+02:00", "modified_files": ["gke.tf"]}, {"id": "83ed32b1c478ecbe2fed381b99738283a2ab47bb", "msg": "tf: billing", "date": "2022-05-11 03:23:48+02:00", "modified_files": ["gke.tf"]}, {"id": "95c23c85d8d2f9b785dc83b84b307a05792c0ae2", "msg": "refactor(gcp): billing", "date": "2022-05-11 17:26:39+02:00", "modified_files": ["gke.tf"]}, {"id": "1ac836786a91f1fe647063cf10e8c613e9581d19", "msg": "feat(gcp): billing", "date": "2022-05-11 17:33:32+02:00", "modified_files": ["gke.tf"]}]}, {"name": "https://github.com/colinjfw/stack.git", "commits": [{"id": "e27f8951d4387d5a2f6e03fd7f5a4f3c6ee53c66", "msg": "feat(vpc): Optionally use NAT instances instead of NAT gateways\n\nIF NAT instances are used, optional inputs are whether to use Elastic\nIPs, an SSH key name, and the EC2 instance type. The latest Amazon VPC\nNAT AMI is used. The use of NAT instances can be less expensive than NAT\ngateways for development VPCs. NAT instances can be stopped when not in\nuse.", "date": "2017-07-15 18:37:55-06:00", "modified_files": ["Readme.md", "docs.md", "main.tf"]}]}, {"name": "https://github.com/jszalkowski/tf-aws-modules.git", "commits": [{"id": "f0402c853b22ba4415264da1f5ad45f2480b5f53", "msg": "billing group attachment", "date": "2017-04-28 14:53:57-05:00", "modified_files": ["aws_account_setup.tf"]}]}, {"name": "https://github.com/shruthiravik/eks-terraforms.git", "commits": [{"id": "c82a19d98673c1aeeb1fa26afb983acbfbea272f", "msg": "Add ec2 cost optimination using tags", "date": "2018-10-31 11:55:59+05:18", "modified_files": ["lambda.js", "main.tf", "variables.tf"]}, {"id": "5f0c515e6b145f244be7ef2492d9a700de5743e8", "msg": "Refactored ec2-cost-optimization-using-tags lambda", "date": "2018-11-16 18:56:15+05:18", "modified_files": ["lambda.js", "main.tf", "variables.tf"]}, {"id": "65f7112ea071383a397ab3bd34491c35d9265dd9", "msg": "Refactored config-rules and changed ec2-cost-optimization-using-tags to ec2-tags-checker", "date": "2018-11-20 12:48:58+05:18", "modified_files": ["instance_tags.js", "lambda.tf", "security_groups.js", "utills.js", "variables.tf", "lambda.js", "lambda.js", "utils.js", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/sciety/infrastructure.git", "commits": [{"id": "e9c6f0eec2380115182f3a964fd2283622734256", "msg": "Turn on T2 unlimited (#15)\n\n`unstable` is experiencing high load and ~80% CPU steal which indicates\r\nCPU credits are consumed, but not replenished by periods of low activity:\r\n```\r\ntop - 10:14:50 up 68 days, 20:26,  1 user,  load average: 10.83, 11.57,\r\n9.00\r\nTasks: 165 total,   8 running, 122 sleeping,   0 stopped,   2 zombie\r\n%Cpu(s): 19.0 us,  7.9 sy,  0.0 ni,  0.0 id,  0.0 wa,  0.0 hi,  0.0 si,\r\n73.1 st\r\n```\r\nThis is a [classic problem for T2 instances on\r\nAWS](https://aws.amazon.com/blogs/aws/new-t2-unlimited-going-beyond-the-burst-with-high-performance/), cheap but throttled often in this way.\r\n\r\nThis results in the T2 instance automatically being billed at an higher\r\nprice to allow full usage of the CPU.", "date": "2019-05-24 11:20:03+03:00", "modified_files": ["main.tf"]}, {"id": "09732a4fcb6a9bb81c37741ed16261ae43aa6fea", "msg": "Expand disk size as we are over the 85% mark (#22)\n\n* Expand disk size as we are over the 85% mark\r\n\r\n* Switch to cheapest SSD volume\r\n\r\nIn an attempt to support elastic expansion of the volume size.\r\n\r\n* Revert change to SSD\r\n\r\nDoesn't help with volume expansion\r\n\r\n* Actually force a magnetic volume rather than not specifying the type", "date": "2019-06-13 13:14:29+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/astronomer/terraform-google-astronomer-cloud.git", "commits": [{"id": "bfb40551e96cdc8e95c295510399d1bbd3d63a83", "msg": "Optionally enable Kubecost (#38)\n\n* Allow max workers to be configurable\r\n\r\n* Optionally add Kubecost", "date": "2019-10-01 10:56:28-04:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "ccf6457815003f2ac3e23fefdc96722e6d31a949", "msg": "Bump kubecost to version 1.44.3", "date": "2019-10-01 18:26:55+00:00", "modified_files": ["main.tf"]}, {"id": "bc7a67f3a4d2821f4d47074d0af4f579bd1ea222", "msg": "Update kubecost to version 1.45.0", "date": "2019-10-09 10:38:59-04:00", "modified_files": ["main.tf"]}, {"id": "7f909492d1e4e1c3181c017ab1f9c0c68250d74d", "msg": "Update Kubecost to version 1.45.1 (#42)\n\n* Update Kubecost to version 1.45.1", "date": "2019-10-10 12:38:54+00:00", "modified_files": ["main.tf"]}, {"id": "76362efa7411f1a66c3e1a6e89511d92b2333fc8", "msg": "Whitelist the billing DAG (#80)", "date": "2019-12-04 10:16:07-05:00", "modified_files": ["locals.tf", "main.tf"]}, {"id": "72cb65eb62055d4990ef7b5359ae3357b6b60c35", "msg": "Update kubecost prom size to match actual size", "date": "2019-12-09 16:48:46-05:00", "modified_files": ["locals.tf"]}]}, {"name": "https://github.com/apsureda/env-request.git", "commits": [{"id": "ee244087e70a52ae01606b8712fb08705c2dde86", "msg": "\u001b[0m\u001b[1mRefreshing Terraform state in-memory prior to plan...\u001b[0m\nThe refreshed state will be used to calculate this plan, but will not be\npersisted to local or remote state storage.\n\u001b[0m\n\u001b[0m\u001b[1mdata.terraform_remote_state.dft_infra: Refreshing state...\u001b[0m\n\n------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  \u001b[32m+\u001b[0m create\n\u001b[0m\nTerraform will perform the following actions:\n\n\u001b[32m  \u001b[32m+\u001b[0m \u001b[32mgoogle_app_engine_application.ddt-sb-johndoe_app\n\u001b[0m      id:                  <computed>\n      auth_domain:         <computed>\n      code_bucket:         <computed>\n      default_bucket:      <computed>\n      default_hostname:    <computed>\n      feature_settings.#:  <computed>\n      gcr_domain:          <computed>\n      location_id:         \"europe-west2\"\n      name:                <computed>\n      project:             \"${google_project.ddt-sb-johndoe.project_id}\"\n      serving_status:      <computed>\n      url_dispatch_rule.#: <computed>\n\u001b[0m\n\u001b[0m\u001b[32m  \u001b[32m+\u001b[0m \u001b[32mgoogle_project.ddt-sb-johndoe\n\u001b[0m      id:                  <computed>\n      app_engine.#:        <computed>\n      auto_create_network: \"true\"\n      billing_account:     \"0131D6-94FD9F-065EAB\"\n      folder_id:           <computed>\n      name:                \"dft-ddt-sb-johndoe\"\n      number:              <computed>\n      org_id:              <computed>\n      policy_data:         <computed>\n      policy_etag:         <computed>\n      project_id:          \"dft-ddt-sb-johndoe-${random_id.ddt-sb-johndoe_id.hex}\"\n      skip_delete:         <computed>\n\u001b[0m\n\u001b[0m\u001b[32m  \u001b[32m+\u001b[0m \u001b[32mgoogle_project_iam_binding.ddt-sb-johndoe_owners\n\u001b[0m      id:                  <computed>\n      etag:                <computed>\n      members.#:           \"3\"\n      members.3124658072:  \"gcp-ddt-mamagers@dft.gov.uk\"\n      members.3381056433:  \"gcp-ddt-ops@dft.gov.uk\"\n      members.4178838020:  \"johndoe@dft.gov.uk\"\n      project:             \"${google_project.ddt-sb-johndoe.project_id}\"\n      role:                \"roles/owner\"\n\u001b[0m\n\u001b[0m\u001b[32m  \u001b[32m+\u001b[0m \u001b[32mgoogle_project_iam_binding.ddt-sb-johndoe_viewers\n\u001b[0m      id:                  <computed>\n      etag:                <computed>\n      members.#:           \"1\"\n      members.362183526:   \"gcp-ddt-developers@dft.gov.uk\"\n      project:             \"${google_project.ddt-sb-johndoe.project_id}\"\n      role:                \"roles/viewer\"\n\u001b[0m\n\u001b[0m\u001b[32m  \u001b[32m+\u001b[0m \u001b[32mgoogle_project_service.ddt-sb-johndoe_appengine\n\u001b[0m      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-johndoe.project_id}\"\n      service:             \"appengine.googleapis.com\"\n\u001b[0m\n\u001b[0m\u001b[32m  \u001b[32m+\u001b[0m \u001b[32mgoogle_project_service.ddt-sb-johndoe_cloudbuild\n\u001b[0m      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-johndoe.project_id}\"\n      service:             \"cloudbuild.googleapis.com\"\n\u001b[0m\n\u001b[0m\u001b[32m  \u001b[32m+\u001b[0m \u001b[32mgoogle_project_service.ddt-sb-johndoe_cloudkms\n\u001b[0m      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-johndoe.project_id}\"\n      service:             \"cloudkms.googleapis.com\"\n\u001b[0m\n\u001b[0m\u001b[32m  \u001b[32m+\u001b[0m \u001b[32mgoogle_project_service.ddt-sb-johndoe_iap\n\u001b[0m      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-johndoe.project_id}\"\n      service:             \"iap.googleapis.com\"\n\u001b[0m\n\u001b[0m\u001b[32m  \u001b[32m+\u001b[0m \u001b[32mgoogle_project_service.ddt-sb-johndoe_sourcerepo\n\u001b[0m      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-johndoe.project_id}\"\n      service:             \"sourcerepo.googleapis.com\"\n\u001b[0m\n\u001b[0m\u001b[32m  \u001b[32m+\u001b[0m \u001b[32mgoogle_project_service.ddt-sb-johndoe_sql-component\n\u001b[0m      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-johndoe.project_id}\"\n      service:             \"sql-component.googleapis.com\"\n\u001b[0m\n\u001b[0m\u001b[32m  \u001b[32m+\u001b[0m \u001b[32mgoogle_project_service.ddt-sb-johndoe_storage-api\n\u001b[0m      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-johndoe.project_id}\"\n      service:             \"storage-api.googleapis.com\"\n\u001b[0m\n\u001b[0m\u001b[32m  \u001b[32m+\u001b[0m \u001b[32mgoogle_project_service.ddt-sb-johndoe_storage-component\n\u001b[0m      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-johndoe.project_id}\"\n      service:             \"storage-component.googleapis.com\"\n\u001b[0m\n\u001b[0m\u001b[32m  \u001b[32m+\u001b[0m \u001b[32mrandom_id.ddt-sb-johndoe_id\n\u001b[0m      id:                  <computed>\n      b64:                 <computed>\n      b64_std:             <computed>\n      b64_url:             <computed>\n      byte_length:         \"2\"\n      dec:                 <computed>\n      hex:                 <computed>\n\u001b[0m\n\u001b[0m\n\u001b[0m\u001b[1mPlan:\u001b[0m 13 to add, 0 to change, 0 to destroy.\u001b[0m\n\n------------------------------------------------------------------------\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so Terraform\ncan't guarantee that exactly these actions will be performed if\n\"terraform apply\" is subsequently run.", "date": "2018-10-21 21:43:39+00:00", "modified_files": ["common_params.tfvars", "common_remote.tf", "common_terraform.tf", "common_variables.tf", "sandbox_project.tf", "sandbox_project_iam_policy.tf", "sandbox_service.tf"]}, {"id": "cfe3f39d32278538654ec960e6bace740342ce59", "msg": "Refreshing Terraform state in-memory prior to plan...\nThe refreshed state will be used to calculate this plan, but will not be\npersisted to local or remote state storage.\n\ndata.terraform_remote_state.dft_infra: Refreshing state...\n\n------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  + create\n\nTerraform will perform the following actions:\n\n+ google_app_engine_application.ddt-sb-john-doe_app\n      id:                  <computed>\n      auth_domain:         <computed>\n      code_bucket:         <computed>\n      default_bucket:      <computed>\n      default_hostname:    <computed>\n      feature_settings.#:  <computed>\n      gcr_domain:          <computed>\n      location_id:         \"europe-west2\"\n      name:                <computed>\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      serving_status:      <computed>\n      url_dispatch_rule.#: <computed>\n\n  + google_project.ddt-sb-john-doe\n      id:                  <computed>\n      app_engine.#:        <computed>\n      auto_create_network: \"true\"\n      billing_account:     \"0131D6-94FD9F-065EAB\"\n      folder_id:           <computed>\n      name:                \"dft-ddt-sb-john-doe\"\n      number:              <computed>\n      org_id:              <computed>\n      policy_data:         <computed>\n      policy_etag:         <computed>\n      project_id:          \"dft-ddt-sb-john-doe-${random_id.ddt-sb-john-doe_id.hex}\"\n      skip_delete:         <computed>\n\n  + google_project_iam_binding.ddt-sb-john-doe_owners\n      id:                  <computed>\n      etag:                <computed>\n      members.#:           \"3\"\n      members.3124658072:  \"gcp-ddt-mamagers@dft.gov.uk\"\n      members.3381056433:  \"gcp-ddt-ops@dft.gov.uk\"\n      members.4178838020:  \"johndoe@dft.gov.uk\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      role:                \"roles/owner\"\n\n  + google_project_iam_binding.ddt-sb-john-doe_viewers\n      id:                  <computed>\n      etag:                <computed>\n      members.#:           \"1\"\n      members.362183526:   \"gcp-ddt-developers@dft.gov.uk\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      role:                \"roles/viewer\"\n\n  + google_project_service.ddt-sb-john-doe_appengine\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_cloudbuild\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_cloudkms\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_iap\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"iap.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_sourcerepo\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_sql-component\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_storage-api\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_storage-component\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"storage-component.googleapis.com\"\n\n  + random_id.ddt-sb-john-doe_id\n      id:                  <computed>\n      b64:                 <computed>\n      b64_std:             <computed>\n      b64_url:             <computed>\n      byte_length:         \"2\"\n      dec:                 <computed>\n      hex:                 <computed>\nPlan: 13 to add, 0 to change, 0 to destroy.\n\n------------------------------------------------------------------------\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so Terraform\ncan't guarantee that exactly these actions will be performed if\n\"terraform apply\" is subsequently run.", "date": "2018-10-21 21:49:54+00:00", "modified_files": ["sandbox_project.tf", "sandbox_project_iam_policy.tf", "sandbox_service.tf"]}, {"id": "6e235de5b4dd4e810df601f9129e2c1dbd8c3c13", "msg": "Refreshing Terraform state in-memory prior to plan...\nThe refreshed state will be used to calculate this plan, but will not be\npersisted to local or remote state storage.\n\ndata.terraform_remote_state.dft_infra: Refreshing state...\n\n------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  + create\n\nTerraform will perform the following actions:\n\n+ google_app_engine_application.ddt-sb-john-doe2_app\n      id:                  <computed>\n      auth_domain:         <computed>\n      code_bucket:         <computed>\n      default_bucket:      <computed>\n      default_hostname:    <computed>\n      feature_settings.#:  <computed>\n      gcr_domain:          <computed>\n      location_id:         \"europe-west2\"\n      name:                <computed>\n      project:             \"${google_project.ddt-sb-john-doe2.project_id}\"\n      serving_status:      <computed>\n      url_dispatch_rule.#: <computed>\n\n  + google_project.ddt-sb-john-doe2\n      id:                  <computed>\n      app_engine.#:        <computed>\n      auto_create_network: \"true\"\n      billing_account:     \"0131D6-94FD9F-065EAB\"\n      folder_id:           <computed>\n      name:                \"dft-ddt-sb-john-doe2\"\n      number:              <computed>\n      org_id:              <computed>\n      policy_data:         <computed>\n      policy_etag:         <computed>\n      project_id:          \"dft-ddt-sb-john-doe2-${random_id.ddt-sb-john-doe2_id.hex}\"\n      skip_delete:         <computed>\n\n  + google_project_iam_binding.ddt-sb-john-doe2_owners\n      id:                  <computed>\n      etag:                <computed>\n      members.#:           \"3\"\n      members.3124658072:  \"gcp-ddt-mamagers@dft.gov.uk\"\n      members.3381056433:  \"gcp-ddt-ops@dft.gov.uk\"\n      members.4178838020:  \"johndoe@dft.gov.uk\"\n      project:             \"${google_project.ddt-sb-john-doe2.project_id}\"\n      role:                \"roles/owner\"\n\n  + google_project_iam_binding.ddt-sb-john-doe2_viewers\n      id:                  <computed>\n      etag:                <computed>\n      members.#:           \"1\"\n      members.362183526:   \"gcp-ddt-developers@dft.gov.uk\"\n      project:             \"${google_project.ddt-sb-john-doe2.project_id}\"\n      role:                \"roles/viewer\"\n\n  + google_project_service.ddt-sb-john-doe2_appengine\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe2.project_id}\"\n      service:             \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe2_cloudbuild\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe2.project_id}\"\n      service:             \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe2_cloudkms\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe2.project_id}\"\n      service:             \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe2_iap\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe2.project_id}\"\n      service:             \"iap.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe2_sourcerepo\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe2.project_id}\"\n      service:             \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe2_sql-component\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe2.project_id}\"\n      service:             \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe2_storage-api\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe2.project_id}\"\n      service:             \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe2_storage-component\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe2.project_id}\"\n      service:             \"storage-component.googleapis.com\"\n\n  + random_id.ddt-sb-john-doe2_id\n      id:                  <computed>\n      b64:                 <computed>\n      b64_std:             <computed>\n      b64_url:             <computed>\n      byte_length:         \"2\"\n      dec:                 <computed>\n      hex:                 <computed>\nPlan: 13 to add, 0 to change, 0 to destroy.\n\n------------------------------------------------------------------------\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so Terraform\ncan't guarantee that exactly these actions will be performed if\n\"terraform apply\" is subsequently run.", "date": "2018-10-22 15:35:01+00:00", "modified_files": ["sandbox_project.tf", "sandbox_project_iam_policy.tf", "sandbox_service.tf"]}, {"id": "cab4c81e96a263d8d2b6aec0d9bc212dcb971abb", "msg": "Refreshing Terraform state in-memory prior to plan...\nThe refreshed state will be used to calculate this plan, but will not be\npersisted to local or remote state storage.\n\ndata.terraform_remote_state.dft_infra: Refreshing state...\n\n------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  + create\n\nTerraform will perform the following actions:\n\n+ google_app_engine_application.ddt-sb-jane-doe_app\n      id:                  <computed>\n      auth_domain:         <computed>\n      code_bucket:         <computed>\n      default_bucket:      <computed>\n      default_hostname:    <computed>\n      feature_settings.#:  <computed>\n      gcr_domain:          <computed>\n      location_id:         \"europe-west2\"\n      name:                <computed>\n      project:             \"${google_project.ddt-sb-jane-doe.project_id}\"\n      serving_status:      <computed>\n      url_dispatch_rule.#: <computed>\n\n  + google_app_engine_application.ddt-sb-john-doe_app\n      id:                  <computed>\n      auth_domain:         <computed>\n      code_bucket:         <computed>\n      default_bucket:      <computed>\n      default_hostname:    <computed>\n      feature_settings.#:  <computed>\n      gcr_domain:          <computed>\n      location_id:         \"europe-west2\"\n      name:                <computed>\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      serving_status:      <computed>\n      url_dispatch_rule.#: <computed>\n\n  + google_project.ddt-sb-jane-doe\n      id:                  <computed>\n      app_engine.#:        <computed>\n      auto_create_network: \"true\"\n      billing_account:     \"0131D6-94FD9F-065EAB\"\n      folder_id:           <computed>\n      name:                \"dft-ddt-sb-jane-doe\"\n      number:              <computed>\n      org_id:              <computed>\n      policy_data:         <computed>\n      policy_etag:         <computed>\n      project_id:          \"dft-ddt-sb-jane-doe-${random_id.ddt-sb-jane-doe_id.hex}\"\n      skip_delete:         <computed>\n\n  + google_project.ddt-sb-john-doe\n      id:                  <computed>\n      app_engine.#:        <computed>\n      auto_create_network: \"true\"\n      billing_account:     \"0131D6-94FD9F-065EAB\"\n      folder_id:           <computed>\n      name:                \"dft-ddt-sb-john-doe\"\n      number:              <computed>\n      org_id:              <computed>\n      policy_data:         <computed>\n      policy_etag:         <computed>\n      project_id:          \"dft-ddt-sb-john-doe-${random_id.ddt-sb-john-doe_id.hex}\"\n      skip_delete:         <computed>\n\n  + google_project_iam_binding.ddt-sb-jane-doe_owners\n      id:                  <computed>\n      etag:                <computed>\n      members.#:           \"3\"\n      members.3124658072:  \"gcp-ddt-mamagers@dft.gov.uk\"\n      members.3381056433:  \"gcp-ddt-ops@dft.gov.uk\"\n      members.500599864:   \"janedoe@dft.gov.uk\"\n      project:             \"${google_project.ddt-sb-jane-doe.project_id}\"\n      role:                \"roles/owner\"\n\n  + google_project_iam_binding.ddt-sb-jane-doe_viewers\n      id:                  <computed>\n      etag:                <computed>\n      members.#:           \"1\"\n      members.362183526:   \"gcp-ddt-developers@dft.gov.uk\"\n      project:             \"${google_project.ddt-sb-jane-doe.project_id}\"\n      role:                \"roles/viewer\"\n\n  + google_project_iam_binding.ddt-sb-john-doe_owners\n      id:                  <computed>\n      etag:                <computed>\n      members.#:           \"3\"\n      members.3124658072:  \"gcp-ddt-mamagers@dft.gov.uk\"\n      members.3381056433:  \"gcp-ddt-ops@dft.gov.uk\"\n      members.4178838020:  \"johndoe@dft.gov.uk\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      role:                \"roles/owner\"\n\n  + google_project_iam_binding.ddt-sb-john-doe_viewers\n      id:                  <computed>\n      etag:                <computed>\n      members.#:           \"1\"\n      members.362183526:   \"gcp-ddt-developers@dft.gov.uk\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      role:                \"roles/viewer\"\n\n  + google_project_service.ddt-sb-jane-doe_appengine\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:             \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_cloudbuild\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:             \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_cloudkms\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:             \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_iap\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:             \"iap.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_sourcerepo\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:             \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_sql-component\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:             \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_storage-api\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:             \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_storage-component\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:             \"storage-component.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_appengine\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_cloudbuild\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_cloudkms\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_iap\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"iap.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_sourcerepo\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_sql-component\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_storage-api\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_storage-component\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:             \"storage-component.googleapis.com\"\n\n  + random_id.ddt-sb-jane-doe_id\n      id:                  <computed>\n      b64:                 <computed>\n      b64_std:             <computed>\n      b64_url:             <computed>\n      byte_length:         \"2\"\n      dec:                 <computed>\n      hex:                 <computed>\n\n  + random_id.ddt-sb-john-doe_id\n      id:                  <computed>\n      b64:                 <computed>\n      b64_std:             <computed>\n      b64_url:             <computed>\n      byte_length:         \"2\"\n      dec:                 <computed>\n      hex:                 <computed>\nPlan: 26 to add, 0 to change, 0 to destroy.\n\n------------------------------------------------------------------------\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so Terraform\ncan't guarantee that exactly these actions will be performed if\n\"terraform apply\" is subsequently run.", "date": "2018-10-23 09:53:32+00:00", "modified_files": ["common_params.tfvars", "common_remote.tf", "common_terraform.tf", "common_variables.tf", "ddt-sb-jane-doe_project.tf", "ddt-sb-jane-doe_project_iam_policy.tf", "ddt-sb-jane-doe_service.tf", "ddt-sb-john-doe_project.tf", "ddt-sb-john-doe_project_iam_policy.tf", "ddt-sb-john-doe_service.tf"]}, {"id": "4da35515974c31272c97ceb5eba86d38b3a89447", "msg": "Refreshing Terraform state in-memory prior to plan...\nThe refreshed state will be used to calculate this plan, but will not be\npersisted to local or remote state storage.\n\ndata.terraform_remote_state.dft_infra: Refreshing state...\n\n------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  + create\n\nTerraform will perform the following actions:\n\n+ google_app_engine_application.ddt-checkout-dev_app\n      id:                               <computed>\n      auth_domain:                      <computed>\n      code_bucket:                      <computed>\n      default_bucket:                   <computed>\n      default_hostname:                 <computed>\n      feature_settings.#:               <computed>\n      gcr_domain:                       <computed>\n      location_id:                      \"europe-west2\"\n      name:                             <computed>\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      serving_status:                   <computed>\n      url_dispatch_rule.#:              <computed>\n\n  + google_app_engine_application.ddt-checkout-prod_app\n      id:                               <computed>\n      auth_domain:                      <computed>\n      code_bucket:                      <computed>\n      default_bucket:                   <computed>\n      default_hostname:                 <computed>\n      feature_settings.#:               <computed>\n      gcr_domain:                       <computed>\n      location_id:                      \"europe-west2\"\n      name:                             <computed>\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      serving_status:                   <computed>\n      url_dispatch_rule.#:              <computed>\n\n  + google_app_engine_application.ddt-checkout-test_app\n      id:                               <computed>\n      auth_domain:                      <computed>\n      code_bucket:                      <computed>\n      default_bucket:                   <computed>\n      default_hostname:                 <computed>\n      feature_settings.#:               <computed>\n      gcr_domain:                       <computed>\n      location_id:                      \"europe-west2\"\n      name:                             <computed>\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      serving_status:                   <computed>\n      url_dispatch_rule.#:              <computed>\n\n  + google_app_engine_application.ddt-sb-jane-doe_app\n      id:                               <computed>\n      auth_domain:                      <computed>\n      code_bucket:                      <computed>\n      default_bucket:                   <computed>\n      default_hostname:                 <computed>\n      feature_settings.#:               <computed>\n      gcr_domain:                       <computed>\n      location_id:                      \"europe-west2\"\n      name:                             <computed>\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      serving_status:                   <computed>\n      url_dispatch_rule.#:              <computed>\n\n  + google_app_engine_application.ddt-sb-john-doe_app\n      id:                               <computed>\n      auth_domain:                      <computed>\n      code_bucket:                      <computed>\n      default_bucket:                   <computed>\n      default_hostname:                 <computed>\n      feature_settings.#:               <computed>\n      gcr_domain:                       <computed>\n      location_id:                      \"europe-west2\"\n      name:                             <computed>\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      serving_status:                   <computed>\n      url_dispatch_rule.#:              <computed>\n\n  + google_cloudbuild_trigger.ddt-checkout-dev\n      id:                               <computed>\n      filename:                         \"cloudbuild.yaml\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      substitutions.%:                  \"1\"\n      substitutions._DB_CONNECTION_STR: \"\"\n      trigger_template.#:               \"1\"\n      trigger_template.0.branch_name:   \"development\"\n      trigger_template.0.repo_name:     \"github-apsureda-gae-std\"\n\n  + google_cloudbuild_trigger.ddt-checkout-prod\n      id:                               <computed>\n      filename:                         \"cloudbuild.yaml\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      substitutions.%:                  \"1\"\n      substitutions._DB_CONNECTION_STR: \"\"\n      trigger_template.#:               \"1\"\n      trigger_template.0.branch_name:   \"master\"\n      trigger_template.0.repo_name:     \"github-apsureda-gae-std\"\n\n  + google_cloudbuild_trigger.ddt-checkout-test\n      id:                               <computed>\n      filename:                         \"cloudbuild.yaml\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      substitutions.%:                  \"1\"\n      substitutions._DB_CONNECTION_STR: \"\"\n      trigger_template.#:               \"1\"\n      trigger_template.0.branch_name:   \"release-.*\"\n      trigger_template.0.repo_name:     \"github-apsureda-gae-std\"\n\n  + google_kms_crypto_key.ddt-checkout-dev\n      id:                               <computed>\n      key_ring:                         \"${google_kms_key_ring.ddt-checkout-dev.id}\"\n      name:                             \"CLOUDBUILD-KEY\"\n      self_link:                        <computed>\n\n  + google_kms_crypto_key.ddt-checkout-prod\n      id:                               <computed>\n      key_ring:                         \"${google_kms_key_ring.ddt-checkout-prod.id}\"\n      name:                             \"CLOUDBUILD-KEY\"\n      self_link:                        <computed>\n\n  + google_kms_crypto_key.ddt-checkout-test\n      id:                               <computed>\n      key_ring:                         \"${google_kms_key_ring.ddt-checkout-test.id}\"\n      name:                             \"CLOUDBUILD-KEY\"\n      self_link:                        <computed>\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-dev_decrypters\n      id:                               <computed>\n      crypto_key_id:                    \"ddt-checkout-dev/europe-west2/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        <computed>\n      role:                             \"roles/cloudkms.cryptoKeyDecrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-dev_encrypters\n      id:                               <computed>\n      crypto_key_id:                    \"ddt-checkout-dev/europe-west2/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        \"3\"\n      members.1525122133:               \"group:gcp-ddt-ops@dft.gov.uk\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      members.583618898:                \"group:gcp-ddt-mamagers@dft.gov.uk\"\n      role:                             \"roles/cloudkms.cryptoKeyEncrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-prod_decrypters\n      id:                               <computed>\n      crypto_key_id:                    \"ddt-checkout-prod/europe-west2/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        <computed>\n      role:                             \"roles/cloudkms.cryptoKeyDecrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-prod_encrypters\n      id:                               <computed>\n      crypto_key_id:                    \"ddt-checkout-prod/europe-west2/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        \"3\"\n      members.1525122133:               \"group:gcp-ddt-ops@dft.gov.uk\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      members.583618898:                \"group:gcp-ddt-mamagers@dft.gov.uk\"\n      role:                             \"roles/cloudkms.cryptoKeyEncrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-test_decrypters\n      id:                               <computed>\n      crypto_key_id:                    \"ddt-checkout-test/europe-west2/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        <computed>\n      role:                             \"roles/cloudkms.cryptoKeyDecrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-test_encrypters\n      id:                               <computed>\n      crypto_key_id:                    \"ddt-checkout-test/europe-west2/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        \"3\"\n      members.1525122133:               \"group:gcp-ddt-ops@dft.gov.uk\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      members.583618898:                \"group:gcp-ddt-mamagers@dft.gov.uk\"\n      role:                             \"roles/cloudkms.cryptoKeyEncrypter\"\n\n  + google_kms_key_ring.ddt-checkout-dev\n      id:                               <computed>\n      location:                         \"europe-west2\"\n      name:                             \"CLOUDBUILD-SECRETS\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      self_link:                        <computed>\n\n  + google_kms_key_ring.ddt-checkout-prod\n      id:                               <computed>\n      location:                         \"europe-west2\"\n      name:                             \"CLOUDBUILD-SECRETS\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      self_link:                        <computed>\n\n  + google_kms_key_ring.ddt-checkout-test\n      id:                               <computed>\n      location:                         \"europe-west2\"\n      name:                             \"CLOUDBUILD-SECRETS\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      self_link:                        <computed>\n\n  + google_project.ddt-checkout-dev\n      id:                               <computed>\n      app_engine.#:                     <computed>\n      auto_create_network:              \"true\"\n      billing_account:                  \"0131D6-94FD9F-065EAB\"\n      folder_id:                        <computed>\n      name:                             \"dft-ddt-checkout\"\n      number:                           <computed>\n      org_id:                           <computed>\n      policy_data:                      <computed>\n      policy_etag:                      <computed>\n      project_id:                       \"dft-ddt-checkout-${random_id.ddt-checkout-dev_id.hex}\"\n      skip_delete:                      <computed>\n\n  + google_project.ddt-checkout-prod\n      id:                               <computed>\n      app_engine.#:                     <computed>\n      auto_create_network:              \"true\"\n      billing_account:                  \"0131D6-94FD9F-065EAB\"\n      folder_id:                        <computed>\n      name:                             \"dft-ddt-checkout\"\n      number:                           <computed>\n      org_id:                           <computed>\n      policy_data:                      <computed>\n      policy_etag:                      <computed>\n      project_id:                       \"dft-ddt-checkout-${random_id.ddt-checkout-prod_id.hex}\"\n      skip_delete:                      <computed>\n\n  + google_project.ddt-checkout-test\n      id:                               <computed>\n      app_engine.#:                     <computed>\n      auto_create_network:              \"true\"\n      billing_account:                  \"0131D6-94FD9F-065EAB\"\n      folder_id:                        <computed>\n      name:                             \"dft-ddt-checkout\"\n      number:                           <computed>\n      org_id:                           <computed>\n      policy_data:                      <computed>\n      policy_etag:                      <computed>\n      project_id:                       \"dft-ddt-checkout-${random_id.ddt-checkout-test_id.hex}\"\n      skip_delete:                      <computed>\n\n  + google_project.ddt-sb-jane-doe\n      id:                               <computed>\n      app_engine.#:                     <computed>\n      auto_create_network:              \"true\"\n      billing_account:                  \"0131D6-94FD9F-065EAB\"\n      folder_id:                        <computed>\n      name:                             \"dft-ddt-sb-jane-doe\"\n      number:                           <computed>\n      org_id:                           <computed>\n      policy_data:                      <computed>\n      policy_etag:                      <computed>\n      project_id:                       \"dft-ddt-sb-jane-doe-${random_id.ddt-sb-jane-doe_id.hex}\"\n      skip_delete:                      <computed>\n\n  + google_project.ddt-sb-john-doe\n      id:                               <computed>\n      app_engine.#:                     <computed>\n      auto_create_network:              \"true\"\n      billing_account:                  \"0131D6-94FD9F-065EAB\"\n      folder_id:                        <computed>\n      name:                             \"dft-ddt-sb-john-doe\"\n      number:                           <computed>\n      org_id:                           <computed>\n      policy_data:                      <computed>\n      policy_etag:                      <computed>\n      project_id:                       \"dft-ddt-sb-john-doe-${random_id.ddt-sb-john-doe_id.hex}\"\n      skip_delete:                      <computed>\n\n  + google_project_iam_binding.ddt-checkout-dev_appengine_appAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        <computed>\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      role:                             \"roles/appengine.appAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-dev_appengine_deployer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      role:                             \"roles/appengine.deployer\"\n\n  + google_project_iam_binding.ddt-checkout-dev_appengine_serviceAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      role:                             \"roles/appengine.serviceAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_appAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        <computed>\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                             \"roles/appengine.appAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_appViewer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.583618898:                \"group:gcp-ddt-mamagers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                             \"roles/appengine.appViewer\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_codeViewer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"2\"\n      members.3205802550:               \"group:gcp-ddt-qa@dft.gov.uk\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                             \"roles/appengine.codeViewer\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_serviceAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.1525122133:               \"group:gcp-ddt-ops@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                             \"roles/appengine.serviceAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_appAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        <computed>\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      role:                             \"roles/appengine.appAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_appViewer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.583618898:                \"group:gcp-ddt-mamagers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      role:                             \"roles/appengine.appViewer\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_codeViewer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"2\"\n      members.3205802550:               \"group:gcp-ddt-qa@dft.gov.uk\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      role:                             \"roles/appengine.codeViewer\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_serviceAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.1525122133:               \"group:gcp-ddt-ops@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      role:                             \"roles/appengine.serviceAdmin\"\n\n  + google_project_iam_binding.ddt-sb-jane-doe_owners\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"3\"\n      members.3124658072:               \"gcp-ddt-mamagers@dft.gov.uk\"\n      members.3381056433:               \"gcp-ddt-ops@dft.gov.uk\"\n      members.500599864:                \"janedoe@dft.gov.uk\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      role:                             \"roles/owner\"\n\n  + google_project_iam_binding.ddt-sb-jane-doe_viewers\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.362183526:                \"gcp-ddt-developers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      role:                             \"roles/viewer\"\n\n  + google_project_iam_binding.ddt-sb-john-doe_owner\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"3\"\n      members.1525122133:               \"group:gcp-ddt-ops@dft.gov.uk\"\n      members.3612953972:               \"user:johndoe@dft.gov.uk\"\n      members.583618898:                \"group:gcp-ddt-mamagers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      role:                             \"roles/owner\"\n\n  + google_project_iam_binding.ddt-sb-john-doe_viewer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      role:                             \"roles/viewer\"\n\n  + google_project_service.ddt-checkout-dev_appengine\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_cloudbuild\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_cloudkms\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_iap\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"iap.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_sourcerepo\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_sql-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_storage-api\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_storage-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"storage-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_appengine\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_cloudbuild\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_cloudkms\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_iap\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"iap.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_sourcerepo\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_sql-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_storage-api\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_storage-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"storage-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_appengine\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_cloudbuild\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_cloudkms\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_iap\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"iap.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_sourcerepo\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_sql-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_storage-api\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_storage-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"storage-component.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_appengine\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_cloudbuild\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_cloudkms\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_iap\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"iap.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_sourcerepo\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_sql-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_storage-api\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_storage-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"storage-component.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_appengine\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_cloudbuild\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_cloudkms\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_iap\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"iap.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_sourcerepo\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_sql-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_storage-api\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_storage-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"storage-component.googleapis.com\"\n\n  + random_id.ddt-checkout-dev_id\n      id:                               <computed>\n      b64:                              <computed>\n      b64_std:                          <computed>\n      b64_url:                          <computed>\n      byte_length:                      \"2\"\n      dec:                              <computed>\n      hex:                              <computed>\n\n  + random_id.ddt-checkout-prod_id\n      id:                               <computed>\n      b64:                              <computed>\n      b64_std:                          <computed>\n      b64_url:                          <computed>\n      byte_length:                      \"2\"\n      dec:                              <computed>\n      hex:                              <computed>\n\n  + random_id.ddt-checkout-test_id\n      id:                               <computed>\n      b64:                              <computed>\n      b64_std:                          <computed>\n      b64_url:                          <computed>\n      byte_length:                      \"2\"\n      dec:                              <computed>\n      hex:                              <computed>\n\n  + random_id.ddt-sb-jane-doe_id\n      id:                               <computed>\n      b64:                              <computed>\n      b64_std:                          <computed>\n      b64_url:                          <computed>\n      byte_length:                      \"2\"\n      dec:                              <computed>\n      hex:                              <computed>\n\n  + random_id.ddt-sb-john-doe_id\n      id:                               <computed>\n      b64:                              <computed>\n      b64_std:                          <computed>\n      b64_url:                          <computed>\n      byte_length:                      \"2\"\n      dec:                              <computed>\n      hex:                              <computed>\nPlan: 85 to add, 0 to change, 0 to destroy.\n\n------------------------------------------------------------------------\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so Terraform\ncan't guarantee that exactly these actions will be performed if\n\"terraform apply\" is subsequently run.", "date": "2018-10-24 15:42:13+00:00", "modified_files": ["ddt-checkout_build_trigger.tf", "ddt-checkout_kms_keyring.tf", "ddt-checkout_project.tf", "ddt-checkout_project_iam_policy.tf", "ddt-checkout_service.tf", "ddt-sb-john-doe_project_iam_policy.tf"]}, {"id": "58bd318aa0d659a1bff3c54d2271f55d22dca8d1", "msg": "Refreshing Terraform state in-memory prior to plan...\nThe refreshed state will be used to calculate this plan, but will not be\npersisted to local or remote state storage.\n\ndata.terraform_remote_state.dft_infra: Refreshing state...\n\n------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  + create\n\nTerraform will perform the following actions:\n\n+ google_app_engine_application.ddt-checkout-dev_app\n      id:                               <computed>\n      auth_domain:                      <computed>\n      code_bucket:                      <computed>\n      default_bucket:                   <computed>\n      default_hostname:                 <computed>\n      feature_settings.#:               <computed>\n      gcr_domain:                       <computed>\n      location_id:                      \"europe-west2\"\n      name:                             <computed>\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      serving_status:                   <computed>\n      url_dispatch_rule.#:              <computed>\n\n  + google_app_engine_application.ddt-checkout-prod_app\n      id:                               <computed>\n      auth_domain:                      <computed>\n      code_bucket:                      <computed>\n      default_bucket:                   <computed>\n      default_hostname:                 <computed>\n      feature_settings.#:               <computed>\n      gcr_domain:                       <computed>\n      location_id:                      \"europe-west2\"\n      name:                             <computed>\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      serving_status:                   <computed>\n      url_dispatch_rule.#:              <computed>\n\n  + google_app_engine_application.ddt-checkout-test_app\n      id:                               <computed>\n      auth_domain:                      <computed>\n      code_bucket:                      <computed>\n      default_bucket:                   <computed>\n      default_hostname:                 <computed>\n      feature_settings.#:               <computed>\n      gcr_domain:                       <computed>\n      location_id:                      \"europe-west2\"\n      name:                             <computed>\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      serving_status:                   <computed>\n      url_dispatch_rule.#:              <computed>\n\n  + google_app_engine_application.ddt-sb-jane-doe_app\n      id:                               <computed>\n      auth_domain:                      <computed>\n      code_bucket:                      <computed>\n      default_bucket:                   <computed>\n      default_hostname:                 <computed>\n      feature_settings.#:               <computed>\n      gcr_domain:                       <computed>\n      location_id:                      \"europe-west2\"\n      name:                             <computed>\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      serving_status:                   <computed>\n      url_dispatch_rule.#:              <computed>\n\n  + google_app_engine_application.ddt-sb-john-doe_app\n      id:                               <computed>\n      auth_domain:                      <computed>\n      code_bucket:                      <computed>\n      default_bucket:                   <computed>\n      default_hostname:                 <computed>\n      feature_settings.#:               <computed>\n      gcr_domain:                       <computed>\n      location_id:                      \"europe-west2\"\n      name:                             <computed>\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      serving_status:                   <computed>\n      url_dispatch_rule.#:              <computed>\n\n  + google_cloudbuild_trigger.ddt-checkout-dev\n      id:                               <computed>\n      filename:                         \"cloudbuild.yaml\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      substitutions.%:                  \"1\"\n      substitutions._DB_CONNECTION_STR: \"\"\n      trigger_template.#:               \"1\"\n      trigger_template.0.branch_name:   \"development\"\n      trigger_template.0.repo_name:     \"github-apsureda-gae-std\"\n\n  + google_cloudbuild_trigger.ddt-checkout-prod\n      id:                               <computed>\n      filename:                         \"cloudbuild.yaml\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      substitutions.%:                  \"1\"\n      substitutions._DB_CONNECTION_STR: \"\"\n      trigger_template.#:               \"1\"\n      trigger_template.0.branch_name:   \"master\"\n      trigger_template.0.repo_name:     \"github-apsureda-gae-std\"\n\n  + google_cloudbuild_trigger.ddt-checkout-test\n      id:                               <computed>\n      filename:                         \"cloudbuild.yaml\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      substitutions.%:                  \"1\"\n      substitutions._DB_CONNECTION_STR: \"\"\n      trigger_template.#:               \"1\"\n      trigger_template.0.branch_name:   \"release-.*\"\n      trigger_template.0.repo_name:     \"github-apsureda-gae-std\"\n\n  + google_kms_crypto_key.ddt-checkout-dev\n      id:                               <computed>\n      key_ring:                         \"${google_kms_key_ring.ddt-checkout-dev.id}\"\n      name:                             \"CLOUDBUILD-KEY\"\n      self_link:                        <computed>\n\n  + google_kms_crypto_key.ddt-checkout-prod\n      id:                               <computed>\n      key_ring:                         \"${google_kms_key_ring.ddt-checkout-prod.id}\"\n      name:                             \"CLOUDBUILD-KEY\"\n      self_link:                        <computed>\n\n  + google_kms_crypto_key.ddt-checkout-test\n      id:                               <computed>\n      key_ring:                         \"${google_kms_key_ring.ddt-checkout-test.id}\"\n      name:                             \"CLOUDBUILD-KEY\"\n      self_link:                        <computed>\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-dev_decrypters\n      id:                               <computed>\n      crypto_key_id:                    \"ddt-checkout-dev/europe-west2/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        <computed>\n      role:                             \"roles/cloudkms.cryptoKeyDecrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-dev_encrypters\n      id:                               <computed>\n      crypto_key_id:                    \"ddt-checkout-dev/europe-west2/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        \"3\"\n      members.1525122133:               \"group:gcp-ddt-ops@dft.gov.uk\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      members.583618898:                \"group:gcp-ddt-mamagers@dft.gov.uk\"\n      role:                             \"roles/cloudkms.cryptoKeyEncrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-prod_decrypters\n      id:                               <computed>\n      crypto_key_id:                    \"ddt-checkout-prod/europe-west2/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        <computed>\n      role:                             \"roles/cloudkms.cryptoKeyDecrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-prod_encrypters\n      id:                               <computed>\n      crypto_key_id:                    \"ddt-checkout-prod/europe-west2/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        \"3\"\n      members.1525122133:               \"group:gcp-ddt-ops@dft.gov.uk\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      members.583618898:                \"group:gcp-ddt-mamagers@dft.gov.uk\"\n      role:                             \"roles/cloudkms.cryptoKeyEncrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-test_decrypters\n      id:                               <computed>\n      crypto_key_id:                    \"ddt-checkout-test/europe-west2/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        <computed>\n      role:                             \"roles/cloudkms.cryptoKeyDecrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-test_encrypters\n      id:                               <computed>\n      crypto_key_id:                    \"ddt-checkout-test/europe-west2/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        \"3\"\n      members.1525122133:               \"group:gcp-ddt-ops@dft.gov.uk\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      members.583618898:                \"group:gcp-ddt-mamagers@dft.gov.uk\"\n      role:                             \"roles/cloudkms.cryptoKeyEncrypter\"\n\n  + google_kms_key_ring.ddt-checkout-dev\n      id:                               <computed>\n      location:                         \"europe-west2\"\n      name:                             \"CLOUDBUILD-SECRETS\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      self_link:                        <computed>\n\n  + google_kms_key_ring.ddt-checkout-prod\n      id:                               <computed>\n      location:                         \"europe-west2\"\n      name:                             \"CLOUDBUILD-SECRETS\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      self_link:                        <computed>\n\n  + google_kms_key_ring.ddt-checkout-test\n      id:                               <computed>\n      location:                         \"europe-west2\"\n      name:                             \"CLOUDBUILD-SECRETS\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      self_link:                        <computed>\n\n  + google_project.ddt-checkout-dev\n      id:                               <computed>\n      app_engine.#:                     <computed>\n      auto_create_network:              \"true\"\n      billing_account:                  \"0131D6-94FD9F-065EAB\"\n      folder_id:                        \"121046915312\"\n      name:                             \"dft-ddt-checkout\"\n      number:                           <computed>\n      org_id:                           <computed>\n      policy_data:                      <computed>\n      policy_etag:                      <computed>\n      project_id:                       \"dft-ddt-checkout-${random_id.ddt-checkout-dev_id.hex}\"\n      skip_delete:                      <computed>\n\n  + google_project.ddt-checkout-prod\n      id:                               <computed>\n      app_engine.#:                     <computed>\n      auto_create_network:              \"true\"\n      billing_account:                  \"0131D6-94FD9F-065EAB\"\n      folder_id:                        \"121046915312\"\n      name:                             \"dft-ddt-checkout\"\n      number:                           <computed>\n      org_id:                           <computed>\n      policy_data:                      <computed>\n      policy_etag:                      <computed>\n      project_id:                       \"dft-ddt-checkout-${random_id.ddt-checkout-prod_id.hex}\"\n      skip_delete:                      <computed>\n\n  + google_project.ddt-checkout-test\n      id:                               <computed>\n      app_engine.#:                     <computed>\n      auto_create_network:              \"true\"\n      billing_account:                  \"0131D6-94FD9F-065EAB\"\n      folder_id:                        \"121046915312\"\n      name:                             \"dft-ddt-checkout\"\n      number:                           <computed>\n      org_id:                           <computed>\n      policy_data:                      <computed>\n      policy_etag:                      <computed>\n      project_id:                       \"dft-ddt-checkout-${random_id.ddt-checkout-test_id.hex}\"\n      skip_delete:                      <computed>\n\n  + google_project.ddt-sb-jane-doe\n      id:                               <computed>\n      app_engine.#:                     <computed>\n      auto_create_network:              \"true\"\n      billing_account:                  \"0131D6-94FD9F-065EAB\"\n      folder_id:                        <computed>\n      name:                             \"dft-ddt-sb-jane-doe\"\n      number:                           <computed>\n      org_id:                           <computed>\n      policy_data:                      <computed>\n      policy_etag:                      <computed>\n      project_id:                       \"dft-ddt-sb-jane-doe-${random_id.ddt-sb-jane-doe_id.hex}\"\n      skip_delete:                      <computed>\n\n  + google_project.ddt-sb-john-doe\n      id:                               <computed>\n      app_engine.#:                     <computed>\n      auto_create_network:              \"true\"\n      billing_account:                  \"0131D6-94FD9F-065EAB\"\n      folder_id:                        \"121046915312\"\n      name:                             \"dft-ddt-sb-john-doe\"\n      number:                           <computed>\n      org_id:                           <computed>\n      policy_data:                      <computed>\n      policy_etag:                      <computed>\n      project_id:                       \"dft-ddt-sb-john-doe-${random_id.ddt-sb-john-doe_id.hex}\"\n      skip_delete:                      <computed>\n\n  + google_project_iam_binding.ddt-checkout-dev_appengine_appAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        <computed>\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      role:                             \"roles/appengine.appAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-dev_appengine_deployer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      role:                             \"roles/appengine.deployer\"\n\n  + google_project_iam_binding.ddt-checkout-dev_appengine_serviceAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      role:                             \"roles/appengine.serviceAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_appAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        <computed>\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                             \"roles/appengine.appAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_appViewer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.583618898:                \"group:gcp-ddt-mamagers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                             \"roles/appengine.appViewer\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_codeViewer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"2\"\n      members.3205802550:               \"group:gcp-ddt-qa@dft.gov.uk\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                             \"roles/appengine.codeViewer\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_serviceAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.1525122133:               \"group:gcp-ddt-ops@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                             \"roles/appengine.serviceAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_appAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        <computed>\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      role:                             \"roles/appengine.appAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_appViewer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.583618898:                \"group:gcp-ddt-mamagers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      role:                             \"roles/appengine.appViewer\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_codeViewer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"2\"\n      members.3205802550:               \"group:gcp-ddt-qa@dft.gov.uk\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      role:                             \"roles/appengine.codeViewer\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_serviceAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.1525122133:               \"group:gcp-ddt-ops@dft.gov.uk\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      role:                             \"roles/appengine.serviceAdmin\"\n\n  + google_project_iam_binding.ddt-sb-jane-doe_owners\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"3\"\n      members.3124658072:               \"gcp-ddt-mamagers@dft.gov.uk\"\n      members.3381056433:               \"gcp-ddt-ops@dft.gov.uk\"\n      members.500599864:                \"janedoe@dft.gov.uk\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      role:                             \"roles/owner\"\n\n  + google_project_iam_binding.ddt-sb-jane-doe_viewers\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.362183526:                \"gcp-ddt-developers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      role:                             \"roles/viewer\"\n\n  + google_project_iam_binding.ddt-sb-john-doe_owner\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"3\"\n      members.1525122133:               \"group:gcp-ddt-ops@dft.gov.uk\"\n      members.3612953972:               \"user:johndoe@dft.gov.uk\"\n      members.583618898:                \"group:gcp-ddt-mamagers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      role:                             \"roles/owner\"\n\n  + google_project_iam_binding.ddt-sb-john-doe_viewer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.4166373786:               \"group:gcp-ddt-developers@dft.gov.uk\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      role:                             \"roles/viewer\"\n\n  + google_project_service.ddt-checkout-dev_appengine\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_cloudbuild\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_cloudkms\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_iap\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"iap.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_sourcerepo\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_sql-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_storage-api\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_storage-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                          \"storage-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_appengine\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_cloudbuild\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_cloudkms\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_iap\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"iap.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_sourcerepo\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_sql-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_storage-api\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_storage-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                          \"storage-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_appengine\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_cloudbuild\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_cloudkms\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_iap\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"iap.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_sourcerepo\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_sql-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_storage-api\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_storage-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-checkout-test.project_id}\"\n      service:                          \"storage-component.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_appengine\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_cloudbuild\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_cloudkms\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_iap\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"iap.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_sourcerepo\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_sql-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_storage-api\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-sb-jane-doe_storage-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-jane-doe.project_id}\"\n      service:                          \"storage-component.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_appengine\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_cloudbuild\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_cloudkms\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_iap\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"iap.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_sourcerepo\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_sql-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_storage-api\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-sb-john-doe_storage-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-sb-john-doe.project_id}\"\n      service:                          \"storage-component.googleapis.com\"\n\n  + random_id.ddt-checkout-dev_id\n      id:                               <computed>\n      b64:                              <computed>\n      b64_std:                          <computed>\n      b64_url:                          <computed>\n      byte_length:                      \"2\"\n      dec:                              <computed>\n      hex:                              <computed>\n\n  + random_id.ddt-checkout-prod_id\n      id:                               <computed>\n      b64:                              <computed>\n      b64_std:                          <computed>\n      b64_url:                          <computed>\n      byte_length:                      \"2\"\n      dec:                              <computed>\n      hex:                              <computed>\n\n  + random_id.ddt-checkout-test_id\n      id:                               <computed>\n      b64:                              <computed>\n      b64_std:                          <computed>\n      b64_url:                          <computed>\n      byte_length:                      \"2\"\n      dec:                              <computed>\n      hex:                              <computed>\n\n  + random_id.ddt-sb-jane-doe_id\n      id:                               <computed>\n      b64:                              <computed>\n      b64_std:                          <computed>\n      b64_url:                          <computed>\n      byte_length:                      \"2\"\n      dec:                              <computed>\n      hex:                              <computed>\n\n  + random_id.ddt-sb-john-doe_id\n      id:                               <computed>\n      b64:                              <computed>\n      b64_std:                          <computed>\n      b64_url:                          <computed>\n      byte_length:                      \"2\"\n      dec:                              <computed>\n      hex:                              <computed>\nPlan: 85 to add, 0 to change, 0 to destroy.\n\n------------------------------------------------------------------------\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so Terraform\ncan't guarantee that exactly these actions will be performed if\n\"terraform apply\" is subsequently run.", "date": "2018-10-24 15:55:37+00:00", "modified_files": ["ddt-checkout_project.tf", "ddt-sb-john-doe_project.tf"]}, {"id": "126b0966c9b575a25c90fed492248d3336788748", "msg": "Refreshing Terraform state in-memory prior to plan...\nThe refreshed state will be used to calculate this plan, but will not be\npersisted to local or remote state storage.\n\n------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  + create\n\nTerraform will perform the following actions:\n\n+ google_app_engine_application.ddt-sb-jsnow_app\n      id:                  <computed>\n      auth_domain:         <computed>\n      code_bucket:         <computed>\n      default_bucket:      <computed>\n      default_hostname:    <computed>\n      feature_settings.#:  <computed>\n      gcr_domain:          <computed>\n      location_id:         \"europe-west2\"\n      name:                <computed>\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      serving_status:      <computed>\n      url_dispatch_rule.#: <computed>\n\n  + google_folder.DFT-ORG\n      id:                  <computed>\n      create_time:         <computed>\n      display_name:        \"DFT-ORG\"\n      lifecycle_state:     <computed>\n      name:                <computed>\n      parent:              \"organizations/116143322321\"\n\n  + google_folder.DFT-ORG_SANDBOXES\n      id:                  <computed>\n      create_time:         <computed>\n      display_name:        \"SANDBOXES\"\n      lifecycle_state:     <computed>\n      name:                <computed>\n      parent:              \"${google_folder.DFT-ORG.name}\"\n\n  + google_project.ddt-sb-jsnow\n      id:                  <computed>\n      app_engine.#:        <computed>\n      auto_create_network: \"true\"\n      billing_account:     \"0131D6-94FD9F-065EAB\"\n      folder_id:           \"${google_folder.DFT-ORG_SANDBOXES.id}\"\n      name:                \"dft-ddt-sb-jsnow\"\n      number:              <computed>\n      org_id:              <computed>\n      policy_data:         <computed>\n      policy_etag:         <computed>\n      project_id:          \"dft-ddt-sb-jsnow-${random_id.ddt-sb-jsnow_id.hex}\"\n      skip_delete:         <computed>\n\n  + google_project_iam_binding.ddt-sb-jsnow_owner\n      id:                  <computed>\n      etag:                <computed>\n      members.#:           \"3\"\n      members.2443459212:  \"user:alfonso@apszaz.com\"\n      members.2721082005:  \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:  \"group:gcp-ddt-mamagers@apszaz.com\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      role:                \"roles/owner\"\n\n  + google_project_iam_binding.ddt-sb-jsnow_viewer\n      id:                  <computed>\n      etag:                <computed>\n      members.#:           \"1\"\n      members.8535898:     \"group:gcp-ddt-developers@apszaz.com\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      role:                \"roles/viewer\"\n\n  + google_project_service.ddt-sb-jsnow_appengine\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-sb-jsnow_cloudbuild\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-sb-jsnow_cloudkms\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-sb-jsnow_iap\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"iap.googleapis.com\"\n\n  + google_project_service.ddt-sb-jsnow_sourcerepo\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-sb-jsnow_sql-component\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-sb-jsnow_storage-api\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-sb-jsnow_storage-component\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"storage-component.googleapis.com\"\n\n  + random_id.ddt-sb-jsnow_id\n      id:                  <computed>\n      b64:                 <computed>\n      b64_std:             <computed>\n      b64_url:             <computed>\n      byte_length:         \"2\"\n      dec:                 <computed>\n      hex:                 <computed>\nPlan: 15 to add, 0 to change, 0 to destroy.\n\n------------------------------------------------------------------------\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so Terraform\ncan't guarantee that exactly these actions will be performed if\n\"terraform apply\" is subsequently run.", "date": "2018-11-08 10:59:08+00:00", "modified_files": ["common_folders.tf", "common_params.tfvars", "common_terraform.tf", "common_variables.tf", "ddt-sb-jsnow_project.tf", "ddt-sb-jsnow_project_iam_policy.tf", "ddt-sb-jsnow_service.tf"]}, {"id": "f5b9097927087077af6c87b1d3a91b6b294c00fc", "msg": "Refreshing Terraform state in-memory prior to plan...\nThe refreshed state will be used to calculate this plan, but will not be\npersisted to local or remote state storage.\n\nrandom_id.ddt-sb-jsnow_id: Refreshing state... (ID: 1Yg)\ngoogle_folder.DFT-ORG: Refreshing state... (ID: folders/258613932463)\ngoogle_folder.DFT-ORG_SANDBOXES: Refreshing state... (ID: folders/904253453717)\ngoogle_project.ddt-sb-jsnow: Refreshing state... (ID: dft-ddt-sb-jsnow-d588)\ngoogle_project_service.ddt-sb-jsnow_sourcerepo: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/sourcerepo.googleapis.com)\ngoogle_app_engine_application.ddt-sb-jsnow_app: Refreshing state... (ID: dft-ddt-sb-jsnow-d588)\ngoogle_project_service.ddt-sb-jsnow_sql-component: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/sql-component.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_cloudkms: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/cloudkms.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_storage-component: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/storage-component.googleapis.com)\ngoogle_project_iam_binding.ddt-sb-jsnow_viewer: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/roles/viewer)\ngoogle_project_service.ddt-sb-jsnow_cloudbuild: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/cloudbuild.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_storage-api: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/storage-api.googleapis.com)\ngoogle_project_iam_binding.ddt-sb-jsnow_owner: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/roles/owner)\ngoogle_project_service.ddt-sb-jsnow_iap: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/iap.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_appengine: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/appengine.googleapis.com)\n\n------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  + create\n  ~ update in-place\n\nTerraform will perform the following actions:\n\n+ google_app_engine_application.ddt-nodb-prj-dev_app\n      id:                               <computed>\n      auth_domain:                      <computed>\n      code_bucket:                      <computed>\n      default_bucket:                   <computed>\n      default_hostname:                 <computed>\n      feature_settings.#:               <computed>\n      gcr_domain:                       <computed>\n      location_id:                      \"europe-west2\"\n      name:                             <computed>\n      project:                          \"${google_project.ddt-nodb-prj-dev.project_id}\"\n      serving_status:                   <computed>\n      url_dispatch_rule.#:              <computed>\n\n  + google_app_engine_application.ddt-nodb-prj-prod_app\n      id:                               <computed>\n      auth_domain:                      <computed>\n      code_bucket:                      <computed>\n      default_bucket:                   <computed>\n      default_hostname:                 <computed>\n      feature_settings.#:               <computed>\n      gcr_domain:                       <computed>\n      location_id:                      \"europe-west2\"\n      name:                             <computed>\n      project:                          \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      serving_status:                   <computed>\n      url_dispatch_rule.#:              <computed>\n\n  + google_app_engine_application.ddt-nodb-prj-test_app\n      id:                               <computed>\n      auth_domain:                      <computed>\n      code_bucket:                      <computed>\n      default_bucket:                   <computed>\n      default_hostname:                 <computed>\n      feature_settings.#:               <computed>\n      gcr_domain:                       <computed>\n      location_id:                      \"europe-west2\"\n      name:                             <computed>\n      project:                          \"${google_project.ddt-nodb-prj-test.project_id}\"\n      serving_status:                   <computed>\n      url_dispatch_rule.#:              <computed>\n\n  + google_cloudbuild_trigger.ddt-nodb-prj-dev\n      id:                               <computed>\n      description:                      \"Automated push to dev environment\"\n      filename:                         \"cloudbuild.yaml\"\n      project:                          \"${google_project.ddt-nodb-prj-dev.project_id}\"\n      substitutions.%:                  \"1\"\n      substitutions._DB_CONNECTION_STR: \"\"\n      trigger_template.#:               \"1\"\n      trigger_template.0.branch_name:   \"development\"\n      trigger_template.0.project:       \"${google_project.ddt-nodb-prj-dev.project_id}\"\n      trigger_template.0.repo_name:     \"github_apsureda_gae-std\"\n\n  + google_cloudbuild_trigger.ddt-nodb-prj-prod\n      id:                               <computed>\n      description:                      \"Automated push to prod environment\"\n      filename:                         \"cloudbuild.yaml\"\n      project:                          \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      substitutions.%:                  \"1\"\n      substitutions._DB_CONNECTION_STR: \"\"\n      trigger_template.#:               \"1\"\n      trigger_template.0.branch_name:   \"master\"\n      trigger_template.0.project:       \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      trigger_template.0.repo_name:     \"github_apsureda_gae-std\"\n\n  + google_cloudbuild_trigger.ddt-nodb-prj-test\n      id:                               <computed>\n      description:                      \"Automated push to test environment\"\n      filename:                         \"cloudbuild.yaml\"\n      project:                          \"${google_project.ddt-nodb-prj-test.project_id}\"\n      substitutions.%:                  \"1\"\n      substitutions._DB_CONNECTION_STR: \"\"\n      trigger_template.#:               \"1\"\n      trigger_template.0.branch_name:   \"release-.*\"\n      trigger_template.0.project:       \"${google_project.ddt-nodb-prj-test.project_id}\"\n      trigger_template.0.repo_name:     \"github_apsureda_gae-std\"\n\n  + google_folder.DFT-ORG_DDT\n      id:                               <computed>\n      create_time:                      <computed>\n      display_name:                     \"DDT\"\n      lifecycle_state:                  <computed>\n      name:                             <computed>\n      parent:                           \"folders/258613932463\"\n\n  + google_kms_crypto_key.ddt-nodb-prj-dev\n      id:                               <computed>\n      key_ring:                         \"${google_kms_key_ring.ddt-nodb-prj-dev.id}\"\n      name:                             \"CLOUDBUILD-KEY\"\n      self_link:                        <computed>\n\n  + google_kms_crypto_key.ddt-nodb-prj-prod\n      id:                               <computed>\n      key_ring:                         \"${google_kms_key_ring.ddt-nodb-prj-prod.id}\"\n      name:                             \"CLOUDBUILD-KEY\"\n      self_link:                        <computed>\n\n  + google_kms_crypto_key.ddt-nodb-prj-test\n      id:                               <computed>\n      key_ring:                         \"${google_kms_key_ring.ddt-nodb-prj-test.id}\"\n      name:                             \"CLOUDBUILD-KEY\"\n      self_link:                        <computed>\n\n  + google_kms_crypto_key_iam_binding.ddt-nodb-prj-dev_decrypters\n      id:                               <computed>\n      crypto_key_id:                    \"${google_project.ddt-nodb-prj-dev.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        <computed>\n      role:                             \"roles/cloudkms.cryptoKeyDecrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-nodb-prj-dev_encrypters\n      id:                               <computed>\n      crypto_key_id:                    \"${google_project.ddt-nodb-prj-dev.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        \"3\"\n      members.2721082005:               \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:               \"group:gcp-ddt-mamagers@apszaz.com\"\n      members.8535898:                  \"group:gcp-ddt-developers@apszaz.com\"\n      role:                             \"roles/cloudkms.cryptoKeyEncrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-nodb-prj-prod_decrypters\n      id:                               <computed>\n      crypto_key_id:                    \"${google_project.ddt-nodb-prj-prod.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        <computed>\n      role:                             \"roles/cloudkms.cryptoKeyDecrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-nodb-prj-prod_encrypters\n      id:                               <computed>\n      crypto_key_id:                    \"${google_project.ddt-nodb-prj-prod.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        \"3\"\n      members.2721082005:               \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:               \"group:gcp-ddt-mamagers@apszaz.com\"\n      members.8535898:                  \"group:gcp-ddt-developers@apszaz.com\"\n      role:                             \"roles/cloudkms.cryptoKeyEncrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-nodb-prj-test_decrypters\n      id:                               <computed>\n      crypto_key_id:                    \"${google_project.ddt-nodb-prj-test.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        <computed>\n      role:                             \"roles/cloudkms.cryptoKeyDecrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-nodb-prj-test_encrypters\n      id:                               <computed>\n      crypto_key_id:                    \"${google_project.ddt-nodb-prj-test.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                             <computed>\n      members.#:                        \"3\"\n      members.2721082005:               \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:               \"group:gcp-ddt-mamagers@apszaz.com\"\n      members.8535898:                  \"group:gcp-ddt-developers@apszaz.com\"\n      role:                             \"roles/cloudkms.cryptoKeyEncrypter\"\n\n  + google_kms_key_ring.ddt-nodb-prj-dev\n      id:                               <computed>\n      location:                         \"europe-west2\"\n      name:                             \"CLOUDBUILD-SECRETS\"\n      project:                          \"${google_project.ddt-nodb-prj-dev.project_id}\"\n      self_link:                        <computed>\n\n  + google_kms_key_ring.ddt-nodb-prj-prod\n      id:                               <computed>\n      location:                         \"europe-west2\"\n      name:                             \"CLOUDBUILD-SECRETS\"\n      project:                          \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      self_link:                        <computed>\n\n  + google_kms_key_ring.ddt-nodb-prj-test\n      id:                               <computed>\n      location:                         \"europe-west2\"\n      name:                             \"CLOUDBUILD-SECRETS\"\n      project:                          \"${google_project.ddt-nodb-prj-test.project_id}\"\n      self_link:                        <computed>\n\n  + google_project.ddt-nodb-prj-dev\n      id:                               <computed>\n      app_engine.#:                     <computed>\n      auto_create_network:              \"true\"\n      billing_account:                  \"0131D6-94FD9F-065EAB\"\n      folder_id:                        \"${google_folder.DFT-ORG_DDT.id}\"\n      name:                             \"dft-ddt-nodb-prj-dev\"\n      number:                           <computed>\n      org_id:                           <computed>\n      policy_data:                      <computed>\n      policy_etag:                      <computed>\n      project_id:                       \"dft-ddt-nodb-prj-dev-${random_id.ddt-nodb-prj-dev_id.hex}\"\n      skip_delete:                      <computed>\n\n  + google_project.ddt-nodb-prj-prod\n      id:                               <computed>\n      app_engine.#:                     <computed>\n      auto_create_network:              \"true\"\n      billing_account:                  \"0131D6-94FD9F-065EAB\"\n      folder_id:                        \"${google_folder.DFT-ORG_DDT.id}\"\n      name:                             \"dft-ddt-nodb-prj-prod\"\n      number:                           <computed>\n      org_id:                           <computed>\n      policy_data:                      <computed>\n      policy_etag:                      <computed>\n      project_id:                       \"dft-ddt-nodb-prj-prod-${random_id.ddt-nodb-prj-prod_id.hex}\"\n      skip_delete:                      <computed>\n\n  + google_project.ddt-nodb-prj-test\n      id:                               <computed>\n      app_engine.#:                     <computed>\n      auto_create_network:              \"true\"\n      billing_account:                  \"0131D6-94FD9F-065EAB\"\n      folder_id:                        \"${google_folder.DFT-ORG_DDT.id}\"\n      name:                             \"dft-ddt-nodb-prj-test\"\n      number:                           <computed>\n      org_id:                           <computed>\n      policy_data:                      <computed>\n      policy_etag:                      <computed>\n      project_id:                       \"dft-ddt-nodb-prj-test-${random_id.ddt-nodb-prj-test_id.hex}\"\n      skip_delete:                      <computed>\n\n  + google_project_iam_binding.ddt-nodb-prj-dev_appengine_appAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        <computed>\n      project:                          \"${google_project.ddt-nodb-prj-dev.project_id}\"\n      role:                             \"roles/appengine.appAdmin\"\n\n  + google_project_iam_binding.ddt-nodb-prj-dev_appengine_deployer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.8535898:                  \"group:gcp-ddt-developers@apszaz.com\"\n      project:                          \"${google_project.ddt-nodb-prj-dev.project_id}\"\n      role:                             \"roles/appengine.deployer\"\n\n  + google_project_iam_binding.ddt-nodb-prj-dev_appengine_serviceAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.8535898:                  \"group:gcp-ddt-developers@apszaz.com\"\n      project:                          \"${google_project.ddt-nodb-prj-dev.project_id}\"\n      role:                             \"roles/appengine.serviceAdmin\"\n\n  + google_project_iam_binding.ddt-nodb-prj-prod_appengine_appAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        <computed>\n      project:                          \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      role:                             \"roles/appengine.appAdmin\"\n\n  + google_project_iam_binding.ddt-nodb-prj-prod_appengine_appViewer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.3659448210:               \"group:gcp-ddt-mamagers@apszaz.com\"\n      project:                          \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      role:                             \"roles/appengine.appViewer\"\n\n  + google_project_iam_binding.ddt-nodb-prj-prod_appengine_codeViewer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"2\"\n      members.1203979510:               \"group:gcp-ddt-qa@apszaz.com\"\n      members.8535898:                  \"group:gcp-ddt-developers@apszaz.com\"\n      project:                          \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      role:                             \"roles/appengine.codeViewer\"\n\n  + google_project_iam_binding.ddt-nodb-prj-prod_appengine_serviceAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.2721082005:               \"group:gcp-ddt-ops@apszaz.com\"\n      project:                          \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      role:                             \"roles/appengine.serviceAdmin\"\n\n  + google_project_iam_binding.ddt-nodb-prj-test_appengine_appAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        <computed>\n      project:                          \"${google_project.ddt-nodb-prj-test.project_id}\"\n      role:                             \"roles/appengine.appAdmin\"\n\n  + google_project_iam_binding.ddt-nodb-prj-test_appengine_appViewer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.3659448210:               \"group:gcp-ddt-mamagers@apszaz.com\"\n      project:                          \"${google_project.ddt-nodb-prj-test.project_id}\"\n      role:                             \"roles/appengine.appViewer\"\n\n  + google_project_iam_binding.ddt-nodb-prj-test_appengine_codeViewer\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"2\"\n      members.1203979510:               \"group:gcp-ddt-qa@apszaz.com\"\n      members.8535898:                  \"group:gcp-ddt-developers@apszaz.com\"\n      project:                          \"${google_project.ddt-nodb-prj-test.project_id}\"\n      role:                             \"roles/appengine.codeViewer\"\n\n  + google_project_iam_binding.ddt-nodb-prj-test_appengine_serviceAdmin\n      id:                               <computed>\n      etag:                             <computed>\n      members.#:                        \"1\"\n      members.2721082005:               \"group:gcp-ddt-ops@apszaz.com\"\n      project:                          \"${google_project.ddt-nodb-prj-test.project_id}\"\n      role:                             \"roles/appengine.serviceAdmin\"\n\n  ~ google_project_iam_binding.ddt-sb-jsnow_owner\n      members.#:                        \"4\" => \"3\"\n      members.2443459212:               \"user:alfonso@apszaz.com\" => \"user:alfonso@apszaz.com\"\n      members.2581159384:               \"serviceAccount:157997967404@cloudbuild.gserviceaccount.com\" => \"\"\n      members.2721082005:               \"group:gcp-ddt-ops@apszaz.com\" => \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:               \"group:gcp-ddt-mamagers@apszaz.com\" => \"group:gcp-ddt-mamagers@apszaz.com\"\n\n  + google_project_service.ddt-nodb-prj-dev_appengine\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-dev.project_id}\"\n      service:                          \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-dev_cloudbuild\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-dev.project_id}\"\n      service:                          \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-dev_cloudkms\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-dev.project_id}\"\n      service:                          \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-dev_iap\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-dev.project_id}\"\n      service:                          \"iap.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-dev_sourcerepo\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-dev.project_id}\"\n      service:                          \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-dev_sql-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-dev.project_id}\"\n      service:                          \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-dev_storage-api\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-dev.project_id}\"\n      service:                          \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-dev_storage-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-dev.project_id}\"\n      service:                          \"storage-component.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-prod_appengine\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      service:                          \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-prod_cloudbuild\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      service:                          \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-prod_cloudkms\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      service:                          \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-prod_iap\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      service:                          \"iap.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-prod_sourcerepo\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      service:                          \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-prod_sql-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      service:                          \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-prod_storage-api\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      service:                          \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-prod_storage-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-prod.project_id}\"\n      service:                          \"storage-component.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-test_appengine\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-test.project_id}\"\n      service:                          \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-test_cloudbuild\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-test.project_id}\"\n      service:                          \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-test_cloudkms\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-test.project_id}\"\n      service:                          \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-test_iap\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-test.project_id}\"\n      service:                          \"iap.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-test_sourcerepo\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-test.project_id}\"\n      service:                          \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-test_sql-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-test.project_id}\"\n      service:                          \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-test_storage-api\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-test.project_id}\"\n      service:                          \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-nodb-prj-test_storage-component\n      id:                               <computed>\n      disable_on_destroy:               \"false\"\n      project:                          \"${google_project.ddt-nodb-prj-test.project_id}\"\n      service:                          \"storage-component.googleapis.com\"\n\n  + random_id.ddt-nodb-prj-dev_id\n      id:                               <computed>\n      b64:                              <computed>\n      b64_std:                          <computed>\n      b64_url:                          <computed>\n      byte_length:                      \"2\"\n      dec:                              <computed>\n      hex:                              <computed>\n\n  + random_id.ddt-nodb-prj-prod_id\n      id:                               <computed>\n      b64:                              <computed>\n      b64_std:                          <computed>\n      b64_url:                          <computed>\n      byte_length:                      \"2\"\n      dec:                              <computed>\n      hex:                              <computed>\n\n  + random_id.ddt-nodb-prj-test_id\n      id:                               <computed>\n      b64:                              <computed>\n      b64_std:                          <computed>\n      b64_url:                          <computed>\n      byte_length:                      \"2\"\n      dec:                              <computed>\n      hex:                              <computed>\nPlan: 60 to add, 1 to change, 0 to destroy.\n\n------------------------------------------------------------------------\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so Terraform\ncan't guarantee that exactly these actions will be performed if\n\"terraform apply\" is subsequently run.", "date": "2018-11-08 13:33:22+00:00", "modified_files": ["common_folders.tf", "ddt-nodb-prj_build_trigger.tf", "ddt-nodb-prj_kms_keyring.tf", "ddt-nodb-prj_project.tf", "ddt-nodb-prj_project_iam_policy.tf", "ddt-nodb-prj_service.tf"]}, {"id": "2cb38ae7bcf653f08efca9adc8c21984acd69f87", "msg": "Refreshing Terraform state in-memory prior to plan...\nThe refreshed state will be used to calculate this plan, but will not be\npersisted to local or remote state storage.\n\nrandom_id.ddt-nodb-prj-test_id: Refreshing state... (ID: 8cE)\nrandom_id.ddt-sb-jsnow_id: Refreshing state... (ID: 1Yg)\nrandom_id.ddt-nodb-prj-dev_id: Refreshing state... (ID: DC0)\nrandom_id.ddt-nodb-prj-prod_id: Refreshing state... (ID: yqM)\ngoogle_folder.DFT-ORG: Refreshing state... (ID: folders/258613932463)\ngoogle_folder.DFT-ORG_DDT: Refreshing state... (ID: folders/72176412075)\ngoogle_folder.DFT-ORG_DDT_SANDBOXES: Refreshing state... (ID: folders/499899372584)\ngoogle_project.ddt-nodb-prj-dev: Refreshing state... (ID: dft-ddt-nodb-prj-dev-0c2d)\ngoogle_project.ddt-nodb-prj-test: Refreshing state... (ID: dft-ddt-nodb-prj-test-f1c1)\ngoogle_project.ddt-nodb-prj-prod: Refreshing state... (ID: dft-ddt-nodb-prj-prod-caa3)\ngoogle_project.ddt-sb-jsnow: Refreshing state... (ID: dft-ddt-sb-jsnow-d588)\ngoogle_project_service.ddt-nodb-prj-prod_appengine: Refreshing state... (ID: dft-ddt-nodb-prj-prod-caa3/appengine.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-prod_storage-api: Refreshing state... (ID: dft-ddt-nodb-prj-prod-caa3/storage-api.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-prod_storage-component: Refreshing state... (ID: dft-ddt-nodb-prj-prod-caa3/storage-component.googleapis.com)\ngoogle_project_iam_binding.ddt-nodb-prj-prod_appengine_appViewer: Refreshing state... (ID: dft-ddt-nodb-prj-prod-caa3/roles/appengine.appViewer)\ngoogle_project_service.ddt-nodb-prj-prod_cloudkms: Refreshing state... (ID: dft-ddt-nodb-prj-prod-caa3/cloudkms.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-prod_sql-component: Refreshing state... (ID: dft-ddt-nodb-prj-prod-caa3/sql-component.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-prod_iap: Refreshing state... (ID: dft-ddt-nodb-prj-prod-caa3/iap.googleapis.com)\ngoogle_project_iam_binding.ddt-nodb-prj-prod_appengine_serviceAdmin: Refreshing state... (ID: dft-ddt-nodb-prj-prod-caa3/roles/appengine.serviceAdmin)\ngoogle_project_iam_binding.ddt-nodb-prj-prod_appengine_codeViewer: Refreshing state... (ID: dft-ddt-nodb-prj-prod-caa3/roles/appengine.codeViewer)\ngoogle_project_service.ddt-nodb-prj-prod_cloudbuild: Refreshing state... (ID: dft-ddt-nodb-prj-prod-caa3/cloudbuild.googleapis.com)\ngoogle_app_engine_application.ddt-nodb-prj-prod_app: Refreshing state... (ID: dft-ddt-nodb-prj-prod-caa3)\ngoogle_project_service.ddt-nodb-prj-prod_sourcerepo: Refreshing state... (ID: dft-ddt-nodb-prj-prod-caa3/sourcerepo.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-dev_storage-component: Refreshing state... (ID: dft-ddt-nodb-prj-dev-0c2d/storage-component.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-dev_sql-component: Refreshing state... (ID: dft-ddt-nodb-prj-dev-0c2d/sql-component.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-dev_cloudkms: Refreshing state... (ID: dft-ddt-nodb-prj-dev-0c2d/cloudkms.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-dev_iap: Refreshing state... (ID: dft-ddt-nodb-prj-dev-0c2d/iap.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-dev_appengine: Refreshing state... (ID: dft-ddt-nodb-prj-dev-0c2d/appengine.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-dev_sourcerepo: Refreshing state... (ID: dft-ddt-nodb-prj-dev-0c2d/sourcerepo.googleapis.com)\ngoogle_app_engine_application.ddt-nodb-prj-dev_app: Refreshing state... (ID: dft-ddt-nodb-prj-dev-0c2d)\ngoogle_project_iam_binding.ddt-nodb-prj-dev_appengine_serviceAdmin: Refreshing state... (ID: dft-ddt-nodb-prj-dev-0c2d/roles/appengine.serviceAdmin)\ngoogle_project_service.ddt-nodb-prj-dev_storage-api: Refreshing state... (ID: dft-ddt-nodb-prj-dev-0c2d/storage-api.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-dev_cloudbuild: Refreshing state... (ID: dft-ddt-nodb-prj-dev-0c2d/cloudbuild.googleapis.com)\ngoogle_project_iam_binding.ddt-nodb-prj-dev_appengine_deployer: Refreshing state... (ID: dft-ddt-nodb-prj-dev-0c2d/roles/appengine.deployer)\ngoogle_project_service.ddt-sb-jsnow_cloudbuild: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/cloudbuild.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_storage-api: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/storage-api.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_iap: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/iap.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_storage-component: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/storage-component.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_sourcerepo: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/sourcerepo.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_appengine: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/appengine.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_cloudkms: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/cloudkms.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_sql-component: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/sql-component.googleapis.com)\ngoogle_project_iam_binding.ddt-sb-jsnow_owner: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/roles/owner)\ngoogle_app_engine_application.ddt-sb-jsnow_app: Refreshing state... (ID: dft-ddt-sb-jsnow-d588)\ngoogle_project_iam_binding.ddt-sb-jsnow_viewer: Refreshing state... (ID: dft-ddt-sb-jsnow-d588/roles/viewer)\ngoogle_app_engine_application.ddt-nodb-prj-test_app: Refreshing state... (ID: dft-ddt-nodb-prj-test-f1c1)\ngoogle_project_service.ddt-nodb-prj-test_sourcerepo: Refreshing state... (ID: dft-ddt-nodb-prj-test-f1c1/sourcerepo.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-test_appengine: Refreshing state... (ID: dft-ddt-nodb-prj-test-f1c1/appengine.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-test_sql-component: Refreshing state... (ID: dft-ddt-nodb-prj-test-f1c1/sql-component.googleapis.com)\ngoogle_project_iam_binding.ddt-nodb-prj-test_appengine_codeViewer: Refreshing state... (ID: dft-ddt-nodb-prj-test-f1c1/roles/appengine.codeViewer)\ngoogle_project_service.ddt-nodb-prj-test_cloudbuild: Refreshing state... (ID: dft-ddt-nodb-prj-test-f1c1/cloudbuild.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-test_storage-api: Refreshing state... (ID: dft-ddt-nodb-prj-test-f1c1/storage-api.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-test_cloudkms: Refreshing state... (ID: dft-ddt-nodb-prj-test-f1c1/cloudkms.googleapis.com)\ngoogle_project_service.ddt-nodb-prj-test_iap: Refreshing state... (ID: dft-ddt-nodb-prj-test-f1c1/iap.googleapis.com)\ngoogle_project_iam_binding.ddt-nodb-prj-test_appengine_serviceAdmin: Refreshing state... (ID: dft-ddt-nodb-prj-test-f1c1/roles/appengine.serviceAdmin)\ngoogle_project_iam_binding.ddt-nodb-prj-test_appengine_appViewer: Refreshing state... (ID: dft-ddt-nodb-prj-test-f1c1/roles/appengine.appViewer)\ngoogle_project_service.ddt-nodb-prj-test_storage-component: Refreshing state... (ID: dft-ddt-nodb-prj-test-f1c1/storage-component.googleapis.com)\ngoogle_kms_key_ring.ddt-nodb-prj-prod: Refreshing state... (ID: projects/dft-ddt-nodb-prj-prod-caa3/loc...rope-west2/keyRings/CLOUDBUILD-SECRETS)\ngoogle_cloudbuild_trigger.ddt-nodb-prj-prod: Refreshing state... (ID: 45db3e1f-38cc-4688-856d-f8932bd9d352)\ngoogle_project_iam_binding.ddt-nodb-prj-prod_appengine_appAdmin: Refreshing state... (ID: dft-ddt-nodb-prj-prod-caa3/roles/appengine.appAdmin)\ngoogle_kms_key_ring.ddt-nodb-prj-dev: Refreshing state... (ID: projects/dft-ddt-nodb-prj-dev-0c2d/loca...rope-west2/keyRings/CLOUDBUILD-SECRETS)\ngoogle_cloudbuild_trigger.ddt-nodb-prj-dev: Refreshing state... (ID: 1a619362-6f66-4ce9-ab7c-35ceae7b7d17)\ngoogle_project_iam_binding.ddt-nodb-prj-dev_appengine_appAdmin: Refreshing state... (ID: dft-ddt-nodb-prj-dev-0c2d/roles/appengine.appAdmin)\ngoogle_project_iam_binding.ddt-nodb-prj-test_appengine_appAdmin: Refreshing state... (ID: dft-ddt-nodb-prj-test-f1c1/roles/appengine.appAdmin)\ngoogle_cloudbuild_trigger.ddt-nodb-prj-test: Refreshing state... (ID: f8d6acc5-ece5-4050-8a25-7de99549f263)\ngoogle_kms_key_ring.ddt-nodb-prj-test: Refreshing state... (ID: projects/dft-ddt-nodb-prj-test-f1c1/loc...rope-west2/keyRings/CLOUDBUILD-SECRETS)\ngoogle_kms_crypto_key.ddt-nodb-prj-prod: Refreshing state... (ID: projects/dft-ddt-nodb-prj-prod-caa3/loc...UILD-SECRETS/cryptoKeys/CLOUDBUILD-KEY)\ngoogle_kms_crypto_key.ddt-nodb-prj-dev: Refreshing state... (ID: projects/dft-ddt-nodb-prj-dev-0c2d/loca...UILD-SECRETS/cryptoKeys/CLOUDBUILD-KEY)\ngoogle_kms_crypto_key.ddt-nodb-prj-test: Refreshing state... (ID: projects/dft-ddt-nodb-prj-test-f1c1/loc...UILD-SECRETS/cryptoKeys/CLOUDBUILD-KEY)\ngoogle_kms_crypto_key_iam_binding.ddt-nodb-prj-prod_decrypters: Refreshing state... (ID: projects/dft-ddt-nodb-prj-prod-caa3/loc...-KEY/roles/cloudkms.cryptoKeyDecrypter)\ngoogle_kms_crypto_key_iam_binding.ddt-nodb-prj-prod_encrypters: Refreshing state... (ID: projects/dft-ddt-nodb-prj-prod-caa3/loc...-KEY/roles/cloudkms.cryptoKeyEncrypter)\ngoogle_kms_crypto_key_iam_binding.ddt-nodb-prj-dev_encrypters: Refreshing state... (ID: projects/dft-ddt-nodb-prj-dev-0c2d/loca...-KEY/roles/cloudkms.cryptoKeyEncrypter)\ngoogle_kms_crypto_key_iam_binding.ddt-nodb-prj-dev_decrypters: Refreshing state... (ID: projects/dft-ddt-nodb-prj-dev-0c2d/loca...-KEY/roles/cloudkms.cryptoKeyDecrypter)\ngoogle_kms_crypto_key_iam_binding.ddt-nodb-prj-test_encrypters: Refreshing state... (ID: projects/dft-ddt-nodb-prj-test-f1c1/loc...-KEY/roles/cloudkms.cryptoKeyEncrypter)\ngoogle_kms_crypto_key_iam_binding.ddt-nodb-prj-test_decrypters: Refreshing state... (ID: projects/dft-ddt-nodb-prj-test-f1c1/loc...-KEY/roles/cloudkms.cryptoKeyDecrypter)\n\n------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  + create\n\nTerraform will perform the following actions:\n\n+ google_app_engine_application.ddt-checkout-dev_app\n      id:                                <computed>\n      auth_domain:                       <computed>\n      code_bucket:                       <computed>\n      default_bucket:                    <computed>\n      default_hostname:                  <computed>\n      feature_settings.#:                <computed>\n      gcr_domain:                        <computed>\n      location_id:                       \"europe-west2\"\n      name:                              <computed>\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      serving_status:                    <computed>\n      url_dispatch_rule.#:               <computed>\n\n  + google_app_engine_application.ddt-checkout-prod_app\n      id:                                <computed>\n      auth_domain:                       <computed>\n      code_bucket:                       <computed>\n      default_bucket:                    <computed>\n      default_hostname:                  <computed>\n      feature_settings.#:                <computed>\n      gcr_domain:                        <computed>\n      location_id:                       \"europe-west2\"\n      name:                              <computed>\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      serving_status:                    <computed>\n      url_dispatch_rule.#:               <computed>\n\n  + google_app_engine_application.ddt-checkout-test_app\n      id:                                <computed>\n      auth_domain:                       <computed>\n      code_bucket:                       <computed>\n      default_bucket:                    <computed>\n      default_hostname:                  <computed>\n      feature_settings.#:                <computed>\n      gcr_domain:                        <computed>\n      location_id:                       \"europe-west2\"\n      name:                              <computed>\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      serving_status:                    <computed>\n      url_dispatch_rule.#:               <computed>\n\n  + google_cloudbuild_trigger.ddt-checkout-dev\n      id:                                <computed>\n      description:                       \"Automated push to dev environment\"\n      filename:                          \"cloudbuild.yaml\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      substitutions.%:                   \"1\"\n      substitutions._DB_CONNECTION_STR:  \"\"\n      trigger_template.#:                \"1\"\n      trigger_template.0.branch_name:    \"development\"\n      trigger_template.0.project:        \"${google_project.ddt-checkout-dev.project_id}\"\n      trigger_template.0.repo_name:      \"github_apsureda_gae-std\"\n\n  + google_cloudbuild_trigger.ddt-checkout-prod\n      id:                                <computed>\n      description:                       \"Automated push to prod environment\"\n      filename:                          \"cloudbuild.yaml\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      substitutions.%:                   \"1\"\n      substitutions._DB_CONNECTION_STR:  \"\"\n      trigger_template.#:                \"1\"\n      trigger_template.0.branch_name:    \"master\"\n      trigger_template.0.project:        \"${google_project.ddt-checkout-prod.project_id}\"\n      trigger_template.0.repo_name:      \"github_apsureda_gae-std\"\n\n  + google_cloudbuild_trigger.ddt-checkout-test\n      id:                                <computed>\n      description:                       \"Automated push to test environment\"\n      filename:                          \"cloudbuild.yaml\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      substitutions.%:                   \"1\"\n      substitutions._DB_CONNECTION_STR:  \"\"\n      trigger_template.#:                \"1\"\n      trigger_template.0.branch_name:    \"release-.*\"\n      trigger_template.0.project:        \"${google_project.ddt-checkout-test.project_id}\"\n      trigger_template.0.repo_name:      \"github_apsureda_gae-std\"\n\n  + google_folder.DFT-ORG_DATABASES\n      id:                                <computed>\n      create_time:                       <computed>\n      display_name:                      \"DATABASES\"\n      lifecycle_state:                   <computed>\n      name:                              <computed>\n      parent:                            \"folders/258613932463\"\n\n  + google_kms_crypto_key.ddt-checkout-dev\n      id:                                <computed>\n      key_ring:                          \"${google_kms_key_ring.ddt-checkout-dev.id}\"\n      name:                              \"CLOUDBUILD-KEY\"\n      self_link:                         <computed>\n\n  + google_kms_crypto_key.ddt-checkout-prod\n      id:                                <computed>\n      key_ring:                          \"${google_kms_key_ring.ddt-checkout-prod.id}\"\n      name:                              \"CLOUDBUILD-KEY\"\n      self_link:                         <computed>\n\n  + google_kms_crypto_key.ddt-checkout-test\n      id:                                <computed>\n      key_ring:                          \"${google_kms_key_ring.ddt-checkout-test.id}\"\n      name:                              \"CLOUDBUILD-KEY\"\n      self_link:                         <computed>\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-dev_decrypters\n      id:                                <computed>\n      crypto_key_id:                     \"${google_project.ddt-checkout-dev.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                              <computed>\n      members.#:                         <computed>\n      role:                              \"roles/cloudkms.cryptoKeyDecrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-dev_encrypters\n      id:                                <computed>\n      crypto_key_id:                     \"${google_project.ddt-checkout-dev.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                              <computed>\n      members.#:                         \"3\"\n      members.2721082005:                \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:                \"group:gcp-ddt-mamagers@apszaz.com\"\n      members.8535898:                   \"group:gcp-ddt-developers@apszaz.com\"\n      role:                              \"roles/cloudkms.cryptoKeyEncrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-prod_decrypters\n      id:                                <computed>\n      crypto_key_id:                     \"${google_project.ddt-checkout-prod.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                              <computed>\n      members.#:                         <computed>\n      role:                              \"roles/cloudkms.cryptoKeyDecrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-prod_encrypters\n      id:                                <computed>\n      crypto_key_id:                     \"${google_project.ddt-checkout-prod.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                              <computed>\n      members.#:                         \"3\"\n      members.2721082005:                \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:                \"group:gcp-ddt-mamagers@apszaz.com\"\n      members.8535898:                   \"group:gcp-ddt-developers@apszaz.com\"\n      role:                              \"roles/cloudkms.cryptoKeyEncrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-test_decrypters\n      id:                                <computed>\n      crypto_key_id:                     \"${google_project.ddt-checkout-test.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                              <computed>\n      members.#:                         <computed>\n      role:                              \"roles/cloudkms.cryptoKeyDecrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-test_encrypters\n      id:                                <computed>\n      crypto_key_id:                     \"${google_project.ddt-checkout-test.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                              <computed>\n      members.#:                         \"3\"\n      members.2721082005:                \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:                \"group:gcp-ddt-mamagers@apszaz.com\"\n      members.8535898:                   \"group:gcp-ddt-developers@apszaz.com\"\n      role:                              \"roles/cloudkms.cryptoKeyEncrypter\"\n\n  + google_kms_key_ring.ddt-checkout-dev\n      id:                                <computed>\n      location:                          \"europe-west2\"\n      name:                              \"CLOUDBUILD-SECRETS\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      self_link:                         <computed>\n\n  + google_kms_key_ring.ddt-checkout-prod\n      id:                                <computed>\n      location:                          \"europe-west2\"\n      name:                              \"CLOUDBUILD-SECRETS\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      self_link:                         <computed>\n\n  + google_kms_key_ring.ddt-checkout-test\n      id:                                <computed>\n      location:                          \"europe-west2\"\n      name:                              \"CLOUDBUILD-SECRETS\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      self_link:                         <computed>\n\n  + google_project.ddt-checkout-dev\n      id:                                <computed>\n      app_engine.#:                      <computed>\n      auto_create_network:               \"true\"\n      billing_account:                   \"0131D6-94FD9F-065EAB\"\n      folder_id:                         \"72176412075\"\n      name:                              \"dft-ddt-checkout-dev\"\n      number:                            <computed>\n      org_id:                            <computed>\n      policy_data:                       <computed>\n      policy_etag:                       <computed>\n      project_id:                        \"dft-ddt-checkout-dev-${random_id.ddt-checkout-dev_id.hex}\"\n      skip_delete:                       <computed>\n\n  + google_project.ddt-checkout-prod\n      id:                                <computed>\n      app_engine.#:                      <computed>\n      auto_create_network:               \"true\"\n      billing_account:                   \"0131D6-94FD9F-065EAB\"\n      folder_id:                         \"72176412075\"\n      name:                              \"dft-ddt-checkout-prod\"\n      number:                            <computed>\n      org_id:                            <computed>\n      policy_data:                       <computed>\n      policy_etag:                       <computed>\n      project_id:                        \"dft-ddt-checkout-prod-${random_id.ddt-checkout-prod_id.hex}\"\n      skip_delete:                       <computed>\n\n  + google_project.ddt-checkout-test\n      id:                                <computed>\n      app_engine.#:                      <computed>\n      auto_create_network:               \"true\"\n      billing_account:                   \"0131D6-94FD9F-065EAB\"\n      folder_id:                         \"72176412075\"\n      name:                              \"dft-ddt-checkout-test\"\n      number:                            <computed>\n      org_id:                            <computed>\n      policy_data:                       <computed>\n      policy_etag:                       <computed>\n      project_id:                        \"dft-ddt-checkout-test-${random_id.ddt-checkout-test_id.hex}\"\n      skip_delete:                       <computed>\n\n  + google_project.ddt-db-app-data\n      id:                                <computed>\n      app_engine.#:                      <computed>\n      auto_create_network:               \"true\"\n      billing_account:                   \"0131D6-94FD9F-065EAB\"\n      folder_id:                         \"${google_folder.DFT-ORG_DATABASES.id}\"\n      name:                              \"dft-ddt-db-app-data\"\n      number:                            <computed>\n      org_id:                            <computed>\n      policy_data:                       <computed>\n      policy_etag:                       <computed>\n      project_id:                        \"dft-ddt-db-app-data-${random_id.ddt-db-app-data_id.hex}\"\n      skip_delete:                       <computed>\n\n  + google_project_iam_binding.ddt-checkout-dev_appengine_appAdmin\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         <computed>\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      role:                              \"roles/appengine.appAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-dev_appengine_deployer\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"1\"\n      members.8535898:                   \"group:gcp-ddt-developers@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      role:                              \"roles/appengine.deployer\"\n\n  + google_project_iam_binding.ddt-checkout-dev_appengine_serviceAdmin\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"1\"\n      members.8535898:                   \"group:gcp-ddt-developers@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      role:                              \"roles/appengine.serviceAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_appAdmin\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         <computed>\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                              \"roles/appengine.appAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_appViewer\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"1\"\n      members.3659448210:                \"group:gcp-ddt-mamagers@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                              \"roles/appengine.appViewer\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_codeViewer\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"2\"\n      members.1203979510:                \"group:gcp-ddt-qa@apszaz.com\"\n      members.8535898:                   \"group:gcp-ddt-developers@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                              \"roles/appengine.codeViewer\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_serviceAdmin\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"1\"\n      members.2721082005:                \"group:gcp-ddt-ops@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                              \"roles/appengine.serviceAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_appAdmin\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         <computed>\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      role:                              \"roles/appengine.appAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_appViewer\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"1\"\n      members.3659448210:                \"group:gcp-ddt-mamagers@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      role:                              \"roles/appengine.appViewer\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_codeViewer\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"2\"\n      members.1203979510:                \"group:gcp-ddt-qa@apszaz.com\"\n      members.8535898:                   \"group:gcp-ddt-developers@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      role:                              \"roles/appengine.codeViewer\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_serviceAdmin\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"1\"\n      members.2721082005:                \"group:gcp-ddt-ops@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      role:                              \"roles/appengine.serviceAdmin\"\n\n  + google_project_iam_binding.ddt-db-app-data_cloudsql_admin\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"1\"\n      members.723591659:                 \"group:gcp-glb-dba@apszaz.com\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n      role:                              \"roles/cloudsql.admin\"\n\n  + google_project_service.ddt-checkout-dev_appengine\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_cloudbuild\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_cloudkms\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_iap\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"iap.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_sourcerepo\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_sql-component\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_storage-api\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_storage-component\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"storage-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_appengine\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_cloudbuild\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_cloudkms\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_iap\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"iap.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_sourcerepo\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_sql-component\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_storage-api\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_storage-component\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"storage-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_appengine\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_cloudbuild\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_cloudkms\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_iap\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"iap.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_sourcerepo\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_sql-component\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_storage-api\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_storage-component\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"storage-component.googleapis.com\"\n\n  + google_sql_database.ddt-db-app-data_checkout\n      id:                                <computed>\n      charset:                           <computed>\n      collation:                         <computed>\n      instance:                          \"prod\"\n      name:                              \"checkout\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n      self_link:                         <computed>\n\n  + google_sql_database.ddt-db-app-data_checkout-dev\n      id:                                <computed>\n      charset:                           <computed>\n      collation:                         <computed>\n      instance:                          \"nonprod\"\n      name:                              \"checkout-dev\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n      self_link:                         <computed>\n\n  + google_sql_database.ddt-db-app-data_checkout-test\n      id:                                <computed>\n      charset:                           <computed>\n      collation:                         <computed>\n      instance:                          \"nonprod\"\n      name:                              \"checkout-test\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n      self_link:                         <computed>\n\n  + google_sql_database_instance.ddt-db-app-data_nonprod\n      id:                                <computed>\n      connection_name:                   <computed>\n      database_version:                  \"MYSQL_5_6\"\n      first_ip_address:                  <computed>\n      ip_address.#:                      <computed>\n      master_instance_name:              <computed>\n      name:                              \"nonprod\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n      region:                            \"europe-west2\"\n      replica_configuration.#:           <computed>\n      self_link:                         <computed>\n      server_ca_cert.#:                  <computed>\n      service_account_email_address:     <computed>\n      settings.#:                        \"1\"\n      settings.0.activation_policy:      <computed>\n      settings.0.availability_type:      <computed>\n      settings.0.backup_configuration.#: <computed>\n      settings.0.crash_safe_replication: <computed>\n      settings.0.disk_autoresize:        \"true\"\n      settings.0.disk_size:              <computed>\n      settings.0.disk_type:              <computed>\n      settings.0.ip_configuration.#:     <computed>\n      settings.0.location_preference.#:  <computed>\n      settings.0.pricing_plan:           \"PER_USE\"\n      settings.0.replication_type:       \"SYNCHRONOUS\"\n      settings.0.tier:                   \"db-f1-micro\"\n      settings.0.version:                <computed>\n\n  + google_sql_database_instance.ddt-db-app-data_prod\n      id:                                <computed>\n      connection_name:                   <computed>\n      database_version:                  \"MYSQL_5_6\"\n      first_ip_address:                  <computed>\n      ip_address.#:                      <computed>\n      master_instance_name:              <computed>\n      name:                              \"prod\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n      region:                            \"europe-west2\"\n      replica_configuration.#:           <computed>\n      self_link:                         <computed>\n      server_ca_cert.#:                  <computed>\n      service_account_email_address:     <computed>\n      settings.#:                        \"1\"\n      settings.0.activation_policy:      <computed>\n      settings.0.availability_type:      <computed>\n      settings.0.backup_configuration.#: <computed>\n      settings.0.crash_safe_replication: <computed>\n      settings.0.disk_autoresize:        \"true\"\n      settings.0.disk_size:              <computed>\n      settings.0.disk_type:              <computed>\n      settings.0.ip_configuration.#:     <computed>\n      settings.0.location_preference.#:  <computed>\n      settings.0.pricing_plan:           \"PER_USE\"\n      settings.0.replication_type:       \"SYNCHRONOUS\"\n      settings.0.tier:                   \"db-n1-standard-1\"\n      settings.0.version:                <computed>\n\n  + google_sql_user.ddt-db-app-data_nonprod_user1\n      id:                                <computed>\n      instance:                          \"nonprod\"\n      name:                              \"user1\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n\n  + google_sql_user.ddt-db-app-data_nonprod_user2\n      id:                                <computed>\n      instance:                          \"nonprod\"\n      name:                              \"user2\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n\n  + google_sql_user.ddt-db-app-data_prod_root\n      id:                                <computed>\n      instance:                          \"prod\"\n      name:                              \"root\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n\n  + random_id.ddt-checkout-dev_id\n      id:                                <computed>\n      b64:                               <computed>\n      b64_std:                           <computed>\n      b64_url:                           <computed>\n      byte_length:                       \"2\"\n      dec:                               <computed>\n      hex:                               <computed>\n\n  + random_id.ddt-checkout-prod_id\n      id:                                <computed>\n      b64:                               <computed>\n      b64_std:                           <computed>\n      b64_url:                           <computed>\n      byte_length:                       \"2\"\n      dec:                               <computed>\n      hex:                               <computed>\n\n  + random_id.ddt-checkout-test_id\n      id:                                <computed>\n      b64:                               <computed>\n      b64_std:                           <computed>\n      b64_url:                           <computed>\n      byte_length:                       \"2\"\n      dec:                               <computed>\n      hex:                               <computed>\n\n  + random_id.ddt-db-app-data_id\n      id:                                <computed>\n      b64:                               <computed>\n      b64_std:                           <computed>\n      b64_url:                           <computed>\n      byte_length:                       \"2\"\n      dec:                               <computed>\n      hex:                               <computed>\nPlan: 71 to add, 0 to change, 0 to destroy.\n\n------------------------------------------------------------------------\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so Terraform\ncan't guarantee that exactly these actions will be performed if\n\"terraform apply\" is subsequently run.", "date": "2018-11-08 14:15:06+00:00", "modified_files": ["common_folders.tf", "ddt-checkout_build_trigger.tf", "ddt-checkout_kms_keyring.tf", "ddt-checkout_project.tf", "ddt-checkout_project_iam_policy.tf", "ddt-checkout_service.tf", "ddt-db-app-data_db_instance.tf", "ddt-db-app-data_project.tf", "ddt-db-app-data_project_iam_policy.tf"]}, {"id": "2514426dea89aa426acefe4ba793cb1f59bed864", "msg": "Refreshing Terraform state in-memory prior to plan...\nThe refreshed state will be used to calculate this plan, but will not be\npersisted to local or remote state storage.\n\n------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  + create\n\nTerraform will perform the following actions:\n\n+ google_app_engine_application.ddt-sb-jsnow_app\n      id:                  <computed>\n      auth_domain:         <computed>\n      code_bucket:         <computed>\n      default_bucket:      <computed>\n      default_hostname:    <computed>\n      feature_settings.#:  <computed>\n      gcr_domain:          <computed>\n      location_id:         \"europe-west2\"\n      name:                <computed>\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      serving_status:      <computed>\n      url_dispatch_rule.#: <computed>\n\n  + google_folder.DFT-ORG\n      id:                  <computed>\n      create_time:         <computed>\n      display_name:        \"DFT-ORG\"\n      lifecycle_state:     <computed>\n      name:                <computed>\n      parent:              \"organizations/116143322321\"\n\n  + google_folder.DFT-ORG_DDT\n      id:                  <computed>\n      create_time:         <computed>\n      display_name:        \"DDT\"\n      lifecycle_state:     <computed>\n      name:                <computed>\n      parent:              \"${google_folder.DFT-ORG.name}\"\n\n  + google_folder.DFT-ORG_DDT_SANDBOXES\n      id:                  <computed>\n      create_time:         <computed>\n      display_name:        \"SANDBOXES\"\n      lifecycle_state:     <computed>\n      name:                <computed>\n      parent:              \"${google_folder.DFT-ORG_DDT.name}\"\n\n  + google_project.ddt-sb-jsnow\n      id:                  <computed>\n      app_engine.#:        <computed>\n      auto_create_network: \"true\"\n      billing_account:     \"0131D6-94FD9F-065EAB\"\n      folder_id:           \"${google_folder.DFT-ORG_DDT_SANDBOXES.id}\"\n      name:                \"dft-ddt-sb-jsnow\"\n      number:              <computed>\n      org_id:              <computed>\n      policy_data:         <computed>\n      policy_etag:         <computed>\n      project_id:          \"dft-ddt-sb-jsnow-${random_id.ddt-sb-jsnow_id.hex}\"\n      skip_delete:         <computed>\n\n  + google_project_iam_binding.ddt-sb-jsnow_owner\n      id:                  <computed>\n      etag:                <computed>\n      members.#:           \"3\"\n      members.2443459212:  \"user:alfonso@apszaz.com\"\n      members.2721082005:  \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:  \"group:gcp-ddt-mamagers@apszaz.com\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      role:                \"roles/owner\"\n\n  + google_project_iam_binding.ddt-sb-jsnow_viewer\n      id:                  <computed>\n      etag:                <computed>\n      members.#:           \"1\"\n      members.8535898:     \"group:gcp-ddt-developers@apszaz.com\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      role:                \"roles/viewer\"\n\n  + google_project_service.ddt-sb-jsnow_appengine\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-sb-jsnow_cloudbuild\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-sb-jsnow_cloudkms\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-sb-jsnow_iap\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"iap.googleapis.com\"\n\n  + google_project_service.ddt-sb-jsnow_sourcerepo\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-sb-jsnow_sql-component\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-sb-jsnow_storage-api\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-sb-jsnow_storage-component\n      id:                  <computed>\n      disable_on_destroy:  \"false\"\n      project:             \"${google_project.ddt-sb-jsnow.project_id}\"\n      service:             \"storage-component.googleapis.com\"\n\n  + random_id.ddt-sb-jsnow_id\n      id:                  <computed>\n      b64:                 <computed>\n      b64_std:             <computed>\n      b64_url:             <computed>\n      byte_length:         \"2\"\n      dec:                 <computed>\n      hex:                 <computed>\nPlan: 16 to add, 0 to change, 0 to destroy.\n\n------------------------------------------------------------------------\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so Terraform\ncan't guarantee that exactly these actions will be performed if\n\"terraform apply\" is subsequently run.", "date": "2018-11-21 11:38:23+00:00", "modified_files": ["common_folders.tf", "common_params.tfvars", "common_terraform.tf", "common_variables.tf", "ddt-sb-jsnow_project.tf", "ddt-sb-jsnow_project_iam_policy.tf", "ddt-sb-jsnow_service.tf"]}, {"id": "de6cc40da8f9a13af9182ccd5606a1bd62672ee2", "msg": "Refreshing Terraform state in-memory prior to plan...\nThe refreshed state will be used to calculate this plan, but will not be\npersisted to local or remote state storage.\n\nrandom_id.ddt-sb-jsnow_id: Refreshing state... (ID: fdo)\ngoogle_folder.DFT-ORG: Refreshing state... (ID: folders/509665159649)\ngoogle_folder.DFT-ORG_DDT: Refreshing state... (ID: folders/639204560987)\ngoogle_folder.DFT-ORG_DDT_SANDBOXES: Refreshing state... (ID: folders/674049844142)\ngoogle_project.ddt-sb-jsnow: Refreshing state... (ID: dft-ddt-sb-jsnow-7dda)\ngoogle_project_service.ddt-sb-jsnow_storage-component: Refreshing state... (ID: dft-ddt-sb-jsnow-7dda/storage-component.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_storage-api: Refreshing state... (ID: dft-ddt-sb-jsnow-7dda/storage-api.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_iap: Refreshing state... (ID: dft-ddt-sb-jsnow-7dda/iap.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_sourcerepo: Refreshing state... (ID: dft-ddt-sb-jsnow-7dda/sourcerepo.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_sql-component: Refreshing state... (ID: dft-ddt-sb-jsnow-7dda/sql-component.googleapis.com)\ngoogle_project_iam_binding.ddt-sb-jsnow_viewer: Refreshing state... (ID: dft-ddt-sb-jsnow-7dda/roles/viewer)\ngoogle_app_engine_application.ddt-sb-jsnow_app: Refreshing state... (ID: dft-ddt-sb-jsnow-7dda)\ngoogle_project_service.ddt-sb-jsnow_appengine: Refreshing state... (ID: dft-ddt-sb-jsnow-7dda/appengine.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_cloudkms: Refreshing state... (ID: dft-ddt-sb-jsnow-7dda/cloudkms.googleapis.com)\ngoogle_project_service.ddt-sb-jsnow_cloudbuild: Refreshing state... (ID: dft-ddt-sb-jsnow-7dda/cloudbuild.googleapis.com)\ngoogle_project_iam_binding.ddt-sb-jsnow_owner: Refreshing state... (ID: dft-ddt-sb-jsnow-7dda/roles/owner)\n\n------------------------------------------------------------------------\n\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  + create\n  ~ update in-place\n\nTerraform will perform the following actions:\n\n+ google_app_engine_application.ddt-checkout-dev_app\n      id:                                <computed>\n      auth_domain:                       <computed>\n      code_bucket:                       <computed>\n      default_bucket:                    <computed>\n      default_hostname:                  <computed>\n      feature_settings.#:                <computed>\n      gcr_domain:                        <computed>\n      location_id:                       \"europe-west2\"\n      name:                              <computed>\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      serving_status:                    <computed>\n      url_dispatch_rule.#:               <computed>\n\n  + google_app_engine_application.ddt-checkout-prod_app\n      id:                                <computed>\n      auth_domain:                       <computed>\n      code_bucket:                       <computed>\n      default_bucket:                    <computed>\n      default_hostname:                  <computed>\n      feature_settings.#:                <computed>\n      gcr_domain:                        <computed>\n      location_id:                       \"europe-west2\"\n      name:                              <computed>\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      serving_status:                    <computed>\n      url_dispatch_rule.#:               <computed>\n\n  + google_app_engine_application.ddt-checkout-test_app\n      id:                                <computed>\n      auth_domain:                       <computed>\n      code_bucket:                       <computed>\n      default_bucket:                    <computed>\n      default_hostname:                  <computed>\n      feature_settings.#:                <computed>\n      gcr_domain:                        <computed>\n      location_id:                       \"europe-west2\"\n      name:                              <computed>\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      serving_status:                    <computed>\n      url_dispatch_rule.#:               <computed>\n\n  + google_cloudbuild_trigger.ddt-checkout-dev\n      id:                                <computed>\n      description:                       \"Automated push to dev environment\"\n      filename:                          \"cloudbuild.yaml\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      substitutions.%:                   \"1\"\n      substitutions._DB_CONNECTION_STR:  \"\"\n      trigger_template.#:                \"1\"\n      trigger_template.0.branch_name:    \"development\"\n      trigger_template.0.project:        \"${google_project.ddt-checkout-dev.project_id}\"\n      trigger_template.0.repo_name:      \"github_apsureda_gae-std\"\n\n  + google_cloudbuild_trigger.ddt-checkout-prod\n      id:                                <computed>\n      description:                       \"Automated push to prod environment\"\n      filename:                          \"cloudbuild.yaml\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      substitutions.%:                   \"1\"\n      substitutions._DB_CONNECTION_STR:  \"\"\n      trigger_template.#:                \"1\"\n      trigger_template.0.branch_name:    \"master\"\n      trigger_template.0.project:        \"${google_project.ddt-checkout-prod.project_id}\"\n      trigger_template.0.repo_name:      \"github_apsureda_gae-std\"\n\n  + google_cloudbuild_trigger.ddt-checkout-test\n      id:                                <computed>\n      description:                       \"Automated push to test environment\"\n      filename:                          \"cloudbuild.yaml\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      substitutions.%:                   \"1\"\n      substitutions._DB_CONNECTION_STR:  \"\"\n      trigger_template.#:                \"1\"\n      trigger_template.0.branch_name:    \"release-.*\"\n      trigger_template.0.project:        \"${google_project.ddt-checkout-test.project_id}\"\n      trigger_template.0.repo_name:      \"github_apsureda_gae-std\"\n\n  + google_folder.DFT-ORG_DATABASES\n      id:                                <computed>\n      create_time:                       <computed>\n      display_name:                      \"DATABASES\"\n      lifecycle_state:                   <computed>\n      name:                              <computed>\n      parent:                            \"folders/509665159649\"\n\n  + google_kms_crypto_key.ddt-checkout-dev\n      id:                                <computed>\n      key_ring:                          \"${google_kms_key_ring.ddt-checkout-dev.id}\"\n      name:                              \"CLOUDBUILD-KEY\"\n      self_link:                         <computed>\n\n  + google_kms_crypto_key.ddt-checkout-prod\n      id:                                <computed>\n      key_ring:                          \"${google_kms_key_ring.ddt-checkout-prod.id}\"\n      name:                              \"CLOUDBUILD-KEY\"\n      self_link:                         <computed>\n\n  + google_kms_crypto_key.ddt-checkout-test\n      id:                                <computed>\n      key_ring:                          \"${google_kms_key_ring.ddt-checkout-test.id}\"\n      name:                              \"CLOUDBUILD-KEY\"\n      self_link:                         <computed>\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-dev_decrypters\n      id:                                <computed>\n      crypto_key_id:                     \"${google_project.ddt-checkout-dev.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                              <computed>\n      members.#:                         <computed>\n      role:                              \"roles/cloudkms.cryptoKeyDecrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-dev_encrypters\n      id:                                <computed>\n      crypto_key_id:                     \"${google_project.ddt-checkout-dev.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                              <computed>\n      members.#:                         \"3\"\n      members.2721082005:                \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:                \"group:gcp-ddt-mamagers@apszaz.com\"\n      members.8535898:                   \"group:gcp-ddt-developers@apszaz.com\"\n      role:                              \"roles/cloudkms.cryptoKeyEncrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-prod_decrypters\n      id:                                <computed>\n      crypto_key_id:                     \"${google_project.ddt-checkout-prod.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                              <computed>\n      members.#:                         <computed>\n      role:                              \"roles/cloudkms.cryptoKeyDecrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-prod_encrypters\n      id:                                <computed>\n      crypto_key_id:                     \"${google_project.ddt-checkout-prod.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                              <computed>\n      members.#:                         \"3\"\n      members.2721082005:                \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:                \"group:gcp-ddt-mamagers@apszaz.com\"\n      members.8535898:                   \"group:gcp-ddt-developers@apszaz.com\"\n      role:                              \"roles/cloudkms.cryptoKeyEncrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-test_decrypters\n      id:                                <computed>\n      crypto_key_id:                     \"${google_project.ddt-checkout-test.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                              <computed>\n      members.#:                         <computed>\n      role:                              \"roles/cloudkms.cryptoKeyDecrypter\"\n\n  + google_kms_crypto_key_iam_binding.ddt-checkout-test_encrypters\n      id:                                <computed>\n      crypto_key_id:                     \"${google_project.ddt-checkout-test.project_id}/${var.gcp_region}/CLOUDBUILD-SECRETS/CLOUDBUILD-KEY\"\n      etag:                              <computed>\n      members.#:                         \"3\"\n      members.2721082005:                \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:                \"group:gcp-ddt-mamagers@apszaz.com\"\n      members.8535898:                   \"group:gcp-ddt-developers@apszaz.com\"\n      role:                              \"roles/cloudkms.cryptoKeyEncrypter\"\n\n  + google_kms_key_ring.ddt-checkout-dev\n      id:                                <computed>\n      location:                          \"europe-west2\"\n      name:                              \"CLOUDBUILD-SECRETS\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      self_link:                         <computed>\n\n  + google_kms_key_ring.ddt-checkout-prod\n      id:                                <computed>\n      location:                          \"europe-west2\"\n      name:                              \"CLOUDBUILD-SECRETS\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      self_link:                         <computed>\n\n  + google_kms_key_ring.ddt-checkout-test\n      id:                                <computed>\n      location:                          \"europe-west2\"\n      name:                              \"CLOUDBUILD-SECRETS\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      self_link:                         <computed>\n\n  + google_project.ddt-checkout-dev\n      id:                                <computed>\n      app_engine.#:                      <computed>\n      auto_create_network:               \"true\"\n      billing_account:                   \"0131D6-94FD9F-065EAB\"\n      folder_id:                         \"639204560987\"\n      name:                              \"dft-ddt-checkout-dev\"\n      number:                            <computed>\n      org_id:                            <computed>\n      policy_data:                       <computed>\n      policy_etag:                       <computed>\n      project_id:                        \"dft-ddt-checkout-dev-${random_id.ddt-checkout-dev_id.hex}\"\n      skip_delete:                       <computed>\n\n  + google_project.ddt-checkout-prod\n      id:                                <computed>\n      app_engine.#:                      <computed>\n      auto_create_network:               \"true\"\n      billing_account:                   \"0131D6-94FD9F-065EAB\"\n      folder_id:                         \"639204560987\"\n      name:                              \"dft-ddt-checkout-prod\"\n      number:                            <computed>\n      org_id:                            <computed>\n      policy_data:                       <computed>\n      policy_etag:                       <computed>\n      project_id:                        \"dft-ddt-checkout-prod-${random_id.ddt-checkout-prod_id.hex}\"\n      skip_delete:                       <computed>\n\n  + google_project.ddt-checkout-test\n      id:                                <computed>\n      app_engine.#:                      <computed>\n      auto_create_network:               \"true\"\n      billing_account:                   \"0131D6-94FD9F-065EAB\"\n      folder_id:                         \"639204560987\"\n      name:                              \"dft-ddt-checkout-test\"\n      number:                            <computed>\n      org_id:                            <computed>\n      policy_data:                       <computed>\n      policy_etag:                       <computed>\n      project_id:                        \"dft-ddt-checkout-test-${random_id.ddt-checkout-test_id.hex}\"\n      skip_delete:                       <computed>\n\n  + google_project.ddt-db-app-data\n      id:                                <computed>\n      app_engine.#:                      <computed>\n      auto_create_network:               \"true\"\n      billing_account:                   \"0131D6-94FD9F-065EAB\"\n      folder_id:                         \"${google_folder.DFT-ORG_DATABASES.id}\"\n      name:                              \"dft-ddt-db-app-data\"\n      number:                            <computed>\n      org_id:                            <computed>\n      policy_data:                       <computed>\n      policy_etag:                       <computed>\n      project_id:                        \"dft-ddt-db-app-data-${random_id.ddt-db-app-data_id.hex}\"\n      skip_delete:                       <computed>\n\n  + google_project_iam_binding.ddt-checkout-dev_appengine_appAdmin\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         <computed>\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      role:                              \"roles/appengine.appAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-dev_appengine_deployer\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"1\"\n      members.8535898:                   \"group:gcp-ddt-developers@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      role:                              \"roles/appengine.deployer\"\n\n  + google_project_iam_binding.ddt-checkout-dev_appengine_serviceAdmin\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"1\"\n      members.8535898:                   \"group:gcp-ddt-developers@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      role:                              \"roles/appengine.serviceAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-dev_cloudbuild_builds_editor\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"2\"\n      members.2721082005:                \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:                \"group:gcp-ddt-mamagers@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      role:                              \"roles/cloudbuild.builds.editor\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_appAdmin\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         <computed>\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                              \"roles/appengine.appAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_appViewer\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"1\"\n      members.3659448210:                \"group:gcp-ddt-mamagers@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                              \"roles/appengine.appViewer\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_codeViewer\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"2\"\n      members.1203979510:                \"group:gcp-ddt-qa@apszaz.com\"\n      members.8535898:                   \"group:gcp-ddt-developers@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                              \"roles/appengine.codeViewer\"\n\n  + google_project_iam_binding.ddt-checkout-prod_appengine_serviceAdmin\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"1\"\n      members.2721082005:                \"group:gcp-ddt-ops@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                              \"roles/appengine.serviceAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-prod_cloudbuild_builds_editor\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"2\"\n      members.2721082005:                \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:                \"group:gcp-ddt-mamagers@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      role:                              \"roles/cloudbuild.builds.editor\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_appAdmin\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         <computed>\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      role:                              \"roles/appengine.appAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_appViewer\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"1\"\n      members.3659448210:                \"group:gcp-ddt-mamagers@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      role:                              \"roles/appengine.appViewer\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_codeViewer\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"2\"\n      members.1203979510:                \"group:gcp-ddt-qa@apszaz.com\"\n      members.8535898:                   \"group:gcp-ddt-developers@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      role:                              \"roles/appengine.codeViewer\"\n\n  + google_project_iam_binding.ddt-checkout-test_appengine_serviceAdmin\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"1\"\n      members.2721082005:                \"group:gcp-ddt-ops@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      role:                              \"roles/appengine.serviceAdmin\"\n\n  + google_project_iam_binding.ddt-checkout-test_cloudbuild_builds_editor\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"2\"\n      members.2721082005:                \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:                \"group:gcp-ddt-mamagers@apszaz.com\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      role:                              \"roles/cloudbuild.builds.editor\"\n\n  + google_project_iam_binding.ddt-db-app-data_cloudsql_admin\n      id:                                <computed>\n      etag:                              <computed>\n      members.#:                         \"1\"\n      members.723591659:                 \"group:gcp-glb-dba@apszaz.com\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n      role:                              \"roles/cloudsql.admin\"\n\n  ~ google_project_iam_binding.ddt-sb-jsnow_owner\n      members.#:                         \"4\" => \"3\"\n      members.2443459212:                \"user:alfonso@apszaz.com\" => \"user:alfonso@apszaz.com\"\n      members.2581159384:                \"serviceAccount:157997967404@cloudbuild.gserviceaccount.com\" => \"\"\n      members.2721082005:                \"group:gcp-ddt-ops@apszaz.com\" => \"group:gcp-ddt-ops@apszaz.com\"\n      members.3659448210:                \"group:gcp-ddt-mamagers@apszaz.com\" => \"group:gcp-ddt-mamagers@apszaz.com\"\n\n  + google_project_service.ddt-checkout-dev_appengine\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_cloudbuild\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_cloudkms\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_iap\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"iap.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_sourcerepo\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_sql-component\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_storage-api\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-checkout-dev_storage-component\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-dev.project_id}\"\n      service:                           \"storage-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_appengine\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_cloudbuild\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_cloudkms\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_iap\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"iap.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_sourcerepo\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_sql-component\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_storage-api\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-checkout-prod_storage-component\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-prod.project_id}\"\n      service:                           \"storage-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_appengine\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"appengine.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_cloudbuild\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"cloudbuild.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_cloudkms\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"cloudkms.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_iap\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"iap.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_sourcerepo\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"sourcerepo.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_sql-component\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"sql-component.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_storage-api\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"storage-api.googleapis.com\"\n\n  + google_project_service.ddt-checkout-test_storage-component\n      id:                                <computed>\n      disable_on_destroy:                \"false\"\n      project:                           \"${google_project.ddt-checkout-test.project_id}\"\n      service:                           \"storage-component.googleapis.com\"\n\n  + google_sql_database.ddt-db-app-data_checkout\n      id:                                <computed>\n      charset:                           <computed>\n      collation:                         <computed>\n      instance:                          \"prod\"\n      name:                              \"checkout\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n      self_link:                         <computed>\n\n  + google_sql_database.ddt-db-app-data_checkout-dev\n      id:                                <computed>\n      charset:                           <computed>\n      collation:                         <computed>\n      instance:                          \"nonprod\"\n      name:                              \"checkout-dev\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n      self_link:                         <computed>\n\n  + google_sql_database.ddt-db-app-data_checkout-test\n      id:                                <computed>\n      charset:                           <computed>\n      collation:                         <computed>\n      instance:                          \"nonprod\"\n      name:                              \"checkout-test\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n      self_link:                         <computed>\n\n  + google_sql_database_instance.ddt-db-app-data_nonprod\n      id:                                <computed>\n      connection_name:                   <computed>\n      database_version:                  \"MYSQL_5_6\"\n      first_ip_address:                  <computed>\n      ip_address.#:                      <computed>\n      master_instance_name:              <computed>\n      name:                              \"nonprod\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n      region:                            \"europe-west2\"\n      replica_configuration.#:           <computed>\n      self_link:                         <computed>\n      server_ca_cert.#:                  <computed>\n      service_account_email_address:     <computed>\n      settings.#:                        \"1\"\n      settings.0.activation_policy:      <computed>\n      settings.0.availability_type:      <computed>\n      settings.0.backup_configuration.#: <computed>\n      settings.0.crash_safe_replication: <computed>\n      settings.0.disk_autoresize:        \"true\"\n      settings.0.disk_size:              <computed>\n      settings.0.disk_type:              <computed>\n      settings.0.ip_configuration.#:     <computed>\n      settings.0.location_preference.#:  <computed>\n      settings.0.pricing_plan:           \"PER_USE\"\n      settings.0.replication_type:       \"SYNCHRONOUS\"\n      settings.0.tier:                   \"db-f1-micro\"\n      settings.0.version:                <computed>\n\n  + google_sql_database_instance.ddt-db-app-data_prod\n      id:                                <computed>\n      connection_name:                   <computed>\n      database_version:                  \"MYSQL_5_6\"\n      first_ip_address:                  <computed>\n      ip_address.#:                      <computed>\n      master_instance_name:              <computed>\n      name:                              \"prod\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n      region:                            \"europe-west2\"\n      replica_configuration.#:           <computed>\n      self_link:                         <computed>\n      server_ca_cert.#:                  <computed>\n      service_account_email_address:     <computed>\n      settings.#:                        \"1\"\n      settings.0.activation_policy:      <computed>\n      settings.0.availability_type:      <computed>\n      settings.0.backup_configuration.#: <computed>\n      settings.0.crash_safe_replication: <computed>\n      settings.0.disk_autoresize:        \"true\"\n      settings.0.disk_size:              <computed>\n      settings.0.disk_type:              <computed>\n      settings.0.ip_configuration.#:     <computed>\n      settings.0.location_preference.#:  <computed>\n      settings.0.pricing_plan:           \"PER_USE\"\n      settings.0.replication_type:       \"SYNCHRONOUS\"\n      settings.0.tier:                   \"db-n1-standard-1\"\n      settings.0.version:                <computed>\n\n  + google_sql_user.ddt-db-app-data_nonprod_user1\n      id:                                <computed>\n      instance:                          \"nonprod\"\n      name:                              \"user1\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n\n  + google_sql_user.ddt-db-app-data_nonprod_user2\n      id:                                <computed>\n      instance:                          \"nonprod\"\n      name:                              \"user2\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n\n  + google_sql_user.ddt-db-app-data_prod_root\n      id:                                <computed>\n      instance:                          \"prod\"\n      name:                              \"root\"\n      project:                           \"${google_project.ddt-db-app-data.project_id}\"\n\n  + random_id.ddt-checkout-dev_id\n      id:                                <computed>\n      b64:                               <computed>\n      b64_std:                           <computed>\n      b64_url:                           <computed>\n      byte_length:                       \"2\"\n      dec:                               <computed>\n      hex:                               <computed>\n\n  + random_id.ddt-checkout-prod_id\n      id:                                <computed>\n      b64:                               <computed>\n      b64_std:                           <computed>\n      b64_url:                           <computed>\n      byte_length:                       \"2\"\n      dec:                               <computed>\n      hex:                               <computed>\n\n  + random_id.ddt-checkout-test_id\n      id:                                <computed>\n      b64:                               <computed>\n      b64_std:                           <computed>\n      b64_url:                           <computed>\n      byte_length:                       \"2\"\n      dec:                               <computed>\n      hex:                               <computed>\n\n  + random_id.ddt-db-app-data_id\n      id:                                <computed>\n      b64:                               <computed>\n      b64_std:                           <computed>\n      b64_url:                           <computed>\n      byte_length:                       \"2\"\n      dec:                               <computed>\n      hex:                               <computed>\nPlan: 74 to add, 1 to change, 0 to destroy.\n\n------------------------------------------------------------------------\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so Terraform\ncan't guarantee that exactly these actions will be performed if\n\"terraform apply\" is subsequently run.", "date": "2018-11-22 13:13:47+00:00", "modified_files": ["common_folders.tf", "ddt-checkout_build_trigger.tf", "ddt-checkout_kms_keyring.tf", "ddt-checkout_project.tf", "ddt-checkout_project_iam_policy.tf", "ddt-checkout_service.tf", "ddt-db-app-data_db_instance.tf", "ddt-db-app-data_project.tf", "ddt-db-app-data_project_iam_policy.tf"]}]}, {"name": "https://github.com/nationalarchives/tdr-terraform-backend.git", "commits": [{"id": "80cf3ab451b1514728de3e5b264f6bcc10ab6068", "msg": "Add CostCentre tag to all resources\n\nAdd common tag for CostCentre so that Digital Services can identify our\nresources in the organisation's AWS bill.", "date": "2020-01-30 10:03:58+00:00", "modified_files": ["root.tf"]}, {"id": "44a780dcdd4897df18f1b31eb8e0de2d08496292", "msg": "Add cost_centre parameter to all environments\n\nAdd a parameter store variable to all environments, so that the\nenvironment-specific Terraform scripts can use it to set the\n`CostCentre` tag on other resources.", "date": "2020-01-31 10:58:22+00:00", "modified_files": ["root.tf", "variables.tf", "root.tf"]}, {"id": "f29fa7bcb849dd47747f8a725848554766669199", "msg": "Allow environment-specific Terraform to read cost centre parameter\n\nAdd global parameters policy which lets the environment-specific\nTerraform scripts to read shared parameters set by the backend\nTerraform.\n\nThis will let us set a shared parameter (like cost centre) in the\nbackend Terraform and use it in environment-specific Terraform scripts.\n\nWe might eventually replace this with a private git repo containing\nglobal varibles, but this solution is easier to set up so we'll try it\nfor now.", "date": "2020-01-31 11:20:46+00:00", "modified_files": ["root.tf", "shared_terraform_policy.json.tpl"]}, {"id": "300c45bd99ede6cb90aa7669757e1679f418d950", "msg": "Move cost_centre parameters to /mgmt namespace\n\nMove cost_centre parameters in environments from /<env-name>/cost_centre to\n/mgmt/cost_centre, since this is a global variable that's set by this\nshared Terraform config.", "date": "2020-02-03 16:15:35+00:00", "modified_files": ["root.tf", "variables.tf", "shared_terraform_policy.json.tpl", "root.tf"]}, {"id": "1d257fb3896d16c7a4c777b514ff3d40fff0ad89", "msg": "Merge staging and prod cost centre parameter\n\n`terraform apply` was failing because it was trying to create the\nduplicate `/mgmt/cost_centre` tags in the staging/production AWS\naccount, once for each environment.\n\nRename the 'environment-parameters' module to 'account-parameters' to\nmake it clear that it stores parameters that are needed on each\n_account_, rather than on each environment.", "date": "2020-02-04 10:55:34+00:00", "modified_files": ["root.tf", "variables.tf", "root.tf"]}]}, {"name": "https://github.com/coremaker/terraform-google-nucleus.git", "commits": [{"id": "11234f631f7370dd80ee5fbc5dd7bdbc12dcbf49", "msg": "add per project billing alerts", "date": "2021-10-13 12:14:50+02:00", "modified_files": ["billing-alerts.tf", "variables.tf"]}]}, {"name": "https://github.com/nationalarchives/tdr-terraform-environments.git", "commits": [{"id": "6053742dfa05e1ba8ba2355f4c55cc882732810c", "msg": "Add CostCentre tag to all resources\n\nAdd new common tag that will let Digital Services identify TDR resources\nwhen they review the organisation's AWS bill.", "date": "2020-02-04 11:34:33+00:00", "modified_files": ["root.tf"]}]}, {"name": "https://github.com/SrividhyaV97/tfsample.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/mennaammar/terraform-poc.git", "commits": [{"id": "1800756c700bb50f2e9b3ca32c260d49efbf0526", "msg": "infracost", "date": "2021-08-29 10:40:17+02:00", "modified_files": ["main.tf", "plan", "plan.json"]}, {"id": "731a591a45328c74fb9865aca7b75cf4023e53f4", "msg": "infracost", "date": "2021-08-29 14:18:27+02:00", "modified_files": ["main.tf", "plan", "plan.json"]}, {"id": "f9dda3115bb871785894c63a190daba84f90de1f", "msg": "adding infracost stage", "date": "2021-08-30 08:02:25+02:00", "modified_files": ["infrascost.yaml_", "workflow.yaml", "main.tf", "outputs.tf", "plan", "plan.json"]}, {"id": "879e76dce10a9c7ba5386cdd59e6d5a73fc7354f", "msg": "adding infracost stage", "date": "2021-08-30 08:50:41+02:00", "modified_files": ["workflow.yaml", "main.tf"]}, {"id": "4e98c4423223fc25811b49e2d9b63ab7980b48d7", "msg": "adding infracost stage", "date": "2021-08-30 08:59:55+02:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/marshall7m/terraform-aws-github-webhook.git", "commits": [{"id": "03b3e5eb87b36d2571c3a26925be58a74324f5cf", "msg": "fix ssm key spelling & fix payload-validator ssm decrypt permissions", "date": "2021-05-20 06:22:03-07:00", "modified_files": ["variables.tf", "main.tf"]}, {"id": "33234cc0332394f0b79f36fec7d18c3f8d77b553", "msg": "combine request/payload validator modules", "date": "2021-06-07 23:29:36-07:00", "modified_files": [".gitignore", "README.md", "lambda_function.py", "main.tf", "variables.tf", "README.md", "agw.tf", "lambda_function.py", "main.tf", "outputs.tf", "variables.tf", "terragrunt.hcl", "terragrunt.hcl", "provider_switches.hcl", "main.tf", "test_mut.tf", "versions.tf"]}]}, {"name": "https://github.com/rjmco/rjmco-github-tests.git", "commits": [{"id": "ea9c4efeb857958f5a31b75d22555c34e1181937", "msg": "Move imgs from gcr.io to eu.gcr.io to avoid costs", "date": "2020-09-29 16:27:37+01:00", "modified_files": ["apply_trigger.tf", "plan_trigger.tf"]}]}, {"name": "https://github.com/hmcts/future-hearings-hmi-api-gateway.git", "commits": [{"id": "5024990dcc7f83e97f7cfdf971fc9e6082a7d9a1", "msg": "draft commit for payhub api gateway", "date": "2018-07-17 14:27:53+01:00", "modified_files": [".gitignore", "Jenkinsfile_CNP", "Jenkinsfile_parameterized", "README.md", "main.tf", "output.tf", "api-policy.xml", "api.json", "variables.tf"]}, {"id": "94494f8cda7cb3dd57e7ab338d97705ea33a7c25", "msg": "moved to shared infra vault (ccpay-env)", "date": "2018-10-17 13:26:44+01:00", "modified_files": ["main.tf"]}, {"id": "8202f4d16aa8cf1014cdd047b1f7d846a32fce85", "msg": "PAY-1401", "date": "2018-10-30 11:37:21+00:00", "modified_files": ["prod.tfvars"]}]}, {"name": "https://github.com/MrZeRo2000/bigdata_export.git", "commits": [{"id": "99d6173d6ffc2376cf9fe8319ca43b47395f7309", "msg": "changed schema for jv_payment_instrument_attr and new configs for jvbonus and jvbonusm", "date": "2019-09-19 16:45:00+03:00", "modified_files": ["tables_jvbonus_2019_09.json", "tables_jvbonusm_2019_09.json", "schema_jv_payment_instrument_attr.tf"]}]}, {"name": "https://github.com/PhilRanzato/terraform-lambda-aws.git", "commits": [{"id": "a577995e4147e0e7d1b0b6b64b596e70b0bd4f45", "msg": "Integrates billing related parameters for dynamo db table", "date": "2021-09-25 00:50:10+02:00", "modified_files": ["main.tf", "production.tfvars", "testing.tfvars", "variables.tf"]}]}, {"name": "https://github.com/emirking13/terraform-oci-oke.git", "commits": [{"id": "c8a4fb6ce93da19d7de47269b930181e1d613c92", "msg": "Fixed incorrect K8s version in terraform.tfvars.example (#204)\n\nSigned-off-by: noel_dcosta <noel.dcosta@oracle.com>", "date": "2020-08-21 13:41:47+05:18", "modified_files": ["terraform.tfvars.example"]}, {"id": "1832f41f74a45cbcb64f9656f15941167ada6267", "msg": "Allow public ingress from anywhere to ports 80 and 443 (#205)\n\n* Allow public ingress from anywhere to ports 80 and 443\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>\r\n\r\n* Support to specify custom list of destination ports for public LB security list\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>\r\n\r\n* updated docs for public_lb_ports\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>\r\n\r\n* Updated order of variables\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>\r\n\r\n* Set variable type for public_lb_ports\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>\r\n\r\n* Updated terraform options doc\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>", "date": "2020-09-04 14:48:11+05:18", "modified_files": ["configuration.adoc", "terraformoptions.adoc", "main.tf", "security.tf", "variables.tf", "terraform.tfvars.example", "variables.tf"]}]}, {"name": "https://github.com/cqa02/tf.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/aledsage/alb-cost-testing.git", "commits": [{"id": "f2a6e5337a95d0cbf988b05a37fed81d7786c6e1", "msg": "ALB vs standalone cost testing infra & scripts", "date": "2020-03-14 10:25:39+00:00", "modified_files": [".gitignore", "README.md", "large.sh", "small.sh", "alb.tf", "data.tf", "ec2.tf", "outputs.tf", "provider.tf", "versions.tf", "vpc.tf", "data.tf", "ec2.tf", "outputs.tf", "provider.tf", "versions.tf", "vpc.tf"]}]}, {"name": "https://github.com/Echo-Stream/terraform-aws-control.git", "commits": [{"id": "cc7ec3b41d4237cf3bd34539d35e59f2aeb0bb3e", "msg": "added sns for billing", "date": "2020-12-07 16:15:55+05:18", "modified_files": ["sns.tf", "variables.tf", "billing.tf"]}, {"id": "17e53b8c4ee1dd8b87f4bcf96242b46fe58ab495", "msg": "move billing", "date": "2020-12-17 21:15:30+05:18", "modified_files": ["sns.tf", "variables.tf", "billing.tf"]}, {"id": "af6ff7601869fdd460a969ee1ef7a630f24d20b4", "msg": "put billing resources here only", "date": "2022-03-29 15:56:03-04:00", "modified_files": ["cost-and-usage.tf"]}, {"id": "467fe7664068cac3607d4d79108278255c98ee3b", "msg": "add cost and usage definitation", "date": "2022-04-04 16:08:51-04:00", "modified_files": ["cost-and-usage.tf"]}, {"id": "2fd425d3501fa5cbbbb82114f3800cc0c9bbb77e", "msg": "cost and usage s3 prefix finalization", "date": "2022-04-05 17:12:33-04:00", "modified_files": ["cost-and-usage.tf"]}]}, {"name": "https://github.com/GregCKrause/market-data.git", "commits": [{"id": "917580b4c9d0e04afb5cb33a768d9098856bca93", "msg": "Adding get-initialize-symbol-payloads", "date": "2021-01-19 01:35:20-06:00", "modified_files": ["lambda.tf", "build.sh", "index.js", "package-lock.json", "build.sh", "config.js", "get-credentials.js", "index.js", "package-lock.json", "package.json", "index.js"]}]}, {"name": "https://github.com/cdiaz1971/terraform.git", "commits": [{"id": "9ed2ec8e74c6966ab0d1e010f2887e1a6e33ae8d", "msg": "Fixed alb.  Used the full config instead of the terraform module.  Was able to add two instances.  Still would like to use a more efficient way to add both.", "date": "2021-08-20 12:56:01+00:00", "modified_files": ["main.tf", "instance_template.tf", "outputs.tf", "variables.tf", "alb.tf", "variables.tf"]}]}, {"name": "https://github.com/SnidermanIndustries/terragoat-fork.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/manimahesh/gh_mmani_terragoat_pc.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/rackspace-infrastructure-automation/aws-terraform-dynamo.git", "commits": [{"id": "1ed2971ed1e490f437bf85bbeb325a8a494db8c1", "msg": "adding billing mode", "date": "2019-01-30 12:39:03-06:00", "modified_files": ["README.md", "example.tf", "main.tf", "variables.tf"]}, {"id": "7a98eff6fb01609842080b424176e4df01d2a926", "msg": "Resolve repeated reapplys when using PAY_PER_REQUEST mode", "date": "2019-02-22 17:29:31-06:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/grumblik/cloudwatch-exporter-chart.git", "commits": [{"id": "d26431f31527f46b976a7e6d9e0504fc90e98c9a", "msg": "\"add_cost_exporter\"", "date": "2020-12-23 18:38:43+03:00", "modified_files": ["21-exporter.yaml", "values.yaml", "terraform_user_policy.tf"]}]}, {"name": "https://github.com/nsbno/app-infrastructure.git", "commits": [{"id": "eb4e0a7ca294ae00fe771aadf9118ffea0f52458", "msg": "Added billing mode variable to ddb with provisioned as default", "date": "2020-01-31 16:13:22+01:00", "modified_files": ["main.tf", "vars.tf"]}]}, {"name": "https://github.com/4ARMED/terraform-burp-collaborator.git", "commits": [{"id": "e1886523332ac377e2db4baf2f22138be5c76cd6", "msg": "* Simplified AWS vs non-AWS approach to separate tf files\n* Left Namecheap API script as an exercise for the reader and removed from README.md\n* Moved instructions for Namecheap script into the script itself", "date": "2017-04-14 07:39:55+01:00", "modified_files": ["README.md", "main.tf", "main.tf.nonawsdomain", "set_route53_ns.rb", "terraform.tfvars"]}]}, {"name": "https://github.com/Kakaranish/eszop-infra.git", "commits": [{"id": "cd97b1881cb0d1c145b8b6236a3702a970c671c2", "msg": "+ added persistent_resources for \"cheap\" resources creation", "date": "2021-03-27 19:13:15+01:00", "modified_files": ["backend.tf", "main.tf", "ApplyInfra.ps1", "DestroyInfra.ps1", "terraform.tfvars", "variables.tf", "Development.tfvars", "DevelopmentLocal.tfvars", "Staging.tfvars"]}]}, {"name": "https://github.com/terraformtoolchain/aws_subnet_mod.git", "commits": [{"id": "1fe4ec45f8f1504d37f950cc86d19dccca9a3129", "msg": "removed cost_center variable. Turns out you can't assign tags to eips or nat gateways", "date": "2017-03-18 20:55:22-05:00", "modified_files": ["public_subnet.tf"]}]}, {"name": "https://github.com/eduardobaitello/terraform-eks.git", "commits": [{"id": "c11fca6440a5000648f690e6282778fb4ec73309", "msg": "Small volume size to reduce costs per hour", "date": "2021-02-26 09:56:39-03:00", "modified_files": ["README.md", "eks-cluster.tf"]}]}, {"name": "https://github.com/galvezlj/cloudposse-terraform-aws-elastic-beanstalk-environment.git", "commits": [{"id": "c7f97299d3d323c2c6c258e06d823f27db855ffb", "msg": "Allow setting elb_scheme for choosing internal or public LB (#72)\n\n* elb_scheme = \"internal\" or \"public\"\r\n\r\n* terraform fmt\r\n\r\n* default ELBScheme to \"\"\r\n\r\nCo-Authored-By: CGreenPayTM <42248651+CGreenPayTM@users.noreply.github.com>\r\n\r\n* Description for ELBScheme\r\n\r\nCo-Authored-By: CGreenPayTM <42248651+CGreenPayTM@users.noreply.github.com>\r\n\r\n* remake docs\r\n\r\n* default elb_scheme to public\r\n\r\n* docs\r\n\r\n* contrib", "date": "2019-01-24 13:32:45-05:00", "modified_files": ["README.md", "README.yaml", "terraform.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/chtest0410/tfsample.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/maxjahn/terraform-oci-azure-connect.git", "commits": [{"id": "fa109033da045468d612fe8eae1a2f903e30e128", "msg": "Changed ExpressRoute tier to Local to avoid cost for egress traffic", "date": "2020-03-19 10:43:45+01:00", "modified_files": ["network.tf"]}]}, {"name": "https://github.com/tal-test-org/terragoat-org-gh-3.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/imma/fogg-env.git", "commits": [{"id": "7de45302cfa8a7dca88ab61b3021091cc480b495", "msg": "cheap mode by default", "date": "2017-09-04 19:04:19-07:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/Neverwins/bc-terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/calvin-puram/DevopsNG-terraform.git", "commits": [{"id": "43c226dbcadd53bc3ffdec75d32873d2ca2b61e8", "msg": "using ELB Elastic Load Balancing with ASG Auto Scaling Group to provide\n highly available and efficient web servers", "date": "2021-09-17 13:10:10+01:00", "modified_files": [".terraform.lock.hcl", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/thiringai-evans/cloud_scripts.git", "commits": [{"id": "5127d7a6eccc6965d1e51928d50ee01a46b38871", "msg": "provide an instance \n\n A t3.nano instance is provided, its checked for cost estimation monthly using the policies provided.", "date": "2020-07-20 13:11:59+03:00", "modified_files": ["aws-policy-instance.tf"]}]}, {"name": "https://github.com/matthewbentley/blog-terraform.git", "commits": [{"id": "c149ee348e80426b54f65458c65baec7d7b60e4a", "msg": "automagically setup name servers for namecheap (bentley.link)", "date": "2017-12-06 19:10:17-05:00", "modified_files": ["main.tf", "provider.tf"]}]}, {"name": "https://github.com/palogitjl/terragoat2.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/aeternity/terraform-aws-devnet.git", "commits": [{"id": "f4113a8f7e52991dfb75f63688aeba77bac76b01", "msg": "Use 3 int-sync nodes on cheaper instance (#21)", "date": "2021-03-31 17:10:50+03:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/astronomer/terraform-kubernetes-astronomer-system-components.git", "commits": [{"id": "f17e773f6c63c261f7e66e387c5ba343baa447e9", "msg": "Optionally install kubecost", "date": "2019-10-01 14:33:51+00:00", "modified_files": ["README.md", "kubecost.tf", "variables.tf"]}]}, {"name": "https://github.com/avatala/avatala.git", "commits": [{"id": "e886f7c4df8d63d54a2d2134ea6681ea746618c4", "msg": "enabled billing api", "date": "2022-01-06 17:01:33+00:00", "modified_files": ["main.tf"]}, {"id": "388f3455f65a159fbcf5dba22fcd0f9d74a3e7f3", "msg": "changed the billing account", "date": "2022-01-06 17:29:54+00:00", "modified_files": ["main.tf"]}, {"id": "c2562ed405215209586bfd807043f1f62c248cef", "msg": "removed billing account", "date": "2022-01-06 18:12:19+00:00", "modified_files": ["main.tf"]}, {"id": "a4c17a9f1cbad1621a2622872da9acd35fe2728f", "msg": "assigned billing viewer role", "date": "2022-01-10 10:51:57+00:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/ministryofjustice/cloud-platform-terraform-concourse.git", "commits": [{"id": "1e417d63927e8ff4c389649e160edd6a05b73de0", "msg": "Add permissions on `ce:GetCostAndUsage` for `*`\n\nThis supports the cost reporter pipeline job.\nhttps://mojdt.slack.com/archives/C514ETYJX/p1600360317270200", "date": "2020-09-18 09:36:08+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/kesavakadiyala/terraform-cart.git", "commits": [{"id": "19614fb35a86b2abfd7d89ec64c0a79fe94f3153", "msg": "Added User, Payment, Cart, Shipping Services", "date": "2022-03-06 13:53:23+05:18", "modified_files": ["Makefile", "dev.tfvars", "prod.tfvars", "main.tf", "provider.tf", "state.tf", "dev.tfvars", "prod.tfvars", "vars.tf"]}]}, {"name": "https://github.com/pagopa/userregistry-devops.git", "commits": [{"id": "8c5259732d450bbea62822ae798f7d6ee62654d0", "msg": "[IOPAY-136] new project for io-pay (#22)\n\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>", "date": "2021-04-19 17:50:48+02:00", "modified_files": ["io-pay.tf", "project.tf", "provider.tf", "secrets.tf", "service_connections.tf", "time_sleep.tf"]}, {"id": "ed973da8e24dd249fc128ae6393bf771eb808689", "msg": "[#IP-49] Configure pipelines for `io-functions-app` (#24)\n\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>", "date": "2021-04-19 19:05:02+02:00", "modified_files": ["io-functions-app.tf"]}, {"id": "428e3c30983c6f8d9cb0da73234b40b4cc02dd95", "msg": "[#IO-49] Configure pipelines for `io-functions-services` (#26)\n\n* configure pipelines for io-functions-services\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-app` (#24)\r\n\r\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for (#25)\r\n\r\n* configure pipelines for io-functions-services\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>", "date": "2021-04-19 19:26:45+02:00", "modified_files": ["io-functions-services.tf"]}, {"id": "2ac0623a057681e706914f8a4888eaf7975f4a1b", "msg": "[#IP-49] Configure pipelines for `io-functions-public` (#27)\n\n* configure pipelines for io-functions-public\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-app` (#24)\r\n\r\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for (#25)\r\n\r\n* [#IO-49] Configure pipelines for `io-functions-services` (#26)\r\n\r\n* configure pipelines for io-functions-services\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-app` (#24)\r\n\r\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for (#25)\r\n\r\n* configure pipelines for io-functions-services\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for io-functions-public\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>", "date": "2021-04-19 19:33:37+02:00", "modified_files": ["io-functions-public.tf"]}, {"id": "b8c57d20558b2a82f0bdedbfbb16211b299583e7", "msg": "[#IP-49] Configure pipelines for `io-functions-assets` (#28)\n\n* configure pipelines for io-functions-assets\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-app` (#24)\r\n\r\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for (#25)\r\n\r\n* [#IO-49] Configure pipelines for `io-functions-services` (#26)\r\n\r\n* configure pipelines for io-functions-services\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-app` (#24)\r\n\r\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for (#25)\r\n\r\n* configure pipelines for io-functions-services\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-public` (#27)\r\n\r\n* configure pipelines for io-functions-public\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-app` (#24)\r\n\r\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for (#25)\r\n\r\n* [#IO-49] Configure pipelines for `io-functions-services` (#26)\r\n\r\n* configure pipelines for io-functions-services\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-app` (#24)\r\n\r\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for (#25)\r\n\r\n* configure pipelines for io-functions-services\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for io-functions-public\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for io-functions-assets\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>", "date": "2021-04-19 19:40:52+02:00", "modified_files": ["io-functions-assets.tf"]}, {"id": "81039dcbaa0e2ee397bb0d06bdc9e7ee61ec15d1", "msg": "[IOPAY-148] Configure pipelines for io-pay-portal-fe and io-functions-pay-portal (#30)\n\n* [IOPAY-148] Add io-pay-portal-fe pipelines\r\n\r\n* [IOPAY-148] Add io-functions-pay-portal pipelines\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Add CGN functions (#32)\r\n\r\n* Add CGN functions\r\n\r\n* fix duplicate variable declaration\r\n\r\n* fix io-pay-portal-fe\r\n\r\n* [#IONFRA-69] Devops project for io-service-metadata (#31)\r\n\r\n* [#IONFRA-69] new project to run the service metadata pipeline\r\n\r\n* [#IOINFRA69] code review + role assignement to the storage accounts\r\n\r\n* [#IOINFRA69] code review + role assignement to the storage accounts\r\n\r\n* fix pr ci trigger\r\n\r\nCo-authored-by: Walter Traspadini <walter.traspadini@sorint.it>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-pay-portal-fe.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* added path_filter and double \\ for path folder\r\n\r\n* PE-46 Add backend pipelines and update frontend (#33)\r\n\r\n* PE-46 Add backend pipelines and update frontend\r\n\r\n* Minor update\r\n\r\n* Different sonarqube\r\n\r\n* Apply fix secret names\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Add storage account roles\r\n\r\n* Fix PAGOPAIT-TENANTID\r\n\r\n* Add missing ad provider and fix service_principal_uids\r\n\r\n* Comment prod storage account role for now\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/cgn-onboarding-portal-projects/cgn-onboarding-portal-frontend.tf\r\n\r\n* Add webappname vars\r\n\r\n* Renamed prod env var and commented auth due to ad tenats\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* update configuration (#35)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-157] Configure pipelines for `io-functions-commons` (#36)\r\n\r\n* add npm pacakges project\r\n\r\n* add io-functions-commons pipeline\r\n\r\n* rename project\r\n\r\n* update provider\r\n\r\n* remove unused service connection\r\n\r\n* refactor project\r\n\r\n* dedicated state storage key\r\n\r\n* add allow_override false, remove unused dependency\r\n\r\n* fix allow_override NPM_CONNECTION\r\n\r\n* rename project\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Adding io-spid-commons to gitops (#37)\r\n\r\n* add pipelines for @pagopa/ts-commons (#39)\r\n\r\n* [IOPAY-148] update io_pay_portal_api_host with prod value\r\n\r\n* [IOPAY-148] Add io-pay-portal-fe pipelines\r\n\r\n* [IOPAY-148] Add io-functions-pay-portal pipelines\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* fix io-pay-portal-fe\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-pay-portal-fe.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* added path_filter and double \\ for path folder\r\n\r\n* [IOPAY-148] update io_pay_portal_api_host with prod value\r\n\r\n* update provider, add more strict configuration\r\n\r\n* fix azurerm_role_assignment name\r\n\r\n* terraform fmt\r\n\r\n* migrate to pagopaspa devops org\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: Alessio Dore <57567806+AleDore@users.noreply.github.com>\r\nCo-authored-by: Walter Traspadini <walter.traspadini@pagopa.it>\r\nCo-authored-by: Walter Traspadini <walter.traspadini@sorint.it>\r\nCo-authored-by: pasqualedevita <>\r\nCo-authored-by: Matteo Gazzetta <matteo_gazzetta@hotmail.it>\r\nCo-authored-by: Emanuele De Cupis <emanuele.decupis@pagopa.it>", "date": "2021-04-27 20:11:34+02:00", "modified_files": ["io-functions-pay-portal.tf", "io-pay-portal-fe.tf", "io-pay.tf", "project.tf", "provider.tf"]}, {"id": "a07d0f5ae5219ebda9696978e49a6621ffe30a02", "msg": "[#IOINFRA-70] DevOps pipeline hubpa (#34)\n\n* [#IOINFRA-70] refactor hubpa project + module secrets\r\n\r\n* [#IOINFRA-70] refactor hubpa project + module secrets\r\n\r\n* [#IOINFRA-70] removed comment.\r\n\r\n* [#IOINFRA-70] new project hubpa with service connection to production\r\n\r\n* Update azure-devops/projects/hub-pa-projects/project.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/project.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/project.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/service_connections.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/service_connections.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* [#IOINFRA-70] renamed files with underscore\r\n\r\n* [#IOINFRA-70] removed block of code commented out.\r\n\r\n* PE-46 Add backend pipelines and update frontend (#33)\r\n\r\n* PE-46 Add backend pipelines and update frontend\r\n\r\n* Minor update\r\n\r\n* Different sonarqube\r\n\r\n* Apply fix secret names\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Add storage account roles\r\n\r\n* Fix PAGOPAIT-TENANTID\r\n\r\n* Add missing ad provider and fix service_principal_uids\r\n\r\n* Comment prod storage account role for now\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/cgn-onboarding-portal-projects/cgn-onboarding-portal-frontend.tf\r\n\r\n* Add webappname vars\r\n\r\n* Renamed prod env var and commented auth due to ad tenats\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* [#IONFRA-70] commented out service connection contained registry dev.\r\n\r\n* update configuration (#35)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-157] Configure pipelines for `io-functions-commons` (#36)\r\n\r\n* add npm pacakges project\r\n\r\n* add io-functions-commons pipeline\r\n\r\n* rename project\r\n\r\n* update provider\r\n\r\n* remove unused service connection\r\n\r\n* refactor project\r\n\r\n* dedicated state storage key\r\n\r\n* add allow_override false, remove unused dependency\r\n\r\n* fix allow_override NPM_CONNECTION\r\n\r\n* rename project\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Adding io-spid-commons to gitops (#37)\r\n\r\n* add pipelines for @pagopa/ts-commons (#39)\r\n\r\n* [IOPAY-148] Configure pipelines for io-pay-portal-fe and io-functions-pay-portal (#30)\r\n\r\n* [IOPAY-148] Add io-pay-portal-fe pipelines\r\n\r\n* [IOPAY-148] Add io-functions-pay-portal pipelines\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Add CGN functions (#32)\r\n\r\n* Add CGN functions\r\n\r\n* fix duplicate variable declaration\r\n\r\n* fix io-pay-portal-fe\r\n\r\n* [#IONFRA-69] Devops project for io-service-metadata (#31)\r\n\r\n* [#IONFRA-69] new project to run the service metadata pipeline\r\n\r\n* [#IOINFRA69] code review + role assignement to the storage accounts\r\n\r\n* [#IOINFRA69] code review + role assignement to the storage accounts\r\n\r\n* fix pr ci trigger\r\n\r\nCo-authored-by: Walter Traspadini <walter.traspadini@sorint.it>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-pay-portal-fe.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* added path_filter and double \\ for path folder\r\n\r\n* PE-46 Add backend pipelines and update frontend (#33)\r\n\r\n* PE-46 Add backend pipelines and update frontend\r\n\r\n* Minor update\r\n\r\n* Different sonarqube\r\n\r\n* Apply fix secret names\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Add storage account roles\r\n\r\n* Fix PAGOPAIT-TENANTID\r\n\r\n* Add missing ad provider and fix service_principal_uids\r\n\r\n* Comment prod storage account role for now\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/cgn-onboarding-portal-projects/cgn-onboarding-portal-frontend.tf\r\n\r\n* Add webappname vars\r\n\r\n* Renamed prod env var and commented auth due to ad tenats\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* update configuration (#35)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-157] Configure pipelines for `io-functions-commons` (#36)\r\n\r\n* add npm pacakges project\r\n\r\n* add io-functions-commons pipeline\r\n\r\n* rename project\r\n\r\n* update provider\r\n\r\n* remove unused service connection\r\n\r\n* refactor project\r\n\r\n* dedicated state storage key\r\n\r\n* add allow_override false, remove unused dependency\r\n\r\n* fix allow_override NPM_CONNECTION\r\n\r\n* rename project\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Adding io-spid-commons to gitops (#37)\r\n\r\n* add pipelines for @pagopa/ts-commons (#39)\r\n\r\n* [IOPAY-148] update io_pay_portal_api_host with prod value\r\n\r\n* [IOPAY-148] Add io-pay-portal-fe pipelines\r\n\r\n* [IOPAY-148] Add io-functions-pay-portal pipelines\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* fix io-pay-portal-fe\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-pay-portal-fe.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* added path_filter and double \\ for path folder\r\n\r\n* [IOPAY-148] update io_pay_portal_api_host with prod value\r\n\r\n* update provider, add more strict configuration\r\n\r\n* fix azurerm_role_assignment name\r\n\r\n* terraform fmt\r\n\r\n* migrate to pagopaspa devops org\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: Alessio Dore <57567806+AleDore@users.noreply.github.com>\r\nCo-authored-by: Walter Traspadini <walter.traspadini@pagopa.it>\r\nCo-authored-by: Walter Traspadini <walter.traspadini@sorint.it>\r\nCo-authored-by: pasqualedevita <>\r\nCo-authored-by: Matteo Gazzetta <matteo_gazzetta@hotmail.it>\r\nCo-authored-by: Emanuele De Cupis <emanuele.decupis@pagopa.it>\r\n\r\n* sonar cloud config, update vars\r\n\r\n* [#IOINFRA-70] refactor hubpa project + module secrets\r\n\r\n* [#IOINFRA-70] refactor hubpa project + module secrets\r\n\r\n* [#IOINFRA-70] removed comment.\r\n\r\n* [#IOINFRA-70] new project hubpa with service connection to production\r\n\r\n* Update azure-devops/projects/hub-pa-projects/project.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/project.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/project.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/service_connections.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/service_connections.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* [#IOINFRA-70] renamed files with underscore\r\n\r\n* [#IOINFRA-70] removed block of code commented out.\r\n\r\n* [#IONFRA-70] commented out service connection contained registry dev.\r\n\r\n* sonar cloud config, update vars\r\n\r\nCo-authored-by: Walter Traspadini <walter.traspadini@sorint.it>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: Matteo Gazzetta <matteo_gazzetta@hotmail.it>\r\nCo-authored-by: Emanuele De Cupis <emanuele.decupis@pagopa.it>\r\nCo-authored-by: Alessio Dore <57567806+AleDore@users.noreply.github.com>\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>", "date": "2021-04-28 20:40:35+02:00", "modified_files": ["main.tf", "outputs.tf", "variables.tf", "hub-pa-api.tf", "hub_pa_api.tf", "hub_pa_fe.tf", "project.tf", "provider.tf", "secrets.tf", "service_connections.tf"]}, {"id": "33963c84f33f352e16a951d2bc22762b1e711f70", "msg": "[IOPAY-175] update PaymentManager endpoint for prod (#42)", "date": "2021-04-30 13:10:10+02:00", "modified_files": ["io-pay.tf"]}, {"id": "990184f3ea2bb96096d72ed38fab1819ff2439de", "msg": "[#CEN-148] Create cstar azure devops project (#55)\n\n* [#CEN-148] Create cstar azure devops project\r\n\r\n* add DEV service connection\r\n\r\n* add first pipeline\r\n\r\n* add deploy pipeline\r\n\r\n* add rtd-ms-arch\r\n\r\n* add meda-bom, bpd-commons, bpd-ms-starter-parent\r\n\r\n* update template\r\n\r\n* fix sonarcloud_service_conn\r\n\r\n* fix sonarcloud_service_conn template\r\n\r\n* add fork\r\n\r\n* add variables\r\n\r\n* update kubeconfig\r\n\r\n* fix cluster_context\r\n\r\n* add bpd-ms-payment-instrument\r\n\r\nCo-authored-by: pasqualedevita <>", "date": "2021-06-16 09:12:35+02:00", "modified_files": ["bpd-commons.tf", "bpd-ms-award-period-fork.tf", "bpd-ms-award-period.tf", "bpd-ms-payment-instrument.tf", "bpd-ms-starter-parent.tf", "meda-bom.tf", "project.tf", "provider.tf", "rtd-ms-arch.tf", "secrets.tf", "service_connections.tf"]}, {"id": "619c525e7cde680000783a6c75a285343dd8108d", "msg": "[IOPAY-262] api-test pipeline for pagopa-payments-tests (#110)\n\n* [IOPAY-262] api-test pipeline for pagopa-payments-tests\r\n\r\n* [PM-169] rename pipeline name\r\n\r\n* add missing bracket\r\n\r\n* pagopa-payments-tests private repo\r\n\r\nCo-authored-by: pasqualedevita <>", "date": "2021-09-17 09:25:13+02:00", "modified_files": ["pagopa-payments-tests.tf"]}, {"id": "8ebea3a8f7cebf1d0af45bdc967e699508727e1e", "msg": "[CEN-675] Add pipelines for FA Payment Instrument microservice (#121)", "date": "2021-09-21 18:34:40+02:00", "modified_files": ["fa-ms-payment-instrument.tf"]}, {"id": "b2a9cbf571ea449d25ab8bd52e815c0e8cfc7a0e", "msg": "[IOPAY-301] add pipeline to checkout.pagopa.it certs (#151)\n\n* [IOPAY-301] add pipeline to checkout certs\r\n\r\n* support apex domain\r\n\r\nCo-authored-by: pasqualedevita <>", "date": "2021-10-12 19:03:12+02:00", "modified_files": ["tlscert-dev-dev-checkout-pagopa-it.tf", "tlscert-prod-checkout-pagopa-it.tf", "tlscert-uat-uat-checkout-pagopa-it.tf"]}, {"id": "d417b9ae04c9cbd7c3b96f428aaf0514db133be8", "msg": "[IOPAY-295] new pipeline for checkout (#149)\n\n* [IOPAY-295] new pipeline for checkout\r\n\r\n* Update azure-devops/projects/pagopa-projects/pagopa-checkout-io-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/pagopa-projects/pagopa-checkout-io-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/pagopa-projects/pagopa-checkout-io-pay.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Refactoring to io-pay-portal-fe\r\n\r\n* add prefix pipelines\r\n\r\n* fix prefix pipeline\r\n\r\n* [IOPAY-294] add pipeline for io-functions-pay-portal\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>", "date": "2021-10-12 19:42:34+02:00", "modified_files": ["pagopa-checkout-io-functions-pay-portal.tf", "pagopa-checkout-io-pay-portal-fe.tf", "pagopa-checkout-io-pay.tf"]}, {"id": "f5dda1021fff9d78f3c380f16d5b78dfaa557b78", "msg": "[IOPAY-206] switch test enviroment (#133)", "date": "2021-10-12 19:42:50+02:00", "modified_files": ["io-pay.tf"]}, {"id": "994804504da57306679790ec6246d53696cc71a0", "msg": "disable io-functions-pay-portal (#157)", "date": "2021-10-14 16:25:27+02:00", "modified_files": ["pagopa-checkout-io-functions-pay-portal.tf"]}, {"id": "3dd1169c7c82376eb9175c533e6e0a66bb0dc888", "msg": "[IOPAY-313] Enable pipeline for checkout function (#172)\n\n* enable pipeline for checkout function\r\n\r\n* update repo", "date": "2021-10-22 18:55:42+02:00", "modified_files": ["pagopa-checkout-io-functions-pay-portal.tf", "pagopa-functions-checkout.tf"]}, {"id": "c039be564575beadfdcbf31b7546d935a1993841", "msg": "[IOPAY-314] add IDs for recaptcha (#180)\n\n* add IDs for recaptcha\r\n\r\n* get captcha key from kv", "date": "2021-10-27 12:35:55+02:00", "modified_files": ["pagopa-checkout-io-pay-portal-fe.tf", "secrets.tf"]}, {"id": "401832e2e7f074340a1a8f1a1969c659a4317209", "msg": "[IOPAY-314] Add new host for checkout api (#183)\n\n* Add new host for checkout api\r\n\r\n* delete unused vars", "date": "2021-11-04 12:43:38+01:00", "modified_files": ["pagopa-checkout-io-pay-portal-fe.tf", "pagopa-checkout-io-pay.tf"]}]}, {"name": "https://github.com/spacex/terraform-namecheap-digitalocean-dns.git", "commits": [{"id": "b7fa54331f84a1ef5b775cf10e324e5d9a4561f3", "msg": "Initial namecheap -> digitalocean DNS management.", "date": "2022-01-26 22:55:09-06:00", "modified_files": ["digitalocean.tf", "init.tf", "namecheap.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/farrukh90/Terraform0.14.git", "commits": [{"id": "7c74a305de472a2515892a6552311d275dcc6141", "msg": "added billing", "date": "2021-03-13 02:05:27+00:00", "modified_files": [".gitignore", "README.md", "billing.tf", "variable.tf"]}]}, {"name": "https://github.com/40net-cloud/github-actions-infra-as-code-demo.git", "commits": [{"id": "d9f47e022d0997f62d9dd4df33a2ce1b36a122d2", "msg": "Deploy PAYG", "date": "2021-11-29 16:36:39+01:00", "modified_files": ["00-general.tf"]}]}, {"name": "https://github.com/dwp/dataworks-analytical-service-infra.git", "commits": [{"id": "4ad7a38a780bd1b85630318c331dda0980e35f33", "msg": "DW-4347 Add Costcode and Team tags (#9)\n\n* DW-4347 Add Costcode and Team tags", "date": "2020-06-19 12:03:24+01:00", "modified_files": ["meta.yml", "terraform.tf.j2", "variables.tf"]}]}, {"name": "https://github.com/rohitgabriel/terraform-sentinel-ec2tags.git", "commits": [{"id": "21581cb91ee2afbab19bf6923237fc86495e9870", "msg": "billing", "date": "2020-03-29 15:25:14+13:00", "modified_files": ["ec2-budget.tf", "iam-jenkins.tf", "vars.tf"]}, {"id": "b6f249615609fc0d53e5283adaa5eca8497cb30f", "msg": "no costcenter", "date": "2020-03-29 22:22:18+13:00", "modified_files": ["ec2-sentinel.tf"]}]}, {"name": "https://github.com/mdn/infra.git", "commits": [{"id": "2f1f1bf34816aac5e33799a2e8a1608710df695e", "msg": "change CDN behavior from contribute to payments", "date": "2019-03-12 13:45:26-07:00", "modified_files": ["cloudfront.tf"]}, {"id": "1b1ff886f7ef72fc5c5616608e837ecef5f110f6", "msg": "update primary cdn terraform for payments", "date": "2020-03-27 15:02:58-07:00", "modified_files": ["main.tf"]}, {"id": "da63677ac7c3677fde250f16d36eb8987d448495", "msg": "SE-2281 Decom developers-portal\n\nMost of this is already deleted. Attached is the destroy plan for the\nremaining bits. Will clean up then remove this directory.\n\n```bash\nTerraform will perform the following actions:\n\n  # module.backup_bucket.aws_iam_policy.this will be destroyed\n  - resource \"aws_iam_policy\" \"this\" {\n      - arn         =\n        \"arn:aws:iam::178589013767:policy/developer-portal-backups-policy-20200616223113684600000001\"\n-> null\n      - description = \"EKS rds backup policy for mdn-apps-a\" -> null\n      - id          =\n        \"arn:aws:iam::178589013767:policy/developer-portal-backups-policy-20200616223113684600000001\"\n-> null\n      - name        =\n        \"developer-portal-backups-policy-20200616223113684600000001\" ->\nnull\n      - name_prefix = \"developer-portal-backups-policy-\" -> null\n      - path        = \"/\" -> null\n      - policy      = jsonencode(\n            {\n              - Statement = [\n                  - {\n                      - Action   = [\n                          - \"s3:ListAllMyBuckets\",\n                          - \"s3:GetBucketLocation\",\n                        ]\n                      - Effect   = \"Allow\"\n                      - Resource = \"arn:aws:s3:::*\"\n                      - Sid      = \"AllowUserToListBuckets\"\n                    },\n                  - {\n                      - Action   = \"s3:ListBucket\"\n                      - Effect   = \"Allow\"\n                      - Resource =\n                        \"arn:aws:s3:::developer-portal-backups-178589013767\"\n                      - Sid      = \"\"\n                    },\n                  - {\n                      - Action   = [\n                          - \"s3:PutObjectAcl\",\n                          - \"s3:PutObject\",\n                          - \"s3:GetObjectAcl\",\n                          - \"s3:GetObject\",\n                          - \"s3:DeleteObject\",\n                        ]\n                      - Effect   = \"Allow\"\n                      - Resource =\n                        \"arn:aws:s3:::developer-portal-backups-178589013767/*\"\n                      - Sid      = \"\"\n                    },\n                ]\n              - Version   = \"2012-10-17\"\n            }\n        ) -> null\n    }\n\n  # module.backup_bucket.aws_s3_bucket.this will be destroyed\n  - resource \"aws_s3_bucket\" \"this\" {\n      - acl                         = \"private\" -> null\n      - arn                         =\n        \"arn:aws:s3:::developer-portal-backups-178589013767\" -> null\n      - bucket                      =\n        \"developer-portal-backups-178589013767\" -> null\n      - bucket_domain_name          =\n        \"developer-portal-backups-178589013767.s3.amazonaws.com\" -> null\n      - bucket_regional_domain_name =\n        \"developer-portal-backups-178589013767.s3.us-west-2.amazonaws.com\"\n-> null\n      - force_destroy               = false -> null\n      - hosted_zone_id              = \"Z3BJ6K6RIION7M\" -> null\n      - id                          =\n        \"developer-portal-backups-178589013767\" -> null\n      - region                      = \"us-west-2\" -> null\n      - request_payer               = \"BucketOwner\" -> null\n      - tags                        = {\n          - \"Name\"      = \"developer-portal-backups-178589013767\"\n          - \"Project\"   = \"developer-portal\"\n          - \"Terraform\" = \"true\"\n        } -> null\n\n      - versioning {\n          - enabled    = false -> null\n          - mfa_delete = false -> null\n        }\n    }\n\n  #\nmodule.backup_bucket.module.iam_assumable_role_admin.aws_iam_role.this[0]\nwill be destroyed\n  - resource \"aws_iam_role\" \"this\" {\n      - arn                   =\n        \"arn:aws:iam::178589013767:role/developer-portal-backups-role\"\n-> null\n      - assume_role_policy    = jsonencode(\n            {\n              - Statement = [\n                  - {\n                      - Action    = \"sts:AssumeRoleWithWebIdentity\"\n                      - Condition = {\n                          - StringEquals = {\n                              -\noidc.eks.us-west-2.amazonaws.com/id/2AB004EFA24136FCFB7AD35808585599:sub\n= \"system:serviceaccount:dev-portal-prod:dev-portal-rds-backups\"\n                            }\n                        }\n                      - Effect    = \"Allow\"\n                      - Principal = {\n                          - Federated =\n                            \"arn:aws:iam::178589013767:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/2AB004EFA24136FCFB7AD35808585599\"\n                        }\n                      - Sid       = \"\"\n                    },\n                ]\n              - Version   = \"2012-10-17\"\n            }\n        ) -> null\n      - create_date           = \"2020-06-16T22:32:36Z\" -> null\n      - force_detach_policies = false -> null\n      - id                    = \"developer-portal-backups-role\" -> null\n      - max_session_duration  = 3600 -> null\n      - name                  = \"developer-portal-backups-role\" -> null\n      - path                  = \"/\" -> null\n      - tags                  = {} -> null\n      - unique_id             = \"AROASTFF4C4DUE6XT2GXJ\" -> null\n    }\n\n  #\nmodule.backup_bucket.module.iam_assumable_role_admin.aws_iam_role_policy_attachment.custom[0]\nwill be destroyed\n  - resource \"aws_iam_role_policy_attachment\" \"custom\" {\n      - id         =\n        \"developer-portal-backups-role-20200616223237702800000001\" ->\nnull\n      - policy_arn =\n        \"arn:aws:iam::178589013767:policy/developer-portal-backups-policy-20200616223113684600000001\"\n-> null\n      - role       = \"developer-portal-backups-role\" -> null\n    }\n\nPlan: 0 to add, 0 to change, 4 to destroy.\n\n------------------------------------------------------------------------\n\n```", "date": "2021-08-04 10:19:23-05:00", "modified_files": ["README.md", "config.sh", "data.tf", "locals.tf", "main.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "data.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "data.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "state.tf", "tf-do", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/nsbno/terraform-aws-sfn-deployment-pipeline.git", "commits": [{"id": "2e0abc4bf1a18db1e3b16d4761f6adc847c5bb8f", "msg": "Remove duplicated payloads", "date": "2020-12-18 09:41:53+01:00", "modified_files": ["payloads.tf"]}, {"id": "15e1ba737f45075b150ef56953228b597d4a01fa", "msg": "Move state logic from payloads.tf to states.tf", "date": "2020-12-18 11:09:49+01:00", "modified_files": ["payloads.tf", "states.tf"]}]}, {"name": "https://github.com/schubergphilis/terraform-aws-mcaf-matillion.git", "commits": [{"id": "3b0e2fe42d660664c49d54ae8706de004a9b4176", "msg": "Add opt-in variables\n\nInstead of building a full deployment it feels better to explcitly\nenable certain functionality, a) from an deployment POV and from\nadditional cost awareness.\n\nFollowing are now opt-in:\n\n* RDS instance\n* ALB\n\nSigned-off-by: Stephen Hoekstra <shoekstra@schubergphilis.com>", "date": "2019-12-16 11:08:29+01:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/adje2206/cicd-code-com-pip-build.git", "commits": [{"id": "c16481a84d5823b65ce96bd811a265222385b43b", "msg": "Reduced preset variables for better cost optimization", "date": "2020-01-22 21:45:52-05:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/JustinYeoh93/infrastructure.git", "commits": [{"id": "3236aa7d5e0924e4f32b9f4e959f6e69c6dfd278", "msg": "Removed justin/test secret to reduce cost", "date": "2021-12-05 21:01:03+09:00", "modified_files": ["secrets.tf"]}]}, {"name": "https://github.com/erichaagdev/terraform.git", "commits": [{"id": "f9386866c88e63d752259a47a94478257a72cc0e", "msg": "Automate namecheap DNS", "date": "2021-08-21 18:02:02-05:00", "modified_files": ["terraform.yml", "assign-external-ip.sh", "cluster.tf", "ingress-nginx.tf", "main.tf", "network.tf", "update-namecheap-ip.sh"]}]}, {"name": "https://github.com/kody-abe/terraform.git", "commits": [{"id": "169c7768b0b1584945362c035a2b227d2f579466", "msg": "Switched to use DynamoDB On-Demand billing (#17)", "date": "2018-12-18 10:51:52+00:00", "modified_files": ["CHANGELOG.md", "README.md", "autoscaling.tf", "common.tf", "variables.tf", "aws.tf", "dynamodb.tf"]}, {"id": "cf494f78a10c74b918f9ef11452ba71a94bb4041", "msg": "Fix missing billing mode (#18)", "date": "2018-12-18 11:49:18+00:00", "modified_files": ["dynamodb.tf"]}]}, {"name": "https://github.com/pumbaasdad/aws-account.git", "commits": [{"id": "42c288d84b5f7853c36dcc55d181b8e16d3304a5", "msg": "Fix billing-alarm", "date": "2020-07-18 11:42:58-04:00", "modified_files": ["billing.tf"]}]}, {"name": "https://github.com/eafuna/terraform-sample.git", "commits": [{"id": "4671e08a4500a9b55edcf6e16dc1bab4f52d759a", "msg": "Updated terratest\n\n- (manual) verified success deployment\n- new approach on golang\n- implemented initandplan only to save cost during testing\n- \ttest assertions on expected values for ec2 and s3 complete\n\nIssues encountered with http_helper\n\ntodo:\n- validate content of website through regex\n- reintroduce initandapply\n- posible packaging of test for better utility", "date": "2021-11-30 20:34:08+08:00", "modified_files": ["cloud-init.yaml", "main.tf", "go.mod", "go.sum", "main.tf", "flugel_test.go", "go.mod"]}]}, {"name": "https://github.com/ridi/pay-infra.git", "commits": [{"id": "84589d9ff69abee3f9a225ed79da0646f7c95333", "msg": "Use 'pay.ridi.io' in test environment", "date": "2018-10-24 14:14:32+09:00", "modified_files": ["variables.tf"]}, {"id": "2a4c47759c2e914824ad590714d766772190f95b", "msg": "Move a backend api document to the ridi-pay aws account", "date": "2018-11-05 12:41:29+09:00", "modified_files": ["s3.tf"]}, {"id": "b9ec74cfc484626d50f6ed4e083ae127eee8b0ca", "msg": "Add a dynamodb table for kcp payment approval request locks\n- https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/WorkingWithItems.html#WorkingWithItems.ConditionalUpdate", "date": "2019-06-24 17:55:39+09:00", "modified_files": ["kcp_http_proxy.tf"]}, {"id": "096bca563bb25d133ba036f4587724e58d234a87", "msg": "Change certificates for pay-backend", "date": "2019-08-13 13:03:52+09:00", "modified_files": ["acm.tf", "variables.tf"]}, {"id": "92b2c6550bd0cf1aad8a6d9f3d5814c921e970c7", "msg": "Add a cloudwatch alarm for unhealthy ecs tasks in pay backend", "date": "2020-02-11 16:16:28+09:00", "modified_files": ["cloudwatch.tf"]}, {"id": "4a72ad7971e8832bb3cd2f174fffdca25e9dc0bc", "msg": "Add a new ecr repository for pay-backend nginx", "date": "2020-08-07 17:10:43+09:00", "modified_files": ["ecs.tf"]}]}, {"name": "https://github.com/jgyy/tf-saa-c02.git", "commits": [{"id": "86a0542990047e40b86d292145a1d256e2f43d3c", "msg": "Networking Costs in AWS", "date": "2022-04-03 02:22:12+08:00", "modified_files": ["ec2_instances.tf", "elb_classic.tf", ".terraform.lock.hcl", "athena_query.tf", "aws_provider.tf", "ec2-user-data.sh", "ec2_instance.tf", "iam_role.tf", "route53_host.tf", "vpc_egress.tf", "vpc_endpoint.tf", "vpc_flowlog.tf", "vpc_internetgateway.tf", "vpc_ipam.tf", "vpc_main.tf", "vpc_natgateway.tf", "vpc_natinstance.tf", "vpc_networkacl.tf", "vpc_peering.tf", "vpc_routetable.tf", "vpc_security.tf", "vpc_subnet.tf"]}]}, {"name": "https://github.com/NIT-Administrative-Systems/AS-Common-AWS-Modules.git", "commits": [{"id": "e3c560a265de29b3f5c37f8b5502cff8461bf1dd", "msg": "Try billing account ARN", "date": "2020-03-13 15:26:37-05:00", "modified_files": ["s3_log_bucket.tf"]}]}, {"name": "https://github.com/smarman85/a_new_hope.git", "commits": [{"id": "de97a6b8033c866c3b711468207aa4890049daaa", "msg": "use a slightly cheaper instance", "date": "2019-11-23 23:47:33-08:00", "modified_files": ["vars.tf"]}]}, {"name": "https://github.com/terraform-alicloud-modules/terraform-alicloud-ecp.git", "commits": [{"id": "e84de7072455c27ddbf40db3f64aa1aa39b901f5", "msg": "Add the field payment_type", "date": "2022-03-30 14:55:09+08:00", "modified_files": ["CHANGELOG.md", "main.tf"]}]}, {"name": "https://github.com/nationalarchives/tdr-jenkins.git", "commits": [{"id": "4612d74b72f24d6483608a8e54b64185a7e8b654", "msg": "Add CostCentre tag to all resources\n\nAdd common tag for CostCentre so that Digital Services can\nidentify our resources in the organisation's AWS bill.", "date": "2020-01-31 15:11:34+00:00", "modified_files": ["root.tf"]}]}, {"name": "https://github.com/barloes/projectQuickStart.git", "commits": [{"id": "ca3e05785ef8f3377131e300a00b47fed047051a", "msg": "added cheapest ec2 poss for testing", "date": "2021-12-31 20:39:19+08:00", "modified_files": ["main.tf", "ec2.tf", "iam.tf", "init-script.sh", "ec2.tf", "iam.tf", "init-script.sh", "sg.tf", "var.tf", "vpc.tf"]}]}, {"name": "https://github.com/wellcomecollection/archivematica-infrastructure.git", "commits": [{"id": "ce576be106257496e20d946d6eab5f8783dada92", "msg": "Use gp3 for our persistent EBS volumes\n\nIt's ~20% cheaper and the 3000 IOPS we previously got as burst are now\navailable as sustained, for free.", "date": "2020-12-07 15:23:32+00:00", "modified_files": ["ebs.tf"]}, {"id": "4b495fef39e68590aea98af324340adafadfb334", "msg": "Only run a single RDS instance for Archivematica\n\nWe don't put much load on the database, and each db.r5.large costs ~$170/mo.", "date": "2021-05-27 15:22:35+01:00", "modified_files": ["rds.tf"]}]}, {"name": "https://github.com/matiasvaldivia4it/gcp-proy.git", "commits": [{"id": "eff9337cc9a1e3c350b089d0ac8080a4c47ba4ce", "msg": "update billing account ID", "date": "2021-10-21 13:36:19+00:00", "modified_files": [".terraform.lock.hcl", "billing-account-iam", "CHANGELOG.md", "CONTRIBUTING.md", "LICENSE", "Makefile", "README.md", "int.cloudbuild.yaml", "lint.cloudbuild.yaml", "upgrading_to_iam_3.0.md", "upgrading_to_iam_4.0.md", "upgrading_to_iam_5.0.md", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "CLOUDSHELL_TUTORIAL.md", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "iam.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "main.tf", "outputs.tf", "variables.tf", "variables.tf", "versions.tf", "additive.rb", "inspec.yml", "authoritative.rb", "inspec.yml", "billing-iam.rb", "inspec.yml", "custom-role.rb", "inspec.yml", "inspec.yml", "bindings.rb", "roles.rb", "inspec.yml", "static-and-dynamic.rb", "inspec.yml", "iam.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "CHANGELOG.md", "CONTRIBUTING.md", "LICENSE", "Makefile", "README.md", "int.cloudbuild.yaml", "lint.cloudbuild.yaml", "upgrading_to_iam_3.0.md", "upgrading_to_iam_4.0.md", "upgrading_to_iam_5.0.md", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "CLOUDSHELL_TUTORIAL.md", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "iam.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "main.tf", "outputs.tf", "variables.tf", "variables.tf", "versions.tf", "additive.rb", "inspec.yml", "authoritative.rb", "inspec.yml", "billing-iam.rb", "inspec.yml", "custom-role.rb", "inspec.yml", "inspec.yml", "bindings.rb", "roles.rb", "inspec.yml", "static-and-dynamic.rb", "inspec.yml", "iam.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "group-billing-admins", "CHANGELOG.md", "CODEOWNERS", "CONTRIBUTING.md", "LICENSE", "Makefile", "README.md", "int.cloudbuild.yaml", "lint.cloudbuild.yaml", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "kitchen.yml", "main.tf", "outputs.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "gcloud.rb", "inspec.yml", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "variables.tf", "versions.tf", "CHANGELOG.md", "CODEOWNERS", "CONTRIBUTING.md", "LICENSE", "Makefile", "README.md", "int.cloudbuild.yaml", "lint.cloudbuild.yaml", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "kitchen.yml", "main.tf", "outputs.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "gcloud.rb", "inspec.yml", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "variables.tf", "versions.tf", "CHANGELOG.md", "CODEOWNERS", "CONTRIBUTING.md", "LICENSE", "Makefile", "README.md", "int.cloudbuild.yaml", "lint.cloudbuild.yaml", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "kitchen.yml", "main.tf", "outputs.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "gcloud.rb", "inspec.yml", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "variables.tf", "versions.tf", "CHANGELOG.md", "CODEOWNERS", "CONTRIBUTING.md", "LICENSE", "Makefile", "README.md", "int.cloudbuild.yaml", "lint.cloudbuild.yaml", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "kitchen.yml", "main.tf", "outputs.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "gcloud.rb", "inspec.yml", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "variables.tf", "versions.tf", "CHANGELOG.md", "CODEOWNERS", "CONTRIBUTING.md", "LICENSE", "Makefile", "README.md", "int.cloudbuild.yaml", "lint.cloudbuild.yaml", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "kitchen.yml", "main.tf", "outputs.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "gcloud.rb", "inspec.yml", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "variables.tf", "versions.tf", "modules.json", "CHANGELOG.md", "CONTRIBUTING.md", "LICENSE", "Makefile", "README.md", "int.cloudbuild.yaml", "lint.cloudbuild.yaml", "upgrading_to_iam_3.0.md", "upgrading_to_iam_4.0.md", "upgrading_to_iam_5.0.md", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "CLOUDSHELL_TUTORIAL.md", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "iam.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "main.tf", "outputs.tf", "variables.tf", "variables.tf", "versions.tf", "additive.rb", "inspec.yml", "authoritative.rb", "inspec.yml", "billing-iam.rb", "inspec.yml", "custom-role.rb", "inspec.yml", "inspec.yml", "bindings.rb", "roles.rb", "inspec.yml", "static-and-dynamic.rb", "inspec.yml", "iam.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "CHANGELOG.md", "CONTRIBUTING.md", "LICENSE", "Makefile", "README.md", "int.cloudbuild.yaml", "lint.cloudbuild.yaml", "upgrading_to_iam_3.0.md", "upgrading_to_iam_4.0.md", "upgrading_to_iam_5.0.md", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "CLOUDSHELL_TUTORIAL.md", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "iam.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "main.tf", "outputs.tf", "variables.tf", "variables.tf", "versions.tf", "additive.rb", "inspec.yml", "authoritative.rb", "inspec.yml", "billing-iam.rb", "inspec.yml", "custom-role.rb", "inspec.yml", "inspec.yml", "bindings.rb", "roles.rb", "inspec.yml", "static-and-dynamic.rb", "inspec.yml", "iam.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "test-vpc-module-01", "CHANGELOG.md", "CODEOWNERS", "CONTRIBUTING.md", "Gemfile", "LICENSE", "Makefile", "README.md", "int.cloudbuild.yaml", "lint.cloudbuild.yaml", "README.md", "main.tf", "upgrading_to_v2.0.md", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.md", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "migrate.py", "main.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "outputs.tf", "test_output.tf", "variables.tf", "main.tf", "outputs.tf", "route.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "gcloud.rb", "inspec.yml", "gcloud.rb", "inspec.yml", "gcloud.rb", "inspec.yml", "gcloud.rb", "inspec_attributes.rb", "inspec.yml", "gcloud.rb", "gcp.rb", "inspec.yml", "gcp.rb", "inspec.yml", "gcloud.rb", "gcp.rb", "inspec_attributes.rb", "inspec.yml", "gcloud.rb", "inspec.yml", "gcloud.rb", "inspec_attributes.rb", "inspec.yml", "README.md", "iam.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "variables.tf", "versions.tf", "terraform-provider-google-beta_v3.89.0_x5", "terraform-provider-google_v3.89.0_x5", "variables.tf"]}]}, {"name": "https://github.com/cisco-apjc-cloud-se/fso-ob-helm.git", "commits": [{"id": "2339c21be89f1378fe49e3fef78ed310f024d134", "msg": "duplicate payment services, env to onprem", "date": "2022-04-08 17:28:51+10:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/desotech-it/test-engineering.git", "commits": [{"id": "2cd126ec9d323a0ba3787977d09e7dbd8c1f6218", "msg": "Co-authored-by: Gianluca Recchia <brainplot@users.noreply.github.com>\nCo-authored-by: StefanoSartiniEng <StefanoSartiniEng@users.noreply.github.com>\nCo-authored-by: erikruzzon <erikruzzon@users.noreply.github.com>\nCo-authored-by: lampayeah <lampayeah@users.noreply.github.com>\nCo-authored-by: RikyBit <RikyBit@users.noreply.github.com>\nCo-authored-by: alessandrion <alessandrion@users.noreply.github.com>", "date": "2021-03-11 10:19:17+01:00", "modified_files": ["ec2", "ec2.pub", ".terraform.lock.hcl", "main.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/jxeldotdev/todoapp-infrastructure.git", "commits": [{"id": "72b82b591111e1ceddb71b4017e2a102e7d4f1c3", "msg": "Added Billing alerts", "date": "2021-05-15 14:35:40+12:00", "modified_files": ["main.tf", "main.tf", "variables.tf", "outputs.tf", "main.tf", "variables.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/avinashbo/terraform-gcp.git", "commits": [{"id": "79614f055ba0251a79d6d7afd1e9a141fd1523ac", "msg": "Update variables.tf\n\nBilling account and organization Id added", "date": "2019-08-15 17:23:32+08:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/binbashar/le-tf-infra-aws.git", "commits": [{"id": "a873443bd618ac9c14d12210ed4d12a11cc1f733", "msg": "BBL-33 nat gateway disable in binbash-dev account for cost saving purposes", "date": "2019-05-15 21:14:38-03:00", "modified_files": ["network.tf"]}, {"id": "19c37f7e4e65d14e760f1ff8cf60cfd1e98c1a8b", "msg": "BBL-33 nat gateway disable in binbash-dev account for cost saving purposes", "date": "2019-05-15 21:14:38-03:00", "modified_files": ["network.tf", "id_rsa"]}, {"id": "bbfbd2484ace2819ffceac9155b995ab870ee3a3", "msg": "BBL-33 nat gateway disable in binbash-dev account for cost saving purposes", "date": "2019-05-15 21:14:38-03:00", "modified_files": ["network.tf"]}, {"id": "98bd682d9ca57d50dfc5c5384af513ac84517623", "msg": "BBL-33 root org cost-mgmt and sec resrouces in place.", "date": "2019-07-05 17:36:56-03:00", "modified_files": ["main.tf", "main.tf", "variables.tf", "Makefile", "config.tf", "variables.tf", "Makefile", "main.tf", "variables.tf", "Makefile", "awscloudtrail.tf", "config.tf", "locals.tf", "main.tf", "terraform.tfstate.1561068912.backup", "variables.tf"]}, {"id": "617f501204207731850c85e6249b67f6c7c27bea", "msg": "BBL-119 updating budget treshold to 75% + instanciating latest tf-aws-cost-budget module version", "date": "2019-10-21 20:13:16-03:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "40a657ec544eda2da4127a5d2f516e3713bf63dc", "msg": "BBL-146 updating makefiles + IAM roles and policies for cost controls - control access to regions or resource types.", "date": "2019-11-07 21:55:36-03:00", "modified_files": ["roles.tf", "roles_policies.tf", "Makefile", "Makefile", "groups_policies.tf", "roles.tf", "roles_policies.tf", "Makefile", "roles.tf", "roles_policies.tf", "Makefile", "variables.tf"]}, {"id": "2afa0c4652393014778f9b2fefcf975d6ca22ae2", "msg": "jenkins stack temporary destroyed to save costs", "date": "2019-11-14 23:51:48-03:00", "modified_files": [".hosts", "variables.tf", "variables.tf"]}, {"id": "5f42e209128e1c24df76826640e4c0e92e2174d4", "msg": "BBL-167 root-org/5_cost_mgmt layer renamed (NOT MIGRATED to TF-0.12 yet!!!)", "date": "2020-02-04 11:40:18-03:00", "modified_files": ["Makefile", "config.tf", "locals.tf", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "36291ef6bca1f12b2e57e52279f8cd594a566b26", "msg": "BBL-187 root-org/5_cost-mgmt and root-org/6_notifications layers updated (aws budget WIP)", "date": "2020-02-07 12:45:17-03:00", "modified_files": ["config.tf", "main.tf", "variables.tf", "policies.tf", "slack_bb_tools_monitoring.tf", "variables.tf"]}, {"id": "27deff19d99800f6512bbab6c59460eb2f6a53d1", "msg": "BBL-167 migrating root/cost-mgmt layer to tf 0.12 (WIP)", "date": "2020-07-08 11:18:54-03:00", "modified_files": ["Makefile", "Makefile", "main.tf", "variables.tf"]}, {"id": "590b47278d11b66372b5d84713cb748c7f752585", "msg": "BBL-167 root/cost-mgmt layer migrated to tf-0.12 + small fix to root/security/cloudtrail var", "date": "2020-07-10 11:19:59-03:00", "modified_files": ["config.tf", "locals.tf", "main.tf", "outputs.tf", "variables.tf", "awscloudtrail.tf"]}, {"id": "ae8ad39f7ebebc2b8315479befc9b2850647dacd", "msg": "BBL-453 | upgrading lambda cost optimization module versions + fix exec time considering GTM-3", "date": "2021-01-08 09:27:01-03:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "0208ae3bc238f029b1faf6bdc3552dbe6147657b", "msg": "Rename EKS 'vpc' layer as 'network' and fix an issue with nodes not b\u2026 (#175)\n\n* Rename EKS 'vpc' layer as 'network' and fix an issue with nodes not being able to join the cluster due to NACL rules blocking traffic between private subnets\r\n\r\n* Disable NATGW to save costs", "date": "2021-01-19 10:29:12-03:00", "modified_files": ["config.tf", "config.tf", "eks-workers-managed.tf", "Makefile", "config.tf", "dns_vpc_association.tf", "locals.tf", "network.tf", "outputs.tf", "variables.tf", "vpc_peering.tf", "config.tf"]}, {"id": "c00d24a1626e7d88a33431e4b403651acf158e05", "msg": "EKS updates (#177)\n\n* Rename EKS 'vpc' layer as 'network' and fix an issue with nodes not being able to join the cluster due to NACL rules blocking traffic between private subnets\r\n\r\n* Disable NATGW to save costs\r\n\r\n* Update EKS private subnets NACL to allow all traffic betwen them. Also fix the highest port number in another rule", "date": "2021-01-21 11:52:56-03:00", "modified_files": ["locals.tf"]}, {"id": "9022af53268aa1af9416088650c6a210a4a961d5", "msg": "Upgrade root/cost-mgmt to TF 0.14.11", "date": "2021-06-16 17:16:58-03:00", "modified_files": ["config.tf", "main.tf"]}, {"id": "403c553e44fea9d217082ad5c567856adba98c45", "msg": "* Update cost & billing source\n* Add SMS SNT topic arn", "date": "2021-10-25 01:15:40-03:00", "modified_files": ["main.tf"]}, {"id": "3cbcf97e011ab7d8099f79f7008e501953be406a", "msg": "Update terraform-aws-cost-billing-alarm module version", "date": "2021-10-26 01:14:21-03:00", "modified_files": ["main.tf"]}, {"id": "0662f7e1bfc70e21d8229e142b98b6c303addbc3", "msg": "Change to SNS topic for costs", "date": "2021-10-27 13:41:22-03:00", "modified_files": ["main.tf", "outputs.tf", "sms_tools_monitoring.tf", "variables.tf"]}, {"id": "67bb275f145435d253ee0adcc07763cc0eadf53a", "msg": "moving cost-management layer to global scope dir", "date": "2021-11-17 09:29:31-03:00", "modified_files": ["config.tf", "locals.tf", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "d93dbf41d89bb1c92fbb60646c64350d94a69292", "msg": "Access policy fixes for costs topic", "date": "2022-01-06 10:27:55-03:00", "modified_files": ["costs_tools_monitoring.tf"]}, {"id": "89fd3ebb3ba1ccc9a9019ad250b93a336d4bc03e", "msg": "Adding kms permissions for SNS encrypted topic + std cost-management alerts in proper topic", "date": "2022-04-19 13:04:46-03:00", "modified_files": [".terraform.lock.hcl", "config.tf", "costs_tools_monitoring.tf", "outputs.tf", "slack_tools_monitoring.tf", "slack_tools_monitoring_sec.tf", "config.tf", "kms.tf", "variables.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-azurerm-static.git", "commits": [{"id": "68352145288facc181208daaf8feeb9be140942a", "msg": "costs", "date": "2021-05-18 08:29:12+01:00", "modified_files": ["compare.yml", "master.yml", "pull_request.yml", "Makefile", "infracost-usage.yml", "outputs.tf", "terraform.tf", "outputs.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-azurerm-mssqlserver.git", "commits": [{"id": "a504229bb09f1f0e64300cc178d960f99b11a776", "msg": "costs", "date": "2021-05-18 08:22:49+01:00", "modified_files": ["compare.yml", "main.yml", "pull_request.yml", "Makefile", "infracost-usage.yml", "outputs.tf", "terraform.tf", "outputs.tf"]}]}, {"name": "https://github.com/shonansurvivors/my-infra.git", "commits": [{"id": "cc2f43db70bb64231d59d4be8054fa874e1d8658", "msg": "tfupdate terraform ./envs/master/cost", "date": "2022-01-10 05:57:34+00:00", "modified_files": ["version.tf"]}, {"id": "c07a838e5f80b618a056134eddfa3a20f9c93362", "msg": "Consider cost", "date": "2022-02-05 22:30:15+09:00", "modified_files": ["main.tf"]}, {"id": "31fb5b5a1274512d00c19f223cbbfd27533a6193", "msg": "Consider cost", "date": "2022-02-05 22:37:38+09:00", "modified_files": ["main.tf", "main.tf", "main.tf"]}]}, {"name": "https://github.com/indeni/cloudrail-sales-demo-account.git", "commits": [{"id": "c82a9c5540160e67e03a9ab7b33f60063e00597c", "msg": "Add terraform user and DC billing user", "date": "2021-06-03 13:36:05-07:00", "modified_files": ["iam.tf"]}]}, {"name": "https://github.com/PaloAltoNetworks/terraform-aws-vmseries-modules.git", "commits": [{"id": "1af5d07714182455cafd972556b507409f9559ae", "msg": "in app1_ec2 change the VM to bitnami ready-made nginx\n\nThe bitnami library offers a ready-made http/https server, which saves\ntime during testing. On the previous ubuntu image, the path to have\nhttps was unneccessarily bumpy:\n- the inbound ssh needed to work\n- the user needed ssh/putty locally\n- apt update\n- apt install ngnix\n- for these commands, the outbound also always needed to work, yet\nanother difficulty.\n\nAll these steps are not needed with a ready-made image.\n\nThe bitnami image is free of cost as well.\n\ncommit-id:b903e3ed", "date": "2021-11-17 14:36:16+01:00", "modified_files": ["README.md", "app1_spoke.tf", "outputs.tf"]}]}, {"name": "https://github.com/renovate-tests/hackstack-local.git", "commits": [{"id": "5e8b6f6b88db49a0508ea670d71070c92cfdbaca", "msg": "changed variable names and moved es inside vpc to prevent egress cost", "date": "2018-01-18 15:50:07+05:18", "modified_files": ["main.tf", "main.tf", "main.tf", "variables.tf", "variables.tf", "haystack-index-store-es-policy", "main.tf", "main.tf", "outputs.tf", "variables.tf", "variables.tf", "main.tf", "main.tf", "variables.tf", "variables.tf", "main.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "main.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/mads-hartmann/cloud.mads-hartmann.com.git", "commits": [{"id": "667f5715c19534bfe5b01ad692979447412fd033", "msg": "Make WAF optional. Disable on all sites due to cost", "date": "2021-07-03 08:55:25+00:00", "modified_files": ["README.md", "main.tf", "variables.tf", "main.tf", "outputs.tf"]}]}, {"name": "https://github.com/nops-io/nops-cloud-account-registration.git", "commits": [{"id": "6b210e6e93d5d2a4518c81c68fc2b9c2477d61b1", "msg": "update terraform module for multi-account consolidated billing setup\n\nSigned-off-by: Parth Vyas <parth@nclouds.com>", "date": "2022-05-04 16:24:50+05:18", "modified_files": [".talismanrc", "README.md", "child_consolidated_aws_acc_nops_register.yaml", "cloudformation_execution_role.yaml", "master_payer_consolidated_aws_acc_nops_register.yaml", "nops_register_aws_acc.yaml", "README.md", "example-vars.auto.tfvars", "main.tf", "variables.tf", "main.tf", "providers.tf", "setup-stacksets-permissions.tf", "variables.tf", "README.md", "data.tf", "example-vars.auto.tfvars", "main.tf", "variables.tf", "iam_role.tf", "locals.tf", "main.tf", "providers.tf", "variables.tf", "README.md"]}]}, {"name": "https://github.com/cloudposse/terraform-aws-tfstate-backend.git", "commits": [{"id": "fd2053af80ec2738ca75350541df37e8acb2c2d6", "msg": "Add possibility to set billing mode for DynamoDB tables (#30)\n\n* Add possibility to set billing mode for DynamoDB tables\r\n\r\n* Updated README.md\r\n\r\nCo-authored-by: Maxim Mironenko <simixido@gmail.com>\r\nCo-authored-by: actions-bot <58130806+actions-bot@users.noreply.github.com>", "date": "2020-02-19 03:21:42+01:00", "modified_files": ["README.md", "terraform.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/jaimebrolesi/terraform-modules.git", "commits": [{"id": "0f18e9c9549603a10c21304dd3ba7d80e0e7a18a", "msg": "added sqs and iam role used by pagseguro/payment-status-webhook", "date": "2020-11-22 13:54:04-03:00", "modified_files": ["main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "api-gateway-assume-role.json", "api-gateway-permission.json", "mapping-templates.vtl", "variables.tf"]}, {"id": "b11f9449fbd71ab737a806ba8c06252a200b65b8", "msg": "added iam_role_name variable for pagseguro-payment-status-webhook", "date": "2020-11-22 13:59:03-03:00", "modified_files": ["variables.tf"]}, {"id": "98ab5f2b4ad3554cb1cd0be611274822bb87fa5b", "msg": "fixed file read on pagseguro-payment-status-webhook", "date": "2020-11-22 14:19:24-03:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "b4ec0b8d998d943f23cb11987888d1d955ba6cf4", "msg": "adjusted outputs for payment-status-webhook", "date": "2020-11-22 14:23:23-03:00", "modified_files": ["outputs.tf"]}, {"id": "89bd33ba7f51d904aa6fcafea70c5eb014d583c2", "msg": "refactored file system of pagseguro-payment-status-webhook", "date": "2020-11-22 14:53:41-03:00", "modified_files": ["main.tf", "variables.tf", "main.tf"]}, {"id": "cc10e2456909314919bf28a7908973edbdd4825a", "msg": "added path module to payment-status-webhook", "date": "2020-11-22 15:10:50-03:00", "modified_files": ["main.tf"]}, {"id": "e3f6639d58dd2f20a17723841b2d267fd7b85365", "msg": "updated role and policy names for pagseguro-payment-status-webhook", "date": "2020-11-22 15:17:59-03:00", "modified_files": ["main.tf"]}, {"id": "bef14b255a0be8dd15bb12f6ce14dbaa88998c05", "msg": "updated role and policy names for pagseguro-payment-status-webhook", "date": "2020-11-22 15:22:53-03:00", "modified_files": ["main.tf"]}, {"id": "1293739465379fd395783de083b0085abcd13e80", "msg": "added api gateway to payment-status-webhook", "date": "2020-11-22 17:49:21-03:00", "modified_files": ["api-gateway.tf", "api_gateway_deploy.tf", "api_gateway_integration.tf", "api_gateway_response.tf", "outputs.tf", "mapping-templates.vtl", "variables.tf", "main.tf", "outputs.tf", "api-gateway-assume-role.json", "api-gateway-permission.json", "variables.tf"]}, {"id": "ceace861bd84f8b5f053c3a0594f23a9dd22a5bc", "msg": "adjusted api-gateway module path for pagseguro-payment-status-webhook", "date": "2020-11-22 17:51:35-03:00", "modified_files": ["main.tf"]}, {"id": "7f40b0e108630c780e59c2c9ba208332b829a323", "msg": "adjusted api-gateway module variable for pagseguro-payment-status-webhook", "date": "2020-11-22 18:01:05-03:00", "modified_files": ["api_gateway_integration.tf"]}, {"id": "10fd370289699a9e4e6e65c9950ec411cc96fa14", "msg": "added environment variable for pagseguro-payment-status-webhook", "date": "2020-11-22 18:06:33-03:00", "modified_files": ["variables.tf", "main.tf", "variables.tf"]}, {"id": "54dea7e0a3cb2b562cd1b99c3c048f33f2c30186", "msg": "added depends_on of integration to response for pagseguro-payment-status-webhook", "date": "2020-11-22 18:29:50-03:00", "modified_files": ["api_gateway_response.tf", "main.tf"]}, {"id": "340327d24d7f8f8f16aa93964f87c68f50f0befd", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 18:54:24-03:00", "modified_files": ["api_gateway_deploy.tf", "api_gateway_integration.tf", "api_gateway_response.tf"]}, {"id": "aa5b2a5a76419c44eb88a43b62472f857dae4936", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 18:59:58-03:00", "modified_files": ["main.tf", "api_gateway_deploy.tf", "api_gateway_integration.tf", "main.tf"]}, {"id": "34df957545a7be5e5caef7e5b2dd204f0e3a6bd9", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 19:04:36-03:00", "modified_files": ["api_gateway_response.tf"]}, {"id": "02bf24c44c8eb7eb8554a09db098773b6e9cb6da", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 19:16:30-03:00", "modified_files": ["api_gateway_deploy.tf", "api_gateway_response.tf", "main.tf"]}, {"id": "14821e267b47bae2e25418be9e089f782a9caffa", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 19:25:20-03:00", "modified_files": ["api_gateway_integration.tf", "api_gateway_response.tf"]}, {"id": "5dd5fdb47743e3b34fcad13cab84ceadfea4512f", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 19:32:59-03:00", "modified_files": ["api_gateway_response.tf"]}, {"id": "3156697ffb33440265901ed40d48c17e05ca8e6a", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 19:49:54-03:00", "modified_files": ["api_gateway_deploy.tf"]}, {"id": "e7bdcab7d8e7afeca61be82c86a6aa2888c717f6", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 20:37:52-03:00", "modified_files": ["api_gateway_response.tf"]}, {"id": "d3a84daa9cf3407c7e4b18f48ebd55b488f1ea8b", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 21:23:19-03:00", "modified_files": ["api_gateway_response.tf", "variables.tf"]}, {"id": "4aa0e3d1d653eabb070ce36868f3554891adf3bd", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 21:27:06-03:00", "modified_files": ["api_gateway_deploy.tf"]}, {"id": "e488cdd9b371ef75335fd0b650b58b457fd3d3ea", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 21:30:25-03:00", "modified_files": ["api_gateway_deploy.tf", "api_gateway_response.tf"]}, {"id": "024ab099582f97a8e14e11a7d0abfcccba33bda2", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 21:30:50-03:00", "modified_files": ["api_gateway_deploy.tf"]}, {"id": "4cb1fe8a3fb8956d974913cb9062a4a9080d6312", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 21:31:57-03:00", "modified_files": ["api_gateway_deploy.tf"]}, {"id": "9871d2f339d4bdc3eeb391ae78f6a33944c067b1", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 21:37:51-03:00", "modified_files": ["api_gateway_deploy.tf"]}, {"id": "2b4f14d02a6e3f56d4e73071f87dd46f572c21b4", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 21:42:43-03:00", "modified_files": ["api_gateway_deploy.tf"]}, {"id": "abd0f43cd91f3be1ad4240c23191ca0e2c45db8e", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 21:51:30-03:00", "modified_files": ["api_gateway_response.tf"]}, {"id": "0e57d56a1896502eb28bcb17ae2f766c773a8582", "msg": "fixed depends_on strategy used by pagseguro-payment-status-webhook", "date": "2020-11-22 22:01:27-03:00", "modified_files": ["api_gateway_deploy.tf", "variables.tf"]}]}, {"name": "https://github.com/Ecklebe/IaC-Templates.git", "commits": [{"id": "aeab4d039020c0d63209d7f800f9c34fae4060e6", "msg": "adapt aks creation, reduce the costs", "date": "2022-04-09 14:28:44+02:00", "modified_files": [".gitignore", "01-backend.tf", "02-cluster.tf", "main.tf", "output.tf", "variables.tf", "readme.md", "readme.md", "terraform.tfvars.tmp"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-azurerm-mariadb.git", "commits": [{"id": "2b30952f26e8a8e66fe8b6eddf9c4657e0d074d4", "msg": "costs", "date": "2021-05-18 08:20:04+01:00", "modified_files": ["CODEOWNERS", "compare.yml", "main.yml", "pull_request.yml", "Makefile", "infracost-usage.yml", "outputs.tf", "terraform.tf", "outputs.tf"]}]}, {"name": "https://github.com/terraform-google-modules/terraform-google-lb.git", "commits": [{"id": "f640695cd972cb3ba496582c88acc136b13fdf0c", "msg": "feat: Add list variable to override source_ips for LB (#26)\n\n* Use list variable to set source_ips for LB\r\n\r\nInstead of hardcoding source_ip ranges into the to module, make use of\r\nvariable.\r\n\r\nCreate a new variable with name `allowed_ips` with the default set to\r\n`[0.0.0.0/0]`.  This change allows the user to restrict access to\r\nexternal load balancer from only from a small set of ip addresses.\r\n\r\n* Add strict type constraint on allowed_ips var\r\n\r\nRestrict `allowed_ips` values to list of strings.\r\n\r\nCo-authored-by: Amit Kulkarni <amitk@wepay.com>\r\nCo-authored-by: Morgante Pell <morgantep@google.com>", "date": "2020-04-06 21:46:34-07:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/tylerhatton/f5-warm-pool-demo.git", "commits": [{"id": "aaac234d479338826c71a817e88aa420621eb218", "msg": "completed as3 polling step and added as3 bucket for as3 payloads", "date": "2021-05-08 22:36:46-05:00", "modified_files": ["main.json", "app.py", "main.tf"]}, {"id": "e72ffe865b8177550f862e6729333b9057757d82", "msg": "fixed a bug where bigiq secrets were being required for payg", "date": "2021-07-14 21:17:15-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/vivek525/proj-factory.git", "commits": [{"id": "39891d950433a683da2c75b4187728f9af1c5441", "msg": "Fix typo, rename billing acount and services variables", "date": "2019-05-15 08:19:09+02:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}, {"id": "6c93392a5ff6bc45a36eba689d44980ce5f0baf8", "msg": "Grant billing user permission during testing", "date": "2019-11-19 00:37:17+00:00", "modified_files": ["iam.tf"]}, {"id": "1b4954a704fc03d5109b5615f7cfef824ff7211a", "msg": "enable google billing budget apis in parent project", "date": "2020-01-06 16:22:29-08:00", "modified_files": ["main.tf"]}, {"id": "f580cae362e7bd01e9b52ff6fb329c19ccebc3da", "msg": "give test user billing admin to billing account to create budgets", "date": "2020-01-07 14:00:42-08:00", "modified_files": ["iam.tf"]}, {"id": "bc9891a7b6f3b576ca7cf7ddeb23022efa000a4c", "msg": "enable pubsub for setup project for billing test", "date": "2020-01-08 12:51:10-08:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/chris-qa-org/terraform-aws-organzation-and-sso.git", "commits": [{"id": "1ad18ba36208089e512395d3053f6995dc5a1160", "msg": "Add `iam_user_access_to_billing` parameter\n\n* Allows this to be set to either `ALLOW` or `DENY`\n* Must be set to `NULL` if the account is terraform imported", "date": "2022-02-16 22:29:36+00:00", "modified_files": ["README.md", "org.tf"]}]}, {"name": "https://github.com/lukwam/terraform-gcp-organization.git", "commits": [{"id": "bc1f9a3e752e1faae5acc06104c3d0d1f92da8f2", "msg": "Added billing module.", "date": "2021-09-18 03:48:59+00:00", "modified_files": ["main.tf", "variables.tf", "main.tf", "essential_contacts.tf", "folders.tf", "iam_policy.tf", "terraform.tfvars.example", "variables.tf"]}]}, {"name": "https://github.com/monish-advani/terragoat-test.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/kiwicom/terraform-google-cloudfunctions.git", "commits": [{"id": "79e010787a1ebce1b57e88389ab6538b67f1e659", "msg": "add retry_config, pubsub_target attributes and payload data", "date": "2020-08-21 17:10:35+02:00", "modified_files": ["schedulers.tf", "variables.tf"]}, {"id": "55665c7c2129354718574f4ca0c155e67f02ec5c", "msg": "change schedule_payload default value", "date": "2020-08-26 10:22:23+02:00", "modified_files": ["variables.tf"]}, {"id": "b8b8cdac5f5c46f91d9f12660df8257242684d6f", "msg": "feat(billing): add billing support (#5)\n\n* feat(billing): add billing support\r\n\r\n* feat(billing): add billing support\r\n\r\nCo-authored-by: Petar Sekul <petar.sekul@kiwi.com>", "date": "2021-11-25 13:36:36+01:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/whyn07m3/terraform-examples.git", "commits": [{"id": "7edc348c186c8578be7639958bfcd38fd9150a56", "msg": "adds cloudwatch billing alarm", "date": "2021-04-13 22:12:29-04:00", "modified_files": ["README.md", "aws.tf", "README.md", "cloudwatch_alarms.tf", "cloudwatch_alarm.png", "email_alarm.png", "email_sub_confirm.png", "sub.png", "sub_confirm.png", "topic.png"]}]}, {"name": "https://github.com/bharathkkb/tf-pf.git", "commits": [{"id": "39891d950433a683da2c75b4187728f9af1c5441", "msg": "Fix typo, rename billing acount and services variables", "date": "2019-05-15 08:19:09+02:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}, {"id": "6c93392a5ff6bc45a36eba689d44980ce5f0baf8", "msg": "Grant billing user permission during testing", "date": "2019-11-19 00:37:17+00:00", "modified_files": ["iam.tf"]}, {"id": "1b4954a704fc03d5109b5615f7cfef824ff7211a", "msg": "enable google billing budget apis in parent project", "date": "2020-01-06 16:22:29-08:00", "modified_files": ["main.tf"]}, {"id": "f580cae362e7bd01e9b52ff6fb329c19ccebc3da", "msg": "give test user billing admin to billing account to create budgets", "date": "2020-01-07 14:00:42-08:00", "modified_files": ["iam.tf"]}, {"id": "bc9891a7b6f3b576ca7cf7ddeb23022efa000a4c", "msg": "enable pubsub for setup project for billing test", "date": "2020-01-08 12:51:10-08:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/elliotpryde/personal-infrastructure.git", "commits": [{"id": "772c5ad20818738b09d01cd70ca3de80cbf66dcb", "msg": "Disable a few of the health checks to reduce costs", "date": "2020-08-06 18:55:06+01:00", "modified_files": ["variables.tf"]}, {"id": "7c4205cd130c5463d7f39aa6f281e198c143d0d9", "msg": "reduce number of health checks to save on costs", "date": "2021-05-20 20:18:27+01:00", "modified_files": ["health-check.tf", "variables.tf", "main.tf", "outputs.tf"]}]}, {"name": "https://github.com/DNXLabs/terraform-aws-idp-gsuite.git", "commits": [{"id": "121dd8e6044ecf2b6a47b0ad635c7d4bff4fcb39", "msg": "Adding billing role", "date": "2019-08-20 18:41:07+10:00", "modified_files": ["iam-role-billing.tf"]}]}, {"name": "https://github.com/fpco/terraform-aws-foundation.git", "commits": [{"id": "9890655f63c043243b0ad3ec89d9fbea0633e308", "msg": "setup-meta-infrastructure/iam: allow admin to access billing and support consoles", "date": "2016-11-23 06:09:07-08:00", "modified_files": ["iam.tf"]}, {"id": "cfe92035f1b281cddfcf62664ec6b96e85e0ac32", "msg": "improved persistent-ebs-volumes module, made encryption optional. lowered default instance types for ELK stack to reduce dev/test costs", "date": "2017-01-25 23:24:58+03:00", "modified_files": ["data-nodes.tf", "setup.tpl.sh", "master-nodes.tf", "variables.tf", "variables.tf", "variables.tf", "main.tf", "variables.tf", "variables.tf", "iam.tf", "main.tf", "outputs.tf", "snippet.tpl.sh", "main.tf", "run-tests-ci.sh", "variables.tf"]}, {"id": "32bf6ab2e54e98d020060d0c9eb91d145d3a7b31", "msg": "Remove deprecated modules and examples.\n\nBy the time upgrading to support terraform 0.12.*, we do not want to pay\nattention on deprecated things. So drop them.\n\nRemove module **vpc-legacy**. Remove example **legacy**.", "date": "2019-06-21 20:37:24+08:00", "modified_files": ["elasticache.tf", "main.tf", "management-cluster.tf", "outputs.tf", "providers.tf", "init-leaders.tpl", "run-tests-ci.sh", "terraform.tfvars", "variables.tf", "README.md", "main.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/aiidalab/aiidalab-k8s.git", "commits": [{"id": "65e44242c0b5f27d64ff714e5a8eed71ca02ab26", "msg": "AWS: Update versions and fix issues (#6)\n\n* Update versions and fix issues\r\n\r\n* Remove adminuser in config\r\n\r\n* Update the \"tested with\" versions in README.\r\n\r\n* Update terraform lock file.\r\n\r\n* Set default region to Stockholm (should be cheaper than Ireland).\r\n\r\n* Adjust autoscaler parameters.\r\n\r\n* Update bot policy.\r\n\r\n* Replace t3a.medium with t3.medium for the core instance.\r\n\r\n* Update autoscaler policy and role name.\r\n\r\nCo-authored-by: Simon Adorf <simon.adorf@epfl.ch>", "date": "2021-06-28 16:44:35+02:00", "modified_files": ["config-template.yaml", "README.md", "iam.tf", ".terraform.lock.hcl", "aiidalab-cluster.tfvars", "autoscaler.tf", "efs.tf", "main.tf", "versions.tf"]}]}, {"name": "https://github.com/robgmills/jumpbox.git", "commits": [{"id": "028bbe114d099b0388be9a46adcab80d9383a518", "msg": "Add an AWS Budget for this service\n\nKeep costs under close supervision with an AWS Budget and notification.\nThe budgeted amount was based on the [ngrok.io pricing for the _Pro_\ntier](https://ngrok.com/pricing) since that's most comparable in terms\nof final features.\n\nFilters costs based on a customr _Service_ resource tag and sends an\nalert at 80% of forecasted monthly budget.", "date": "2020-03-29 12:04:12-05:00", "modified_files": ["README.md", "main.tf"]}]}, {"name": "https://github.com/tale-toul/Harbor.git", "commits": [{"id": "804ab045e330d3b669282e55c5bcc4660ebffea8", "msg": "Delete ebs root volumes on instance termination\n\nNow the root ebs disks attached to the EC2 instances are deleted when\nthe instances are terminated.  Before they were kept as available\nincreasing the billl of AWS.", "date": "2018-10-20 19:37:27+02:00", "modified_files": ["ec2.tf", "Readme.md"]}]}, {"name": "https://github.com/keymon/aws_iam_multiaccount.git", "commits": [{"id": "f18f0f1c3457e0e12a111403450a297896110da5", "msg": "Configure root account with assume roles\n\nConfigure the root account with:\n - Alias\n - Roles to be assumed by normal users: admin, dev and billing.\n - Policy to allow the interactive users to self-manage their credentials.", "date": "2017-08-19 19:01:19+01:00", "modified_files": ["iam_groups.tf", "main.tf", "policies.tf", "provider.tf", "roles.tf", "variables.tf", "main.tf", "variables.tf"]}, {"id": "8d79a61b4c607ab9e8f9b8036eebc540dad80bcf", "msg": "Allow the billing role to see billing stuff\n\nWe forgot the most obvious policy :)", "date": "2017-09-30 17:56:44+01:00", "modified_files": ["roles.tf"]}]}, {"name": "https://github.com/gas-buddy/marketing-infrastructure.git", "commits": [{"id": "ef29d523b87b63c0b0929c84fc5a67876fd23d16", "msg": "change Billing tag.", "date": "2015-07-08 16:38:53-07:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/alphagov/paas-alpha-tsuru-terraform.git", "commits": [{"id": "6085ce34a95fbc4a8d651a3f6a0405811952af93", "msg": "aws: Remove router-int load balancer\n\nThis was used by Ansible on AWS to configure the Nginx sslproxy machines to\nreverse-proxy to the routers. The hostname was referenced in the variable\n`hipache_host_internal_lb`. We no longer need this since moving Nginx to the\nsame machines as the router.\n\nAlthough we might want to revisit this again later when we test one\napplication talking to another application through the router - which we\nwouldn't want to pay external traffic for.", "date": "2015-06-05 10:07:42+01:00", "modified_files": ["dns-records.tf", "routers.tf"]}]}, {"name": "https://github.com/KiaraGrouwstra/sentia-data-engineering-assignment.git", "commits": [{"id": "7e5c997c23683a707aa384b6a07801210b1839b8", "msg": "monitor costs", "date": "2021-03-01 20:52:40+01:00", "modified_files": ["cost.tf"]}]}, {"name": "https://github.com/lukdeboss/aws_tf.git", "commits": [{"id": "e0762b925eb9fdfabe53addd045c1c57aa1e1a67", "msg": "vi 15-cost-report.tf", "date": "2019-06-23 10:24:40+00:00", "modified_files": ["20-create-vpc.tf", "Jenkinsfile"]}, {"id": "e3a9c3622ce0257ac5971ec52d81d9754e3e0555", "msg": "costam", "date": "2019-06-23 13:55:32+01:00", "modified_files": ["20-create-vpc.tf"]}]}, {"name": "https://github.com/AdrianNeatu/blog-terraform.git", "commits": [{"id": "3ba302c69eb2a491a5b23e94084b4ddd24a4a703", "msg": "billing alert", "date": "2018-02-11 20:25:37+02:00", "modified_files": ["cloudwatch-billing.tf", "terraform.tfstate", "terraform.tfstate.backup"]}, {"id": "12cf2cb526ed6b2d12106894ca735cf81ba432ff", "msg": "billing alert", "date": "2018-02-12 06:24:54+02:00", "modified_files": [".gitignore", "cloudwatch-billing.tf", "terraform.tfstate", "terraform.tfstate.backup"]}]}, {"name": "https://github.com/jenkins-x/terraform-aws-eks-jx.git", "commits": [{"id": "cce6b14692fccd30c027851607a9526151d4c3d2", "msg": "using on-demand as default billing for dynamodb\n\nadding info on dynamodb\n\nfixing copy error", "date": "2020-06-12 13:06:52+08:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "ffbfb2cf241fd141894e6b27b0af397eab5efe21", "msg": "fix: External secrets from vault (#297)\n\nThis should fix that secrets failed to be populated from vault by kubernetes-external-secrets. The log of kubernetes-external-secrets showed errors like:\r\n{\"level\":50,\"time\":1630943166224,\"pid\":17,\"hostname\":\"kubernetes-external-secrets-7686994b8c-ldrwh\",\"payload\":{\"response\":{\"statusCode\":400,\"body\":{\"errors\":[\"invalid role name \\\"jx-vault\\\"\"]}}},\"msg\":\"failure while polling the secret jx/lighthouse-hmac-token\"}", "date": "2021-09-07 16:01:56+02:00", "modified_files": ["charts.tf"]}]}, {"name": "https://github.com/CodeForPoznan/Infrastructure.git", "commits": [{"id": "2709680d633653ca9bd68a023981a75427daaa7a", "msg": "convert bastion to NAT GW, change type to cheapest one avaiable", "date": "2021-08-14 19:16:22+02:00", "modified_files": ["bastion.tf", "networking.tf"]}]}, {"name": "https://github.com/5toCode/terragoat-test.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/bridgecrewio/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/Civil-Service-Human-Resources/lpg-terraform-paas.git", "commits": [{"id": "59477d3dc237e72252bde005b783213b7e8ed961", "msg": "WebApp SKU updates. Now defaults to Basic B1 for all except Prod env\n\nWhy:\n* Costs\n\nThis change addresses the need by:\n* Going to basic app plans for dev/demo/test\n\nChanges made:\n* Updated modules & envs to utilise new webapp SKUs", "date": "2018-07-04 15:29:07+01:00", "modified_files": ["main.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "vars.tf"]}, {"id": "882d42c483c64d1f6e5a6f4627f218c8ecf9f91a", "msg": "payment options and call off POs", "date": "2018-07-11 09:36:50+01:00", "modified_files": ["vars.tf"]}]}, {"name": "https://github.com/mhemeryck/iac.git", "commits": [{"id": "9ec3047d95969e8d2b729e6545672c3084ea846d", "msg": "hcloud hetzner setup\n\nThey are much cheaper and you get much more RAM. Multicloud ftw.", "date": "2020-08-11 22:47:01+02:00", "modified_files": ["README.md", "main.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/elastic/kibana-buildkite.git", "commits": [{"id": "a0b86b729325ed2bd9ec2d310e2c8b8b2b08f579", "msg": "Run purge cloud deployments hourly (#17)\n\nThis pipeline currently runs in a minute, once per day.\r\nRunning this more frequently will save costs by spinning\r\ndown cloud deployments quicker.", "date": "2022-02-23 15:03:36-06:00", "modified_files": ["kibana-purge-cloud-deployments.tf"]}]}, {"name": "https://github.com/madsstorm/terraform-commercetools-azure-sample.git", "commits": [{"id": "4761ab1277b2cf84ad6f14174bd36f44751df5db", "msg": "CostPrice", "date": "2021-04-26 11:27:12+02:00", "modified_files": ["product-types.tf"]}, {"id": "67045eb1f045ce1e00f8faac847d9eb32d5c830f", "msg": "costprice", "date": "2021-04-26 12:26:15+02:00", "modified_files": ["product-types.tf"]}, {"id": "ee05ea32d6a2279246f0997a47da56f35fa08cdf", "msg": "Costprice", "date": "2021-04-27 11:52:31+02:00", "modified_files": ["product-types.tf"]}]}, {"name": "https://github.com/trbaks/terraform-cicd.git", "commits": [{"id": "c16481a84d5823b65ce96bd811a265222385b43b", "msg": "Reduced preset variables for better cost optimization", "date": "2020-01-22 21:45:52-05:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/ibm-cloud-architecture/iks_vpc_lab.git", "commits": [{"id": "629819ce0c440760be155874cb42ab497f0304bd", "msg": "change cluster flavor\n\nto save cost for long running architecture infra", "date": "2020-05-13 18:28:30+08:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/opszero/terraform-aws-kubespot.git", "commits": [{"id": "ac39d3b9140e90bfd4b9eaa01200385bf10cc15d", "msg": "Egress Only Internet Gatway (#97)\n\nReduce the cost of not running a NAT.\r\nLimits are you can only access IPv6 Endpoints.", "date": "2020-04-16 16:59:36-07:00", "modified_files": ["inputs.tf", "private_subnet.tf", "vpc.tf"]}, {"id": "decc9706133af9978ada6cf58a1a63343468e8a0", "msg": "Simplification and Cost Effectiveness (#100)\n\n* Removed EIP from bastion and vpn\r\n\r\n* Renamed some tags\r\n\r\n* Added configuration\r\n\r\n* Remove the custom bastion\r\n\r\n* Move things into public subnet\r\n\r\n* Added public ip for public subnet\r\n\r\n* Remove node ssh\r\n\r\n* Added performace\r\n\r\n* Disable\r\n\r\n* Added OSSEC to bastion\r\n\r\n* Added bastion\r\n\r\n* Install foxpass\r\n\r\n* added bastion\r\n\r\n* Removed Packer Dependency\r\n\r\n* Added documentation\r\n\r\n* Fix the README", "date": "2020-04-17 15:57:22-07:00", "modified_files": ["README.md", "ami.tf", "bastion.tf", "inputs.tf", "main.tf", "cloudwatch.sh", "logdna.sh", "image.json", "performance.conf", "preloaded-vars.conf", "private_subnet.tf", "public_subnet.tf", "vpc.tf", "vpn.tf"]}]}, {"name": "https://github.com/arodd/musical-spork-public.git", "commits": [{"id": "24c07bfd5c31438fff6374e9ba3d577e6402d777", "msg": "f-centos-7 - Support for cheaper CentOS 7/t3 instances, visibility fixes (#23)\n\n* Adding support for CentOS 7(cheaper), moved to t3 instances(cheaper) for non t2.micro(free-tier), hostnaming/display name visibility improvements\r\n\r\n* Fixing ami name change typo, fixing docker consul dns configuration", "date": "2018-10-05 09:57:04-05:00", "modified_files": ["README.md", "packer.json", "centos-7.sh", "el7.sh", "rhel.sh", "setup.sh", "main.tf", "variables.tf", "main.tf", "variables.tf", "init-client.tpl", "main.tf", "variables.tf", "init-cluster.tpl", "variables.tf", "main.tf", "database.tpl", "main.tf", "variables.tf", "terraform.tfvars.example", "variables.tf"]}]}, {"name": "https://github.com/mleone10/rss-reader.git", "commits": [{"id": "53a86a24323778ed57c362a6bf443e5b419eb592", "msg": "Specify provisioned dynamo billing", "date": "2021-09-12 01:12:50-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/sandeshdahake/udacity-aws-cloud-architect-nanodegree.git", "commits": [{"id": "2e8c63372560abc286169b513820900b15a25b73", "msg": "added costing and arch diagrams", "date": "2020-12-16 03:39:38+01:00", "modified_files": ["README.md", "backend.tf", "Increased_Cost Estimate.csv", "Increased_Cost_Estimate_rationale.pdf", "Initial_Cost_Estimate.csv", "Reduced_Cost_Estimate.csv", "Reduced_Cost_Estimate_ rationale.pdf", "Udacity_Diagram_1.pdf", "Udacity_Diagram_2.pdf"]}]}, {"name": "https://github.com/angry-tony/typhoon-k8s.git", "commits": [{"id": "6c5a1964aadbb3d23a1c6c6b99cf8c44b763b21f", "msg": "Change kube-apiserver port from 443 to 6443\n\n* Adjust firewall rules, security groups, cloud load balancers,\nand generated kubeconfig's\n* Facilitates some future simplifications and cost reductions\n* Bare-Metal users who exposed kube-apiserver on a WAN via their\nrouter or load balancer will need to adjust its configuration.\nThis is uncommon, most apiserver are on LAN and/or behind VPN\nso no routing infrastructure is configured with the port number", "date": "2018-06-18 21:57:58-07:00", "modified_files": ["CHANGES.md", "apiserver.tf", "bootkube.tf", "security.tf", "bootkube.tf", "security.tf", "bootkube.tf", "bootkube.tf", "bootkube.tf", "network.tf", "bootkube.tf", "network.tf", "ingress.md", "bootkube.tf", "bootkube.tf"]}, {"id": "316f06df06a8c7660020babc5df96d1dea468f13", "msg": "Combine NLBs to use one NLB per cluster\n\n* Simplify clusters to come with a single NLB\n* Listen for apiserver traffic on port 6443 and forward\nto controllers (with healthy apiserver)\n* Listen for ingress traffic on ports 80/443 and forward\nto workers (with healthy ingress controller)\n* Reduce cost of default clusters by 1 NLB ($18.14/month)\n* Keep using CNAME records to the `ingress_dns_name` NLB and\nthe nginx-ingress addon for Ingress (up to a few million RPS)\n* Users with heavy traffic (many million RPS) can create their\nown separate NLB(s) for Ingress and use the new output worker\ntarget groups\n* Fix issue where additional worker pools come with an\nextraneous network load balancer", "date": "2018-06-18 22:56:32-07:00", "modified_files": ["CHANGES.md", "nlb.tf", "outputs.tf", "ingress.tf", "outputs.tf", "nlb.tf", "outputs.tf", "ingress.tf", "outputs.tf"]}, {"id": "0c4d59db87b67d7c7a0a0f54677961a01ed8fbe4", "msg": "Use global HTTP/TCP proxy load balancing for Ingress on GCP\n\n* Switch Ingress from regional network load balancers to global\nHTTP/TCP Proxy load balancing\n* Reduce cost by ~$19/month per cluster. Google bills the first 5\nglobal and regional forwarding rules separately. Typhoon clusters now\nuse 3 global and 0 regional forwarding rules.\n* Worker pools no longer include an extraneous load balancer. Remove\nworker module's `ingress_static_ip` output.\n* Add `ingress_static_ipv4` output variable\n* Add `worker_instance_group` output to allow custom global load\nbalancing\n* Deprecate `controllers_ipv4_public` module output\n* Deprecate `ingress_static_ip` module output. Use `ingress_static_ipv4`", "date": "2018-05-06 23:21:53-07:00", "modified_files": ["CHANGES.md", "ingress.tf", "network.tf", "outputs.tf", "ingress.tf", "outputs.tf", "workers.tf", "ingress.tf", "network.tf", "outputs.tf", "ingress.tf", "outputs.tf", "workers.tf"]}, {"id": "f2f4deb8bb44988eeb0b64b919e51fb556aef4fb", "msg": "Change AWS default type from t2.small to t3.small\n\n* T3 is the next generation general purpose burstable\ninstance type. Compared with t2.small, the t3.small is\ncheaper, has 2 vCPU (instead of 1) and provides 5 Gbps\nof pod-to-pod bandwidth (instead of 1 Gbps)", "date": "2018-12-18 12:29:27-08:00", "modified_files": ["CHANGES.md", "variables.tf", "variables.tf", "aws.md", "aws.md", "performance.md"]}, {"id": "aaa8e0261a01a62fa4a343788b3df20b9e93ee38", "msg": "Add Google Cloud worker instances to a target pool\n\n* Background: A managed instance group of workers is used in backend\nservices for global load balancing (HTTP/HTTPS Ingress) and output\nfor custom global load balancing use cases\n* Add worker instances to a target pool load balancing TCP/UDP\napplications (NodePort or proxied). Output as `worker_target_pool`\n* Health check for workers with a healthy Ingress controller. Forward\nrules (regional) to target pools don't support different external and\ninternal ports so choosing nodes with Ingress allows proxying as a\nworkaround\n* A target pool is a logical grouping only. It doesn't add costs to\nclusters or worker pools", "date": "2019-03-30 15:12:55-07:00", "modified_files": ["CHANGES.md", "network.tf", "outputs.tf", "outputs.tf", "target_pool.tf", "workers.tf"]}]}, {"name": "https://github.com/langri-sha/langri-sha.com.git", "commits": [{"id": "bc8a975e97735bc5201bb2c23fcc703944756d5e", "msg": "feat(terraform): Add billing admin members", "date": "2021-03-14 21:18:50+00:00", "modified_files": ["docker-compose.yml", "org.tf", "variables.tf"]}, {"id": "4f4e804a83b19e78aee165bc4f51abeb179ef56d", "msg": "feat(terraform): Bind billing admin roles\n\nAdds billing admins and assigns roles to create billing accounts.", "date": "2021-03-14 21:27:36+00:00", "modified_files": ["org.tf"]}, {"id": "3d862ff2089a1b4e553a4860548a915f05d63ee1", "msg": "feat(terraform): Add billing module\n\nAdds module for providing providing the default billing account.", "date": "2021-03-20 22:34:29+00:00", "modified_files": ["docker-compose.yml", "main.tf", "main.tf", "outputs.tf", "variables.tf", "variables.tf"]}, {"id": "f4e7ce483c966f7179371d9ea8e6ecbb1b40a46f", "msg": "fix(terraform): Correctly export billing account name\n\nInstead of exporting an object, export the discrete billing account\nname.", "date": "2021-03-25 16:06:19+00:00", "modified_files": ["outputs.tf"]}, {"id": "57b79d5330713250e90ba1ce0bec2d750fdfad00", "msg": "feat(terraform): Add billing_account to root module outputs\n\nAdds billing account to root module outputs, so it can be read from\nremote state in other configurations.", "date": "2021-03-25 16:14:44+00:00", "modified_files": ["outputs.tf"]}, {"id": "dd70ab465158306ab7af3a5ec68799343a14fe26", "msg": "fix(terraform/billing): Output billing account ID\n\nOutput billing account ID, in favor of name. For interop with other TF\nmodules.", "date": "2021-03-26 07:16:51+00:00", "modified_files": ["outputs.tf"]}, {"id": "8028f9a540a5c4e2e90eafa1868ff812f2c0b5a8", "msg": "feat(terraform/org): Output org_billing_admins\n\nAdd admins, billing admins to org outputs.", "date": "2021-03-28 21:05:02+00:00", "modified_files": ["outputs.tf", "outputs.tf"]}, {"id": "36b9c74312928602f4b734a370ccb8c714025836", "msg": "feat(terraform/workspace): Grant TF SA billing user acces", "date": "2021-04-03 22:15:08+00:00", "modified_files": ["main.tf"]}, {"id": "fd1a44bc3fa100a8535b997cfdbcbfe45995cfef", "msg": "feat(terraform/workspace): Enable Cloud Billing API", "date": "2021-04-03 22:07:38+00:00", "modified_files": ["main.tf"]}, {"id": "8203a93c2f0b07437639d25a885ffb86bd7c188c", "msg": "feat(terraform/workspace): Grant SA Billing Project Manager role", "date": "2021-04-17 08:55:49+00:00", "modified_files": ["main.tf"]}, {"id": "e6d62079288f517bc5888891c259cea1ec3293b3", "msg": "feat(org): Squash billing account module\n\nSquash billing account into org module.", "date": "2021-05-02 22:06:57+00:00", "modified_files": ["main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf"]}, {"id": "59a226318394b4e4edc242b239c10ff6237817f9", "msg": "feat(terraform/org): Grant org TF SA billing account user permission", "date": "2021-05-03 22:33:49+00:00", "modified_files": ["main.tf"]}, {"id": "ee25cee8e5c564f2a27a5e21d2bb7af329219fa6", "msg": "fix(web): Disable requester pays\n\nDisables requester pays for backend buckets.", "date": "2021-07-11 08:34:44+00:00", "modified_files": ["storages.tf"]}]}, {"name": "https://github.com/CHTF1/terraform.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/105636046/Kubernetes.git", "commits": [{"id": "c82a19d98673c1aeeb1fa26afb983acbfbea272f", "msg": "Add ec2 cost optimination using tags", "date": "2018-10-31 11:55:59+05:18", "modified_files": ["lambda.js", "main.tf", "variables.tf"]}, {"id": "5f0c515e6b145f244be7ef2492d9a700de5743e8", "msg": "Refactored ec2-cost-optimization-using-tags lambda", "date": "2018-11-16 18:56:15+05:18", "modified_files": ["lambda.js", "main.tf", "variables.tf"]}, {"id": "65f7112ea071383a397ab3bd34491c35d9265dd9", "msg": "Refactored config-rules and changed ec2-cost-optimization-using-tags to ec2-tags-checker", "date": "2018-11-20 12:48:58+05:18", "modified_files": ["instance_tags.js", "lambda.tf", "security_groups.js", "utills.js", "variables.tf", "lambda.js", "lambda.js", "utils.js", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/commitdev/zero-aws-eks-stack.git", "commits": [{"id": "37686f02ac56eff6ee3cce17851c0c8db58f6227", "msg": "69 support irsa (#74)\n\n* initial commits for IRSA support\r\n\r\n* fixes with irsa\r\n\r\n* refresh naming\r\n\r\n* refresh naming\r\n\r\n* Updated README for IRSA\r\n\r\n* fixes per review\r\n\r\n* Added more detailed documentation\r\n\r\n* adjusted per review\r\n\r\nCo-authored-by: Bill Monkman <bmonkman@gmail.com>", "date": "2020-08-31 14:39:32-07:00", "modified_files": ["application_iam_policy.tf", "main.tf", "application_iam_policy.tf", "main.tf", "application_iam_policy.tf", "main.tf", "README.md", "irsa.tf", "variables.tf"]}, {"id": "b2bcfdf3af920e07dedd933297099f1dc8e55d8c", "msg": "257 add vpn support (#85)\n\n* initial submit\r\n\r\n* set initial sample client public keys\r\n\r\n* add random_seed\r\n\r\n* fix folder\r\n\r\n* enhancement with review\r\n\r\n* run terraform fmt against related directories\r\n\r\n* add hostname vpn.* pointing to service NLB\r\n\r\n* formalized configuration\r\n\r\n* added app client configuration retrieval script and initial README\r\n\r\n* added local script to help user adding and configuration generation\r\n\r\n* added local script to help user adding and configuration generation\r\n\r\n* use template for PROJECT\r\n\r\n* attached k8s current context with config file name\r\n\r\n* revision on config file name\r\n\r\n* A few tweaks to documentation\r\n\r\nCo-authored-by: Bill Monkman <bmonkman@gmail.com>", "date": "2020-09-11 14:13:42-07:00", "modified_files": ["Makefile", "application_iam_policy.tf", "main.tf", "main.tf", "application_iam_policy.tf", "main.tf", "README.md", "cert_manager.tf", "cluster_autoscaler.tf", "database_service.tf", "external_dns.tf", "wireguard-peer-csv.tpl", "wireguard-peer.tpl", "wireguard-wg0-conf.tpl", "irsa.tf", "main.tf", "provider.tf", "variables.tf", "vpn.tf", "add-vpn-user.sh"]}, {"id": "5a75029278957ae81341e09eb0df61769fc4ab28", "msg": "add new user - more commits with modules (#99)\n\n* initial commit, need check together with terraform-zero-modules/iam_users\r\n\r\n* fix with review\r\n\r\n* enhancement with map structure\r\n\r\n* enhancement with user group for AWS access\r\n\r\n* fix with template\r\n\r\n* enhancements with shared state and k8s rules etc.\r\n\r\n* refined modules-environemnt-root parameters etc. after review\r\n\r\n* Tweaked documentation a bit\r\n\r\n* remove unnecessary templating and use variables\r\n\r\n* replace space with tab\r\n\r\n* typo fix\r\n\r\n* recover templating for terraform block\r\n\r\n* typo comment fix\r\n\r\n* use remote modules and fixes\r\n\r\n* added tearndown steps for shared env\r\n\r\n* refer to newer versions of modules\r\n\r\n* add shared-remote-state generation\r\n\r\nCo-authored-by: Bill Monkman <bmonkman@gmail.com>", "date": "2020-09-25 11:47:22-07:00", "modified_files": ["Makefile", "README.md", "main.tf", "user_access.tf", "main.tf", "main.tf", "user_access.tf", "main.tf", "variables.tf"]}, {"id": "1b27b9d9a444115228c0848007b974abdc4d24b1", "msg": "add NAT instance (#169)\n\n* add NAT instance\r\n\r\n* added NAT instance types for user to override\r\n\r\n* Update templates/terraform/environments/stage/main.tf\r\n\r\nCo-authored-by: Bill Monkman <bmonkman@gmail.com>\r\n\r\n* Update templates/terraform/environments/stage/main.tf\r\n\r\nCo-authored-by: Bill Monkman <bmonkman@gmail.com>\r\n\r\n* finalized NAT instance types\r\n\r\nCo-authored-by: Bill Monkman <bmonkman@gmail.com>", "date": "2021-01-29 12:56:19-08:00", "modified_files": ["main.tf", "main.tf", "variables.tf"]}, {"id": "bc955d342aa20b0754c10537f00f6b0cce5c802d", "msg": "Serverless initial implementation [MAJOR] (#250)\n\n* serverless initial commit\r\n\r\n* feat: Initial changes to module, docs, and apply process for serverless\r\n\r\n* move sam policy out into user_access files\r\n\r\n* small syntax fixes\r\n\r\n* add security group and VPC connection for lambda\r\n\r\n* create user-db from lambda instead of k8s\r\n\r\n* support database list and mysql\r\n\r\n* App secret name from /kubernetes to /application\r\n\r\n* fix wrong env-var and unnecessary escape\r\n\r\n* split route53 and loggroup IAM permissions\r\n\r\n* Move k8s auth out of infra terraform (#246)\r\n\r\n* refactor: move k8s auth out of infra terraform and into kubernetes\r\n\r\n* fix: removed a couple leftover reference to k8s in infrastructure tf\r\n\r\n* fix: fix name of var and tf typo\r\n\r\n* fix: made variable name more clear\r\n\r\n* fix: remove unnecessary merge\r\n\r\n* fix: misc fixes, plus added some deps to avoid race conditions\r\n\r\n* fix: bump eks and user_access module versions\r\n\r\n* fix: Add missing vars in prod/main.tf\r\n\r\n* add some documentation around setting up auth0\r\n\r\n* work in progress diagrams for serverless\r\n\r\n* template out auth0 due to provider constrains\r\n\r\n* more documentation around serverless\r\n\r\n* better naming and adding comments\r\n\r\n* fix syntax error in user_access.tf\r\n\r\n* fix some prod deployment problems\r\n\r\n* fixes secret prefix and assumable roles\r\n\r\n* fixes around roles and permissions\r\n\r\n* update diagrams\r\n\r\n* makefile and typo fixes\r\n\r\n* bump user_auth for secret creation conflict\r\n\r\nCo-authored-by: Bill Monkman <bmonkman@gmail.com>", "date": "2022-01-31 12:49:10-05:00", "modified_files": ["Makefile", "README.md", "external-secrets.md", "authentication.md", "concepts.md", "routing.md", "zero-auth0-api-1.png", "zero-auth0-api-2.png", "zero-auth0-api-3.png", "zero-auth0-api-4.png", "zero-auth0-tenant-create.png", "serverless-auth0-setup.md", "wip-architecture-overview-serverless.drawio", "wip-architecture-overview-serverless.drawio.svg", "Makefile", "main.tf", "user_access.tf", "main.tf", "user_access.tf", "aws_auth.tf", "cert_manager.tf", "external_secrets.tf", "main.tf", "user_auth.tf", "variables.tf", "create-db-user.sh", "secret-application.json.tpl", "post-apply.sh", "pre-k8s.sh", "main.tf", "variables.tf", "main.tf", "user_access.tf", "main.tf", "user_access.tf", "main.tf", "provider.tf", "variables.tf", "iam.tf", ".dockerignore", "Dockerfile", "create-user-db.sh", "mysql-create-user.sql.tpl", "postgres-create-user.sql.tpl", "main.tf", "variables.tf", "versions.tf", "main.tf", "provider.tf", "application-references.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "variables.tf", "zero-module.yml"]}]}, {"name": "https://github.com/devops-ci-cd/weather_cache_infrastructure.git", "commits": [{"id": "3378831be84bb1825c847a001c3c240318d991dc", "msg": "minimized db server costs", "date": "2021-08-11 16:53:46+12:00", "modified_files": ["main.tf"]}, {"id": "28b9313a2bb11c357deeaa256950fb0acf220bc4", "msg": "minimized db server costs", "date": "2021-08-11 16:53:46+12:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/env0/templates.git", "commits": [{"id": "8e0422271551ff5d50c8ccd19674acf6e2886195", "msg": "feat: add cost estimation using infracost (#33)\n\n* feat: add cost estimation using infracost\r\n\r\n* moved configuration to variables\r\n\r\n* Create README.md\r\n\r\n* moved memory size to a variable", "date": "2021-04-13 22:06:11+03:00", "modified_files": ["README.md", "env0.yml", "main.tf"]}, {"id": "c0f0f8a65260434e3c9cd42972d7b24bd2f1026a", "msg": "Delete misc/cost-estimation directory", "date": "2021-07-07 08:43:31+03:00", "modified_files": ["README.md", "env0.yml", "main.tf"]}]}, {"name": "https://github.com/shaharsa/terragoat2.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/donkeysharp/the-dummy-tfaws.git", "commits": [{"id": "5ea19806f7fcba7727e8111fc5ff4946b9ba72c8", "msg": "Add module to create low cost vpc with 2 AZs and a nat instance", "date": "2020-04-05 12:06:07-04:00", "modified_files": ["data.tf", "local.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/asfadmin/CIRRUS-core.git", "commits": [{"id": "bf02210cdcf06898eb592f75cb8c1427a39fbe35", "msg": "update migration script to use payload, upgrade TEA to 1.0.2", "date": "2022-03-28 16:45:31-04:00", "modified_files": ["thin-egress.tf", "data_migration1.sh"]}]}, {"name": "https://github.com/pagopa/pagopa-azure-devops.git", "commits": [{"id": "91d0b80d2ff2c5711be71575bc1e8ceecdac3ed8", "msg": "test phase 1 (#3)\n\n* test phase 1\r\n\r\n* better variables names for kv azdo\r\n\r\n* better certificate file name\r\n\r\n* added avoid purge protection\r\n\r\n* fix tls cert pipelines\r\n\r\n* split service connections\r\n\r\n* enable checkout fe pipeline\r\n\r\n* split service connections\r\n\r\n* minor fix\r\n\r\n* enable io-pay-portal-fe\r\n\r\n* enable io-pay\r\n\r\n* enable checkout-tests\r\n\r\n* add checkout functions\r\n\r\n* add buyer bank functions\r\n\r\n* add mock-psp\r\n\r\n* add payment-transactions gateway\r\n\r\n* add payment-test (PM)\r\n\r\n* add payment-proxy\r\n\r\n* add mock ec pipelines\r\n\r\n* add apiconfig-fe pipelines\r\n\r\n* add 05_tlscert-dev-api-dev-platform-pagopa-it\r\n\r\n* enable sonarcloud\r\n\r\n* add 05_tlscert-dev-config-dev-plaform-pagopa-it\r\n\r\n* add 05_tlscert-dev-management-dev-platform-pagopa-it\r\n\r\n* add 05_tlscert-dev-portal-dev-platform-pagopa-it\r\n\r\n* add 06_pagopa-api-config\r\n\r\n* add 06_pagopa-canone-unico\r\n\r\n* add 06_pagopa-debt-position\r\n\r\n* add 06_pagopa-functions-fdr\r\n\r\n* add 06_pagopa-nodo-pagamenti-devops\r\n\r\n* add 06_pagopa-nodo-pagamenti-test\r\n\r\n* add 06_pagopa-nodo-pagamenti\r\n\r\n* add 05_tlscert-uat-api-config-uat-platform-pagopa-it\r\n\r\n* add 05_tlscert-dev-dev-checkout-pagopa-it\r\n\r\n* add 05_tlscert-prod-api-platform-pagopa-it\r\n\r\n* add all cert UAT pipelines\r\n\r\n* add all cert PROD pipelines\r\n\r\nCo-authored-by: diegoitaliait <diego.lagosmorales@pagopa.it>\r\nCo-authored-by: Simone Infante <simone.infante@pagopa.it>", "date": "2022-04-11 17:30:32+02:00", "modified_files": ["00_secrets_prod.tf", "03_service_connections_azure.tf", "03_service_connections_github.tf", "03_service_connections_tls_certificate.tf", "05_tlscert-dev-api-config-dev-platform-pagopa-it.tf", "05_tlscert-dev-api-dev-platform-pagopa-it.tf", "05_tlscert-dev-config-dev-plaform-pagopa-it.tf", "05_tlscert-dev-dev-checkout-pagopa-it.tf", "05_tlscert-dev-management-dev-platform-pagopa-it.tf", "05_tlscert-dev-portal-dev-platform-pagopa-it.tf", "05_tlscert-prod-api-platform-pagopa-it.tf", "05_tlscert-prod-checkout-pagopa-it.tf", "05_tlscert-prod-config-prod-plaform-pagopa-it.tf", "05_tlscert-prod-management-platform-pagopa-it.tf", "05_tlscert-prod-portal-platform-pagopa-it.tf", "05_tlscert-uat-api-config-uat-platform-pagopa-it.tf", "05_tlscert-uat-api-uat-platform-pagopa-it.tf", "05_tlscert-uat-config-uat-plaform-pagopa-it.tf", "05_tlscert-uat-management-uat-platform-pagopa-it.tf", "05_tlscert-uat-portal-uat-platform-pagopa-it.tf", "05_tlscert-uat-uat-checkout-pagopa-it.tf", "06_pagopa-api-config-fe.tf", "06_pagopa-api-config.tf", "06_pagopa-canone-unico.tf", "06_pagopa-checkout-fe.tf", "06_pagopa-checkout-io-pay-portal-fe.tf", "06_pagopa-checkout-io-pay.tf", "06_pagopa-checkout-tests.tf", "06_pagopa-debt-position.tf", "06_pagopa-functions-buyerbank.tf", "06_pagopa-functions-checkout.tf", "06_pagopa-functions-fdr.tf", "06_pagopa-mock-ec.tf", "06_pagopa-mock-psp.tf", "06_pagopa-nodo-pagamenti-devops.tf", "06_pagopa-nodo-pagamenti-test.tf", "06_pagopa-nodo-pagamenti.tf", "06_pagopa-payment-transactions-gateway.tf", "06_pagopa-payments-tests.tf", "06_pagopa-proxy.tf", "99_main.tf", "99_variables.tf", "00_secrets_prod.tf", "03_service_connections_azure.tf", "03_service_connections_github.tf", "04_iac.tf", "99_variables.tf"]}, {"id": "6175b1483928266c088ac916bdc7b28e834d0de0", "msg": "remove iopay pipelines (#5)", "date": "2022-04-12 16:29:10+02:00", "modified_files": [".pre-commit-config.yaml", "05_tlscert-uat-api-uat-platform-pagopa-it.tf", "05_tlscert-uat-config-uat-plaform-pagopa-it.tf", "05_tlscert-uat-management-uat-platform-pagopa-it.tf", "05_tlscert-uat-portal-uat-platform-pagopa-it.tf", "05_tlscert-uat-uat-checkout-pagopa-it.tf", "06_pagopa-checkout-io-pay-portal-fe.tf", "06_pagopa-checkout-io-pay.tf", "06_pagopa-debt-position.tf", "06_pagopa-functions-fdr.tf", "README.md", "README.md"]}]}, {"name": "https://github.com/iactest4zscaler/demo_testing.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/cider-demo/Imperial-Shuttle.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/Azure-Terraform/terraform-azurerm-resource-group.git", "commits": [{"id": "46a347c4615b22d97bdc842aabf8dae1892e4cfd", "msg": "Removed cost_center tag (#1)", "date": "2020-06-15 13:29:44+01:00", "modified_files": ["tag-policy.tf"]}]}, {"name": "https://github.com/john-hurringjr/vpc-sc-org.git", "commits": [{"id": "8bfa5ab5b3108e165b2d4bc79681347132dcc77f", "msg": "Removing billing project", "date": "2020-05-04 11:22:43-04:00", "modified_files": ["projects.tf"]}, {"id": "9fb1d39b9e2fcfd4847f6ed7b9ddbdf1fcd18472", "msg": "Adding back in billing prj", "date": "2020-05-04 11:25:52-04:00", "modified_files": ["projects.tf"]}, {"id": "541e2a637ea168e4e3e7e5f3d4b5106841267047", "msg": "Lots of changes to help prep for org log sink, billing log sink, and billing charges export", "date": "2020-05-06 16:51:26-04:00", "modified_files": ["01-org-node-stuff-variables.auto.tfvars", "billing-account-iam.tf", "declared-variables.tf", "log-sinks-org-and-billing.tf", "outputs.tf", "projects.tf"]}, {"id": "3c95579c343358ca5ea2d4934a1151a0056e4436", "msg": "Lots of changes to help prep for org log sink, billing log sink, and billing charges export", "date": "2020-05-06 16:55:08-04:00", "modified_files": ["declared-variables.tf", "log-sinks-and-billing-charges-export.tf", "outputs.tf"]}, {"id": "25e80d0fcc9b11e17c9f48d5f56c4f4555f0b565", "msg": "Lots of changes to help prep for org log sink, billing log sink, and billing charges export", "date": "2020-05-07 08:33:35-04:00", "modified_files": ["log-sinks-and-billing-charges-export.tf", "projects.tf"]}, {"id": "60764f08b41d43e48da94753d9e33b8c55386804", "msg": "Adding in billing charges and org sink project", "date": "2020-05-07 15:39:49-04:00", "modified_files": ["projects.tf"]}, {"id": "204e0aa6da16537da82fa36c499c39c3a251e20c", "msg": "output for billing and log sink", "date": "2020-05-07 16:51:37-04:00", "modified_files": ["outputs.tf"]}, {"id": "a64e3eb960186b390a59e0fd95952f198bc5d2e2", "msg": "Testing exports and sinks for org logs, billing logs, billing charges", "date": "2020-05-07 16:54:07-04:00", "modified_files": ["log-sinks-and-billing-charges-export.tf"]}, {"id": "7b41f12946cf3d60b6a581a53f4f7cbc2b3f23da", "msg": "Added writer identity for billing charges iam update", "date": "2020-05-11 08:52:16-04:00", "modified_files": ["README.md", "log-sinks-and-billing-charges-export.tf"]}, {"id": "fe4b033320775a5df7b379217c43bebc5bcd4790", "msg": "Removing log and billing sinks", "date": "2020-05-11 08:55:00-04:00", "modified_files": ["log-sinks-and-billing-charges-export.tf"]}, {"id": "cbbc36c3b4a736bca5da1cc9448a8ac6553f8d4e", "msg": "Adding back in billing and logging sinks", "date": "2020-05-11 08:57:22-04:00", "modified_files": ["log-sinks-and-billing-charges-export.tf"]}, {"id": "aff8cd84cac761e268d5edb72789756cc936a249", "msg": "Testing to see if bq billing export was disabled", "date": "2020-09-17 10:51:37-04:00", "modified_files": ["log-sinks-and-billing-charges-export.tf"]}, {"id": "192f392edd24e2b7ef5607220b7a441231cbe0d7", "msg": "Testing to see if bq billing export was disabled", "date": "2020-09-17 13:19:14-04:00", "modified_files": ["declared-variables.tf", "log-sinks-and-billing-charges-export.tf"]}, {"id": "27e4d795abaa30b10390491280995cb82af77cc8", "msg": "Testing to see if bq billing export was disabled", "date": "2020-09-17 13:30:37-04:00", "modified_files": ["log-sinks-and-billing-charges-export.tf"]}, {"id": "236b2ddf205321ab5a3d83ee8e485502c95f3871", "msg": "Testing to see if bq billing export was disabled", "date": "2020-09-17 13:35:20-04:00", "modified_files": ["log-sinks-and-billing-charges-export.tf"]}, {"id": "8627fb114234d6eea73b760b9e0039a5017a083d", "msg": "Testing to see if bq billing export was disabled", "date": "2020-09-17 14:07:40-04:00", "modified_files": ["log-sinks-and-billing-charges-export.tf"]}]}, {"name": "https://github.com/gravicore/terraform-gravicore-modules.git", "commits": [{"id": "96701d141d211ffab396b1ded8ea5862c6893dad", "msg": "GDEV-184 initial commit of workspace cost optimizer module", "date": "2021-06-04 17:11:53-06:00", "modified_files": ["module.tf", "workspace-cost-optimizer.tf"]}]}, {"name": "https://github.com/00inboxtest/terraform-google-cloud-storage.git", "commits": [{"id": "3e7b6004d8c962546939d803fab07310a2c22e94", "msg": "Include name of bucket as label for cost analysis", "date": "2019-11-07 10:09:47-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/dhruvrana2910/test-terraform-via-github-actions.git", "commits": [{"id": "6c73de158251a2ac303daa47a958bdfd52b8db2b", "msg": "commented payload.zip", "date": "2021-07-19 11:14:33+05:18", "modified_files": ["aws-lambda-test.tf"]}, {"id": "6de00c76b91a73e46b827c76f2811150d12c3391", "msg": "edited payload.zip", "date": "2021-07-19 11:15:24+05:18", "modified_files": ["aws-lambda-test.tf"]}]}, {"name": "https://github.com/HappyPathway/Sentinel-Init.git", "commits": [{"id": "2f8a4063a624ac64633859e74d2e7e55581adfa8", "msg": "adding oauth_tokens and converting cost_optimization as an example", "date": "2021-06-04 10:56:58-07:00", "modified_files": ["cost_optimization.tf.example", "tfe-oauth-tokens"]}]}, {"name": "https://github.com/Rabia0130/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/ministryofjustice/staff-device-dns-dhcp-infrastructure.git", "commits": [{"id": "551c22fb4c34d2fd4ae23d45efbaf4eac934c1b6", "msg": "Output Terraform outputs object\n\nThis will be the payload of configurations created by Terraform that\nother applications depend on.\n\nAn example of this is the docker container image building which runs in\na separate pipeline. The building and deploying of the image requires\nvalues created in Terraform which may change over time.\n\nThis entire output object will be stored in SSM parameter store and can\nbe pulled out to get the most up to date values created by Terraform.", "date": "2020-09-04 12:05:01+01:00", "modified_files": ["outputs.tf"]}]}, {"name": "https://github.com/dfds/infrastructure-modules.git", "commits": [{"id": "58d028187bf7437e48b844920841a4f140e07017", "msg": "Added more required payload params for k8s-janitor to create namespace", "date": "2019-05-15 15:25:23+02:00", "modified_files": ["main.tf", "vars.tf"]}, {"id": "837069cafb4ce617afe6753c95c61eb4af7dc4a5", "msg": "Added cost explorer to non-eu policy", "date": "2020-11-20 09:37:18+00:00", "modified_files": ["dependencies.tf"]}, {"id": "bed452aa8a1648c58279c499722f53ee237c2ba6", "msg": "Additional Cost Explorer rights for capabilities (#142)", "date": "2020-11-20 11:15:33+00:00", "modified_files": ["dependencies.tf"]}]}, {"name": "https://github.com/Quansight/qhub.git", "commits": [{"id": "effcd4362abc349f0aa0b46d1b9a3eade5590276", "msg": "Merging dev into main (#488)\n\n* define supported terraform versions (#280)\r\n\r\n* Remove registry for DigitalOcean\r\n\r\n* add release template description (#270)\r\n\r\n* add release template description\r\n\r\n* update release template\r\n\r\n* typo fix\r\n\r\n* typo fix\r\n\r\n* release 0.2.0 (#274)\r\n\r\n* define supported terraform versions\r\n\r\n* changes to docs\r\n\r\n* make black formatting happy\r\n\r\n* Update constants.py\r\n\r\nCo-authored-by: Amit Kumar <dtu.amit@gmail.com>\r\nCo-authored-by: Lais Carvalho <lais.carvalho@python.ie>\r\n\r\n* define supported terraform versions (#280)\r\n\r\n* Remove registry for DigitalOcean\r\n\r\n* add release template description (#270)\r\n\r\n* add release template description\r\n\r\n* update release template\r\n\r\n* typo fix\r\n\r\n* typo fix\r\n\r\n* release 0.2.0 (#274)\r\n\r\n* define supported terraform versions\r\n\r\n* changes to docs\r\n\r\n* make black formatting happy\r\n\r\n* Update constants.py\r\n\r\nCo-authored-by: Amit Kumar <dtu.amit@gmail.com>\r\nCo-authored-by: Lais Carvalho <lais.carvalho@python.ie>\r\n\r\n* Initial work towards adding password based auth\r\n\r\n* Separating jupyterhub/dask configuration from yaml files\r\n\r\n* Black formatting\r\n\r\n* Cli for initialize use oauth -> auth\r\n\r\n* Fixing tests for new cli option\r\n\r\n* Initial work on local deployment\r\n\r\n* Requiring version of terraform >= 0.13\r\n\r\n* Adding docs for local development\r\n\r\n* Making qhub-terraform-modules branch configurable\r\n\r\n* Fixing password checking in authentication\r\n\r\n* Adding docs on nfs volume in minikube\r\n\r\n* Black formatting\r\n\r\n* Test local deployment in PR\r\n\r\n* Terraform formatting\r\n\r\n* Adding documentation for current development testing\r\n\r\n* Enableing deploy/destroy commands to be compatible with local deployments\r\n\r\n* Black formatting\r\n\r\n* Adding qhub deployment to tests\r\n\r\n* Allowing pull request to dev branch\r\n\r\n* Use dev branch for terraform files\r\n\r\n* Modifying docs to use the dns name jupyter.github-actions.qhub.dev\r\n\r\n* Further documentation on testing with local deployment\r\n\r\n* Make suggested documentaion changes Amit suggested\r\n\r\n* Adding changes to release notes\r\n\r\n* Terraform test version to 0.13.5\r\n\r\n* Update to dask gateway 0.9.0, etc\r\n\r\n* Fix scripts, cluster options, cleanup\r\n\r\n* Fix scheduler\r\n\r\n* Update docs/docs/development.md\r\n\r\nCo-authored-by: Lais Carvalho <lais.carvalho@python.ie>\r\n\r\n* minor updates to docs\r\n\r\n* Add note about testing on Mac\r\n\r\n* restructure docs (#311)\r\n\r\n* reformat RELEASE.md\r\n\r\nmove the newer version-description of each release to the top of the file.\r\n\r\n* restructure docs\r\n\r\n* change structure\r\n\r\n* change numbering on folder structure\r\n\r\n* match `index.md` to the updated folder structure\r\n\r\n* add sphinx_copybutton to code blocks\r\n\r\n* add review suggestions\r\n\r\n* fix typos on setup docs\r\n\r\n* add docs on usage\r\n\r\n* fix typos and adjust formatting\r\n\r\n* Update setup.py\r\n\r\nCo-authored-by: Christopher Ostrouchov <chris.ostrouchov@gmail.com>\r\n\r\nCo-authored-by: Christopher Ostrouchov <chris.ostrouchov@gmail.com>\r\n\r\n* Fixup for flake8 errors (#330)\r\n\r\n* Delete docs/dir/09_faq directory\r\n\r\nThe directory was accidentally merged into the `dev` branch, should not be in here.\r\n\r\n* FIXUP: Adding local development docs which seem to have gotten lost\r\n\r\n* Update 04_local_development.md\r\n\r\n* Update 04_local_development.md\r\n\r\n* Pin jupyterlab version to >= 3.0.0 (#351)\r\n\r\n* Pinning jupyterlab version to 2.X.X\r\n\r\n* Pinning to jupyterlab >= 3 about time\r\n\r\n* Trigger image builds on dev branch as well\r\n\r\n* Jupyterhub docker image (#346)\r\n\r\n* Adding jupyterhub docker image based on other qhub images\r\n\r\n* Adding realease notes on jupyterlab+jupyterhub docker image\r\n\r\n* Remove `costrouc` as the default user in qhub (#352)\r\n\r\n* update costrouc -> example-user\r\n\r\n* change default pass to example-user\r\n\r\n* Adding support for jupyterhub theming\r\n\r\n* Adding docs for theming\r\n\r\n* Black formatting\r\n\r\n* Pin flake8 and black\r\n\r\n* Flake8 formatting\r\n\r\n* Update to dask gateway 0.9.0, etc\r\n\r\n* Fix scripts, cluster options, cleanup\r\n\r\n* Fix scheduler\r\n\r\n* Make black happy\r\n\r\n* Make black happy again\r\n\r\n* Initial ContainDS PR to build Docker Images  (#360)\r\n\r\n* add cdsdashboards\r\n\r\n* update package name\r\n\r\n* remove cds dashboards for now\r\n\r\nCo-authored-by: Adam Lewis <balast@users.noreply.github.com>\r\n\r\n* Add information about Terraform version and k9s tool for debugging (#354)\r\n\r\n* Add information about Terraform Qhub version and k9s tool for debugging\r\n\r\n#348\r\n\r\n* Update docs/source/06_developers_contrib_guide/04_local_development.md\r\n\r\nCo-authored-by: Tania Allard <taniar.allard@gmail.com>\r\n\r\n* Update docs/source/06_developers_contrib_guide/04_local_development.md\r\n\r\nCo-authored-by: Tania Allard <taniar.allard@gmail.com>\r\n\r\n* Update docs/source/06_developers_contrib_guide/04_local_development.md\r\n\r\nadd K9s link\r\n\r\nCo-authored-by: Tania Allard <taniar.allard@gmail.com>\r\n\r\nCo-authored-by: Tania Allard <taniar.allard@gmail.com>\r\nCo-authored-by: Lais Carvalho <lais.carvalho@python.ie>\r\n\r\n* update instructions Terraform install (#356)\r\n\r\n* update instructions Terraform install \r\n\r\nAdd @user suggestions on issue #348.\r\n\r\nFixes #348.\r\n\r\n* yaml file had incorrect name, README.md wouldn't exist\r\n\r\n* Update docs/source/02_get_started/03_usage.md\r\n\r\nCo-authored-by: Vinicius D. Cerutti <51954708+viniciusdc@users.noreply.github.com>\r\n\r\nCo-authored-by: Dan Lester <dan@ideonate.com>\r\nCo-authored-by: Vinicius D. Cerutti <51954708+viniciusdc@users.noreply.github.com>\r\n\r\n* Remove dependency hack prior to Terraform 0.13 release\r\n\r\nTo be merged with PR\r\nhttps://github.com/Quansight/qhub-terraform-modules/pull/43.\r\n\r\n* Setting correct load-balancer ip in local testing (#368)\r\n\r\n* Adding script to choose load balancer ip address\r\n\r\n* Changing to python script for setting load balancer ip\r\n\r\n* Adding curl test\r\n\r\n* Adding vini's recommended doc fixes\r\n\r\n* fix docs format on index.md (#363)\r\n\r\n* reformat RELEASE.md\r\n\r\nmove the newer version-description of each release to the top of the file.\r\n\r\n* restructure docs\r\n\r\n* change structure\r\n\r\n* change numbering on folder structure\r\n\r\n* match index.md to updated folder structure\r\n\r\n* add sphinx_copybutton to code blocks\r\n\r\n* add review suggestions\r\n\r\n* fix typos on setup docs\r\n\r\n* add docs on usage\r\n\r\n* fix typos and adjust formatting\r\n\r\n* make flake8 happy\r\n\r\n* fix index.md and add more docs pages\r\n\r\n* add test file to the docs\r\n\r\n* Changing default domain so it no longer uses \"jupyter.<domain>\"\r\n\r\n* Correcting tests to use new endpoint\r\n\r\n* Black formatting\r\n\r\n* Cat the qhub-config.yaml file\r\n\r\n* Ading jhub-client for initial testing\r\n\r\n* Move update dask-gateway config to new template\r\n\r\n* Fix spelling\r\n\r\n* Update extraConfig key name\r\n\r\n* Revert change to dockerfile\r\n\r\n* make black happy\r\n\r\n* Updating url to github-actions.qhub.dev\r\n\r\n* fix docs\r\n\r\n* Fix details on docs (#401)\r\n\r\n* reformat RELEASE.md (move the newer version-description of each release to the top of the file)\r\n\r\n* restructure docs\r\n\r\n* change structure\r\n\r\n* change numbering on the folder structure\r\n\r\n* match `index.md` to the updated folder structure\r\n\r\n* add sphinx_copybutton to code blocks\r\n\r\n* add review suggestions\r\n\r\n* fix typos on setup docs\r\n\r\n* add docs on usage\r\n\r\n* fix typos and adjust formatting\r\n\r\n* make flake8 happy\r\n\r\n* fix index.md and add more docs pages\r\n\r\n* add test file to the docs\r\n\r\n* adjust `oauth` flag to be consistent with parameter name changes > `auth`\r\n\r\n* remove local testing from 'Get Started' section of the docs\r\n\r\n* Generate a random password for example-user (#415)\r\n\r\n* Generate a random password for example-user\r\n\r\n* Flake8 and black formatting\r\n\r\nCo-authored-by: Chris Ostrouchov <chris.ostrouchov@gmail.com>\r\n\r\n* Auto install terraform when binary is missing\r\n\r\n* Black and flake8 formatting\r\n\r\n* Remove terraform from test environment\r\n\r\n* Adding version information to terraform error\r\n\r\n* Force QHub to be responsible for terraform installation\r\n\r\n* Black formatting\r\n\r\n* Flake8 formatting\r\n\r\n* adding terraform_version to qhub for actions\r\n\r\n* Adding formatting to logging info string\r\n\r\n* Print caught errors from qhub deploy process\r\n\r\n* Black formatting\r\n\r\n* Remove requirement for user to install terraform in docs\r\n\r\n* Adding release notes\r\n\r\n* Making test more fault tollerant\r\n\r\n* Revamp docs (#427)\r\n\r\n* fix typo installation page\r\n\r\n* add Azure instructions to usage docs\r\n\r\n* revamp README\r\n\r\n* update QHub architecture image on the readme\r\n\r\n* Affinity for nfs and conda-store (#323)\r\n\r\n* Add node-group for conda-store\r\n\r\n* Add node group for conda-store\r\n\r\n* Azure (#314)\r\n\r\n* initial add of azure\r\n\r\n* azure changes\r\n\r\n* remove dash in storag account name (not allowed)\r\n\r\n* delete another dash in name\r\n\r\n* change provider name to azure\r\n\r\n* add version for azurerm\r\n\r\n* add azure region\r\n\r\n* fix module name\r\n\r\n* pin kubernetes provider to version <2\r\n\r\n* add azure\r\n\r\n* make kubernetes ingress use azure branch\r\n\r\n* remove azure branch\r\n\r\n* add azure branch\r\n\r\n* fix dependencies azure\r\n\r\n* add token output\r\n\r\n* kubernetes provider > 2\r\n\r\n* kubernetes provider > 2\r\n\r\n* rename password to tokeN\r\n\r\n* change terminology\r\n\r\n* switch token for username/password on azure\r\n\r\n* fix region for azure registry\r\n\r\n* bugfix and update region template\r\n\r\n* update user/worker node labels\r\n\r\n* remove duplicate general node group for azure\r\n\r\n* change min max node count for azure\r\n\r\n* change it back\r\n\r\n* delete unneeded var\r\n\r\n* add needed credentials\r\n\r\n* fix formatting\r\n\r\n* remove comments\r\n\r\n* fix deleted lines\r\n\r\n* add random id to storage account\r\n\r\n* try this\r\n\r\n* add storage account postfix\r\n\r\n* add storage account postfix\r\n\r\n* add docs\r\n\r\n* fix link\r\n\r\n* fix link\r\n\r\n* merge with dev\r\n\r\n* fix merge conflict errors\r\n\r\n* fix branch\r\n\r\n* add azure env vars to github  action\r\n\r\n* add env vars for azure\r\n\r\n* update env var and config filename\r\n\r\n* terraform fmt\r\n\r\n* increase startup timeout to 10 minutes\r\n\r\n* remove start_timeout (set in qhub-terraform-modules instead)\r\n\r\n* remove start timeout\r\n\r\n* update ref=\r\n\r\n* fix autoprovisioning for azure\r\n\r\n* add container registry action for azure\r\n\r\n* temp change of ref=cookiecutter to ref=azure\r\n\r\n* Changing repo ref to use dev and cookiecutter\r\n\r\n* use ref cookiecutter in one more place\r\n\r\n* Changing default domain so it no longer uses \"jupyter.<domain>\"\r\n\r\n* Correcting tests to use new endpoint\r\n\r\n* Black formatting\r\n\r\n* Cat the qhub-config.yaml file\r\n\r\n* Ading jhub-client for initial testing\r\n\r\n* Updating url to github-actions.qhub.dev\r\n\r\n* fix docs\r\n\r\n* Fix details on docs (#401)\r\n\r\n* reformat RELEASE.md (move the newer version-description of each release to the top of the file)\r\n\r\n* restructure docs\r\n\r\n* change structure\r\n\r\n* change numbering on the folder structure\r\n\r\n* match `index.md` to the updated folder structure\r\n\r\n* add sphinx_copybutton to code blocks\r\n\r\n* add review suggestions\r\n\r\n* fix typos on setup docs\r\n\r\n* add docs on usage\r\n\r\n* fix typos and adjust formatting\r\n\r\n* make flake8 happy\r\n\r\n* fix index.md and add more docs pages\r\n\r\n* add test file to the docs\r\n\r\n* adjust `oauth` flag to be consistent with parameter name changes > `auth`\r\n\r\n* remove local testing from 'Get Started' section of the docs\r\n\r\n* Generate a random password for example-user (#415)\r\n\r\n* Generate a random password for example-user\r\n\r\n* Flake8 and black formatting\r\n\r\nCo-authored-by: Chris Ostrouchov <chris.ostrouchov@gmail.com>\r\n\r\n* Revamp docs (#427)\r\n\r\n* fix typo installation page\r\n\r\n* add Azure instructions to usage docs\r\n\r\n* revamp README\r\n\r\n* update QHub architecture image on the readme\r\n\r\n* Affinity for nfs and conda-store (#323)\r\n\r\n* Add node-group for conda-store\r\n\r\n* Add node group for conda-store\r\n\r\n* Auto install terraform when binary is missing\r\n\r\n* Black and flake8 formatting\r\n\r\n* Remove terraform from test environment\r\n\r\n* Adding version information to terraform error\r\n\r\n* Force QHub to be responsible for terraform installation\r\n\r\n* Black formatting\r\n\r\n* Flake8 formatting\r\n\r\n* adding terraform_version to qhub for actions\r\n\r\n* Adding formatting to logging info string\r\n\r\n* Print caught errors from qhub deploy process\r\n\r\n* Black formatting\r\n\r\n* Remove requirement for user to install terraform in docs\r\n\r\n* Adding release notes\r\n\r\n* Making test more fault tollerant\r\n\r\n* Black formatting\r\n\r\n* Remove duplicate random import\r\n\r\n* Terraform formatting\r\n\r\nCo-authored-by: Adam Lewis <balast@users.noreply.github.com>\r\nCo-authored-by: Chris Ostrouchov <chris.ostrouchov@gmail.com>\r\nCo-authored-by: Lais Carvalho <lais.carvalho@python.ie>\r\nCo-authored-by: Dan Lester <dan@ideonate.com>\r\nCo-authored-by: Brian Larsen <blarsen@quansight.com>\r\n\r\n* FIXUP: Forgot part of jupyterhub_config when moving towards templates (#435)\r\n\r\nThese were the forgotten lines\r\nhttps://github.com/Quansight/qhub-cloud/blob/7f7e8b43a3be46a40bae01c03d76bb3145119540/qhub/template/%7B%7B%20cookiecutter.repo_directory%20%7D%7D/infrastructure/jupyterhub.yaml#L143-L151\r\n\r\nCloses https://github.com/Quansight/qhub-cloud/issues/370\r\n\r\n* Fix link to docs\r\n\r\n* Render by default in the deploy command of qhub (#426)\r\n\r\n* Add render phase by default in qhub deploy\r\n\r\n* Black fomatting\r\n\r\n* Adding release notes\r\n\r\n* Update usage docs\r\n\r\n* Adding ability to specify node selector label for general, user, and worker (#433)\r\n\r\n* Adding ability to specify node selector label for general, user, and\r\nworker\r\n\r\nCloses https://github.com/Quansight/qhub-cloud/issues/431\r\n\r\n* Adding ability to specify kube_context for local deployment\r\n\r\n* Adding docs for new local provider features\r\n\r\n* Adding a well defined schema for current qhub-config.yaml\r\n\r\n* Black formatting\r\n\r\n* Validation errors since now using schema\r\n\r\n* Enable strict validation checking\r\n\r\n* Adding release notes\r\n\r\n* Updating dev docs (#437)\r\n\r\n* Support for namespaces with qhub deployments on kubernetes clusters (#434)\r\n\r\n* Support for namespaces with qhub deployments on kubernetes clusters\r\n\r\nCloses https://github.com/Quansight/qhub-cloud/issues/432\r\n\r\n* Adding namespace docs to PR\r\n\r\n* Adding namespace to the schema\r\n\r\n* Black / Flake8 Formatting\r\n\r\n* Updating docs for all providers to be up to date (#439)\r\n\r\n* FIX: typo in docs\r\n\r\n* add azure to document\r\n\r\n* BUG: terraform output command does not use provider\r\n\r\n* Write default password to filesystem for qhub initialization (#447)\r\n\r\n* Write default password to filesystem for qhub initialization\r\n\r\nIn the future this will help with automated testing of the qhub cluster\r\n\r\n* Black and flake8 formatting\r\n\r\n* fix dash error with azure storage account\r\n\r\n* Adding schema to allow for terraform_modules (#455)\r\n\r\n* No longer need to pause for user to check oauth settings schema checks this\r\n\r\n* Adding docs on creating kubecontext for digital ocean\r\n\r\n* Update jupyterhub and jupyterlab image and add support for umask/set-gid\r\n\r\n* Updating default images for qhub\r\n\r\n* Initial CDSDashboard Integration (#388)\r\n\r\n* add cdsdashboards\r\n\r\n* update package name\r\n\r\n* remove cds dashboards for now\r\n\r\n* update docker images to have cdsdashboards\r\n\r\n* add cdsdashboard\r\n\r\n* update container\r\n\r\n* cdsdashboard kind of integration\r\n\r\n* cdsdashboards.enabled config\r\n\r\n* qhub version\r\n\r\n* pinned versions of qhub-jupyterhub-theme and cdsdashboards\r\n\r\n* Notes on Mac local dev\r\n\r\n* add dashboarding conda pkgs\r\n\r\n* Black formatting\r\n\r\n* cdsdashboards to non-beta version\r\n\r\n* pinned versions for cdsdashboards\r\n\r\n* Add cdsdashboards to the schema\r\n\r\nCo-authored-by: Adam Lewis <balast@users.noreply.github.com>\r\nCo-authored-by: Dan Lester <dan@ideonate.com>\r\nCo-authored-by: Chris Ostrouchov <chris.ostrouchov@gmail.com>\r\n\r\n* Add run_subprocess command to logging in subprocess (#451)\r\n\r\n* Add run_subprocess command\r\n\r\n* Make black happy\r\n\r\n* Add prefix in subprocess logging\r\n\r\n* make black happy\r\n\r\n* Making line prefix optional\r\n\r\n* Documentation for new subprocess command\r\n\r\n* Adding spacing for prefix\r\n\r\nCo-authored-by: Chris Ostrouchov <chris.ostrouchov@gmail.com>\r\n\r\n* Bump terraform version to latest before release and remove docs (#438)\r\n\r\nmention of terraform\r\n\r\n* Remove warning message from terraform\r\n\r\n* Terraform formatting\r\n\r\n* Adding terraform destroy command to subprocess realtime output\r\n\r\n* Update default docker images\r\n\r\n* Adding let's encrypt to configuration\r\n\r\n* Black formatting\r\n\r\n* Docs: correction fix documentation for creatingpassword\r\n\r\n* Adding docs on targetting specific node groups\r\n\r\n* Adding docs on limitting profiles to users and groups\r\n\r\n* Adding docs on using the `terraform_modules` field\r\n\r\n* Initial work on using existing terraform backend and enable local backend to use kubernetes for storage (#459)\r\n\r\n* Initial work on using existing terraform backend\r\n\r\n* Adding docs on terraform state section\r\n\r\n* Adding check in destroy command\r\n\r\n* HOTFIX: adding missing type key for cookiecutter template\r\n\r\n* update docs (#441)\r\n\r\nThis PR aims to address the changes specified on issue #381.\r\n\r\nIt details how users should choose their version of QHub and addresses some other small issues such as:\r\n- Remove mention of Terraform from `Get Started` and `Installation` sections of the docs\r\n- Addition of `Base costs` file, `Changelog`, and provisional tutorials files.\r\n- Minor fix on `local deployment` docs\r\n- Insert debug K9s image on `troubleshooting` section\r\n- Change the intro image to match README* add_changelog\r\n\r\n* Adding docs on testing jupyterlab image without qhub (#466)\r\n\r\n* Support for flexible forms of authentication we need support for generic oauth (#462)\r\n\r\n* Simplify helm configuration move towards single python file\r\n\r\n* Adding incomplete\r\n\r\n* Adding docs on custom authentication provider\r\n\r\n* Black formatting\r\n\r\n* FIX: authentication_class key on custom Authenticator\r\n\r\n* VS code integration as part of the default deployment  (#469)\r\n\r\n* add code-server install config\r\n\r\n* add pip install jupyter-codeserver-proxy\r\n\r\n* Remove dask gateway helm chart (#471)\r\n\r\n* Adding kuberntes-alpha provider\r\n\r\n* Terraform formatting\r\n\r\n* Make test stricter\r\n\r\n* Updating default docker images\r\n\r\n* Adding tls support for dask-gateway\r\n\r\n* Adding notes on using dask-gateway\r\n\r\n* Adding dask gateway tutorial to docs\r\n\r\n* Typo in index.md links\r\n\r\n* Adding new features to QHub 0.3.0 release from latest commits\r\n\r\n* Adding secret_name as option\r\n\r\n* Adding docs on using self signed kubernetes secret\r\n\r\n* Adding release notes of adding support for kubernetes secrets\r\n\r\n* Azure fixes (#483)\r\n\r\n* use single resource group azure\r\n\r\n* change resource_gorup\r\n\r\n* changes\r\n\r\n* remove token\r\n\r\n* changes\r\n\r\n* Fixing version pinning issues\r\n\r\nCo-authored-by: Adam Lewis <balast@users.noreply.github.com>\r\n\r\n* add namespace to dynamodb table name in cookiecutter\r\n\r\n* remove 'depends on' nfs-server from AWS nfs-mount\r\n\r\n* Terraform formatting\r\n\r\n* cds_hide_user_named_servers available in qhub-config.yaml and true on qhub init (#472)\r\n\r\n* cds_hide_user_named_servers available in qhub-config.yaml and true on init #461\r\n\r\n* Run black\r\n\r\n* Black use correct version\r\n\r\n* Adding instructions for getting cloud credentials\r\n\r\n* cdsdashboards 0.5.3\r\n\r\n* Update kubernetes version for gke\r\n\r\n* Update AWS kubernetes version\r\n\r\n* FIX: aws cname logic for updating dns domain\r\n\r\n* Bump jupyterhub image to use latest cdsdashboards 0.5.3\r\n\r\n* Change default qhub-terraform-modules branch from dev -> main\r\n\r\n* Renaming QHub Cloud -> QHub and qhub-cloud -> qhub\r\n\r\nCo-authored-by: Tyler <49161327+tylerpotts@users.noreply.github.com>\r\nCo-authored-by: Amit Kumar <dtu.amit@gmail.com>\r\nCo-authored-by: Lais Carvalho <lais.carvalho@python.ie>\r\nCo-authored-by: Brian Larsen <B_R_L@hotmail.com>\r\nCo-authored-by: t-potts <tylerjacobpotts@gmail.com>\r\nCo-authored-by: Vinicius D. Cerutti <51954708+viniciusdc@users.noreply.github.com>\r\nCo-authored-by: Adam Lewis <23342526+Adam-D-Lewis@users.noreply.github.com>\r\nCo-authored-by: Adam Lewis <balast@users.noreply.github.com>\r\nCo-authored-by: Tania Allard <taniar.allard@gmail.com>\r\nCo-authored-by: Dan Lester <dan@ideonate.com>\r\nCo-authored-by: Brian Larsen <blarsen@quansight.com>\r\nCo-authored-by: john lee <leej3@quansight.com>", "date": "2021-04-13 23:12:03-04:00", "modified_files": ["image-pr.yaml", "image.yaml", "test.yaml", ".gitignore", "README.md", "RELEASE.md", "README.md", "aws.py", "common.py", "do.py", "gcp.py", "high_level.py", "layout.html", "conf.py", "configuration.md", "index.md", "infrastructure.md", "installation.md", "maintenance.md", "theming.md", "configuration.md", "index.md", "infrastructure.md", "installation.md", "theming.md", "faqs.md", "configuration.md", "index.md", "infrastructure.md", "installation.md", "maintenance.md", "qhub-gcp-deployment.md", "theming.md", "getting-started.md", "index.md", "readme.md.ipynb", "requirements.txt", "high_level_architecture.png", "qhub_aws_architecture.png", "qhub_do_architecture.png", "qhub_gcp_architecture.png", "index.md", "requirements.txt", "01_intro.md", "01_installation.md", "02_setup.md", "03_usage.md", "04_configuration.md", "05_management.md", "06_troubleshooting.md", "07_support.md", "01_cloud_setup.md", "02_qhub_pangeo.md", "03_dask_gateway_usage.md", "1_project_setup_tutorial.md", "1_qhub-aws-deploy_guide.md", "2_qhub-gcp-deploy_guide.md", "3_qhub-do-deploy_guide.md", "4_system_backup.md", "01_qhub_infrastructure.md", "02_system_maintenance.md", "03_base_cost.md", "01_architecture.md", "02_adv_docs.md", "03_contrib_guidelines.md", "04_tests.md", "05_changelog.md", "1_logos.md", "2_glossary.md", "cloudfare_update_screenshot.png", "cloudflare_account_resources_scr.png", "cloudflare_auth_1.png", "cloudflare_permissions_2.1.1.png", "cloudflare_summary.png", "cloudflare_zone_resources.png", "high_level_architecture.png", "conda_icon.png", "dask_icon.png", "jupyter_hub_icon.png", "nginx_icon.png", "init_cli_output.png", "k9s_UI.png", "labs_logo_white.png", "qhub-cloud_architecture.png", "qhub_aws_architecture.png", "qhub_do_architecture.png", "qhub_gcp_architecture.png", "qhub_logo.png", "quansight_logo_white.png", "render_cli_output.png", "tech_stack_diagram.png", ".gitignore", "Dockerfile", "README.md", "QS_Full_Logo.svg", "QS_Full_Transparent.svg", "variables.scss", "conf.py", "hello.md", "nuxt.config.js", "package.json", "blog.vue", "description.vue", "docs.vue", "faq.vue", "index.vue", "navbar.vue", "stepper.vue", "typed.js", "vuetify.js", "QS_Full_Logo.svg", "tsconfig.json", "vue-shim.d.ts", "__init__.py", "deploy.py", "initialize.py", "render.py", "constants.py", "deploy.py", "destroy.py", "initialize.py", "github.py", "terraform.py", "schema.py", "cookiecutter.json", "post_gen_project.py", "image.yaml", "jupyterhub-pr.yaml", "jupyterhub.yaml", "qhub-ops.yaml", "Dockerfile.jupyterhub", "environment.yaml", "postBuild", "environment.yaml", "postBuild", "environment.yaml", "ipython_config.py", "labextensions.txt", "postBuild", "aws.tf", "azure.tf", "dask-gateway.yaml", "dask_gateway_config.py.j2", "do.tf", "gcp.tf", "jupyterhub.yaml", "kubernetes.tf", "locals.tf", "outputs.tf", "state.tf", "variables.tf", "versions.tf", "jupyterhub_config.py.j2", "main.tf", "versions.tf", "utils.py", "setup.py", "config_do_additional_node_groups.yaml", "config_do_auth0_provision.yaml", "config_gcp_gpu.yaml", "test-ipython-basic.ipynb", "minikube-loadbalancer-ip.py", "test_init.py", "test_render.py", "test_schema.py"]}, {"id": "265d6c5b8a1e01032402d4b2c94d12d5365e5e6e", "msg": "Prometheus grafana (#733)\n\n* add grafana traefik route\r\n\r\n* grafana working\r\n\r\n* prometheus-helm-chart-working\r\n\r\n* initial integration - wip\r\n\r\n* add external-url variable\r\n\r\n* add external-url variable\r\n\r\n* add tls var\r\n\r\n* add tls var\r\n\r\n* add tls var\r\n\r\n* cluster monitoring docs\r\n\r\n* fix debug change\r\n\r\n* fix formatting, delete ingress\r\n\r\n* add monitoring by default, fix routing service name\r\n\r\n* terraform format\r\n\r\n* Update monitoring instructions\r\n\r\n* don't include helm chart in repo\r\n\r\n* terraform format\r\n\r\n* terraform format\r\n\r\n* add the values file back\r\n\r\n* remove values files\r\n\r\n* terraform fmt\r\n\r\n* terraform fmt\r\n\r\n* up minikube memory\r\n\r\n* set CI minikube memory to 6500mb\r\n\r\n* move kubernetes tests to new file\r\n\r\n* use self-hosted action runner (cirun.io)\r\n\r\n* add .cirun.yml\r\n\r\n* Misc fixes\r\n\r\n- move yaml to root\r\n- fix syntax\r\n- install python from miniconda\r\n- install node\r\n- install cypress dependencies\r\n\r\n* Install cypress after k8s tests\r\n\r\n* use cheapest acceptable DO droplet\r\n\r\n* add release notes\r\n\r\nCo-authored-by: Adam Lewis <balast@users.noreply.github.com>\r\nCo-authored-by: Adam-D-Lewis <>\r\nCo-authored-by: Amit Kumar <dtu.amit@gmail.com>", "date": "2021-08-13 10:30:47-05:00", "modified_files": [".cirun.yml", "kubernetes_test.yaml", "test.yaml", "RELEASE.md", "index.md", "monitoring.md", "introduction.md", "initialize.py", "schema.py", "cookiecutter.json", "kubernetes.tf", "main.tf", "main.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/glipecki/gcp-budget-keeper.git", "commits": [{"id": "10fff533d0279e55bdc089ecf1d8ea755021140f", "msg": "adds billing cutoff after threshold", "date": "2021-01-04 14:56:07+01:00", "modified_files": ["README.md", "index.js", "package-lock.json", "package.json", "backend.tf", "bucket-source-archives.tf", "budget.tf", "function-close-billing-on-exceeded.tf", "function-service-account.tf", "google-api.tf", "pubsub-budget-topic.tf", "terraform.tfvars", "variables.tf"]}]}, {"name": "https://github.com/Azure-Terraform/code-examples.git", "commits": [{"id": "94f967f7c44038b5736347b7252c55f6f4a5d3e2", "msg": "Removed cost_center tag from metadata module", "date": "2020-06-23 09:26:08+01:00", "modified_files": ["main.tf"]}, {"id": "91173d66068b860bafa713138ce49921b981740e", "msg": "Vault Example Updated\n\nRemoved cost center tag (No longer used).\r\nUpdated Kubernetes version in-line with available AKS versions.", "date": "2020-08-25 17:28:48+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/vincentramirez/musical-fork.git", "commits": [{"id": "24c07bfd5c31438fff6374e9ba3d577e6402d777", "msg": "f-centos-7 - Support for cheaper CentOS 7/t3 instances, visibility fixes (#23)\n\n* Adding support for CentOS 7(cheaper), moved to t3 instances(cheaper) for non t2.micro(free-tier), hostnaming/display name visibility improvements\r\n\r\n* Fixing ami name change typo, fixing docker consul dns configuration", "date": "2018-10-05 09:57:04-05:00", "modified_files": ["README.md", "packer.json", "centos-7.sh", "el7.sh", "rhel.sh", "setup.sh", "main.tf", "variables.tf", "main.tf", "variables.tf", "init-client.tpl", "main.tf", "variables.tf", "init-cluster.tpl", "variables.tf", "main.tf", "database.tpl", "main.tf", "variables.tf", "terraform.tfvars.example", "variables.tf"]}]}, {"name": "https://github.com/OmniTeqSource/terraform-aws-iam.git", "commits": [{"id": "c54a282a23d3bd87e9770ea7e646134d3d9c4d77", "msg": "Add billing groups (#12)\n\n* Add billing groups\r\n\r\n* Update tf validate workflow", "date": "2022-05-05 09:48:56-05:00", "modified_files": ["terraform-validate.yaml", "groups.tf", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/UrbanOS-Examples/scos-alm.git", "commits": [{"id": "7decb31329a5a80341237dffc661534c32a82446", "msg": "SMRT-781 - update EKS cluster to allow containers to become cost reader role\n\nco-authored-by: Scott Millard <smillard@hntb.com>", "date": "2019-01-16 11:06:52-05:00", "modified_files": ["eks.tf"]}, {"id": "cc25cdfdceadcafd094907af91a58092e1cab806", "msg": "remove eks and add cost exporter role stuff", "date": "2020-04-14 16:29:42-04:00", "modified_files": ["eks.tf", "instance_policy.json"]}]}, {"name": "https://github.com/cloudposse/terraform-aws-s3-bucket.git", "commits": [{"id": "e9dcc211445f9e315d894e61cd147cf5acf151d9", "msg": "Enable bucket key for reducing the cost of SSE-KMS with Amazon S3 (#115)\n\nCo-authored-by: Krishna Mohan Bandi <krishna.bandi@internetfusion.co.uk>\r\nCo-authored-by: cloudpossebot <11232728+cloudpossebot@users.noreply.github.com>\r\nCo-authored-by: Yonatan Koren <me@yonatankoren.com>", "date": "2022-01-16 19:49:30+00:00", "modified_files": ["README.md", "terraform.md", "fixtures.us-east-2.tfvars", "main.tf", "variables.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/MyCryptoHQ/MoonpaySigner.git", "commits": [{"id": "7bcafb9d401089ad871d71bfee9bcaa6fd0542fe", "msg": "working moonpay signer!!!!!!!", "date": "2020-03-27 10:04:50-07:00", "modified_files": ["main.go", "moonpaysigner.zip", "cors.tf", "lambda.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/module-management-gcp.git", "commits": [{"id": "fe1e35dce739c3b2367493796152b8a201709dd1", "msg": "infracost api", "date": "2021-05-15 08:23:07+01:00", "modified_files": [".gitignore", ".markdownlint.json", ".pre-commit-config.yaml", "Makefile", "secrets.tf", "terraform.tf", "validate.ps1", "validate.sh", "variables.tf"]}, {"id": "07ebfdef5b579959b5fa34fcf3aad999d5f8473e", "msg": "costs", "date": "2021-05-15 10:32:24+01:00", "modified_files": ["Makefile", "repositories.auto.tfvars"]}]}, {"name": "https://github.com/openoakland/infra.git", "commits": [{"id": "bb40cb225c18441a0e3cb02439d56205ea46f1bc", "msg": "Set up Cloudfront for oaklandcouncil.net\n\nThis adds Terraform resources for a TLS cert and accompanying Cloudfront\ndistribution for Councilmatic (doing business as OaklandCouncil.net).\n\nEventually it'd be swell to use the Terraform Namecheap provider to\ncreate the DNS records to validate the TLS cert and point to\nCloudfront... but alas Namecheap has not approved our API request yet.", "date": "2019-07-03 09:20:00-07:00", "modified_files": ["terraform.tf"]}, {"id": "ebc90be5962dfd7a3e3620a65734e3710f46340d", "msg": "Add oakcrime_namecheap_name_servers output for Namecheap\n\nThese need to be configured in Namecheap, which is outside of\nTerraform's control.", "date": "2020-05-19 21:26:43-07:00", "modified_files": ["outputs.tf", "oakcrime.tf"]}]}, {"name": "https://github.com/davidski/tf-public_subnet.git", "commits": [{"id": "ad841964564c461513643bb13531dc07111efc7d", "msg": "Move to AZ us-west-2a by default for cheaper spot-instances", "date": "2016-08-16 20:35:41-07:00", "modified_files": ["public_subnet.tf"]}]}, {"name": "https://github.com/jshcmpbll/Cloud-Mac-KVM.git", "commits": [{"id": "361885d22c0304cb44683f9b005f82ca5e269841", "msg": "Changing base image size and type to reduce cost", "date": "2020-12-31 12:39:38-08:00", "modified_files": ["instance.tf", "variables.tf"]}]}, {"name": "https://github.com/konradzawadka/lambda-http-native.git", "commits": [{"id": "bdc9c2bd6daab770d62d8f6bafc1de132099aad5", "msg": "payload 2.0", "date": "2021-03-06 21:51:17+01:00", "modified_files": ["main.tf"]}, {"id": "64e299ed7e68be29fe4608f833655e7c94bd0ef7", "msg": "payload 2.0", "date": "2021-03-06 22:14:26+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/sandyvanam/Terraform.git", "commits": [{"id": "c82a19d98673c1aeeb1fa26afb983acbfbea272f", "msg": "Add ec2 cost optimination using tags", "date": "2018-10-31 11:55:59+05:18", "modified_files": ["lambda.js", "main.tf", "variables.tf"]}, {"id": "5f0c515e6b145f244be7ef2492d9a700de5743e8", "msg": "Refactored ec2-cost-optimization-using-tags lambda", "date": "2018-11-16 18:56:15+05:18", "modified_files": ["lambda.js", "main.tf", "variables.tf"]}, {"id": "65f7112ea071383a397ab3bd34491c35d9265dd9", "msg": "Refactored config-rules and changed ec2-cost-optimization-using-tags to ec2-tags-checker", "date": "2018-11-20 12:48:58+05:18", "modified_files": ["instance_tags.js", "lambda.tf", "security_groups.js", "utills.js", "variables.tf", "lambda.js", "lambda.js", "utils.js", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/cloud-native-toolkit-test/git-module-test.git", "commits": [{"id": "0167d069ca1fbf91efb2b9f38d5a55a9ed77d5ac", "msg": "Adds payload yaml for ibm-cpd-dv-subcription (#7)", "date": "2022-02-08 00:43:22-06:00", "modified_files": ["module", "stage0.tf", "stage1-cert.tf", "stage1-cluster.tf", "stage1-cp-catalog.tf", "stage1-cp-foundation.tf", "stage1-cp4d-instance.tf", "stage1-cp4d-operator.tf", "stage1-gitops-bootstrap.tf", "stage1-gitops.tf", "stage1-namespace.tf", "stage2-cpd-dv.tf", "stage3-outputs.tf", "terraform.tfstate", "terraform.tfvars", "values.yaml", "variables.tf"]}]}, {"name": "https://github.com/goodpen/gke-v.1.0.git", "commits": [{"id": "f85b1961c93096d0be9b1dba034bfd9400a354e0", "msg": "delete the whole volume when blockchain absent\n\nfail when download fails\n\nmove to kustomize -- much better\n\nfrom file directly\n\nwrite kustomize file straight from terraform\n\nsimplify readme\n\nfrom-scratch baker deployment\n\narchive mode for proper payout operation\n\nwip\n\nintroduce payout\n\ngitignore\n\nwip connectivity checker for private node", "date": "2019-08-17 16:55:31-07:00", "modified_files": [".gitignore", "README.md", "tezos-baker-with-remote-signer.sh", "tezos-chain-downloader.sh", "tezos-endorser-with-remote-signer.sh", "Dockerfile", "requirements.txt", "tezos_private_node_connectivity_checker.py", "wsgi.py", "Dockerfile", "tezos-remote-signer-forwarder.sh", "inventory", "tezos-remote-signer.yaml", "main.yml", "main.yml", "tezos-signer-forwarder.service", "gcp.tf", "k8s.tf", "variables.tf", ".helmignore", "Chart.yaml", "backerei-payout.yaml", "configmap.yaml", "tezos-remote-signer-forwarder.tpl", "tezos-private-node-deployment.yaml", "tezos-public-node-stateful-set.yaml", "tezos-remote-signer-forwarder.yaml"]}, {"id": "926a05ff3f72e7edddc53a9cf55a4a5538cddb2d", "msg": "mainnet redo - archive mode to get payout", "date": "2019-09-05 21:54:12-07:00", "modified_files": ["Dockerfile.template", "tezos-archive-downloader.sh", "Dockerfile.template", "Dockerfile.template", "Dockerfile.template", "tezos-snapshot-downloader.sh", "gcp.tf", "k8s.tf", "variables.tf", "backerei-payout.yaml", "tezos-private-node-deployment.yaml", "tezos-public-node-stateful-set.yaml"]}, {"id": "0a3a6dd08547c452357ca8cf2094c1e4ab950ff1", "msg": "add the payout delay var\n\nadd readme for remote signer\n\nset history mode to rolling for public nodes (saves space)\n\nprevent terraform from nuking cluster when new version available", "date": "2019-09-21 19:48:47-07:00", "modified_files": ["README.md", "README.md", "inventory", "gcp.tf", "k8s.tf", "variables.tf", "backerei-payout.yaml", "tezos-public-node-stateful-set.yaml"]}, {"id": "0772108d560dba1ef0bafc91a4be973e6b109108", "msg": "new model without the payout node", "date": "2019-12-26 09:50:43-08:00", "modified_files": ["Dockerfile.template", "tezos-archive-downloader.sh", "Dockerfile.template", "Dockerfile.template", "Dockerfile.template", "tezos-snapshot-downloader.sh", "createPayoutPages.py", "gcp.tf", "k8s.tf", "variables.tf", "backerei-payout.yaml", "tezos-private-node-deployment.yaml", "tezos-public-node-stateful-set.yaml", "tezos-remote-signer-forwarder.yaml"]}, {"id": "bb66b344eb6277256ae5a73fbb9afcf1c3eb7e43", "msg": "remove more reference to payouts\n\nsince it all moved to the auxiliary cluster", "date": "2020-02-18 18:04:28+11:00", "modified_files": ["k8s.tf", "variables.tf", "tezos-private-node-deployment.yaml"]}, {"id": "45053a0862bf97f0525862c411fa4da5d59ac397", "msg": "switch to cheaper e2 GCP vms", "date": "2020-03-06 09:22:11+11:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/theclue/poorman-customerview.git", "commits": [{"id": "274af2be2ad8aaa6ce74c9200bb297b0786ea03c", "msg": "Add Segment payload", "date": "2021-05-18 02:16:56+02:00", "modified_files": ["backend.tf.example", "backend.tf.example", "main.tf", "main.tf", "outputs.tf", "segment.tf", "terraform.tfvars.example", "variables.tf"]}]}, {"name": "https://github.com/oleg-lon/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/terraform-google-modules/terraform-google-bootstrap.git", "commits": [{"id": "85e7a9cfb3210b315f2bc30a8bfecbba472c82bc", "msg": "feat: Add ability to disable granting billing IAM via grant_billing_user variable (#19)", "date": "2020-03-26 00:02:16+01:00", "modified_files": ["CHANGELOG.md", "README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/rbenavente/demo_drift_detection.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/terraform-google-modules/terraform-google-log-export.git", "commits": [{"id": "00830aa5ec18d2ee80a53c7ce7230012029cbe9d", "msg": "Introduce kitchen-terraform tests\n\nThis commit includes all changes needed to implement kitchen-terraform\ntests for the log-exports module. Tests are structured exactly the same\nas examples: folders for each of the destinations, and subfolders for\neach log sink level that's possible for each destination (with\nbilling_account as an exception - more on that later). Each test fixture\nfunctions independently and relies upon environment variables that are\nset within `test/ci_integration.sh` (environment variables for the SA\nkey json, project ID, and the parent resource\nproject/folder/org/billing_account). Like all the other CFT modules,\ntests are invoked based on make targets from `Makefile`, and there are\ndedicated targets for testing from the CFT Docker container as well as\ndirectly from your laptop/machine.\n\nA test fixture called `computed_values` has also been provided to\nspecifically test issue #10 of the log-export module. This test spins up\na project on the fly and passes that computed project ID to the\nlog-export module to ensure that the module can handle computed values.\n\nTests for the billing account level log sinks are not provided within this\ncommit and will be provided in a later commit/PR.", "date": "2019-03-26 08:31:01-07:00", "modified_files": [".kitchen.yml", "CHANGELOG.md", "Gemfile", "Makefile", "README.md", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "README.md", "main.tf", "README.md", "main.tf", "README.md", "main.tf", "main.tf", "README.md", "main.tf", "README.md", "main.tf", "README.md", "main.tf", "README.md", "main.tf", "README.md", "README.md", "README.md", "ci_integration.sh", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "gcloud.rb", "gcp.rb", "inspec.yml", "gcloud.rb", "gcp.rb", "inspec.yml", "gcp.rb", "inspec.yml", "gcp.rb", "inspec.yml", "gcloud.rb", "gcp.rb", "inspec.yml", "gcloud.rb", "gcp.rb", "inspec.yml", "gcloud.rb", "gcp.rb", "inspec.yml", "gcloud.rb", "gcp.rb", "inspec.yml", "gcloud.rb", "gcp.rb", "inspec.yml", "gcp.rb", "inspec.yml"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-azurerm-postgresql.git", "commits": [{"id": "50ad6d01d09e0e6fb16ebbb547c3bdb4f7c376c5", "msg": "costs", "date": "2021-05-17 18:55:03+01:00", "modified_files": ["compare.yml", "main.yml", "pull_request.yml", ".gitignore", ".pre-commit-config.yaml", "Makefile", "infracost-usage.yml", "terraform.tf", "validate.ps1", "validate.sh"]}]}, {"name": "https://github.com/andybaran/terraform-gcp-module-project.git", "commits": [{"id": "13762c579a5839a0b2d7edd1f817530f2df48817", "msg": "dont use billing account", "date": "2020-05-20 16:18:13-04:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "67e92f4e76043ba6454965b00c3209713bae5bb7", "msg": "testing billing account permissions", "date": "2020-05-21 12:44:37-04:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/mirakl/terraform-google-gcr-cleaner.git", "commits": [{"id": "dde36588108e7636dded10cedda97cac35d13618", "msg": "Feature: Implementing all payload parameters (#24)\n\n* Add payload missing parameters\r\n* Refactor local variables using unique keys for maps\r\n* Update examples\r\n* Update README\r\n* Handling recursive value\r\n* Payload parameter repo becomes repos", "date": "2021-11-24 09:58:49+01:00", "modified_files": [".pre-commit-config.yaml", ".terraform.lock.hcl", "README.md", "data.tf", ".terraform.lock.hcl", "README.md", "main.tf", "versions.tf", ".terraform.lock.hcl", "README.md", "main.tf", "versions.tf", "iam.tf", "locals.tf", "main.tf", "get_all_repositories.sh", "variables.tf", "versions.tf"]}, {"id": "0b62c57161feec5fee91b0d38b75fd47fb9873f7", "msg": "Fix: Adding repos parameter to payload (#27)\n\nrepos parameter was not added correctly from #24 reviews", "date": "2021-11-24 11:12:26+01:00", "modified_files": ["main.tf"]}, {"id": "0ea8b25761502e6d82606cb3c7defb8437b09667", "msg": "Feature: Introduce new payload parameters (#29)\n\nIn [release 0.7.0 of GCR Cleaner tool,](https://github.com/GoogleCloudPlatform/gcr-cleaner/releases/tag/v0.7.0) there was an introduction of new parameters:\r\n\r\n> This release introduces a new mechanism for deleting tagged images. You can now specify tag_filter_all or tag_filter_any to control how the filters match against images with multiple tags. The existing behavior of tag_filter is preserved, but will be removed in a future release. Additionally, specifying allow_tagged is no longer necessary as specifying any tag filter will automatically activate deleting tagged images.\r\n\r\nAlso in this PR:\r\n* Updating examples\r\n* Updating documentation\r\n* Updating pre-commit repos URLs: using https:// instead of git://. See https://github.blog/2021-09-01-improving-git-protocol-security-github/\r\nfor more details", "date": "2022-01-11 12:52:28+01:00", "modified_files": [".pre-commit-config.yaml", ".terraform.lock.hcl", "README.md", ".terraform.lock.hcl", "main.tf", ".terraform.lock.hcl", "iam.tf", "locals.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/ministryofjustice/cloud-platform-terraform-elasticsearch.git", "commits": [{"id": "3d545727be74a1a13ef2f582914dadf3da5ed210", "msg": "Add \"namespace\" tag to all tagged resources\n\nThis will enable the cost of dedicated elasticsearch instances to be\nallocated to namespaces correctly.", "date": "2020-10-14 17:32:48+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/tamsalem/terragoat-gh-3.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/awashbrook/aws-devops-challenge.git", "commits": [{"id": "a5cd8e40682ff2234b56da7a9b5f5782f09b5297", "msg": "Tagging more efficient", "date": "2021-10-26 23:07:32+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/kalenarndt/terraform-unifi-unifi-network.git", "commits": [{"id": "bd188d7ddee27c88554935e951325569b9f4672d", "msg": "fix invalid payload for wan", "date": "2022-01-26 11:17:08-07:00", "modified_files": ["providers.tf", "main.tf"]}]}, {"name": "https://github.com/firehawkvfx/firehawk-render-cluster.git", "commits": [{"id": "dba62ca62e3ea78ed8a273268b1a4304dd84645b", "msg": "update send deadline payload", "date": "2021-06-20 20:13:10+09:18", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/tylerhatton/f5-bigip-tf-module.git", "commits": [{"id": "c789a65cb45c3fabb45c3593fd436ddd81bacf74", "msg": "removed bigiq component with payg", "date": "2021-03-06 22:18:27-06:00", "modified_files": ["README.md", "main.tf", "user_data.tpl", "variables.tf"]}]}, {"name": "https://github.com/intetunder-temp/terraform-modules.git", "commits": [{"id": "a204f4e9af5457810e58211f4a4cb25975e29219", "msg": "wrong billing", "date": "2020-04-21 19:25:59+01:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/Automation-repo/terra.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/UKHomeOffice/dq-tf-infra-test.git", "commits": [{"id": "3b784d3d0419bb3796e657737c8ea1a8d4974e2f", "msg": "payload", "date": "2020-04-25 20:35:16+01:00", "modified_files": ["data.tf"]}, {"id": "1b650f0a5d601053c3a13a1f3132e22f1a968f65", "msg": "remove payload", "date": "2020-04-25 20:39:00+01:00", "modified_files": ["apps.tf", "ops.tf"]}, {"id": "a0b1b1d2dc27e830bc7ed066e1516731b6de46f3", "msg": "add dummy payloads", "date": "2020-04-25 21:11:01+01:00", "modified_files": ["data.tf"]}]}, {"name": "https://github.com/RavenProject/seed-node-fallback-domain-config.git", "commits": [{"id": "5ba235b0c935de75c2cb2f57686bc246816a7f74", "msg": "Remove two GCP seed nodes\n\nExcessively high bandwidth costs.", "date": "2021-06-15 16:08:08-06:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/Pavel-Hrabec/Azure-Terraform-Budget.git", "commits": [{"id": "4759aa86a84ee099d6ce3f3987520a5b6cd1ffd3", "msg": "edited variable and main.tf to immediately alert when significant cost arise", "date": "2022-04-02 08:31:46+02:00", "modified_files": [".gitignore", ".terraform.lock.hcl", "main.tf", "terraform.tfvars", "variables.tf"]}]}, {"name": "https://github.com/mintak21/terraform-modules.git", "commits": [{"id": "2ae9d9af74d76b4601899864b340eb72253c12e9", "msg": "add Cloud Billing Budget API", "date": "2021-09-11 01:27:48+09:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/tamsalem/terragoat-gh-2.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/rshurts/gke-cd-with-spinnaker.git", "commits": [{"id": "3bc712aba0c797053b5cdc113e3e46afb6cff8a5", "msg": "Reduce instance size to keep costs down while experimenting", "date": "2018-03-13 12:35:59-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/mederrata/terraform-cloudfront-bucket.git", "commits": [{"id": "e1a59673e4e8d5a4ff1af846f06ac05839d5136d", "msg": "Started terraform for the cdn bucket\n\n$terraform init\n\nInitializing the backend...\n\nInitializing provider plugins...\n- Finding hashicorp/aws versions matching \"~> 3.27\"...\n- Installing hashicorp/aws v3.51.0...\n- Installed hashicorp/aws v3.51.0 (signed by HashiCorp)\n\nTerraform has created a lock file .terraform.lock.hcl to record the provider\nselections it made above. Include this file in your version control repository\nso that Terraform can guarantee to make the same selections by default when\nyou run \"terraform init\" in the future.\n\nTerraform has been successfully initialized!\n\nYou may now begin working with Terraform. Try running \"terraform plan\" to see\nany changes that are required for your infrastructure. All Terraform commands\nshould now work.\n\nIf you ever set or change modules or backend configuration for Terraform,\nrerun this command to reinitialize your working directory. If you forget, other\ncommands will detect it and remind you to do so if necessary.\n\u279c  terraform-cdn-bucket git:(main) \u2717 terraform plan\n\nTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\n  + create\n\nTerraform will perform the following actions:\n\n  g aws_cloudfront_distribution.s3_distribution will be created\n  + resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n      + aliases                        = [\n          + \"domain_name\",\n        ]\n      + arn                            = (known after apply)\n      + caller_reference               = (known after apply)\n      + comment                        = \"Share CDN Files\"\n      + domain_name                    = (known after apply)\n      + enabled                        = true\n      + etag                           = (known after apply)\n      + hosted_zone_id                 = (known after apply)\n      + http_version                   = \"http2\"\n      + id                             = (known after apply)\n      + in_progress_validation_batches = (known after apply)\n      + is_ipv6_enabled                = true\n      + last_modified_time             = (known after apply)\n      + price_class                    = \"PriceClass_100\"\n      + retain_on_delete               = false\n      + status                         = (known after apply)\n      + tags                           = {\n          + \"Environment\" = \"production\"\n        }\n      + tags_all                       = {\n          + \"Anisible\"    = \"false\"\n          + \"Environment\" = \"production\"\n          + \"Terraform\"   = \"true\"\n        }\n      + trusted_key_groups             = (known after apply)\n      + trusted_signers                = (known after apply)\n      + wait_for_deployment            = true\n\n      + default_cache_behavior {\n          + allowed_methods        = [\n              + \"DELETE\",\n              + \"GET\",\n              + \"HEAD\",\n              + \"OPTIONS\",\n              + \"PATCH\",\n              + \"POST\",\n              + \"PUT\",\n            ]\n          + cached_methods         = [\n              + \"GET\",\n              + \"HEAD\",\n            ]\n          + compress               = false\n          + default_ttl            = 3600\n          + max_ttl                = 86400\n          + min_ttl                = 0\n          + trusted_key_groups     = (known after apply)\n          + trusted_signers        = (known after apply)\n          + viewer_protocol_policy = \"allow-all\"\n\n          + forwarded_values {\n              + headers                 = (known after apply)\n              + query_string            = false\n              + query_string_cache_keys = (known after apply)\n\n              + cookies {\n                  + forward           = \"none\"\n                  + whitelisted_names = (known after apply)\n                }\n            }\n        }\n\n      + logging_config {\n          + bucket          = (known after apply)\n          + include_cookies = false\n        }\n\n      + ordered_cache_behavior {\n          + allowed_methods        = [\n              + \"GET\",\n              + \"HEAD\",\n              + \"OPTIONS\",\n            ]\n          + cached_methods         = [\n              + \"GET\",\n              + \"HEAD\",\n              + \"OPTIONS\",\n            ]\n          + compress               = true\n          + default_ttl            = 86400\n          + max_ttl                = 31536000\n          + min_ttl                = 0\n          + path_pattern           = \"/*\"\n          + viewer_protocol_policy = \"redirect-to-https\"\n\n          + forwarded_values {\n              + headers                 = [\n                  + \"Origin\",\n                ]\n              + query_string            = false\n              + query_string_cache_keys = (known after apply)\n\n              + cookies {\n                  + forward = \"none\"\n                }\n            }\n        }\n\n      + origin {\n          + connection_attempts = 3\n          + connection_timeout  = 10\n          + domain_name         = (known after apply)\n\n          + s3_origin_config {\n              + origin_access_identity = \"origin-access-identity/cloudfront/ABCDEFG1234567\"\n            }\n        }\n\n      + restrictions {\n          + geo_restriction {\n              + locations        = [\n                  + \"CA\",\n                  + \"US\",\n                ]\n              + restriction_type = \"whitelist\"\n            }\n        }\n\n      + viewer_certificate {\n          + cloudfront_default_certificate = true\n          + minimum_protocol_version       = \"TLSv1\"\n        }\n    }\n\n  g aws_s3_bucket.cloudfront_bucket will be created\n  + resource \"aws_s3_bucket\" \"cloudfront_bucket\" {\n      + acceleration_status         = (known after apply)\n      + acl                         = \"private\"\n      + arn                         = (known after apply)\n      + bucket                      = (known after apply)\n      + bucket_domain_name          = (known after apply)\n      + bucket_regional_domain_name = (known after apply)\n      + force_destroy               = false\n      + hosted_zone_id              = (known after apply)\n      + id                          = (known after apply)\n      + region                      = (known after apply)\n      + request_payer               = (known after apply)\n      + tags                        = {\n          + \"Name\" = \"public-cdn-bucket\"\n        }\n      + tags_all                    = {\n          + \"Anisible\"  = \"false\"\n          + \"Name\"      = \"public-cdn-bucket\"\n          + \"Terraform\" = \"true\"\n        }\n      + website_domain              = (known after apply)\n      + website_endpoint            = (known after apply)\n\n      + server_side_encryption_configuration {\n          + rule {\n              + apply_server_side_encryption_by_default {\n                  + sse_algorithm = \"AES256\"\n                }\n            }\n        }\n\n      + versioning {\n          + enabled    = (known after apply)\n          + mfa_delete = (known after apply)\n        }\n    }\n\n  g aws_s3_bucket.cloudfront_log_bucket will be created\n  + resource \"aws_s3_bucket\" \"cloudfront_log_bucket\" {\n      + acceleration_status         = (known after apply)\n      + acl                         = \"private\"\n      + arn                         = (known after apply)\n      + bucket                      = (known after apply)\n      + bucket_domain_name          = (known after apply)\n      + bucket_regional_domain_name = (known after apply)\n      + force_destroy               = false\n      + hosted_zone_id              = (known after apply)\n      + id                          = (known after apply)\n      + region                      = (known after apply)\n      + request_payer               = (known after apply)\n      + tags                        = {\n          + \"Name\" = \"public-cdn-bucket\"\n        }\n      + tags_all                    = {\n          + \"Anisible\"  = \"false\"\n          + \"Name\"      = \"public-cdn-bucket\"\n          + \"Terraform\" = \"true\"\n        }\n      + website_domain              = (known after apply)\n      + website_endpoint            = (known after apply)\n\n      + server_side_encryption_configuration {\n          + rule {\n              + apply_server_side_encryption_by_default {\n                  + sse_algorithm = \"AES256\"\n                }\n            }\n        }\n\n      + versioning {\n          + enabled    = (known after apply)\n          + mfa_delete = (known after apply)\n        }\n    }\n\nPlan: 3 to add, 0 to change, 0 to destroy.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\nNote: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run \"terraform apply\" now.", "date": "2021-07-29 16:42:43-07:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/telia-oss/terraform-aws-terraform-init.git", "commits": [{"id": "e8c7b2eb22d08ddd1a1bb375cb6efa4165c9098f", "msg": "Change DynamoDB billing mode to On-Demand", "date": "2020-10-08 00:27:14+02:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/dwp/aws-analytical-env.git", "commits": [{"id": "6bde9ec62c050af3fa70404148d2a5e64cf865d8", "msg": "Dw 4172 sec remediation (#32)\n\n* DW-4172_Sec_remediation\r\n\r\n* DW-4172_Sec_remediation\r\n\r\n* Restrict IAM policies futher and use correct truststores\r\n\r\n* few fixes\r\n\r\n* Rework truststore elements\r\n\r\n* DW-4172 Use custom EMR security groups (#30)\r\n\r\n* DW-4172_Sec_remediation\r\n\r\n* Use custom security groups for EMR nodes\r\n\r\n* Terraform fmt previous PRs\r\n\r\nCo-authored-by: Casey Rogers <2818278+caseyr232@users.noreply.github.com>\r\n\r\n* Add SIDs\r\n\r\n* Add S3 config to conform to standards\r\n\r\n* Remove S3:List*\r\n\r\n* add s3:ListBucket\r\n\r\n* fix resource type\r\n\r\n* Fix account variable\r\n\r\n* readd kms CreateGrant\r\n\r\n* Swtich aliases and certs\r\n\r\n* Remove 'revoke_rules_on_delete' from snapshot_cognito_pool log group\r\n\r\n* Terraform fmt\r\n\r\n* revoke_rules_on_delete = true\r\n\r\n* tf fmt\r\n\r\n* DW-4172: Resolve conflicts\r\n\r\n* Use new username format (#33)\r\n\r\n* Dw 4159 new username (#31)\r\n\r\n* DW-4098 Terraform errors\r\n\r\n* DW-4172: Address review comments\r\n\r\n* Add restrictions on glue, remove breaking permissions from SSM\r\n\r\nCo-authored-by: Liam Rae-McLauchlan <liam.rae-mclauchlan@infinityworks.com>\r\nCo-authored-by: draagc-iw <55280269+draagc-iw@users.noreply.github.com>\r\nCo-authored-by: Dragos Costache <dragos.costache@infinityworks.com>\r\nCo-authored-by: Ian Utley <ian.utley@infinityworks.com>\r\nCo-authored-by: Ian Utley <utley.ian@gmail.com>", "date": "2020-05-29 13:16:14+01:00", "modified_files": ["modules.tf", "terraform.tf.j2", "outputs.tf", "acm.tf", "alb.tf", "security_group.tf", "lambda.tf", "lambda_iam.tf", "custom_auth_flow_lambdas.tf", "iam.tf", "configuration_emr.tf", "emr.tf", "emrfs_iam.tf", "iam.tf", "kms.tf", "s3.tf", "security_groups.tf", "setup.sh", "variables.tf", "dynamodb.tf", "lambda.tf", "lambda_function.py", "waf_geo_match.tf", "waf_rule.tf", "waf_web_acl.tf"]}, {"id": "7a10af8df304e2cc382031f3d3ab5252f7210c75", "msg": "[DW-4347] Add Costcode and Team tags (#67)\n\n* DW-4347 Add Costcode and Team tags", "date": "2020-06-19 11:57:02+01:00", "modified_files": ["meta.yml", "terraform.tf.j2", "variables.tf", "terraform.tf.j2", "variables.tf", "terraform.tf.j2", "variables.tf"]}, {"id": "fce3aa57e452efe9178f341274b2bf10a14712f0", "msg": "DW-4947 - Migrate to new proxy (#157)\n\n* DW-4947 - Migrate to new proxy\r\n\r\nSigned-off-by: Benjamin Sherwood <benjaminsherwood@digital.uc.dwp.gov.uk>\r\n\r\n* Newline...\r\n\r\nSigned-off-by: Benjamin Sherwood <benjaminsherwood@digital.uc.dwp.gov.uk>\r\n\r\n* Newline...\r\n\r\nSigned-off-by: Benjamin Sherwood <benjaminsherwood@digital.uc.dwp.gov.uk>\r\n\r\n* Migrate EMR to new proxy VPCe\r\n\r\nCo-authored-by: Dragos Costache <dragos.costache@infinityworks.com>\r\nCo-authored-by: Matthew Burgess <549318+mattburgess@users.noreply.github.com>", "date": "2020-09-25 09:46:57+01:00", "modified_files": ["modules.tf", "terraform.tf.j2", "modules.tf", "outputs.tf", "local.tf", "security_groups.tf", "variables.tf", "internet_egress.tf", "locals.tf", "variables.tf"]}, {"id": "1f440ba855656d2e6d6e5065bc60fd0b86c96986", "msg": "Dw 5492 build paymenttimelines (#269)", "date": "2021-01-22 15:37:45+00:00", "modified_files": ["resources.yml", "modules.tf", "iam.tf", "variables.tf"]}, {"id": "995f2a0e13b9901664a65505804c49acff86943f", "msg": "Dw 5598 switch to rbac2 for development (#296)\n\n* tags to bucket objects\r\n\r\n* Dw 5295 mapping users to user iam roles (#211)\r\n\r\n* Add user role terraform external data source\r\n\r\n* Add user roles to emr security configuration\r\n\r\n* adding predictable role names to POC\r\n\r\n* python added to image used for tf ci\r\n\r\n* adding python and boto3 to ci container and passing in region to script\r\n\r\n* rebase\r\n\r\n* region added to session\r\n\r\n* hard coded region added to session\r\n\r\n* using data.aws_region for region input to script\r\n\r\n* PR comment\r\n\r\nCo-authored-by: Dragos Costache <dragos.costache@infinityworks.com>\r\n\r\n* User based configs for release branch (#217)\r\n\r\n* adding in missing tags (#212)\r\n\r\n* DW-5338 fix permission error for coping files (#214)\r\n\r\nCo-authored-by: abdurrahmannuhu <abdurrahman.nuhu@dwp.gsi.gov.ukgit config --global user.name abdurrahmannuhugit config --global user.email abdurrahman.nuhu@dwp.gsi.gov.uk>\r\n\r\n* Fix rotate client credentials for jq unsafe client names (#215)\r\n\r\n* Dw 5295 mapping users to user iam roles (#211)\r\n\r\n* Add user role terraform external data source\r\n\r\n* Add user roles to emr security configuration\r\n\r\n* adding predictable role names to POC\r\n\r\n* python added to image used for tf ci\r\n\r\n* adding python and boto3 to ci container and passing in region to script\r\n\r\n* rebase\r\n\r\n* region added to session\r\n\r\n* hard coded region added to session\r\n\r\n* using data.aws_region for region input to script\r\n\r\n* PR comment\r\n\r\nCo-authored-by: Dragos Costache <dragos.costache@infinityworks.com>\r\n\r\n* rebase onto master and removing group config\r\n\r\n* AuthorizationConfiguration fix\r\n\r\nCo-authored-by: abdu-n <57192333+abdu-n@users.noreply.github.com>\r\nCo-authored-by: abdurrahmannuhu <abdurrahman.nuhu@dwp.gsi.gov.ukgit config --global user.name abdurrahmannuhugit config --global user.email abdurrahman.nuhu@dwp.gsi.gov.uk>\r\nCo-authored-by: draagc-iw <55280269+draagc-iw@users.noreply.github.com>\r\nCo-authored-by: Dragos Costache <dragos.costache@infinityworks.com>\r\n\r\n* toggle development to use rbac 2\r\n\r\n* toggled development back to rbac version 1\r\n\r\n* PR review corrections\r\n\r\nCo-authored-by: MattToczek <toczek.matt@gmail.com>\r\nCo-authored-by: MattToczek <52243130+MattToczek@users.noreply.github.com>\r\nCo-authored-by: Dragos Costache <dragos.costache@infinityworks.com>\r\nCo-authored-by: abdu-n <57192333+abdu-n@users.noreply.github.com>\r\nCo-authored-by: abdurrahmannuhu <abdurrahman.nuhu@dwp.gsi.gov.ukgit config --global user.name abdurrahmannuhugit config --global user.email abdurrahman.nuhu@dwp.gsi.gov.uk>\r\nCo-authored-by: draagc-iw <55280269+draagc-iw@users.noreply.github.com>\r\nCo-authored-by: thomasstock-caldwell <thomas.stock-caldwell@engineering.digital.dwp.gov.uk>", "date": "2021-02-11 15:30:13+00:00", "modified_files": ["meta.yml", "modules.tf", "terraform.tf.j2", "modules.tf", "data.tf", "data_cognito_user_roles.py", "output.tf", "variables.tf", "configuration_emr.tf", "configuration_security.tf", "cloudwatch.sh", "variables.tf"]}, {"id": "972dd6775f57195c05c5e1428fe517af55e517f0", "msg": "Change the location while creating uc_payment_timelines databases (#329)\n\n* Change the location while creating uc_payment_timelines databases\r\n\r\n* format changes\r\n\r\nCo-authored-by: PhanindraVenkata <phanindra.venkata@dwp.gsi.gov.uk>", "date": "2021-03-02 22:01:49+00:00", "modified_files": ["configuration_emr.tf", "create_dbs.sh"]}, {"id": "e4fadaa31d33b016fc538f4f8832e49e283eb4fe", "msg": "Emr 6 (#346)\n\n* emr-6 branch\r\n\r\nSigned-off-by: levankirvalidze <levan.kirvalidze@dmwgroup.co.uk>\r\n\r\n* point to new RDS and upgrade to emr6\r\n\r\nSigned-off-by: levankirvalidze <levan.kirvalidze@dmwgroup.co.uk>\r\n\r\n* remove unexpected vars\r\n\r\nSigned-off-by: levankirvalidze <levan.kirvalidze@dmwgroup.co.uk>\r\n\r\n* get sparklyr 3.0 instead\r\n\r\nSigned-off-by: levankirvalidze <levan.kirvalidze@dmwgroup.co.uk>\r\n\r\n* remove tez stuff and upgrade sparklyr release\r\n\r\nSigned-off-by: levankirvalidze <levan.kirvalidze@dmwgroup.co.uk>\r\n\r\n* put tex back\r\n\r\nSigned-off-by: levankirvalidze <levan.kirvalidze@dmwgroup.co.uk>\r\n\r\n* pass new secret name\r\n\r\nSigned-off-by: levankirvalidze <levan.kirvalidze@dmwgroup.co.uk>\r\n\r\n* Add hive_metastore_secret_id to batch config template vars\r\n\r\n* add instructions on what was done to get to emr6\r\n\r\nSigned-off-by: levankirvalidze <levan.kirvalidze@dmwgroup.co.uk>\r\n\r\n* point to new RDS and upgrade to emr6\r\n\r\nSigned-off-by: levankirvalidze <levan.kirvalidze@dmwgroup.co.uk>\r\n\r\n* remove unexpected vars\r\n\r\nSigned-off-by: levankirvalidze <levan.kirvalidze@dmwgroup.co.uk>\r\n\r\n* pass new secret name\r\n\r\nSigned-off-by: levankirvalidze <levan.kirvalidze@dmwgroup.co.uk>\r\n\r\n* Add tez conf to emr-launcher config files\r\n\r\n* emr 6 upgrade\r\n\r\nCo-authored-by: levankirvalidze <levan.kirvalidze@dmwgroup.co.uk>\r\nCo-authored-by: Dragos Costache <dragos.costache@infinityworks.com>\r\nCo-authored-by: udaykiranchokkam <udaykiranchokkam@digital.uc.dwp.gov.uk>", "date": "2021-03-12 11:53:45+00:00", "modified_files": ["README.md", "configurations.yaml.tpl", "configurations.yaml.tpl", "modules.tf", "s3.tf", "variables.tf", "configuration.mysql.json", "get_dks_cert.sh", "hdfs_setup.sh", "sparkR_install.sh"]}, {"id": "9d90cc482385add18db438dd91ed089a7fb9af3a", "msg": "added config files for payment timelines clusters (#512)\n\nSigned-off-by: Mark <mark.stevens@infinityworks.com>", "date": "2021-09-01 13:45:50+01:00", "modified_files": ["modules.tf", "variables.tf", "s3.tf", "variables.tf"]}]}, {"name": "https://github.com/guanabara/test-terraform-aws-ecr.git", "commits": [{"id": "506512c6db51a5d23648f974b9cc9c4322629e92", "msg": "test (#1)\n\ntest\r\n\r\nCo-authored-by: Nuno Teixeira <nuno@paytient.co>", "date": "2022-03-09 14:43:19+00:00", "modified_files": ["config.yml", "README.md", "config.yml", "plan-comment.tpl", "main.tf", "repositories.tf", "repository.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/jefersonmsantos/igti-edc-modulo01-exercicio.git", "commits": [{"id": "d6b54c0f338668cddf1123bf4e5e48c0eb80cfe7", "msg": "adjust payload lambda tf", "date": "2021-08-09 10:25:54-03:00", "modified_files": ["lambda.tf"]}, {"id": "3caf602a49914b378463f07c6bf7009a65a9ba4a", "msg": "adjus build_lambda payload", "date": "2021-08-09 11:53:39-03:00", "modified_files": ["iam.tf"]}]}, {"name": "https://github.com/dextacy10-13/blc-techtask-cicd.git", "commits": [{"id": "1268beb9d3c5d46469ebe130c1d6ace7387f1ff7", "msg": "Consolidate Dev Servers\n\nTask 1 only requires PHP to do unit testing so could share PHP server with Task 2.  Also shows example of mutable infrastructure.  AWS limits EIP to 5 per region (have requested increase), for now can either consilated resources or use multiple regions.  For cost makes sense to consolidate.", "date": "2020-06-11 15:00:08+01:00", "modified_files": ["lemp-client.yml", "phpweb.yml", "main.tf", "network.tf", "security.tf", "variables.tf"]}]}, {"name": "https://github.com/subrotomukherjee/future-hearings-hmi-api-gateway.git", "commits": [{"id": "5024990dcc7f83e97f7cfdf971fc9e6082a7d9a1", "msg": "draft commit for payhub api gateway", "date": "2018-07-17 14:27:53+01:00", "modified_files": [".gitignore", "Jenkinsfile_CNP", "Jenkinsfile_parameterized", "README.md", "main.tf", "output.tf", "api-policy.xml", "api.json", "variables.tf"]}, {"id": "94494f8cda7cb3dd57e7ab338d97705ea33a7c25", "msg": "moved to shared infra vault (ccpay-env)", "date": "2018-10-17 13:26:44+01:00", "modified_files": ["main.tf"]}, {"id": "8202f4d16aa8cf1014cdd047b1f7d846a32fce85", "msg": "PAY-1401", "date": "2018-10-30 11:37:21+00:00", "modified_files": ["prod.tfvars"]}]}, {"name": "https://github.com/traveloka/terraform-aws-common-iam-roles.git", "commits": [{"id": "51b8aaeb78882dd212150ce443054cdbd4617ff8", "msg": "Add billing-user submodule. (#5)", "date": "2018-05-24 18:57:17+07:00", "modified_files": ["README.md", "README.md", "main.tf", "README.md", "main.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/ohpensource/terraform-aws-ohp-ecs.git", "commits": [{"id": "c2e31ee08b849c510c4ed856d2384995452a233c", "msg": "PAYM-4981 patch - added count to prevent creating resource while autoscaling is disabled.", "date": "2021-06-01 20:28:12+02:00", "modified_files": ["autoscaling.tf"]}]}, {"name": "https://github.com/qb-abdul/terraform-cost.git", "commits": [{"id": "b9384b4ca9c8ac18c3168d7e35b0d795fddaac34", "msg": "Create cost-usage.tf", "date": "2020-12-14 22:53:25+05:18", "modified_files": ["cost-usage.tf"]}, {"id": "fc4535db3e01238249f78bbd912ee6938e8b1941", "msg": "Update cost-usage.tf", "date": "2020-12-14 22:55:10+05:18", "modified_files": ["cost-usage.tf"]}, {"id": "57b01978c097c22d273b66fcc35637f5fcbcd648", "msg": "Update cost-usage.tf", "date": "2020-12-14 22:58:12+05:18", "modified_files": ["cost-usage.tf"]}, {"id": "352cbc836fdedb883eda1106f73431c03d4c8bf1", "msg": "Update cost-usage.tf", "date": "2020-12-14 23:02:04+05:18", "modified_files": ["cost-usage.tf"]}]}, {"name": "https://github.com/mredmond1/tgoatcopy.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/midl-dev/tezos-on-gke.git", "commits": [{"id": "f85b1961c93096d0be9b1dba034bfd9400a354e0", "msg": "delete the whole volume when blockchain absent\n\nfail when download fails\n\nmove to kustomize -- much better\n\nfrom file directly\n\nwrite kustomize file straight from terraform\n\nsimplify readme\n\nfrom-scratch baker deployment\n\narchive mode for proper payout operation\n\nwip\n\nintroduce payout\n\ngitignore\n\nwip connectivity checker for private node", "date": "2019-08-17 16:55:31-07:00", "modified_files": [".gitignore", "README.md", "tezos-baker-with-remote-signer.sh", "tezos-chain-downloader.sh", "tezos-endorser-with-remote-signer.sh", "Dockerfile", "requirements.txt", "tezos_private_node_connectivity_checker.py", "wsgi.py", "Dockerfile", "tezos-remote-signer-forwarder.sh", "inventory", "tezos-remote-signer.yaml", "main.yml", "main.yml", "tezos-signer-forwarder.service", "gcp.tf", "k8s.tf", "variables.tf", ".helmignore", "Chart.yaml", "backerei-payout.yaml", "configmap.yaml", "tezos-remote-signer-forwarder.tpl", "tezos-private-node-deployment.yaml", "tezos-public-node-stateful-set.yaml", "tezos-remote-signer-forwarder.yaml"]}, {"id": "926a05ff3f72e7edddc53a9cf55a4a5538cddb2d", "msg": "mainnet redo - archive mode to get payout", "date": "2019-09-05 21:54:12-07:00", "modified_files": ["Dockerfile.template", "tezos-archive-downloader.sh", "Dockerfile.template", "Dockerfile.template", "Dockerfile.template", "tezos-snapshot-downloader.sh", "gcp.tf", "k8s.tf", "variables.tf", "backerei-payout.yaml", "tezos-private-node-deployment.yaml", "tezos-public-node-stateful-set.yaml"]}, {"id": "0a3a6dd08547c452357ca8cf2094c1e4ab950ff1", "msg": "add the payout delay var\n\nadd readme for remote signer\n\nset history mode to rolling for public nodes (saves space)\n\nprevent terraform from nuking cluster when new version available", "date": "2019-09-21 19:48:47-07:00", "modified_files": ["README.md", "README.md", "inventory", "gcp.tf", "k8s.tf", "variables.tf", "backerei-payout.yaml", "tezos-public-node-stateful-set.yaml"]}, {"id": "0772108d560dba1ef0bafc91a4be973e6b109108", "msg": "new model without the payout node", "date": "2019-12-26 09:50:43-08:00", "modified_files": ["Dockerfile.template", "tezos-archive-downloader.sh", "Dockerfile.template", "Dockerfile.template", "Dockerfile.template", "tezos-snapshot-downloader.sh", "createPayoutPages.py", "gcp.tf", "k8s.tf", "variables.tf", "backerei-payout.yaml", "tezos-private-node-deployment.yaml", "tezos-public-node-stateful-set.yaml", "tezos-remote-signer-forwarder.yaml"]}, {"id": "bb66b344eb6277256ae5a73fbb9afcf1c3eb7e43", "msg": "remove more reference to payouts\n\nsince it all moved to the auxiliary cluster", "date": "2020-02-18 18:04:28+11:00", "modified_files": ["k8s.tf", "variables.tf", "tezos-private-node-deployment.yaml"]}, {"id": "45053a0862bf97f0525862c411fa4da5d59ac397", "msg": "switch to cheaper e2 GCP vms", "date": "2020-03-06 09:22:11+11:00", "modified_files": ["variables.tf"]}, {"id": "d212bc3e4196069dfb6937bd93486130561b7f74", "msg": "add payout pool", "date": "2021-06-02 09:10:38-07:00", "modified_files": ["nodepool.yaml.tmpl", "k8s.tf", "variables.tf"]}, {"id": "47492c30188136f2dcfe4d161c6e83e2923b05c6", "msg": "put trd report file in a bucket for analysis (#53)\n\n* put trd report file in a bucket for analysis\r\n\r\nit makes it easy to do development work on TRD and gives users an easy\r\nway to access detailed csv payment files\r\n\r\nbucket names are randomized, and we use workload identity to give bucket\r\nwrite rights to containers.\r\n\r\n* do not login to kubectl, recursive upload", "date": "2021-12-29 16:01:12-08:00", "modified_files": ["Dockerfile.template", "entrypoint.sh", "trd-payout.yaml", "kustomization.yaml.tmpl", "serviceaccountannotate.yaml.tmpl", "trd-args.yaml.tmpl", "k8s.tf"]}, {"id": "123cc0da0ce5e5883d46960b5627f198e36c3e36", "msg": "add `pay_denunciation_rewards` config for recent TRD versions", "date": "2022-01-05 22:34:44-08:00", "modified_files": ["k8s.tf"]}]}, {"name": "https://github.com/marc-leblanc/gcp-demo-org.git", "commits": [{"id": "6c4c57661cefe679d6075fedf603521c5ff52777", "msg": "billing for projects", "date": "2020-10-27 12:11:56-04:00", "modified_files": ["lhq-project_cp1.tf", "variables.tf"]}]}, {"name": "https://github.com/StatCan/terraform-statcan-kubernetes-core-platform.git", "commits": [{"id": "4943912241612ef778dc292942f7b9202f9802c7", "msg": "feat: Update kubecost to 15.3", "date": "2021-07-16 13:42:30-04:00", "modified_files": ["kubecost.tf"]}, {"id": "8b39520e4d17303f42c0f15d58ff9c55d43a8d39", "msg": "feat: Allow ingress controller to access kubecost-system namespace", "date": "2021-07-16 19:34:59+00:00", "modified_files": ["kubecost.tf"]}, {"id": "03e27edd980b43eadf437e5596788b8c4a5417ce", "msg": "feat: Switch kubecost to upstream", "date": "2021-08-24 19:27:47-04:00", "modified_files": ["kubecost.tf"]}, {"id": "8d78b1f2371101718170fa2353b51ca153f468f4", "msg": "feat(kubecost): Fixes for OOC", "date": "2021-09-02 14:50:12-04:00", "modified_files": ["kubecost.tf"]}, {"id": "3d8565454ab338c356ef8ff7b08a2b606319dca6", "msg": "feat(kubecost): Permanent fix for OOC", "date": "2021-09-09 09:15:30-04:00", "modified_files": ["kubecost.tf"]}, {"id": "db7b2bf9df94e9a168d2de04f5ec81afafae3e7a", "msg": "feat(kubecost): Add custom labels", "date": "2021-09-09 09:54:59-04:00", "modified_files": ["kubecost.tf"]}, {"id": "78b95d5888bf59ea8b23be47d843b6bed00fffee", "msg": "feat(ns): Add istio injection to kubecost ns", "date": "2021-09-14 11:57:34-04:00", "modified_files": ["kubecost.tf"]}, {"id": "be8b36a094fac25fd9c8ca16881e9c720ebdfab9", "msg": "feat(kubecost): allow for the ability to define nodeselectors for prometheus.", "date": "2022-01-06 17:12:20+00:00", "modified_files": [".gitignore", "gatekeeper.tf", "kubecost.tf", "variables.tf"]}, {"id": "a24c2e626198368cf883400c250c7f95830f7801", "msg": "fix(kubecost-prometheus): add interpolation to run expected functions.", "date": "2022-01-06 12:49:39-05:00", "modified_files": ["kubecost.tf"]}]}, {"name": "https://github.com/kmishra9/PL2-AWS-Setup.git", "commits": [{"id": "0d7b5b0f6f92ff6cfde1f17ad96d1b1459a0957a", "msg": "Updated example instances to use newer, cheaper instance types", "date": "2019-03-19 23:35:13-07:00", "modified_files": ["example.tfvars.example", "variables.tf"]}]}, {"name": "https://github.com/3191110276/cloud-native-brewery.git", "commits": [{"id": "c26fd46122b16958a928683f0b46b712f1eded92", "msg": "moved extpayment to module", "date": "2021-02-10 20:03:16+01:00", "modified_files": ["main.tf", ".helmignore", "Chart.yaml", "extpayment.yaml", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/pluralsh/plural-at-demo.git", "commits": [{"id": "6d1cec4da673fe89a3c2cd30bd2a480f3213f59e", "msg": "console deployment for kubecost -- Installed bundle kubecost-aws for repository kubecost", "date": "2021-10-07 15:09:37+00:00", "modified_files": ["NONCE", "deploy.hcl", "manifest.yaml", "NONCE", "deploy.hcl", "values.yaml", "manifest.yaml", "context.yaml", "NONCE", "deploy.hcl", "NONCE", "deploy.hcl", "manifest.yaml", "NONCE", "deploy.hcl", "manifest.yaml", "NONCE", "deploy.hcl", "manifest.yaml", "NONCE", "deploy.hcl", "manifest.yaml", "NONCE", "deploy.hcl", "manifest.yaml", "NONCE", "ONCE", ".pluralignore", "build.hcl", "deploy.hcl", "diff.hcl", ".helmignore", "Chart.lock", "Chart.yaml", "kubecost-0.1.15.tgz", "NOTES.txt", "application.yaml", "values.yaml", "manifest.yaml", "output.yaml", ".gitattributes", "deps.yaml", "main.tf", "variables.tf", "main.tf", "outputs.tf", "NONCE", "deploy.hcl", "manifest.yaml", "NONCE", "deploy.hcl", "manifest.yaml", "NONCE", "deploy.hcl", "manifest.yaml", "NONCE", "deploy.hcl", "manifest.yaml", "NONCE", "deploy.hcl", "manifest.yaml", "NONCE", "deploy.hcl", "manifest.yaml"]}]}, {"name": "https://github.com/mineiros-io/terraform-google-billing-budget.git", "commits": [{"id": "caa5196a4720024a9cc43671eb846b112a277c7b", "msg": "feat: add support for the google_billing_budget resource", "date": "2021-12-10 15:12:00-06:00", "modified_files": ["tests.yml", "CHANGELOG.md", "Makefile", "main.tf", "outputs.tf", "README.md", "main.tf", "main.tf", "main.tf", "unit_complete_test.go", "unit_disabled_test.go", "unit_minimal_test.go", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/y0zg/sitecore-aws-environment-samples.git", "commits": [{"id": "cb5484fec7871459e534ab81c290318e10e03c58", "msg": "Add 'billing' tag", "date": "2019-12-10 10:33:27+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/Bwanabanana/expensify-infra.git", "commits": [{"id": "77576dcea57ef81622e29f6f950dbcd0b2ea6d78", "msg": "Added dynamodb for expenses storage", "date": "2020-08-09 17:07:39+01:00", "modified_files": ["dynamodb.tf", "lambda.tf"]}, {"id": "d7c41564aac998885d2fad7607670802f70235db", "msg": "Added add, update and delete expense functoins", "date": "2020-08-15 11:50:09+01:00", "modified_files": ["gateway.tf", "lambda.tf", "openapi.yml"]}]}, {"name": "https://github.com/kaz/kiritan.com.git", "commits": [{"id": "1cd96c7f71e56629ffa07c38e12c4da19fcfc5f7", "msg": "cost optimization", "date": "2020-01-27 23:04:10+09:00", "modified_files": ["deploy.tf", "playbook.yaml"]}]}, {"name": "https://github.com/kudla/terraform-aws-lambda-nodejs-payload.git", "commits": [{"id": "db82c389f4044c5b270305c44a0526c98b72e3b3", "msg": "escape updir referrer payload", "date": "2021-01-27 05:00:50+02:00", "modified_files": ["locals.tf", "main.tf", "output.tf"]}]}, {"name": "https://github.com/LRomp/cftdeployment.git", "commits": [{"id": "735837b7e959cc33f35a7d1b3ac25ffb5202a5e5", "msg": "fix: add biling account viewer permissions to billing-data-users group (#105)", "date": "2020-07-23 03:19:52-03:00", "modified_files": ["iam.tf"]}, {"id": "6c13d3383700fddfa8ef4dd35e6fa66d3b449431", "msg": "add billing.admin role to terraform SA and remove budget from projects in 0-bootstrap. (#205)", "date": "2020-08-05 15:59:04-03:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}, {"id": "a18b2036531d9529778d6a0e6b6c9583a0ec76a2", "msg": "feat: Add permissions for SFB recommended groups (#446)\n\n* Added group and firecall permissions\r\n\r\naccording to SFB on orgnization level.\r\n\r\n* 1-org README.md updated with new variables\r\n\r\n* Corrected permissions for firewall billing admin user\r\n\r\n* Corrected permissions for firewall billing admin user\r\n\r\n* Variable description and comments updates\r\n\r\n* Added group and firecall permissions\r\n\r\naccording to SFB on orgnization level.\r\n\r\n* 1-org README.md updated with new variables\r\n\r\n* Corrected permissions for firewall billing admin user\r\n\r\n* Corrected permissions for firewall billing admin user\r\n\r\n* Variable description and comments updates", "date": "2021-07-14 16:29:41+02:00", "modified_files": ["README.md", "iam.tf", "variables.tf"]}, {"id": "8391f1bd4322fec04fda7509b537c5f66cddbbd9", "msg": "fix: data_access_logs_enabled now enables read and write audit logs, defaults to false for cost savings (#630)\n\n* Comment enabling Read and Write\r\n\r\n* Fix code review issues\r\n\r\n* Fix code review issues\r\n\r\n* Changes default value to false\r\n\r\n* Fix build error\r\n\r\n* Fix dynamic code", "date": "2022-02-09 04:00:09-03:00", "modified_files": ["README.md", "iam.tf", "variables.tf"]}]}, {"name": "https://github.com/luca-rotondaro/IPA-Luca-test.git", "commits": [{"id": "f4c5865c58b441a667dffa6721f94cfe4bc19e0c", "msg": "all files updated, separate costmanagement file and new variables", "date": "2022-03-31 10:40:15+02:00", "modified_files": ["costmanagement.tf", "data.tf", "local-values.json", "main.tf", "outputs.tf", "providers.tf", "terraform.tfvars", "variables.tf"]}, {"id": "611e62b82ad01e7c88ba8889747759e088bfa090", "msg": "JSON values changed + cost management", "date": "2022-04-01 00:00:07+02:00", "modified_files": ["costmanagement.tf", "local-values.json"]}]}, {"name": "https://github.com/circa10a/terraform-local-minio.git", "commits": [{"id": "04749d10fcdcf2eacd0a36cada16b931cdc8e17c", "msg": "make dynamic block more efficient", "date": "2019-10-14 21:43:38-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/kaustubhharapanahalli/Getting-Started-with-Terraform.git", "commits": [{"id": "65ff7d65b349ab8e2bda45f5038cc3ae56e08052", "msg": "Modify to include S3 to serve and fetch logs\n\n- Add new variables\n\t- BUCKET NAME PREFIX\n\t- BILLING CODE TAG\n\t- ENVIRONMENT TAG\n- Add local parameters to define S3 Bucket name\n- Update resources\n\t- Add TAGS to each resource\n\t- Add FILE PROVISIONERs\n\t- Update REMOTE-EXEC commands\n- Add new resources\n\t- RANDOM INTEGER\n\t- AWS S3 BUCKET\n\t- AWS S3 BUCKET OBJECT", "date": "2020-12-21 21:54:28+05:18", "modified_files": ["aws_deploy.tf"]}]}, {"name": "https://github.com/tensult/terraform.git", "commits": [{"id": "c82a19d98673c1aeeb1fa26afb983acbfbea272f", "msg": "Add ec2 cost optimination using tags", "date": "2018-10-31 11:55:59+05:18", "modified_files": ["lambda.js", "main.tf", "variables.tf"]}, {"id": "5f0c515e6b145f244be7ef2492d9a700de5743e8", "msg": "Refactored ec2-cost-optimization-using-tags lambda", "date": "2018-11-16 18:56:15+05:18", "modified_files": ["lambda.js", "main.tf", "variables.tf"]}, {"id": "65f7112ea071383a397ab3bd34491c35d9265dd9", "msg": "Refactored config-rules and changed ec2-cost-optimization-using-tags to ec2-tags-checker", "date": "2018-11-20 12:48:58+05:18", "modified_files": ["instance_tags.js", "lambda.tf", "security_groups.js", "utills.js", "variables.tf", "lambda.js", "lambda.js", "utils.js", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/relaycorp/cloud-gateway.git", "commits": [{"id": "759b1d641a430bf189354e9a4866e72fe56c22dc", "msg": "Upgrade instances to the expensive, CPU-optimised ones\n\nMake it rain!", "date": "2020-11-30 15:53:05+00:00", "modified_files": ["gke.tf", "variables.tf", "env-test.tf"]}]}, {"name": "https://github.com/CoderFromCali/terraform-demo.git", "commits": [{"id": "eee5e6c14832d6b6ec461b9bbe6649ba5824cd47", "msg": "Add billing code tags", "date": "2022-01-31 14:55:21-08:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "009290ea78c2868c4cf8e2ef3e726d3697efab5a", "msg": "Remove Billing Code support", "date": "2022-02-06 23:28:20-08:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "073a481d6fe57dfa72f2e1ed01450da84c24e7aa", "msg": "Add Billing Code support", "date": "2022-02-06 23:38:05-08:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "1061fadf8ae094c875586433f4eaa7918adf0311", "msg": "Remove Billing Codes", "date": "2022-02-06 23:50:52-08:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "34037d1aa33098443cfcc811dfc0a282cf6e10e4", "msg": "Add billing code tags", "date": "2022-02-10 22:43:15-08:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "f2b7e45bb417d9afb68d95646661e1bc02f26628", "msg": "Remove billing codes", "date": "2022-02-10 23:13:53-08:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "8bc73034b206c9c58fb9b9fbca8a3baefb7cfd6a", "msg": "Add billing codes", "date": "2022-02-10 23:21:16-08:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "004c56c38d8aa057797134d4e7de1b41542377da", "msg": "Remove Billing Codes", "date": "2022-02-10 23:40:27-08:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "428fd65bbe5e904013115b721ca4dbcf81db9780", "msg": "Add Billing Codes", "date": "2022-02-10 23:44:31-08:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/reireias/aws-terraform.git", "commits": [{"id": "d8fbe6759957c3581b4b64af11926206e12c7051", "msg": "remove billing bucket", "date": "2020-02-18 22:24:42+09:00", "modified_files": ["s3.tf"]}, {"id": "5271c01add1350014c3df8f8e8aefe58e3cc1838", "msg": "add billing bucket", "date": "2020-02-18 23:25:39+09:00", "modified_files": ["s3.tf"]}, {"id": "7274f70f281dc19aa783b0311ef26a834a613565", "msg": "add cost report", "date": "2020-02-18 23:44:23+09:00", "modified_files": ["cost.tf", "region.tf"]}, {"id": "0882baa28d855243be1c4553ee9cf2182b89596f", "msg": "add billing bucket access user", "date": "2020-03-08 20:58:17+09:00", "modified_files": ["iam.tf"]}]}, {"name": "https://github.com/Young-ook/terraform-aws-spinnaker.git", "commits": [{"id": "e3c57578610982d192b7264dd61a2eaf84f4c749", "msg": "(fix) disabling the detailed monitoring for cost saving (#26)", "date": "2019-10-14 17:26:54+09:00", "modified_files": ["kubernetes.tf"]}]}, {"name": "https://github.com/shaharsa/terragoat10.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/finiteloopme/tf-modules-argolis.git", "commits": [{"id": "34aaedb6f75279c3cf568f7294bf088c09dd55d4", "msg": "Billing account and folder id not required", "date": "2021-08-05 08:46:56+10:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/stSoftwareAU/sts-network.git", "commits": [{"id": "bf59a4c995822ccfdeee64781345c12ebefa967f", "msg": "reduced costs", "date": "2021-07-22 12:51:14+10:00", "modified_files": ["main.tf", "pre-build.sh"]}]}, {"name": "https://github.com/Azure/devops-governance.git", "commits": [{"id": "4894def3589d532789cc8af0c0b197727e0fb3f4", "msg": "tf: remove Azure Container Registry for cost savings", "date": "2020-09-07 08:04:26+02:00", "modified_files": ["main.tf", "outputs.tf"]}]}, {"name": "https://github.com/thatscotdatasci/terraform-lambda.git", "commits": [{"id": "6e85cf4f7e7f76c159c2e30952a775d6facaf638", "msg": "As customer KMS keys cost money, adding option to use S3 default key", "date": "2018-07-29 13:33:16+01:00", "modified_files": ["main.tf", "variables.tf", "kms.tf", "s3.tf"]}]}, {"name": "https://github.com/cisagov/cool-sharedservices-nessus.git", "commits": [{"id": "5403a8978053a1299b0afe8d7fc59e914fc5e354", "msg": "Upgrade the root volume type to gp3\n\ngp3 is cheaper and the baseline configuration offers better\nperformance than gp2 for volumes smaller than 2TB.  It also allows the\nvolume size and IOPS to be configured separately, whereas the two are\ncodependent with gp2.", "date": "2021-10-26 11:57:37-04:00", "modified_files": ["ec2.tf"]}]}, {"name": "https://github.com/sylvioneto/terraform_gcp.git", "commits": [{"id": "4d0c42b3111bc22ed1682de58b7f41663bd41ef2", "msg": "commit gcp-cost-management", "date": "2021-09-16 13:50:56-03:00", "modified_files": ["README.md", "locals.tf", "network.tf", "provider.tf", "vm_prod.tf", "vm_qa.tf"]}, {"id": "8752424c57da5eb2c4b45ecf01b3bf197bb2a49e", "msg": "fix cost center label", "date": "2021-09-16 14:04:40-03:00", "modified_files": ["vm_dev.tf", "vm_prod.tf", "vm_qa.tf"]}]}, {"name": "https://github.com/free-devops/terraform-kubernetes-addons.git", "commits": [{"id": "33f156ca8f600765d8571a1eff61d73938247833", "msg": "recreate pods to false for nats and change default maxPayload", "date": "2020-09-20 04:43:38+02:00", "modified_files": ["nats.tf"]}]}, {"name": "https://github.com/gowoons/jitsi-meet-torture-docker.git", "commits": [{"id": "349c94aeffffb4eef513107d281d59ef6dd33962", "msg": ":sparkles:(terraform) possibility to deploy stacks of instances\n\nWe will use small instances because they are cheaper, but we cannot\nsupport too many instances on the same conference. Thus, we have to\nseparate meet-torture instances in stacks.", "date": "2022-03-03 16:06:29+01:00", "modified_files": ["cloud-init.sh", "instance.tf", "variables.tf"]}]}, {"name": "https://github.com/imma/fogg-tf.git", "commits": [{"id": "6089a019df4c39231e596af627ebd910877d11d0", "msg": "no fargate, cost monies", "date": "2018-01-28 22:09:55+00:00", "modified_files": ["main.tf"]}, {"id": "31c4ace695642eb67e4aadd70d1a27111f36877b", "msg": "placement costraints not cmpatible with fargate", "date": "2018-01-28 22:34:57+00:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/FallenWarrior2k/terraform-cloudflare-simplelogin-dns.git", "commits": [{"id": "0853db7f9fdb08d686c9d49ff3edd486144814c0", "msg": "Initial commit, based on the DigitalOcean version\n\nVery important change: DigitalOcean uses trailing dots for CNAME\ntargets, Cloudflare does not. Not paying attention to this will result\nin constant spurious diffs.", "date": "2022-03-27 00:53:20+01:00", "modified_files": [".gitignore", ".terraform.lock.hcl", "main.tf", "outputs.tf", "providers.tf", "variables.tf"]}]}, {"name": "https://github.com/vinnie357/terraform-gcp-bigip.git", "commits": [{"id": "2ecbe466d8a246f2164d4409de7b0fef0d1d642e", "msg": "updates\n- add payg example\n- formatting", "date": "2020-09-09 22:23:51+00:00", "modified_files": [".gitignore", "admin.auto.tfvars.example", "cleanup.sh", "main.tf", "outputs.tf", "readme.md", "run.sh", "variables.tf", "admin.auto.tfvars.example", "cleanup.sh", "main.tf", "readme.md", "run.sh", "variables.tf", "main.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/lean-delivery/terraform-module-aws-core.git", "commits": [{"id": "25bbff736936b64a6120ef9608498830ecec33c0", "msg": "NAT cost optimization (#4)\n\n* Issue \"NAT cost optimization #2\" (#3)\r\n\r\nsome improvements:\r\n* add ability to disable NAT\r\n* restore ability to setup only one NAT in case if it ec2-based\r\n* add auto-detecting latest Amazon NAT AMI\r\n* add test example\r\n* remove redundant parameters\r\n* Update README.md", "date": "2019-02-28 16:43:15+03:00", "modified_files": ["README.md", "main.tf", "output.tf", "test.tf", "variables.tf"]}]}, {"name": "https://github.com/HariSekhon/Terraform.git", "commits": [{"id": "fbbce35f97d82b4581a7c272cd2df8e4994667cb", "msg": "added sagepay.tf", "date": "2021-05-12 16:58:41+01:00", "modified_files": ["sagepay.tf"]}]}, {"name": "https://github.com/xissy/iac.git", "commits": [{"id": "86b727933985a1ef2afae15546bf8b2098359ca3", "msg": "fix to use payload format version 1.0", "date": "2020-08-11 01:57:59+09:00", "modified_files": ["apis.tf"]}]}, {"name": "https://github.com/dmcgowandmc/minifoundations.git", "commits": [{"id": "832682e0b54ede90b021b4ed575dcc9e761135ce", "msg": "Finished adding in networking components. To keep costs down, default config has only one AZ", "date": "2020-06-02 18:47:01+10:00", "modified_files": ["main.tf", "main.tf", "outputs.tf", "variables.tf", "terraform.tfvars", "variables.tf"]}, {"id": "941e316bcd70779e868311253f663f8acd5ef155", "msg": "Removing ssm endpoints due to costs. Enabling dynamodb endpoints", "date": "2020-08-07 22:21:51+10:00", "modified_files": ["main.tf", "outputs.tf", "outputs.tf"]}]}, {"name": "https://github.com/trajano/terraform-s3-backend.git", "commits": [{"id": "f4b61c7bedae856439f01499de1ec9050b4c40fc", "msg": "Added generated example and used PAY_PER_REQUEST for DynamoDB", "date": "2019-09-28 13:29:37-04:00", "modified_files": ["README.md", "main.tf", "README.md", "terraform-s3-backend.tf", "main.tf"]}, {"id": "cb9f00a2f6f23b44f7db08863ef5fb0b9ea0bc0c", "msg": "Added lifecycle rule for the S3 bucket to reduce long term costs", "date": "2019-09-28 14:13:02-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/alphagov/verify-infrastructure.git", "commits": [{"id": "d34dcd505074546f77367786f5362891050c3440", "msg": "Make network consistent in all environments\n\nWe shouldn't have different network topologies, what affects cost is the\nnumber of boxes/apps, the additional subnet/nat gateway is not expensive\n\nNetwork load balancers have weird config which cannot change which\nforces us to have 3 IPs but we cannot have two IPs in the same subnet.\n\nThis makes the network consistent in all environments, and is\nterraformed everywhere", "date": "2019-01-29 19:26:40+00:00", "modified_files": ["azs.tf", "egress_proxy.tf", "eips.tf", "gateways.tf", "hub_config.tf", "hub_policy.tf", "hub_saml_engine.tf", "hub_saml_proxy.tf", "hub_saml_soap_proxy.tf", "ingress.tf", "prometheus.tf", "redis.tf", "routing.tf", "static_ingress.tf", "subnets.tf", "variables.tf"]}, {"id": "9c0a76c88b91d027fd773a70d913d8234150d874", "msg": "AUTO-94: Add Event Emitter connection details\n\nPolicy, SAML Proxy and SAML SOAP Proxy applications need event emitter\nconnection details so that they can send events to new Billing and Audit\nservice.\n\nAuthor: @adityapahuja", "date": "2019-02-07 12:56:13+00:00", "modified_files": ["egress_proxy.tf", "hub-policy.json", "hub-saml-proxy.json", "hub-saml-soap-proxy.json", "hub_policy.tf", "hub_saml_proxy.tf", "hub_saml_soap_proxy.tf", "variables.tf"]}, {"id": "b9adbdfce013533c990e6fa5f5686d3cd2ace590", "msg": "AUT-606: Update to support xlarge for frontend apps\n\nThis change\n\n- adds a new task definition for Verify Frontend used in t3.xlarge instance type so that it can use more CPU and memory units.\n- adds a conditional statement to ensure that it uses number of EC2 efficiently. This change is required because t3.xlarge supports 4 network interfaces whereas t3.medium supports 3 network interfaces. There are four different containers (analytics, frontend, metadata and beat-exporter). Each container needs a network interface to work properly. So t3.xlarge can support 4 containers whereas t3.medium supports 3 containers. That's why we do not need to double the number of EC2 instances for t3.xlarge.\n- adds a conditional statement to ensure that it uses correct task definition for verify fontend for instance type. If the instance type is t3.xlarge, verify frontend app and its ngnix will have more CPU and memory units. If it is not t3.xlarge, verify frontend and its nginx will remain unchanged.\n- replaces the generic variable `instance_type` with specific variable `ingress_instance_type`. This change allows us to choose instance type for applications running in ingress cluster only in different environment.\n\nOther applications (e.g. metadata, analytics and beat-exporter) will remain unchanged. This change is needed for reducing the frontend application's CPU usage.\n\nCo-authored-by: Phillip Miller <phillip.miller@digital.cabinet-office.gov.uk>", "date": "2020-03-24 12:28:59+00:00", "modified_files": ["frontend_xlarge.json", "hub_frontend.tf", "ingress.tf", "variables.tf"]}, {"id": "3f3c8aa9f521510eb2d7efaea95464a96163035b", "msg": "\"spread\" placement for ingress services\n\nwe would like for instances/tasks of the same service to execute\nseperate EC2 instances to maintain high availability at the cost of less\neffcient binpacking.\n\nthis is more important now that capacity providers manage the size of\nthe ECS cluster as we want it to prefur scaling up to more instances\nthan packing more tasks onto an already busy node.", "date": "2020-04-16 13:40:56+01:00", "modified_files": ["analytics.tf", "hub_frontend.tf", "hub_metadata.tf"]}, {"id": "70a31f9b9a167e5025bb4099cc584044c47e699b", "msg": "HUB-748 Remove hosted instance of Sentry\n\nNow that we use the cloud version of Sentry we don't need to host our own version.  Sending `staging` events to the cloud version is more cost effective than running an ec2 instance and database etc.\n\nThis should remove anything that is used solely by the hoseted instance.  Variables remain for use by with the cloud instance.", "date": "2021-01-22 09:42:40+00:00", "modified_files": ["Dockerfile", "requirements.txt", "egress_proxy.tf"]}]}, {"name": "https://github.com/amancevice/terraform-google-slack-interactive-components.git", "commits": [{"id": "7fcdcaabbf0d75b540fc45cefc2c78b535ca6041", "msg": "Log parsed payload", "date": "2018-06-06 16:39:27-04:00", "modified_files": ["main.tf", "package.json", "index.js"]}]}, {"name": "https://github.com/GoogleCloudPlatform/cloud-foundation-fabric.git", "commits": [{"id": "c486bfc66f9814e33b410602cb557a5e4d532912", "msg": "Merge development branch (#44)\n\n* VPN-HA module initial commit\r\n\r\n* Added readme for net-vpn-ha module\r\n\r\n* Update readme, add simple description\r\n\r\n* Merge new modules list and environments foundation example (#30)\r\n\r\n* gke-cluster\r\n\r\n* net-vpc module and tests\r\n\r\n* add TODO to net-vpc module\r\n\r\n* add minimal README files with input/output variables to gke and net-vpc modules\r\n\r\n* BigQuery Module (#24)\r\n\r\n* Bigquery Module\r\n\r\n* Added README file\r\n\r\n* Added type hints\r\n\r\n* gke-cluster\r\n\r\n* net-vpc module and tests\r\n\r\n* add TODO to net-vpc module\r\n\r\n* add minimal README files with input/output variables to gke and net-vpc modules\r\n\r\n* BigQuery Module (#24)\r\n\r\n* Bigquery Module\r\n\r\n* Added README file\r\n\r\n* Added type hints\r\n\r\n* GCS module\r\n\r\n* net vpc module: improve secondary range outputs\r\n\r\n* net vpc module: add serve project registration\r\n\r\n* project module\r\n\r\n* move bigquery module to not-ready folder\r\n\r\n* folders module\r\n\r\n* rename project module's iam variables\r\n\r\n* slight tweak to folder module outputs\r\n\r\n* gcs module\r\n\r\n* simplify net-vpc module variables\r\n\r\n* fix module tests configurations, fix net-vpc module tests\r\n\r\n* add pydoc utility\r\n\r\n* add/update module READMEs\r\n\r\n* add/update module READMEs\r\n\r\n* add/update module READMEs\r\n\r\n* improve variable type summary generation in tfdoc\r\n\r\n* tfdoc: add support for replacing doc in README.md files\r\n\r\n* improve module READMEs\r\n\r\n* net-vpc-firewall module\r\n\r\n* add support for sensitive output attribute in tfdoc\r\n\r\n* remove empty function from tfdoc\r\n\r\n* render variable type as code in tfdoc\r\n\r\n* update module READMEs\r\n\r\n* net address module\r\n\r\n* net cloudnat module\r\n\r\n* remove redundant variable from net-cloudnat module\r\n\r\n* vpc module: add support for peering, use network name as subnet name prefix\r\n\r\n* net-vpn-static module\r\n\r\n* net-vpn-static module README\r\n\r\n* net-vpn-static module README\r\n\r\n* tfdoc: fix error on undeclared variable type\r\n\r\n* dns module\r\n\r\n* set version for all modules\r\n\r\n* kms module (untested)\r\n\r\n* change kms key self links output to map, fix gcs and kms iam variable descriptions\r\n\r\n* fix kms module\r\n\r\n* update kms module readme\r\n\r\n* simplify local iam pairs in modules\r\n\r\n* service accounts module (unfinished)\r\n\r\n* work on service accounts module\r\n\r\n* project module: add gcr service account\r\n\r\n* project module: update outputs in README\r\n\r\n* first working version of the iam service accounts module\r\n\r\n* iam service accounts module: extra checks in locals\r\n\r\n* modules/net-cloudnat: reorder variables\r\n\r\n* modules/net-vpn-dynamic: initial import (untested)\r\n\r\n* modules/net-vpn-dynamic: first working version\r\n\r\n* modules/net-vpn-dynamic: add outputs for auto-created router\r\n\r\n* modules/net-vpn-dynamic: update README\r\n\r\n* modules/net-[vpn,cloudnat]: clean up variable,s remove prefix\r\n\r\n* modules/net-vpn-dynamic: add advertisement configuration to tunnel bgp peer, refactor variables\r\n\r\n* tfdoc: add tooltips for variable types and defaults\r\n\r\n* modules: update README variables and outputs\r\n\r\n* tfdoc: improve variable default rendering\r\n\r\n* modules: update README variables and outputs\r\n\r\n* modules/net-vpc: minimal output refactoring\r\n\r\n* modules/vm-cos: initial import, base resources working, no outputs\r\n\r\n* modules/vm-cos: add variable descriptions\r\n\r\n* tfdoc: fix parsing in type and default blocks\r\n\r\n* modules/vm-cos: fix README\r\n\r\n* tfdoc: fix parsing in type and default blocks\r\n\r\n* modules/vm-cos: fix README\r\n\r\n* modules/compute-vm: initial working import (not fully tested)\r\n\r\n* modules/vm-cos: move to not-ready\r\n\r\n* tfdoc: fix variable defaults formatting\r\n\r\n* modules: update README files with tfdoc fixes\r\n\r\n* modules: add initial examples\r\n\r\n* gke-nodepool: initial import, untested\r\n\r\n* gke nodepool: add README, fix location variable, set node count default to 1\r\n\r\n* gke cluster: fix private cluster variables\r\n\r\n* gke nodepool: fix README title\r\n\r\n* gke cluster: add output for cluster location\r\n\r\n* gke nodepool: add missing variables for project id and cluster name, remove default from location variable, fix gke version assignment\r\n\r\n* gke nodepool: update README\r\n\r\n* net-cloudnat: fix router name when creating default router\r\n\r\n* fix variables used for address and router optional creation\r\n\r\n* vpn dynamic: fix README\r\n\r\n* modules/net-vpn-dynamic: fix router name output\r\n\r\n* modules/compute-vm: remove unused variable\r\n\r\n* modules/compute-vm-cos-coredns: initial import\r\n\r\n* Update foundations modules versions (#26)\r\n\r\n* update foundations modules versions\r\n\r\n* update Terraform version to v0.12.19 in CI test configuration\r\n\r\n* backport tfdoc from Ludo's branch (#27)\r\n\r\n* Update docs using tfdoc format (#28)\r\n\r\n* update README files\r\n\r\n* set all types on variables\r\n\r\n* foundations/environments: move log filter to a variable, use org for xpn by default\r\n\r\n* foundations/environments: do not use liens by default\r\n\r\n* modules/ntp-vpc: better shared_vpc_host variable description\r\n\r\n* modules/logging-sinks: initial version\r\n\r\n* modules/logging-sinks: streamline options in sinks variable\r\n\r\n* modules/compute-vm-cos-coredns: add support for additional files\r\n\r\n* modules/folders: rename from 'folder'\r\n\r\n* modules/logging-sinks: fix circular dependencies and improve variables\r\n\r\n* modules/project: remove extra variable\r\n\r\n* modules/bigquery: new module with dataset support only\r\n\r\n* foundations/environments: refactor using local modules\r\n\r\n* modules/bigquery: better variables, README description and example\r\n\r\n* modules: fix a few READMEs\r\n\r\nCo-authored-by: Julio Castillo <juliocc@gmail.com>\r\n\r\n* modules/net-vpc: README description and examples\r\n\r\n* modules/net-vpc: tweak README description and examples\r\n\r\n* modules/net-vpc: tweak README description and examples\r\n\r\n* modules/net-vpc-firewall: change tag-based rule default ranges, improve README examples and description\r\n\r\n* modules/compute-vm: README changes\r\n\r\n* modules/compute-vm: use an object for the service account variable, update README\r\n\r\n* modules/compute-vm: update README variables table\r\n\r\n* modules/compute-vm: add TODO list to README\r\n\r\n* modules/compute-vm: add TODO list to README\r\n\r\n* modules/compute-vm: add outputs for service account\r\n\r\n* modules/net-cloudnat: README\r\n\r\n* modules/net-cloudnat: README\r\n\r\n* modules/net-cloudnat: add router_create variable\r\n\r\n* modules/compute-vm: simplify service account variables\r\n\r\n* modules/net-vpn-dynamic: fix README example, use local secret for both empty string and null\r\n\r\n* modules/net-vpn-dynamic: improve README example\r\n\r\n* modules/gke-cluster: minimal README tweaks\r\n\r\n* modules/kms: fix ephemeral keys resource name\r\n\r\n* modules/iam-service-accounts: add storage roles\r\n\r\n* modules/gke-nodepool: fix node default scopes\r\n\r\n* New project variable to prevent deletion of default network (#32)\r\n\r\n* New project variable to prevent deletion of default network\r\n\r\nThis is a workaround to fix\r\nterraform-google-modules/cloud-foundation-fabric#31 while the GCP\r\nterraform provider is fixed\r\n\r\n* Add TODOs to remove workarounds in the project module\r\n\r\n* Fix Cloud Build files\r\n\r\n* modules/gke-nodepool: add monitoring scope to defaults\r\n\r\n* modules/iam-service-accounts: add support for IAM bindings onthe service accounts\r\n\r\n* playground module in sandbox, remove not ready modules\r\n\r\n* Fix ci configurations in development branch (#33)\r\n\r\n* try fixing ci confgurations\r\n\r\n* add exclusion match to ci boilerplate check\r\n\r\n* add skip boilerplate comment to compute-vm-cos-coredns template fragment\r\n\r\n* modules/gke-cluster: fix boilerplate in outputs\r\n\r\n* Simplify tests, re-enable CI\r\n\r\n* add instance group support to compute-vm, start tests refactoring\r\n\r\n* modules/compute-vm: group fixes, tests\r\n\r\n* modules/compute-vm: minimal test beautification\r\n\r\n* simplify top-level pytest fixture\r\n\r\n* modules/dns: tests and minor tweaks\r\n\r\n* fix missing boilerplate in tests\r\n\r\n* re-add requirements file to tests folder\r\n\r\n* re-enable tests in ci build configuration\r\n\r\n* Folder module tests and fixes (#38)\r\n\r\n* folder tests wip\r\n\r\n* modules/folders: tests and tweaks\r\n\r\n* update folders and compute-vm README files\r\n\r\n* modules/gcs: tests and minor tweaks\r\n\r\n* Create README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Added docker image for strongSwan\r\n\r\n* Add support for routes and tests to net-vpc module (#39)\r\n\r\n* modules/net-vpc: add routes (untested)\r\n\r\n* initial tests\r\n\r\n* modules/net-vpc: add test for flow logs\r\n\r\n* modules/net-vpc: split tests into two separate files\r\n\r\n* modules/net-vpc: routes test\r\n\r\n* modules/net-vpc: test routes\r\n\r\n* Add support for Terraform plugin cache in ci test build file (#40)\r\n\r\n* add Terraform plugin caching to test ci build configuration\r\n\r\n* fix mkdir in test build configuration\r\n\r\n* trigger test check\r\n\r\n* Refactor dynamic vpn configuration for on-prem-in-a-box module\r\n\r\n* Fix dynamic vpn for onprem-in-a-box module\r\n\r\n* Migrate Shared VPC example to local modules (#41)\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* validated, untested\r\n\r\n* modules/compute-vm: make service account email in locals resilient to destroy\r\n\r\n* modules/project: make project id output depend on iam roles\r\n\r\n* fixes\r\n\r\n* shared-vpc tweaks\r\n\r\n* update diagram\r\n\r\n* update README input output tables\r\n\r\n* modules/compute-vm: add service account IAM email output\r\n\r\n* move GKE service account roles at the project level, add GCE service account roles\r\n\r\n* update diagram and README\r\n\r\n* modules/project: add extra output for IAM-dependent project id\r\n\r\n* update modules READMEs\r\n\r\n* minor tweaks\r\n\r\n* modules/compute-vm: fix service account output\r\n\r\n* remove static address from NAT\r\n\r\n* fix container service agent binding dependency\r\n\r\n* rename shared vpc\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Add static vpn gw to on-prem-in-a-box module\r\n\r\n* Refactor hub and spoke to use new modules (#42)\r\n\r\n* modules/compute-vm: saner defaults for service account scopes\r\n\r\n* hub and spoke refactor, docs still missing\r\n\r\n* complete hub and spoke\r\n\r\n* Update README.md\r\n\r\n* Add toolbox docker container, fix gw routing to the internet\r\n\r\n* Add DNS Hybrid connectivity parameters\r\n\r\n* Fix onprem dns zone for the static vpn configuration\r\n\r\n* Added readme.md for on-prem module\r\n\r\n* Add new line at the end of the files\r\n\r\n* Add boilerplate for cloudbuild config files\r\n\r\n* fix boilerplate in strongswan shell script\r\n\r\n* Update README.md\r\n\r\n* include missing file to fix merge conflict\r\n\r\n* remove missing file to fix merge conflict\r\n\r\n* include missing file to fix merge conflict (again)\r\n\r\n* remove content from spurious file used to avoid merge conflicts\r\n\r\n* Add net-vpc-peering module\r\n\r\n* Initial commit for hub-and-spoke-peering infrastructure example\r\n\r\n* Fix typos in infrastructure/ READMEs\r\n\r\n* remove stale file\r\n\r\n* use larger resolution version of hub and spoke diagram\r\n\r\n* Update README.md\r\n\r\n* Update hub-and-spoke-peerings example to use internal modules\r\n\r\n* Add initial project tests (#46)\r\n\r\n* modules/project: make prefix optional\r\n\r\n* initial project module tests\r\n\r\n* modules/project: use null for unset parent\r\n\r\n* modules/dns: backport PR6 from the CFT dns module\r\n\r\n* Add testing resources including on-prem-in-a-box to hub-and-spoke-peerings example\r\n\r\n* Fix firewall rules to allow connectivity, switch to custom route advertisement for onprem -> spokes connectivity\r\n\r\n* Move locals out of main.tf\r\n\r\n* remove ssh tag from compute-vm variable default\r\n\r\n* Add ssh tag to the test vms\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Hub and spoke peering changes (#48)\r\n\r\n* rename hub-and-spoke-vpn\r\n\r\n* add ssh tag to shared-vpc-gke instance\r\n\r\n* rename and rework hub and spoke peering\r\n\r\n* fix test requirements\r\n\r\n* align hub and spoke peering with module contents\r\n\r\n* diagram\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* minimal fixes to onprem examples variable files\r\n\r\n* onprem example stub, missing DNS zones and private.googleapis records onprem\r\n\r\n* add missing boilerplate\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* infra/onprem: add test instance and minimal outputs\r\n\r\n* add DNS modules and resource\r\n\r\n* infra/onprem: diagram and initial README\r\n\r\n* minor changes to onprem module and example (#49)\r\n\r\n* update toolbox image\r\n\r\n* infra/onprem: add zone for private access, add metadata domain to onprem dns\r\n\r\n* infra/onprem: onnprem service account, add testing procedure in README\r\n\r\n* Update README.md\r\n\r\n* infra/onprem: remove extra variable\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* infra/onprem: rename forwarder address variable\r\n\r\n* Update README:\r\n\r\nAdded explicit --tunnel-through-iap for gcloud compute ssh commands\r\n\r\n* Update top-level and section READMEs (#50)\r\n\r\n* top-level README WIP\r\n\r\n* rewrite top-level README\r\n\r\n* change top-level README title\r\n\r\n* remove initial quote in top-level README\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* foundations README\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* add experimental scheduled cloud function module\r\n\r\n* scheduled cloud function module: allow disabling schedule\r\n\r\n* business-units foundation example (#52)\r\n\r\n* Added folder-units module.\r\n\r\n* Business units example update (WIP)\r\n\r\n* Update all BU modules to internal ones\r\n\r\n* Refactoring business-units example, add billing and org IAM handling\r\n\r\n* update projects tests for new iam additive naming\r\n\r\n* update project README for new iam additive naming\r\n\r\n* streamline bu example and module (#53)\r\n\r\nCo-authored-by: Ludovico Magnocavallo <ludomagno@google.com>\r\n\r\n* align net-vpn-ha interface with the other vpn modules\r\n\r\n* update module README files\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Create CHANGELOG.md\r\n\r\n* Refactor COS module to be generic (#51)\r\n\r\n* Create generic COS module and update CoreDNS module to use it\r\n\r\n* Update compute-vm-cos README\r\n\r\n* Fix COS README\r\n\r\n* Update COS example\r\n\r\n* Skip boilerplate check for COS file template\r\n\r\n* Make COS module more generic and provide preset configurations\r\n\r\n* Update COS module documentation\r\n\r\n* tfdoc: add support for multiple variables files\r\n\r\n* compute-vm: split boot disk in separate variable file for cos module support\r\n\r\n* Streamline cos modules (#54)\r\n\r\n* tfdoc: fix bug in last commit\r\n\r\n* compute-vm: add support for user-data\r\n\r\n* compute-vm: restore noncos variable split\r\n\r\n* remove compute-vm-cos-coredns\r\n\r\n* compute-vm: revert to original state\r\n\r\n* cos-container/coredns\r\n\r\n* fix variables mess\r\n\r\n* cos/coredns fixes\r\n\r\n* cos/mysql\r\n\r\n* remove stale compute-vm-cos module\r\n\r\n* add test instance to cos modules\r\n\r\n* tfdoc: add support for multiple output files\r\n\r\n* cos: add initial READMEs\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* add test apply fixture\r\n\r\n* cos-coredns: tested\r\n\r\n* Update README.md\r\n\r\n* Fix typo\r\n\r\n* cos-coredns: refactor README\r\n\r\n* Update README.md\r\n\r\n* test yaml validity in cos modules tests\r\n\r\n* cos mysql tests\r\n\r\n* cos mysql: refactor and test (disk tests missing)\r\n\r\n* onprem: fix Coredns\r\n\r\n* cos mysql: additional disk working\r\n\r\n* cos modules: fix instance disks for no instance\r\n\r\n* update some modules READMEs\r\n\r\n* update some modules READMEs\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* add simple tests for foundations/environments\r\n\r\n* change default for org id in foundations/environments to avoid errors when none is specified\r\n\r\n* fix null/empty organization id in foundations/environments\r\n\r\n* fix errors when destroying on empty state in foundations/environments\r\n\r\n* fundations/bu: fix errors when destroying with empty state\r\n\r\n* modules/gcs: make outputs resilient on destroy with empty state\r\n\r\n* modules/folders: make outputs resilient on destroy with empty state\r\n\r\n* switch organization_id variable to long form in foundations/bu and modules/folders-unit\r\n\r\n* Update README.md\r\n\r\n* infra/shared-vpc: remove duplicate tag attribute from bastion\r\n\r\nCo-authored-by: Aleksandr Averbukh <averbukh@google.com>\r\nCo-authored-by: Julio Castillo <juliocc@gmail.com>\r\nCo-authored-by: Julio Castillo <jccb@google.com>", "date": "2020-04-03 14:06:48+02:00", "modified_files": [".terraformrc", "cloudbuild.lint.yaml", "cloudbuild.test.yaml", "check_boilerplate.py", "CHANGELOG.md", "README.md", "Dockerfile", "README.md", "cloudbuild.yaml", "entrypoint.sh", "ipsec-vti.sh", "Dockerfile", "README.md", "cloudbuild.yaml", "entrypoint.sh", "README.md", "README.md", "backend.tf.sample", "main.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "outputs.tf", "providers.tf", "terraform.tfvars.sample", "variables.tf", "versions.tf", "README.md", "locals.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "README.md", "backend.tf.sample", "diagram.png", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "backend.tf.sample", "diagram.png", "main.tf", "outputs.tf", "provider.tf", "variables.tf", "README.md", "diagram.png", "main.tf", "outputs.tf", "terraform.tfvars.sample", "test-resources.tf", "variables.tf", "README.md", "Corefile", "diagram.png", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "backend.tf.sample", "diagram.gcpdraw", "diagram.png", "main.tf", "outputs.tf", "variables.tf", "versions.tf", ".terraform.tfstate.lock.info", "README.md", "diagram.png", "locals.tf", "main.tf", "outputs.tf", "test-resources.tf", "variables.tf", "README.md", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "instance_group.tf", "main.tf", "outputs.tf", "variables.tf", ".gitignore", "README.md", "Corefile", "Corefile-hosts", "README.md", "cloud-config.yaml", "instance.tf", "main.tf", "outputs-instance.tf", "outputs.tf", "variables-instance.tf", "variables.tf", "instance.tf", ".gitignore", "README.md", "cloud-config.yaml", "instance.tf", "main.tf", "outputs-instance.tf", "outputs.tf", "variables-instance.tf", "variables.tf", "outputs-instance.tf", "variables-instance.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "locals.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "README.md", "Corefile", "dynamic-vpn-gw-cloud-init.yaml", "static-vpn-gw-cloud-init.yaml", "main.tf", "outputs.tf", "variables.tf", "README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "__init__.py", "conftest.py", "__init__.py", "terraform.tfvars", "test_folders.py", "test_outputs.py", "test_projects.py", "test_service_accounts.py", "__init__.py", "conftest.py", "main.tf", "variables.tf", "terraform.tfvars", "test_outputs.py", "test_plan.py", "test_projects.py", "test_service_accounts.py", "terraform.tfvars", "test_cloud_routers.py", "test_firewall.py", "test_outputs.py", "test_vpns.py", "conftest.py", "terraform.tfvars", "test_outputs.py", "test_svpc_resources.py", "__init__.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "test_plan_group.py", "__init__.py", "main.tf", "outputs.tf", "variables.tf", "test_apply.py", "__init__.py", "main.tf", "outputs.tf", "variables.tf", "test_apply.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "test_plan_subnets.py", "__init__.py", "main.tf", "variables.tf", "test_plan.py", "requirements.txt", "tfdoc.py"]}, {"id": "036b9ea95085163313f70cefbaf85e4e07a7543c", "msg": "Obey var.iam_billing_config.grant (#113)\n\n* Update main.tf\r\n\r\n* Update main.tf", "date": "2020-07-15 13:18:42+02:00", "modified_files": ["main.tf"]}, {"id": "3a8a040ff3efcec38c423d5249625ed2d87ab261", "msg": "Billing budget module", "date": "2021-08-12 19:43:09+02:00", "modified_files": ["README.md", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "__init__.py", "main.tf", "variables.tf", "test_plan.py"]}, {"id": "5c8557a29d0ed8504c51a076247b08bf709f8b69", "msg": "Paying tributes to the linting gods", "date": "2021-12-07 13:29:01+01:00", "modified_files": ["variables.tf"]}, {"id": "7bc10d10390a6f10ed75398872f2a02be614654c", "msg": "IoT module (#415)\n\n* added iot-core module folder\r\n\r\n* modified iot core readme file\r\n\r\n* added initial version of the IoT Platform terraform files\r\n\r\n* a\u00f1adido detalles en README\r\n\r\n* Update README.md\r\n\r\nfix markup issue\r\n\r\n* Update README.md\r\n\r\nmodified input/output\r\n\r\n* deleted provider from main and module services\r\n\r\n* pub_sub topic ids used in the registry instead of creating new ones\r\n\r\n* variable extra_telemetry_pub_sub_topic_ids modified as default\r\n\r\n* included data platform integration use case in the doc\r\n\r\n* devices config moved to yaml file\r\n\r\n* included example to create device certificates\r\n\r\n* added HCL and #tftest to README. Moved project/region to variables\r\n\r\n* solved bug with no optional variables for extra topics or devices yaml\r\n\r\n* solved bug with no optional variables for extra topics or devices yaml\r\n\r\n* added example to send MQTT telemetry to IoT Platform\r\n\r\n* modified doc on Data Platform integration\r\n\r\n* included diagram\r\n\r\n* added Registry / Device creation default configuration into variables. Deleted exammple devices yaml file. Corrected module source path\r\n\r\n* solved comments in PR\r\n\r\n* applied terraform fmt\r\n\r\n* solved bug in boolean (bool) variable\r\n\r\n* updated variables in doc\r\n\r\n* updated output variable name\r\n\r\n* updated #tftest:skip on examples as using yaml input makes resources number variable\r\n\r\n* Update README.md\r\n\r\nmodified input/output\r\n\r\n* pub_sub topic ids used in the registry instead of creating new ones\r\n\r\n* variable extra_telemetry_pub_sub_topic_ids modified as default\r\n\r\n* included data platform integration use case in the doc\r\n\r\n* devices config moved to yaml file\r\n\r\n* included example to create device certificates\r\n\r\n* added HCL and #tftest to README. Moved project/region to variables\r\n\r\n* solved bug with no optional variables for extra topics or devices yaml\r\n\r\n* solved bug with no optional variables for extra topics or devices yaml\r\n\r\n* added example to send MQTT telemetry to IoT Platform\r\n\r\n* modified doc on Data Platform integration\r\n\r\n* included diagram\r\n\r\n* added Registry / Device creation default configuration into variables. Deleted exammple devices yaml file. Corrected module source path\r\n\r\n* solved comments in PR\r\n\r\n* applied terraform fmt\r\n\r\n* solved bug in boolean (bool) variable\r\n\r\n* updated variables in doc\r\n\r\n* Updated diagram and documentation for decentralized firewall.\r\n\r\n* Fixed error with VPC connector. Count was referring to resource attributes that weren't known until after the configuration was applied\r\n\r\n* Added Cloud Foundation Fabric logos. (#363)\r\n\r\n* Create README.md\r\n\r\n* Add logo to readme file\r\n\r\n* exclusions for audit in locals in logging_sinks.audit-logs now\r\n\r\n* style fix (whitespaces)\r\n\r\n* Added dynamic block for dns_cache_config\r\n\r\n* Fixed boolean variable condition\r\n\r\n* Adding Apigee Environments as output for apigee-organization module\r\n\r\n* small var conditional fix\r\n\r\n* Added GKE pubsub notifications\r\n\r\n* Default creation false\r\n\r\n* Updated variable default value\r\n\r\n* removed extra lines\r\n\r\n* defaulted to false and conditional output\r\n\r\n* depend log sinks from IAM roles, fixes #371\r\n\r\n* Update README.md\r\n\r\n* [#374] Add taint when Windows node pools are created to match the one GKE implicitly adds\r\n\r\n* Update README.md\r\n\r\nFixes out of date link on the module usage example\r\n\r\n* Update README.md - fixed broken link\r\n\r\n* Added subnet id and self_link to outputs (#377)\r\n\r\nAdjusted module outputs so that it's easier to consume them when using the factory in a larger codebase.\r\n\r\n* net-vpc module: added subnet mini-factory\r\n\r\n* Update README.md\r\n\r\n* Code cleanup\r\n\r\n* Adds support for IAM per-subnet IAM bindings via factory\r\n\r\n* Gracefully handle a null secondary_ip_range\r\n\r\n* Updated README.md. Added tests.\r\n\r\n* Added license boilerplate to subnet yaml data in tests\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Removed dead code\r\n\r\n* net-vpc-firewall mini rules-factory\r\n\r\n* Paying tributes to the linting gods\r\n\r\n* Fixed small bug on locals\r\n\r\n* Tests for net-vpc-firewall module\r\n\r\n* Update CHANGELOG.md\r\n\r\n* refactor locals (#382)\r\n\r\n* Add support for partitioned tables on Organization sinks (#380)\r\n\r\n* Add support for partioned tables on Organization sinks\r\n\r\n* Update changelog\r\n\r\n* Fix lint\r\n\r\n* Fix lint\r\n\r\n* Use simple bool instead of block\r\n\r\n* fix README\r\n\r\n* Fix Readme\r\n\r\n* Rename variable\r\n\r\nCo-authored-by: Ludovico Magnocavallo <ludomagno@google.com>\r\n\r\n* Improve PSN support in net-vpc module (#384)\r\n\r\n* improve PSN support\r\n\r\n* fix variable order\r\n\r\n* fix example test\r\n\r\n* fix cloudsql example\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Remove location from local.prefix\r\n\r\n* Organization module refactor, in-module firewall policy factory for organization and folder (#385)\r\n\r\n* move iam and logging to separate files, minimal refactoring\r\n\r\n* update README\r\n\r\n* fix example\r\n\r\n* factory\r\n\r\n* tfdoc\r\n\r\n* boilerplate\r\n\r\n* remove data_folder variable\r\n\r\n* tfdoc\r\n\r\n* fix default factory name\r\n\r\n* add firewall policy to folder module\r\n\r\n* add factory example\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Fix VPC-SC module, add example (#387)\r\n\r\n* Update CONTRIBUTING.md\r\n\r\nSuggest change of wording related to `terraform format`: should be done from the top, recursively, and after `pytest` step, because fixtures are also going to be checked for linting during PR.\r\n\r\n* Add target_node and minor fixes  (#389)\r\n\r\n* Add separate BQ tables per asset type\r\n\r\n* Add missing BQ location\r\n\r\n* Add missing CF region\r\n\r\n* Change Scheduler job to non-generic\r\n\r\n* Add target_node, pass tests\r\n\r\n* Do tfdoc.py\r\n\r\n* Do terraform fmt\r\n\r\n* Do terraform fmt -recursive for tests' fixtures\r\n\r\n* Fix typo in test's variables\r\n\r\n* Added support for Stateful Managed Instance Groups (#367)\r\n\r\n* First iteration updates\r\n\r\n* All tests passing\r\n\r\n* Updated README and var descriptions\r\n\r\n* Updated README\r\n\r\n* Updated example README\r\n\r\n* Consolidated stateful vars\r\n\r\n* consolidated stateful vars\r\n\r\n* Updated README\r\n\r\n* Requested changes to try\r\n\r\n* Fixed README examples and try\r\n\r\nCo-authored-by: Ludovico Magnocavallo <ludomagno@google.com>\r\n\r\n* SA key uploading and credentials json generation with terraform.\r\n\r\n* Fix typo in the SA module readme\r\n\r\n* TF fmt\r\n\r\n* Update iam-sa docs\r\n\r\n* Finalize onprem-sa-ket-mgmt example\r\n\r\n* Add basic test for onprem-sa-mgmt example\r\n\r\n* Refactoring\r\n\r\n* Reorder variables\r\n\r\n* Rewording, fix typos\r\n\r\n* Bump tftest version\r\n\r\nBump tftest version to 1.6.1 and ensure test runners can update\r\nproviders if needed and available.\r\n\r\n* Add bq_table_overwrite handling\r\n\r\n* Add optional BQ table as a file export config\r\n\r\n* Add getattr() to retrieve attribute from format\r\n\r\n* Add roles/bigquery.jobUser for CF\r\n\r\n* Update test_plan and README\r\n\r\n* Change README, add diagram ( gcpdraw a6e4ec4f-7d6c-4796-b63e-ee4ce7b1792f )\r\n\r\n* Change README to two diagrams\r\n\r\n* Add count to toggle optional modules\r\n\r\n* Change README\r\n\r\n* Resolve order of variables test\r\n\r\n* Linux sysctls configuration and Kubelet config (#388)\r\n\r\n* Linux sysctls configuration and Kubelet config\r\n\r\n* Fix terraform linting issues\r\n\r\n* Updated README.md\r\n\r\n* Updated Kubelet config object type\r\n\r\n* Update readme\r\n\r\nCo-authored-by: Sergio Tej\u00f3n <stejon@freepik.com>\r\nCo-authored-by: Julio Castillo <jccb@google.com>\r\n\r\n* net-address: Added support for PSA ranges\r\n\r\n* Update outputs.tf\r\n\r\n* Fixes typo\r\n\r\n* Resolved merge conflict\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Add metric scopes support (#397)\r\n\r\n* Add metric scopes support\r\n\r\n* Fix typo\r\n\r\n* new tfdoc block in README\r\n\r\nCo-authored-by: Ludovico Magnocavallo <ludomagno@google.com>\r\n\r\n* fix tfdoc replacement (#398)\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Ludo hfw fixes (#400)\r\n\r\n* fix tfdoc replacement\r\n\r\n* ignore changes to rule description\r\n\r\n* add folder example, fixes #339\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Fix ignore changes for hfw rules (#401)\r\n\r\n* fix tfdoc replacement\r\n\r\n* ignore changes to rule description\r\n\r\n* add folder example, fixes #339\r\n\r\n* fix ignore changes in org and folder module\r\n\r\n* Update CHANGELOG.md\r\n\r\n* update documentation check\r\n\r\n* backport tfdoc and check doc fixes\r\n\r\n* Re-run pydoc\r\n\r\n* Redo pydoc + local linting checks\r\n\r\n* update tfdoc (#404)\r\n\r\n* Org/Folder: Allow for policy association when using rule factory (#405)\r\n\r\n* Org/Folder: Allow for policy association when using rule factory\r\n\r\n* Fix linting issue\r\n\r\n* Update hierarchical firewall resource\r\n\r\nThis replaces all the `google_compute_organization_security_*`\r\nresources with the newer `google_compute_firewall_*` resources.\r\n\r\n* Fix typo.\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Typo fix\r\n\r\n* New vpc-sc module implementation (#406)\r\n\r\n* first implementation\r\n\r\n* minimal output\r\n\r\n* split service perimeters in regular and bridge\r\n\r\n* tests and fixes\r\n\r\n* new vpc-sc implementation\r\n\r\n* remove providers file used for testing\r\n\r\n* remove provider used during development\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Update README.md\r\n\r\n* fix cases where bridge perimeter status resources are null (#408)\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Copyright bump (#410)\r\n\r\n* remove lifecycle block from vpc sc perimeters (#412)\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Interpolate access levels by key in vpc sc module (#414)\r\n\r\n* interpolate access levels by key\r\n\r\n* fix access level reference\r\n\r\n* fix num resources in last README test\r\n\r\n* Update CHANGELOG.md\r\n\r\n* fix ingress policies in vpc sc module\r\n\r\n* disable device policy support in vpc-sc module\r\n\r\n* depend bridge from regular perimeters in vpc sc module\r\n\r\n* Update CONTRIBUTING.md\r\n\r\n* add versions to vpc-sc module\r\n\r\n* Update CONTRIBUTING.md\r\n\r\n* updated output variable name\r\n\r\n* updated #tftest:skip on examples as using yaml input makes resources number variable\r\n\r\n* changed pub_sub to pubsub\r\n\r\n* unified protocol input variable\r\n\r\n* changed extra_telemetry_pubsub_topic_ids variable type to: map\r\n\r\n* solved issue in README.md\r\n\r\n* grouped device configuration variables\r\n\r\n* device config is now done individually per each device in the yaml file\r\n\r\n* changes on device config yaml processing: 1 single yaml directory, use try() while parsing, example identation corrected\r\n\r\n* updated headers to 2022\r\n\r\n* removed get-pip.py", "date": "2022-02-05 15:54:24+01:00", "modified_files": ["README.md", "diagram.png", "diagram_iot.png", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "677f3c8df120905e8868e5ddf419b2d0b53ba87e", "msg": "use custom role name for billing org too", "date": "2022-02-10 19:16:13+01:00", "modified_files": ["billing.tf"]}, {"id": "9076c2f2b014528922cb88db0d7626a5abd3d475", "msg": "Fix external billing org", "date": "2022-02-11 17:10:44+01:00", "modified_files": ["organization.tf"]}, {"id": "59bb09b03e0c3f2e68bc9cf971d46b891589e964", "msg": "Add billing_type for Apigee Organization Module", "date": "2022-03-31 08:47:34+02:00", "modified_files": ["README.md", "main.tf", "variables.tf", "main.tf"]}]}, {"name": "https://github.com/marcbacchi/cloud-resume-challenge.git", "commits": [{"id": "adc9db4d1e73fd28effd9030de45f3a1362721a8", "msg": "working API triggering Lambda and response payload update, and cleanup files", "date": "2022-02-19 07:17:42-07:00", "modified_files": ["api.tf", "db-call.py", "lambda.tf"]}]}, {"name": "https://github.com/saraangelmurphy/terraform-gcp-createProject.git", "commits": [{"id": "439d9510179765102b4060cc96d2d7d04caedb29", "msg": "enabled billing budgets api", "date": "2020-07-20 20:52:17-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/senthiln0281/terraformjenkins.git", "commits": [{"id": "e27f8951d4387d5a2f6e03fd7f5a4f3c6ee53c66", "msg": "feat(vpc): Optionally use NAT instances instead of NAT gateways\n\nIF NAT instances are used, optional inputs are whether to use Elastic\nIPs, an SSH key name, and the EC2 instance type. The latest Amazon VPC\nNAT AMI is used. The use of NAT instances can be less expensive than NAT\ngateways for development VPCs. NAT instances can be stopped when not in\nuse.", "date": "2017-07-15 18:37:55-06:00", "modified_files": ["Readme.md", "docs.md", "main.tf"]}]}, {"name": "https://github.com/poseidon/terraform-digitalocean-kubernetes.git", "commits": [{"id": "f7efebd05cefe5edab0b4b4a1a96194149bb1a78", "msg": "Change kube-apiserver port from 443 to 6443\n\n* Adjust firewall rules, security groups, cloud load balancers,\nand generated kubeconfig's\n* Facilitates some future simplifications and cost reductions\n* Bare-Metal users who exposed kube-apiserver on a WAN via their\nrouter or load balancer will need to adjust its configuration.\nThis is uncommon, most apiserver are on LAN and/or behind VPN\nso no routing infrastructure is configured with the port number", "date": "2018-06-18 21:57:58-07:00", "modified_files": ["bootkube.tf", "network.tf"]}, {"id": "bacda9d75b329997eb849183cf36ff8f97a9ee83", "msg": "Change DO worker_type default from s-1vcpu-1gb to s-1vcpu-2gb\n\n* On DigitalOcean, `s-1vcpu-1gb` worker nodes have 1GB of RAM, which\nis too small as a default, even for most cost constrained developers", "date": "2019-06-01 13:49:56-07:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/zeitgeist2018/infrastructure.git", "commits": [{"id": "93e9182a0c4b3819de1fdc2335ea0689d1d31cac", "msg": "Fix budget cost filters", "date": "2022-03-26 19:09:35+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/cloudtruth-demo/ops.git", "commits": [{"id": "3945c8e2bd7a2b7e73169aceae9dc1817ec8292c", "msg": "teardown compute infra to save costs till we need it", "date": "2021-08-26 10:23:40-04:00", "modified_files": ["recipes.yml", "sample-data.tf", "service-demo1.tf"]}]}, {"name": "https://github.com/itzik-bd/parking-status.git", "commits": [{"id": "5f9f8fb118a42d7b18ec082be41665ed2b9eb992", "msg": "optimize costs - remove SQS as it has a lot of \"Number Of Empty Receives\" when application is not in use + introduce lock on \"capture-trigger\" lambda by setting max concurrency to 1", "date": "2022-01-14 00:20:42+02:00", "modified_files": ["main.tf", "reasource.lambda-role.tf", "reasource.sqs-policy.tf", "reasource.step-function-role.tf", "resource.capture-trigger.tf", "resource.on-client-update.tf", "resource.refresh-if-active-clients.tf", "resource.video-stream-capture.tf", "resource.wait-and-refresh.tf", "resource.ws-notify-clients.tf", "resource.ws-on-connect.tf", "resource.ws-table.tf", "lambda.js", "lambda.js", "lambda.js", "lambda.js", "lambda.js"]}]}, {"name": "https://github.com/dylanmtaylor/dylanmtaylor-terraform-aws.git", "commits": [{"id": "44016d6a8e496b69308a81e88af8c9ef8b710ab3", "msg": "Change root to 15GB to reduce storage costs", "date": "2021-09-30 19:14:57-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/ActionIQ-OSS/terraform-duckbillgroup-aws.git", "commits": [{"id": "f75d196d00a3f1c7f00200a852b0505b38549827", "msg": "initial port of https://github.com/DuckbillGroup/onboarding/tree/master/terraform", "date": "2022-03-01 12:22:23-05:00", "modified_files": [".gitignore", "Makefile", "README.md", "duckbill-iam-role.tf"]}]}, {"name": "https://github.com/ministryofjustice/modernisation-platform-environments.git", "commits": [{"id": "ec5ec7bac99558a4e95e95788f846eb618edb861", "msg": "Remove/Disable the `ppud-data-transfer` EC2 instance.\n\nNow we've imported the current PPUD snapshot, spin everything down so\nthat we're not incurring unnecessary costs.", "date": "2022-04-14 16:03:04+01:00", "modified_files": ["ppud_data_transfer_instance.tf"]}]}, {"name": "https://github.com/liatrio/aws-accounts-terraform.git", "commits": [{"id": "af309b600147a23485f8c3fb394e75b6ac308cb5", "msg": "Better user management and doc updates (#2)\n\n* remove debug code\r\n\r\n* add account limit increase to README\r\n\r\n* move user management to module, add one-time-login, update init.sh and documentation\r\n\r\n* update README\r\n\r\n* add support for billing delegation\r\n\r\n* formatting\r\n\r\n* add a sleep, cloudtrail bucket, some doc cleanup\r\n\r\n* update README\r\n\r\n* fix typo", "date": "2018-12-10 09:55:50-05:00", "modified_files": ["README.md", "main.tf", "output.tf", "users.tf", "vars.tf", "output.tf", "output.tf", "README.md", "TerraformInit-IAM-Policy.txt", "init.sh", "main.tf", "output.tf", "vars.tf", "main.tf", "output.tf", "vars.tf", "shared.tfvars", "terraform.tfvars", "README.md", "main.tf", "output.tf", "terraform.tfvars", "vars.tf"]}]}, {"name": "https://github.com/ckilpatrick20/github-actions.git", "commits": [{"id": "1ab89439a42782f55a2ad591530118dbabd9a447", "msg": "fix: changing instance class back to t2. t3 was too expensive", "date": "2020-08-10 14:44:04-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/wellcometrust/terraform-modules.git", "commits": [{"id": "343406d18abd226dbe0a27611667fb71911ccc2c", "msg": "Add billing mode for DynamoDb to VHS (#137)\n\n* Allow variable billing mode for VHS dynamo\r\n\r\n* RELEASE.md\r\n\r\n* fmt\r\n\r\n* remove unused vars", "date": "2019-01-14 17:59:22+00:00", "modified_files": ["RELEASE.md", "main.tf", "variables.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/SiMDE-Projects/terraform.git", "commits": [{"id": "ec18cf8a566545ccf92bcc88ab5dff762f0e812d", "msg": "Added payutc role to Theo_Chazeaud", "date": "2021-03-18 02:37:48+01:00", "modified_files": ["members.tf"]}, {"id": "97df710dfcb4fdc41ac1b757b6d6832e69e967c0", "msg": "Added Theo C. to payutc role", "date": "2021-03-20 23:30:30+01:00", "modified_files": ["members.tf"]}, {"id": "346b498ccf3426e84cc638d3b965f5a0689a139f", "msg": "Adds Romain M-A. Payutc & Etuville roles", "date": "2021-11-28 13:19:12+01:00", "modified_files": ["members.tf"]}, {"id": "ce2dca4868475359e7681ce60a024f65aac3d0a3", "msg": "Adds L.Chappuis to PayUTC discord role", "date": "2022-04-28 16:14:34+02:00", "modified_files": ["members.tf"]}]}, {"name": "https://github.com/guillaumekh/wg-terraform-template.git", "commits": [{"id": "effee9cbc473af5d07cfc3aacece50aa6e59753a", "msg": "use cheaper t4g.nano instance", "date": "2021-10-19 12:15:31+02:00", "modified_files": ["vpn.tf"]}]}, {"name": "https://github.com/chriswilding/terraform-github.git", "commits": [{"id": "ca889f41a7bb6e2508b95bc8dc31179ae76e0607", "msg": "Add bill", "date": "2021-08-15 15:10:40+01:00", "modified_files": ["repository_bill.tf"]}]}, {"name": "https://github.com/minamijoyo/tfupdate-circleci-example.git", "commits": [{"id": "8284cf96d6db8cb3f6ca9be9077d6643bec9313e", "msg": "Add an example for updating .terraform.lock.hcl\n\nTerraform v0.14 will introduce a dependency lock file named\n`.terraform.lock.hcl`.\nhttps://discuss.hashicorp.com/t/terraform-0-14-the-dependency-lock-file/15696\n\nThe lock file is an implementation detail and it's hard to update it\nwith the tfupdate command. Because the hash value format seems to allow\nfuture terraform versions to change the hash algorithm gradually. If\ntfupdate updates the lock file, it will be difficult to support multiple\nterraform versions without an unexpected the lock file drift.\n\nPerhaps a recommended way is to use the terraform command to update the\nlock file. However most CIs use linux and laptops may be mac or windows\nand if you run terraform on multiple platforms, it requires to generate\nhashed for all platforms to avoid a lock file drift. So I added an\nexample for it, but I found it's inefficient because it requires\nduplicate downloads for providers on init. I tried to use a plugin cache\ndir or a local filesystem mirror, but I couldn't figure out a way to\navoid duplicate downloads on init. If I use cache or mirror, it doesn't\nrecord zip hashes, and it records them only when download providers from\norigin. I think the easiest way to use Terraform v0.14 with tfupdate is\nadding .terraform.lock.hcl to .gitignore.", "date": "2020-11-19 10:14:23+09:00", "modified_files": ["config.yml", ".gitignore", ".terraform.lock.hcl", "main.tf", "main.tf", "main.tf"]}]}, {"name": "https://github.com/poldi2015/chat-app.git", "commits": [{"id": "cb45bf17da799afaa789206e3fcd39d9403e0567", "msg": "Changed dynamoDB to pay per use model", "date": "2021-07-08 20:41:21+02:00", "modified_files": ["dynamodb.tf"]}]}, {"name": "https://github.com/jsnider-mtu/tfw-eks.git", "commits": [{"id": "daaceda701c88a0ad7162425f57bd9cabf6d8d9c", "msg": "That was expensive", "date": "2021-12-31 11:30:10-05:00", "modified_files": ["terraform.tfstate", "terraform.tfstate.backup"]}]}, {"name": "https://github.com/tedmaksym/terraform-deploy.git", "commits": [{"id": "b7b26a9ef0616c85dfdd114c19811588e44d1fd6", "msg": "Added autotagging\n\nThis is for the UW groups' AWS resources. We have deployed an autotagging stack from GorillaStack to help us with billing. These lines help make sure Terraform tags resources the same way so that it doesn't undo changed made by the autotagging infrastructure.", "date": "2020-02-26 14:15:58-08:00", "modified_files": ["autoscaler.tf", "efs.tf", "main.tf"]}]}, {"name": "https://github.com/mdimarino/iac.git", "commits": [{"id": "0cfeda4f4f737523e9e09858c25526db10de70c4", "msg": "Remove comments from NAT Gateways to avoid costs during test phase.", "date": "2019-08-26 16:06:24-03:00", "modified_files": ["vpc.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-aws-rds.git", "commits": [{"id": "56455d25c39399e071611f69ede338a4b14cd075", "msg": "costs", "date": "2021-05-24 23:41:40+01:00", "modified_files": ["compare.yml", "master.yml", "pull_request.yml", ".pre-commit-config.yaml", "README.md", "aws_db_instance.instance.tf", "examplea.auto.tfvars", "infracost-usage.yml", "terraform.tf", "variables.tf"]}]}, {"name": "https://github.com/roysjosh/terraform-unifi.git", "commits": [{"id": "da9e2869456610a0228cb14f850c6eccddbb15e0", "msg": "Decrease root volume to 20G to save costs", "date": "2020-12-02 20:20:02-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/Antmounds/fastly-demo.git", "commits": [{"id": "a433a5d5788a358e7437cb15097d68bd1220eda7", "msg": "First release 0.2.0\n\n## [0.2.0] - 2020-06-23\n### Added\n- Fastly now has 2 backends to loadbalance between instead of just 1 instance.\n- Instances now use cheapest spot instances by default for demonstration purposes.\n- Changelog with human-friendly updates.\n\n### Changed\n- App name is now interpolated into tag and resource names instead of hardcoded.\n\n### Security\n- Moved subdomain url and ssh key name to .tfvars file", "date": "2020-06-23 09:17:06-04:00", "modified_files": ["CHANGELOG", "main.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-azurerm-windowsscaleset.git", "commits": [{"id": "d5ac10f438b093d600047b0c9790e71bbbaa0ab2", "msg": "costing fo razure", "date": "2021-05-17 17:22:16+01:00", "modified_files": ["compare.yml", "master.yml", "pull_request.yml", ".terraformignore", "Makefile", "infracost-usage.yml", "outputs.tf", "terraform.tf", "outputs.tf", "validate.sh", "variables.tf"]}]}, {"name": "https://github.com/NoaAzoulay/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/chqaversion/s3-bucket-versioning.git", "commits": [{"id": "e9dcc211445f9e315d894e61cd147cf5acf151d9", "msg": "Enable bucket key for reducing the cost of SSE-KMS with Amazon S3 (#115)\n\nCo-authored-by: Krishna Mohan Bandi <krishna.bandi@internetfusion.co.uk>\r\nCo-authored-by: cloudpossebot <11232728+cloudpossebot@users.noreply.github.com>\r\nCo-authored-by: Yonatan Koren <me@yonatankoren.com>", "date": "2022-01-16 19:49:30+00:00", "modified_files": ["README.md", "terraform.md", "fixtures.us-east-2.tfvars", "main.tf", "variables.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/stuartsan/lighthouse-lambda-parallel.git", "commits": [{"id": "4214c1c19120650c6888d1c1a8d107755d6c6c2e", "msg": "initial commit; using kube job approach, but abandoning that.\n\nthe idea of using GKE, having a node pool optimized for running the LH batch jobs, and\nusing kube Jobs to manage a bunch of LH runs in parallel seemed promising. the pool\ncould regularly sit at 0, then autoscale when the LH pods are scheduled, keeping the\ncost low. but alas. the autoscaler is too slow for this to work the way i want.\ntesting with a job that manages 70 pods: the pods go PENDING, and the autoscaler\ntakes ~1m to add one node and have it become Ready; then another ~1m to add another; etc.\n\nit took 5 minutes to run 70 pods this way, and i want to run ~5000, so this is a\nshow-stopper. something like https://github.com/atlassian/escalator seems\npromising for this kind of rapid autoscaling of nodes for this kind of\nbursty workload, but it only works on AWS.\n\nkeeping this commit here in case it is useful to someone or myself later.\n\ngonna use AWS lambda instead for this project!", "date": "2019-02-04 10:58:51-08:00", "modified_files": [".gitignore", "LICENSE", "README.md", "cmd.js", "job.yaml", "kube_cluster.tf", "package.json", "pods.yaml", "provider.tf", "yarn.lock"]}]}, {"name": "https://github.com/openinfrastructure/terraform-google-multinic.git", "commits": [{"id": "7a9c468b88d2edee19007cff6529a20a38eeb363", "msg": "Add preemptible input var, defaults to false\n\nPreemptible instances are 20% of the cost of normal instances, which are\nwell suited for development and testing.", "date": "2020-09-14 16:30:08-07:00", "modified_files": ["main.tf", "main.tf", "variables.tf", "main.tf", "variables.tf"]}, {"id": "620750695d8f83d79451948d2a43bf920b48c062", "msg": "Autoscaler\n\n * Setup iperf on endpoints for autoscale testing\n * Configure endpoints in the same zone to reduce zone egress network\n   costs.\n * Switch endpoints to Debian 10 for iperf2 multi-client support\n * Run iperf directly from the startup script, it was misbehaving when\n   run from systemd.\n * Run 180 sequential iperf runs, 10 seconds each to create persistent\n   upward pressure on the autoscaler and TCP window sizes.\n * Add role label with value of multinic-endpoint, iperf-client, or\n   iperf-server to help build charts in the Monitoring console.\n * Set max replicas per zone to 6", "date": "2020-09-25 17:12:47-07:00", "modified_files": ["README.md", "AUTOSCALER.md", "autoscaler_cpu_groupsize.png", "autoscaler_cpu_sent_bytes.png", "autoscaler_cpu_test.yaml", "autoscaler_cpu_utilization.png", "autoscaler_sent_bytes_count_groupsize.png", "autoscaler_sent_bytes_count_sent_bytes.png", "autoscaler_sent_bytes_count_test.yaml", "autoscaler_sent_bytes_count_utilization.png", "panic_test01.json.bz2", "test02_mig.txt.bz2", "main.tf", "main.tf", "main.tf", "variables.tf", "startup.sh", "main.tf", "startup-script-config.tpl", "variables.tf"]}, {"id": "4b787b5d7bb3e8cccbc04336ee47f07f03b887e6", "msg": "(#38) First update to latest 0.12 versions\n\nApply these versions with TF 0.12 and then TF 0.13 to avoid the\nfollowing error.\n\n```\nError: Provider configuration not present\n\nTo work with\nmodule.host.module.project.module.project-factory.null_resource.preconditions\nits original provider configuration at\nprovider[\"registry.terraform.io/-/null\"] is required, but it has been removed.\nThis occurs when a provider configuration is removed while objects created by\nthat provider still exist in the state. Re-add the provider configuration to\ndestroy\nmodule.host.module.project.module.project-factory.null_resource.preconditions,\nafter which you can remove the provider configuration again.\n```\n\nChanges are expected:\n\n```\nAn execution plan has been generated and is shown below.\nResource actions are indicated with the following symbols:\n  - destroy\n\nTerraform will perform the following actions:\n\n  # module.host.module.project.module.project-factory.null_resource.preconditions will be destroyed\n  - resource \"null_resource\" \"preconditions\" {\n      - id       = \"8839499245402532934\" -> null\n      - triggers = {\n          - \"billing_account\"  = \"XXXXXXXXXXXXXXXXXXXX\"\n          - \"credentials_path\" = \"\"\n          - \"folder_id\"        = \"folders/XXXXXXXXXXXX\"\n          - \"org_id\"           = \"XXXXXXXXXXXX\"\n          - \"shared_vpc\"       = \"\"\n        } -> null\n    }\n\nPlan: 0 to add, 0 to change, 1 to destroy.\n\nDo you want to perform these actions in workspace \"dev\"?\n  Terraform will perform the actions described above.\n  Only 'yes' will be accepted to approve.\n\n  Enter a value: yes\n\nmodule.host.module.project.module.project-factory.null_resource.preconditions: Destroying... [id=8839499245402532934]\nmodule.host.module.project.module.project-factory.null_resource.preconditions: Destruction complete after 0s\n```", "date": "2021-02-01 10:20:13-08:00", "modified_files": ["main.tf", "main.tf"]}]}, {"name": "https://github.com/jimroth/ice-terraform-modules.git", "commits": [{"id": "8ce683757e211a4737d8c4aeb87a219cc69a4c44", "msg": "Improve tag handling to allow more tags and change to wake on cost and usage report bucket.", "date": "2018-04-09 12:44:24-07:00", "modified_files": ["profile.tf", "starter.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "main.tf", "vars.tf"]}, {"id": "faae205a36ba4fdb682fe0b5ed6176b0b072a031", "msg": "Upgrade to Terraform v0.12 and Terragrunt v0.21\n\nDropped support for LDAP version of reader and bill splitting tool.", "date": "2019-11-27 11:52:58-08:00", "modified_files": ["ice-install.sh", "cloudcraft-ICE.png", "common.tfvars", "terragrunt.hcl", "outputs.tf", "terraform.tfvars", "terragrunt.hcl", "terraform.tfvars", "ice.properties", "terraform.tfvars", "terragrunt.hcl", "config.yml", "docker-compose.yml", "ice.properties", "terraform.tfvars", "terragrunt.hcl", "terraform.tfvars", "terraform.tfvars", "terragrunt.hcl", "terragrunt.hcl", "main.tf", "outputs.tf", "vars.tf", "awslogs.conf", "install.sh", "main.tf", "profile.tf", "sb.sh", "start-instance.py", "starter.tf", "vars.tf", "main.tf", "profile.tf", "starter.tf", "vars.tf", "main.tf", "outputs.tf", "profile.tf", "vars.tf", "main.tf", "nginx.conf", "outputs.tf", "profile.tf", "vars.tf", "install.sh", "ldap", "main.tf", "outputs.tf", "profile.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "outputs.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "vars.tf", "main.tf", "terraform.tfvars", "vars.tf", "main.tf", "terraform.tfvars", "vars.tf", "main.tf", "outputs.tf", "vars.tf", "main.tf", "outputs.tf", "vars.tf", "main.tf", "vars.tf"]}]}, {"name": "https://github.com/pedroperezlatorre/public-automated-infrastructure-deployment.git", "commits": [{"id": "2bb88a4953e4cf94b922e3f4a204eecb60142cc2", "msg": "Set payment of the Plocu Pak License", "date": "2021-09-02 13:23:37+02:00", "modified_files": ["main.tf", "roks.tf", "variables.tf"]}]}, {"name": "https://github.com/mambotangu/new-foundation.git", "commits": [{"id": "329a935f6d9f7b2917213a76a1277c6969df67e4", "msg": "mothballing billing atm", "date": "2021-10-28 13:24:56-04:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "28cb59105b516edc3bafa20e2f429a88594f7a17", "msg": "Modularize the billing export", "date": "2021-10-28 19:03:59-07:00", "modified_files": ["main.tf"]}, {"id": "213de9f7494f2cd4c37f95974231320bdce1dc87", "msg": "add billing export variables", "date": "2021-10-28 19:04:07-07:00", "modified_files": ["variables.tf"]}, {"id": "ccd76152996d46c2f4feafcf2abec29384446f8f", "msg": "Added billing alertd to shared tier.", "date": "2021-11-15 10:39:51-05:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/aflury/flurydotorg.git", "commits": [{"id": "82e9d5a26c161a3f53968f748760470100414997", "msg": "Add `chat` subdomain/redirect.\n\nIt's the same as `message` except it's 75% more efficient.", "date": "2022-01-11 00:54:14-08:00", "modified_files": ["nginx-default", "deploy.sh", "dns.tf", "tls.tf"]}]}, {"name": "https://github.com/terraform-google-modules/terraform-google-iam.git", "commits": [{"id": "a69a29b5c22131175f4ff4aae358c0fdc1078fff", "msg": "Add billing_account_iam module terraform-google-modules/terraform-google-iam#52", "date": "2019-11-28 14:20:08+01:00", "modified_files": ["README.md", "main.tf", "variables.tf", "versions.tf", "README.md", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "c7102045296449fb33cdedf744cb9859ba831124", "msg": "Adding tests for billing-iam module", "date": "2020-02-10 17:01:40-06:00", "modified_files": [".kitchen.yml", "Makefile", "main.tf", "outputs.tf", "variables.tf", "billing-iam.rb", "inspec.yml", "iam.tf", "variables.tf"]}, {"id": "2b082fa2f89769a158cda8a211b7239a0489fc39", "msg": "Fixing roles for billing-iam", "date": "2020-02-10 18:09:41-06:00", "modified_files": ["iam.tf"]}, {"id": "23d6c0dde8b6cc583b7190ac028c4c13a34246f6", "msg": "Fixing billing account resource", "date": "2020-02-11 10:07:54-06:00", "modified_files": ["iam.tf"]}, {"id": "058181e11a9b694f9f2b493e201db27a4cadc51c", "msg": "Added billing_test_account_id variable in setup outputs.", "date": "2020-02-11 14:28:30-06:00", "modified_files": ["outputs.tf"]}, {"id": "ed6555ce0361dd7d351cf9be2275ec348dea91ed", "msg": "Fixed test for billing-iam", "date": "2020-02-14 15:07:54-06:00", "modified_files": ["outputs.tf", "billing-iam.rb", "inspec.yml"]}, {"id": "ac41053db55fad183313dc4e9c7f7fbff86c232d", "msg": "feat: Adding support for IAM Conditions (#109)\n\n* adding conditions to projects_iam\r\n\r\n* adding conditions to folders_iam\r\n\r\n* changes to helper to include conditions\r\n\r\n* adding conditions to organizations_iam\r\n\r\n* adding conditions to storage_buckets_iam\r\n\r\n* adding conditions to subnets_iam\r\n\r\n* added conditions to kms_crypto_keys_iam\r\n\r\n* added conditions to kms_key_rings_iam\r\n\r\n* added conditions to service_accounts_iam\r\n\r\n* updates to readme\r\n\r\n* removing caveat from here as it is not true\r\n\r\n* new example for conditional project iam\r\n\r\n* updated example\r\n\r\n* auto formatting\r\n\r\n* bumping provider versions to 3.35\r\n\r\n* bumping version to 3.36 in test fixtures\r\n\r\n* another provider version to 3.36\r\n\r\n* setting tools image to 0.12.0\r\n\r\n* bumping dev tools image to 0.12.0 on lint build file\r\n\r\n* ran generate_docs\r\n\r\n* authoritative needs to have all_bindings instead of bindings_by_role\r\n\r\n* adding tests for conditions on project IAM bindings\r\n\r\n* adding empty default for bindings vr\r\n\r\n* updates to README files\r\n\r\n* fixing whitespace error\r\n\r\n* fixing var call\r\n\r\n* bumping project factory version to latest (9.0)\r\n\r\n* bumping provider to 3.36\r\n\r\n* fixing errors in billing iam test due to missing dependency\r\n\r\n* another error in billing account test\r\n\r\n* fixing billing_iam test\r\n\r\n* not sure what the error is now, trying to use latest providers\r\n\r\n* another provider change\r\n\r\n* fixing a typo, ugh\r\n\r\n* updating tests for conditional bindings\r\n\r\n* removing un-used values from attributes\r\n\r\n* tested locally\r\n\r\nCo-authored-by: Rahul Gupta <guptarhl@google.com>", "date": "2020-09-01 18:14:15-07:00", "modified_files": ["Makefile", "int.cloudbuild.yaml", "lint.cloudbuild.yaml", "main.tf", "outputs.tf", "main.tf", "main.tf", "main.tf", "main.tf", "main.tf", "README.md", "main.tf", "variables.tf", "versions.tf", "main.tf", "main.tf", "main.tf", "README.md", "main.tf", "variables.tf", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf", "outputs.tf", "outputs.tf", "main.tf", "iam.tf", "main.tf", "outputs.tf", "main.tf", "additive.rb", "inspec.yml", "authoritative.rb", "inspec.yml", "billing-iam.rb", "inspec.yml", "iam.tf", "main.tf", "versions.tf"]}]}, {"name": "https://github.com/cjbischoff/tf-terraform-management.git", "commits": [{"id": "e357e4e6879f9f6fb09cf28a40684d30d0e63400", "msg": "[feature/Create-terraform-remote-state-bucket] Completed deployment\n\n- removed backend state; maintained locally\n- removed kms due to cost\n- paramertized my infra deployments", "date": "2018-02-17 05:39:08-07:00", "modified_files": ["backend.tf", "backend.tf", "s3.tf", "terraform.tfvars"]}]}, {"name": "https://github.com/GSA/datagov-brokerpak-eks.git", "commits": [{"id": "7b6ce448318423ada9381aa5631c16898202f8c9", "msg": "Better naming and tagging (#25)\n\n* Remove the need for consumers to break key values out of the rendered kubeconfig\r\n\r\n* Make the YAML easier to read by leading with \"field_name\", not \"required\"\r\n\r\n* Pay attention to the provided instance ID and labels\r\n\r\n* Accept cluster name and labels as vars. Use the labels as AWS tags.\r\n\r\n* Ran terraform fmt\r\n\r\n* Provide the instance name when binding so provisioning doesn't need an explicit output\r\n\r\n* Make a guess at the likely tag this will land on\r\n\r\n* Remove explicit namespace from 2048 fixture", "date": "2021-02-05 07:11:57-08:00", "modified_files": ["manifest.yml", "eks-service-definition.yml", "eks-bind.tf", "eks-provision.tf", "2048_fixture.yml"]}]}, {"name": "https://github.com/roberthstrand/demo-github-terraform.git", "commits": [{"id": "3498e289162d0249d2929d54c530467cc0585d54", "msg": "infracost update", "date": "2021-07-22 11:17:02+02:00", "modified_files": [".gitignore", "infracost-usage.yml", "main.tf"]}]}, {"name": "https://github.com/dylanhogg/cloud-jeopardy-app.git", "commits": [{"id": "279d2b3f642978b1c5fa20835f304e53cab2e7f9", "msg": "Update server_static parser to include more info in qna data payload.", "date": "2021-03-14 20:16:42+11:00", "modified_files": ["Makefile", "app.html", "app.js", "rand.py", "Makefile", "parser.py", "s3_loader.py", "main.tf", "qna.py"]}]}, {"name": "https://github.com/john-hurringjr/test-modules.git", "commits": [{"id": "1981c0cc91b1e0a372aa839143a95b9b120bcbe3", "msg": "Added billing admin permission for org iam", "date": "2019-12-02 09:27:55-05:00", "modified_files": ["main.tf", "variable-inputs.tf"]}, {"id": "47062cdca7036b8e147bb11b9dd60fb2dc577ea4", "msg": "Fixed billing account reference from service account to group", "date": "2019-12-02 09:42:43-05:00", "modified_files": ["main.tf"]}, {"id": "c4b0d5789299810b737c18dade32684daefb300c", "msg": "Changed Billing Admin permission to Billing Creator", "date": "2019-12-03 13:08:24-05:00", "modified_files": ["main.tf"]}, {"id": "a192e4763827da84447639c894968ecde93c24cc", "msg": "Added billing export", "date": "2019-12-09 12:47:25-05:00", "modified_files": ["main.tf", "outputs.tf", "variables.tf"]}, {"id": "62be07801e0115c2bd8649d4e6cbb583aa9d64d4", "msg": "Changed billing export to bq destination ref", "date": "2019-12-10 10:12:44-05:00", "modified_files": ["main.tf"]}, {"id": "2d57f2f2733ce623eb3b9af4dbd47e5f7d2b536b", "msg": "Added billing export for logs", "date": "2020-02-19 16:42:55-06:00", "modified_files": ["main.tf", "outputs.tf", "variables.tf"]}, {"id": "29259f702d867115f8bd0faf05e4a8d62499656a", "msg": "Added pubsub sink for billing logs", "date": "2020-02-20 11:42:00-06:00", "modified_files": ["main.tf", "outputs.tf", "variables.tf"]}, {"id": "cc2d09ee15890b4afc47120e322a6d30a59f968f", "msg": "Fixed billing account admin ref", "date": "2020-04-13 11:17:07-04:00", "modified_files": ["billing-account-iam.tf"]}, {"id": "8d328f4d0fc3e37212f5445036454e1fa74222fc", "msg": "Removing project iam from billing prf for now (until resolve bq issue)", "date": "2020-05-11 08:51:34-04:00", "modified_files": ["project-iam.tf"]}, {"id": "a9eb0c84472f6226e9f30ae87163bdbb62e13ebb", "msg": "Added writer identity output for billing charges to bigquery export", "date": "2020-05-11 08:54:12-04:00", "modified_files": ["outputs.tf"]}, {"id": "3c9ecd473f0ed96942c68e4547e4cc4b54ca3d63", "msg": "Stupidly I was exporting just logs, not actually setting up the cost export.... :'(", "date": "2020-09-17 13:14:24-04:00", "modified_files": ["main.tf"]}, {"id": "caa97af58a87573f996d049130d4114d944a0bca", "msg": "Stupidly I was exporting just logs, not actually setting up the cost export.... :'(", "date": "2020-09-17 13:17:49-04:00", "modified_files": ["outputs.tf"]}, {"id": "b1d11c8e8614c9f234aa75a26883197bfebe8a05", "msg": "Stupidly I was exporting just logs, not actually setting up the cost export.... :'(", "date": "2020-09-17 13:18:12-04:00", "modified_files": ["variables.tf"]}, {"id": "2b6e8449d89e7046369e99171e4597b80e9c154d", "msg": "Stupidly I was exporting just logs, not actually setting up the cost export.... :'(", "date": "2020-09-17 13:28:30-04:00", "modified_files": ["variables.tf"]}, {"id": "74e8e9924d97ad6984379870dd493c1a0a9f01d2", "msg": "Change billing log sink module to have \"uniform bucket level access\" rather an bucket policy only", "date": "2020-11-17 09:52:48-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/koki-develop/aws-monitoring.git", "commits": [{"id": "967f84351ab4235c4205c5a1da87df00d2c4a36c", "msg": "billing \u95a2\u9023\u306e\u30ea\u30bd\u30fc\u30b9\u306b\u30bf\u30b0\u3092\u8a2d\u5b9a\u3057\u305f", "date": "2021-10-17 20:22:23+09:00", "modified_files": ["cloudwatch.tf", "variables.tf", "cloudwatch.tf", "variables.tf"]}]}, {"name": "https://github.com/ssfsx17/fantasy-manager.git", "commits": [{"id": "bded5e3007349a6c47c509336ee9306d234902d6", "msg": "define SSH keypair for bastions through variable\nwork on private VPC module some more - untested due to cost", "date": "2019-12-31 21:01:25-08:00", "modified_files": ["main.tf", "main.tf", "outputs.tf", "security_groups.tf", "subnets_private.tf", "variables.tf", "bastion.tf", "variables.tf"]}]}, {"name": "https://github.com/davebizus/aws-security-service-with-terraform.git", "commits": [{"id": "c16481a84d5823b65ce96bd811a265222385b43b", "msg": "Reduced preset variables for better cost optimization", "date": "2020-01-22 21:45:52-05:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/palogitjl/terragoat1.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/wbean1/tas-avi-nsx-t-terraform.git", "commits": [{"id": "0ac67924b4f6b852f01b5bc1a56d75dfe75a54e6", "msg": "initial commit\n\nAuthored-by: Bill Bean <wbean@pivotal.io>", "date": "2021-01-25 09:03:32-06:00", "modified_files": [".gitignore", "bgp-peering.tf", "gslb.tf", "networks.tf", "output.tf", "required-providers.tf", "variables.tf", "vcenter-cloud.tf", "virtual-service.tf", "main.tf.example", "infrastructure-network.tf", "nat.tf", "no_nat.tf", "nsxt-data.tf", "output.tf", "required-providers.tf", "services-network.tf", "variables.tf", "README.md", "deployment-network.tf", "example.tfvars", "ip_block.tf", "no_nat.tf", "nsxt-data.tf", "outputs.tf", "required-providers.tf", "snat_ip_pool.tf", "variables.tf"]}]}, {"name": "https://github.com/ryte/INF-tf-rds.git", "commits": [{"id": "4672c954aa23b61b9eed78b6b16d2c6954a920de", "msg": "Add cost-allocation tags", "date": "2021-01-11 17:17:56+01:00", "modified_files": ["README.md", "dns.tf", "main.tf", "outputs.tf", "versions.tf"]}]}, {"name": "https://github.com/rkuhlke/aws_iac.git", "commits": [{"id": "97725e4d7e6b55741669fad8800c7ccebba6dcc3", "msg": "fixing ebs cost issue", "date": "2022-02-03 17:52:45-05:00", "modified_files": ["data.tf", "ec2.tf", "ecr.tf", "ecs.tf", "iam.tf", "locals.tf", "outputs.tf", "security_group.tf", "templates.tf", "userdata.tpl", "variables.tf", "main.tf", "data.tf", "ecr.tf", "iam.tf", "lambda.tf", "variables.tf", "data.tf", "ec2.tf", "ecs.tf", "efs.tf", "s3.tf", "security_group.tf", "sercretsmanager.tf", "templates.tf", "userdata.tpl", "variables.tf"]}, {"id": "0f02b7c72bfe5223912955aa4f0e5e3661894c9d", "msg": "fixing ebs cost issue", "date": "2022-02-03 18:05:10-05:00", "modified_files": ["ec2.tf", "ec2.tf"]}, {"id": "f7187a63e75e15c5a034c7b57fc80af0a89ca0f4", "msg": "fixing ebs cost issue", "date": "2022-02-03 18:16:32-05:00", "modified_files": ["main.tf", "ec2.tf"]}]}, {"name": "https://github.com/mintak21/terraform.git", "commits": [{"id": "b33ac1dffb8baa5014ddb0543b9714bd464caf44", "msg": "add mintak project / billing alert", "date": "2021-09-11 02:58:49+09:00", "modified_files": [".terraform.lock.hcl", "alert.tf", "providers.tf", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/CheesecakeLabs/django-drf-boilerplate.git", "commits": [{"id": "e4003aa3c51b789e2a2b5828768a7d0f34659209", "msg": "feat(terraform): remove private subnets and NAT setup\n\nThis is due an unnecessary cost increase due to the NAT pricing", "date": "2020-01-30 08:29:56-03:00", "modified_files": ["route-tables.tf", "subnets.tf"]}]}, {"name": "https://github.com/nadnerb/terraform-elasticsearch.git", "commits": [{"id": "3afbe21b508351456319027110e8b7c49c6c18c6", "msg": "new cost tags, removed elb", "date": "2015-10-26 16:38:28+11:00", "modified_files": ["main.tf", "main.tf", "provision.sh", "variables.tf"]}]}, {"name": "https://github.com/cloudchacho/terraform-google-hedwig-alerts.git", "commits": [{"id": "ab8808de2e078c572e9d88fdc57ff91b8e4acc36", "msg": "Remove dataflow since that pattern is prohibitively expensive (#3)", "date": "2019-06-06 11:54:58-07:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/richardhughes/infra-modules.git", "commits": [{"id": "48015a86eda461d99b580b69db5922acbe5bd28e", "msg": "Add billing budget", "date": "2019-02-03 19:53:15+00:00", "modified_files": ["main.tf", "vars.tf"]}, {"id": "758500f3cf780df57cbffff4da6ad2fa89489fa4", "msg": "Add s3 backend to billing module", "date": "2019-02-03 19:57:44+00:00", "modified_files": ["main.tf", "vars.tf"]}]}, {"name": "https://github.com/segmentio/stack.git", "commits": [{"id": "e27f8951d4387d5a2f6e03fd7f5a4f3c6ee53c66", "msg": "feat(vpc): Optionally use NAT instances instead of NAT gateways\n\nIF NAT instances are used, optional inputs are whether to use Elastic\nIPs, an SSH key name, and the EC2 instance type. The latest Amazon VPC\nNAT AMI is used. The use of NAT instances can be less expensive than NAT\ngateways for development VPCs. NAT instances can be stopped when not in\nuse.", "date": "2017-07-15 18:37:55-06:00", "modified_files": ["Readme.md", "docs.md", "main.tf"]}]}, {"name": "https://github.com/dwp/aws-azkaban.git", "commits": [{"id": "c332af7fcbfd40d09a6ca9f1885827c5575aed2a", "msg": "Schedule jobs through the Azkaban API. (#87)\n\n* Schedule jobs through the Azkaban API.\r\n\r\nThe zip uploader will now search for a json file in the same location as\r\nthe project zip files that has the same name (except for a '.json'\r\nextension). If found, this file is expected to contain a cron\r\nschedule for each environment of each flow within the job (though\r\nneither all the flows nor all the environments have to have one).\r\n\r\nIf a schedule is found for a flow for the environment the lambda is\r\ndeployed to, then the azkaban endpoint to schedule a flow is invoked.\r\n\r\nAn example schedule file is given in\r\n'resources/aws-payment-timelines.json'.\r\n\r\nCo-authored-by: Connor Avery <55276424+connoravo@users.noreply.github.com>\r\nCo-authored-by: stevenburton <stevenburton@digital.uc.dwp.gov.uk>", "date": "2021-06-04 10:30:20+01:00", "modified_files": ["pr.yml", ".gitignore", "Makefile", "README.md", "lambda_handler.py", "scheduler.py", "lambda_handler_tests.py", "scheduler_spec.py", "utility_spec.py", "utility.py", "azkaban_zip_uploader.md", "local.tf", "requirements.txt", "aws-payment-timelines.json", "tox.ini", "zip_uploader_lambda.tf"]}]}, {"name": "https://github.com/kabisa/terraform-datadog-costs.git", "commits": [{"id": "adaf03ac0d5a324880e9e6aa10d54b9de6b4e635", "msg": "updated costs alerts to use generic monitor 0.5.1", "date": "2021-04-13 11:42:30+02:00", "modified_files": ["apm-hosts-variables.tf", "apm-hosts.tf", "apm-spans-variables.tf", "apm-spans.tf", "containers-variables.tf", "containers.tf", "custom-metrics-variables.tf", "custom-metrics.tf", "hosts-variables.tf", "hosts.tf", "logs-indexed-variables.tf", "logs-indexed.tf", "logs-ingestion-4h-variables.tf", "logs-ingestion-4h.tf", "logs-ingestion-variables.tf", "logs-ingestion.tf", "provider.tf", "variables.tf"]}, {"id": "eaa25b731b45d7e87099118e9ee829e0d6189b16", "msg": "update alert_id link for widgets in cost dashboard", "date": "2021-04-13 13:39:00+02:00", "modified_files": [".gitignore", "alert.tpl", "apm-hosts.tf", "apm-spans.tf", "containers.tf", "custom-metrics.tf", "dashboard.tf", "hosts.tf", "logs-indexed.tf", "logs-ingestion-4h.tf", "logs-ingestion.tf"]}]}, {"name": "https://github.com/DrFaust92/terraform-kubernetes-ebs-csi-driver.git", "commits": [{"id": "0ab2ef1476f3b8c2173237d32e0f84b7548f75e6", "msg": "merge locals to single block\nformat code for more readabillity\nadd dynamic container blocks for resizer and snapshotter\n\nchange toleration block var types", "date": "2020-07-31 00:02:48+03:00", "modified_files": ["README.md", "controller.tf", "csi_rbac.tf", "iam.tf", "locals.tf", "node.tf", "variables.tf"]}]}, {"name": "https://github.com/poseidon/terraform-onprem-kubernetes.git", "commits": [{"id": "a1f4bf308e2176eebb56aea342c6834802617743", "msg": "Change kube-apiserver port from 443 to 6443\n\n* Adjust firewall rules, security groups, cloud load balancers,\nand generated kubeconfig's\n* Facilitates some future simplifications and cost reductions\n* Bare-Metal users who exposed kube-apiserver on a WAN via their\nrouter or load balancer will need to adjust its configuration.\nThis is uncommon, most apiserver are on LAN and/or behind VPN\nso no routing infrastructure is configured with the port number", "date": "2018-06-18 21:57:58-07:00", "modified_files": ["bootkube.tf"]}]}, {"name": "https://github.com/rotemavni/terravni.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/patheard/terraform-cantrill-aws-associate.git", "commits": [{"id": "bc7484cd34698f2724e5d9f241fd9f53d953e3a3", "msg": "feat(alerts): billing threshold alert\n\nAlso includes Terragrunt project structure setup.", "date": "2021-04-02 17:35:21-04:00", "modified_files": [".gitignore", ".terraform.lock.hcl", "terragrunt.hcl", "env_vars.hcl", "terragrunt.hcl", "env_vars.hcl", "main.tf", "variables.tf", "terragrunt.hcl"]}, {"id": "61d18adce16f0884f6f94e4852635b026a6667b2", "msg": "fix: rename 'alarms' to 'alarm-billing'", "date": "2021-04-05 08:08:20-04:00", "modified_files": ["terragrunt.hcl", "terragrunt.hcl", "kms.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/aws-samples/aws-security-services-with-terraform.git", "commits": [{"id": "c16481a84d5823b65ce96bd811a265222385b43b", "msg": "Reduced preset variables for better cost optimization", "date": "2020-01-22 21:45:52-05:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/nairsujitk/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/sky0510/tf.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/covidapihub/terraform-covidapihub.git", "commits": [{"id": "3c5d381a20fbd287f1003271ee1ba64272325074", "msg": "Create 3 persistent VPCs for dev envs (#31)\n\nTo practice bringing EKS clusters up and down, it helps to have\r\npersistent networks to host them.\r\n\r\nOne of these (dev1) already exists. Here we test setting our nat gateway\r\nand interent gateway booleans to false on an existing network. We want\r\nto be able to do this, becuase these are compute resources that cost\r\nmoney and aren't needed when there are no clusters or EC2s running in\r\ntheir VPC.", "date": "2020-06-30 11:02:58-04:00", "modified_files": ["dev_env.tf"]}]}, {"name": "https://github.com/TeliaSoneraNorge/no-ordering-services-tf-modules.git", "commits": [{"id": "723fb4fec1ae02b25ebcc239201818dd9a3e2333", "msg": "Introduce cost-reporter role module (#21)\n\nThis module creates a policy and a role that can be assumed by the\r\ncost-reporter lambda running in a different account to aggregate cost\r\ninformation.", "date": "2021-11-29 11:24:15+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/cloudposse/terraform-aws-eks-node-group.git", "commits": [{"id": "bd9d419611586afdc65cea796577f66becf7299d", "msg": "Add `capacity_type` to support node group spot pricing (#45)\n\n## what\r\n* Adds in support for capacity_type settings on node group \r\n* Removes clrf from document https://www.atechtown.com/remove-ctrl-m-character/\r\n* Adds gitattributes so linux line endings are maintained\r\n\r\n## why\r\n* Who doesn't like spot pricing \r\n* I don't like paying full price for machines\r\n\r\n## references\r\n* https://aws.amazon.com/blogs/containers/amazon-eks-now-supports-provisioning-and-managing-ec2-spot-instances-in-managed-node-groups/\r\n* https://aws.amazon.com/about-aws/whats-new/2020/12/amazon-eks-support-ec2-spot-instances-managed-node-groups/\r\n* https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_node_group#capacity_type\r\n\r\nCo-authored-by: actions-bot <58130806+actions-bot@users.noreply.github.com>", "date": "2020-12-04 23:23:27+00:00", "modified_files": [".gitattributes", "README.md", "terraform.md", "main.tf", "variables.tf"]}, {"id": "34be126797af6673ca0375d6e60bca5616257786", "msg": "fix autoscaling taint labels syntax (#87)\n\nCo-authored-by: cmondion <cmondion@payplug.com>", "date": "2021-09-16 16:14:59+02:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/VikeSec/CTF-Infrastructure.git", "commits": [{"id": "093b8d76d87d5feb7bebf82f1a50ddb0c2e4bbce", "msg": "[CI] Inital Infracost setup (#3)\n\n* Inital Infracost\n\n* Add out-file flag\n\n* Don't comment on PR if no infra diff", "date": "2022-04-11 19:36:40-07:00", "modified_files": ["terraform.yml", "vars.tf"]}]}, {"name": "https://github.com/moayadi/hashicat.git", "commits": [{"id": "5d5891e9146f2281d38e9545870d2c428e887ba3", "msg": "updates to resolve cost governence checks", "date": "2020-11-09 15:25:46+08:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/cloudposse/terraform-aws-dynamodb.git", "commits": [{"id": "545115800c52b8b038eb461448c5d6f8964a3bbc", "msg": "add billing_mode support (#31)", "date": "2019-04-04 12:25:56-04:00", "modified_files": ["README.md", "terraform.md", "main.tf", "variables.tf"]}, {"id": "322c4dcf7d4e843fef9d3b686e1393851e80d679", "msg": "Don't set read/write capacity in PAY_PER_REQUEST billing mode (#101)\n\nCo-authored-by: cloudpossebot <11232728+cloudpossebot@users.noreply.github.com>", "date": "2022-01-27 04:31:08+11:00", "modified_files": ["README.md", "main.tf"]}]}, {"name": "https://github.com/midl-dev/tezos-auxiliary-cluster.git", "commits": [{"id": "3b521c00fdd4562399b632eaf9d8bf2e72f737fa", "msg": "add the payout to the auxiliary cluster", "date": "2019-12-21 22:16:32-08:00", "modified_files": ["tezos-snapshot-downloader.sh", "backerei-payout.yaml", "tezos-public-node-stateful-set.yaml", "k8s.tf", "variables.tf"]}, {"id": "fef5d0f5de4d051fe40225adf241a71a9d539359", "msg": "new payout cron\n\n* prevents double payouts by querying the tzstats api\n* dynamically set the payoutStart argument", "date": "2020-01-24 19:37:44+13:00", "modified_files": ["Dockerfile.template", "payout-cron.sh", "backerei-payout.yaml", "k8s.tf"]}, {"id": "a9fffc062a9424241e5700dd33ba722003cb1d0c", "msg": "be more generic: introduce witness address\n\nDo not assume that the payout address delegates to the baking address.\n\nGives user the freedom to set up a witness address instead.", "date": "2020-02-05 08:20:39+13:00", "modified_files": ["payout-cron.sh", "backerei-payout.yaml", "k8s.tf", "variables.tf"]}, {"id": "8c5e67285f0eba6bcce82b76da87dbec1b71b19b", "msg": "do not recomment the witness and payout address to be the same\n\nAlso make the start cycle depend on the payout delay.", "date": "2020-02-26 12:20:46+11:00", "modified_files": ["payout-cron.sh", "variables.tf"]}, {"id": "9cbfebaab11cb3466b160d18ef2eb46c0b875d55", "msg": "cheaper vms", "date": "2020-03-23 23:09:38+08:00", "modified_files": ["variables.tf"]}, {"id": "17ebd71a400f2351b68050514a5e512aa2b1845a", "msg": "infra modifications to generate the new payout page\n\npass payoutDelay variable to the website builder\n\nfix issue with path in website builder container", "date": "2020-04-01 22:50:03+08:00", "modified_files": ["Dockerfile.template", "createPayoutPages.py", "entrypoint.sh", "k8s.tf"]}, {"id": "0ce26b9ec543d6a66ae342dfd3886beccb4e4c2d", "msg": "make payouts work", "date": "2020-09-13 13:53:10-07:00", "modified_files": ["payout-cron.sh", "entrypoint.sh", "backerei-payout.yaml", "kustomization.yaml.tmpl", "k8s.tf"]}, {"id": "6dc0ed43549e35920a9c289eaf06b50b5656a469", "msg": "finalize sending payouts", "date": "2020-09-14 11:27:45-07:00", "modified_files": ["payout-cron.sh", "entrypoint.sh", "k8s.tf"]}, {"id": "ddde60e4c805c1d4cb6e882edb0bbc14eb96c31e", "msg": "add a dry run for payouts", "date": "2021-02-17 16:14:55-08:00", "modified_files": ["payout-cron.sh", "backerei-payout.yaml", "kustomization.yaml.tmpl", "tezos-public-node-stateful-set.yaml", "kustomization.yaml.tmpl", "k8s.tf", "variables.tf"]}, {"id": "29a6cf848e2f0f2258442560927f6771a39d5c52", "msg": "prepare for deleting payout engine", "date": "2021-05-21 17:01:50-07:00", "modified_files": ["Dockerfile.template", "payout-cron.sh", "backerei-payout.yaml", "kustomization.yaml", "tezos-network-monitor-deployment.yaml", "kustomization.yaml.tmpl", "tezos-public-node-stateful-set.yaml", "kustomization.yaml.tmpl", "prefixedpvnode.yaml.tmpl", "gcp.tf", "k8s.tf", "variables.tf"]}, {"id": "c95a3eca794d802a014e8aefa6b676e61cefca18", "msg": "remove more payouts", "date": "2021-05-21 17:22:48-07:00", "modified_files": ["Dockerfile.template", "createPayoutPages.py", "payouts.md", "kustomization.yaml.tmpl", "k8s.tf"]}]}, {"name": "https://github.com/NLnetLabs/rpki-deploy.git", "commits": [{"id": "8bd6e745475f635d6f6b6929a545afa2e1d9dd57", "msg": "FIX: Default to a smaller Droplet size as when iterating on the scripts the cost can add up fast.", "date": "2019-11-11 11:10:56+01:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/kscastro/infracost-with-terraform.git", "commits": [{"id": "ecffc4fc070acd95831c86a095f0e42c8abf835d", "msg": "infracost", "date": "2022-02-10 23:15:23-03:00", "modified_files": ["infracost.yml", ".gitignore", "github_action.yaml", "main.tf", "provider.tf", "remote-state.tf"]}]}, {"name": "https://github.com/nivg1992/tarragoat-test.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/f5devcentral/terraform-aws-bigip-module.git", "commits": [{"id": "d9bed6c1ac0d56c0f7181e928eb38661a9d7bde5", "msg": "updated module for bigip payg image", "date": "2021-02-15 21:19:57+05:18", "modified_files": ["README.md", "f5_onboard.tmpl", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/bschnei/lark-dog.git", "commits": [{"id": "036b3b1c42ef76c8962edf84e02a82519668f915", "msg": "terraform gcp and namecheap", "date": "2021-05-23 19:50:07-07:00", "modified_files": [".terraform.lock.hcl", "cloud-init.conf", "gcp.tf", "main.tf", "namecheap.tf", "terraform.tfstate", "terraform.tfstate.backup", "terraform.tfvars", "variables.tf"]}]}, {"name": "https://github.com/mattermost/mattermost-cloud-database-factory.git", "commits": [{"id": "170602b4e998060ed066c3e1ce2b606b8dc8df7f", "msg": "Add random_page_cost param custom value\n\nSets the planner's estimate of the cost of a non-sequentially-fetched\ndisk page. The default is 4.0. This value can be overridden for tables\nand indexes in a particular tablespace by setting the tablespace\nparameter of the same name (see sql-altertablespace).\n\nReducing this value relative to seq_page_cost will cause the system to\nprefer index scans; raising it will make index scans look relatively\nmore expensive. You can raise or lower both values together to change\nthe importance of disk I/O costs relative to CPU costs, which are\ndescribed by the following parameters.\nref. https://postgresqlco.nf/doc/en/param/random_page_cost/", "date": "2021-01-29 17:35:05+02:00", "modified_files": ["main.tf", "variables.tf", "main.tf"]}, {"id": "3794d676f4375842364a080e78750b41d9af22d5", "msg": "Add a cost allocation tag to postgres instances\n\nIf this commit applied the postgres instances will have a tag that is used for cost_allocation\nIssue: MM-36254", "date": "2021-06-07 14:33:37+03:00", "modified_files": [".gitignore", "main.tf"]}]}, {"name": "https://github.com/offensive-terraform/terraform-aws-s3-subdomain-takeover.git", "commits": [{"id": "b5646afef6ab74bf33c982257f31ba58a2941cb2", "msg": "Fix payload path", "date": "2020-09-12 21:05:16-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/cloudposse/terraform-aws-ecs-alb-service-task.git", "commits": [{"id": "91284c5a26797f4695256f112a2871b388975a18", "msg": "Add ECS Services to ignore desired_count (#116)\n\n* Add ECS services to ignore desired_count\r\n\r\nCo-authored-by: David Rill <david.rill@worldpay.com>\r\nCo-authored-by: cloudpossebot <11232728+cloudpossebot@users.noreply.github.com>", "date": "2021-06-02 15:16:29+01:00", "modified_files": ["README.md", "terraform.md", "main.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/simplygenius/atmos-recipes.git", "commits": [{"id": "d27b48345a3827b8a10cb5388e42bd5cbea484bb", "msg": "allow a less redundant (cheaper) NAT setup for the vpc", "date": "2018-11-06 11:35:52-05:00", "modified_files": ["vpc.yml", "outputs.tf", "private-subnet.tf", "public-subnet.tf", "variables.tf", "vpc.tf"]}, {"id": "ec9fb5624454f05354c4a6f4bc1b283d3951401e", "msg": "allow billing access for ops admin", "date": "2019-09-05 09:27:18-04:00", "modified_files": ["atmos-permissions.tf", "policy-allow-all-billing.json"]}]}, {"name": "https://github.com/jonbamber/terraform_state_bucket.git", "commits": [{"id": "8c7ca9bbb2c89d622129ace7b10b655851615982", "msg": "Use AWS-managed KMS key for S3 object encryption\n\nUsing a customer-managed KMS key was a needless expense.\n\nThis change switches to using the AWS-managed key.", "date": "2021-01-31 09:53:31+00:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/Eximchain/terraform-aws-dappbot.git", "commits": [{"id": "d2b4f9a65c3d2fabb60afe32757ed595281ef101", "msg": "Switch Dapp table billing to OnDemand", "date": "2019-06-26 18:19:24-04:00", "modified_files": ["main.tf"]}, {"id": "844207076c0afe42b6e8f08022be9d0767657d62", "msg": "Add payment event topic and lapsed table", "date": "2019-07-11 15:32:03-04:00", "modified_files": ["dappbot-event-listener-lambda.zip", "dappbot-manager-iam.tf", "main.tf", "variables.tf"]}, {"id": "14639e84cb12aed3936fb47a06d775fcd73b60f7", "msg": "Pass payment lapsed grace period as var", "date": "2019-07-12 15:48:19-04:00", "modified_files": ["dappbot-event-listener-lambda.zip", "main.tf", "variables.tf"]}, {"id": "8e1bac130878c240e3be1c3dae12af8ceaff6580", "msg": "Pull in Stripe Payment Gateway resources", "date": "2019-07-19 12:22:13-04:00", "modified_files": ["api-gateway.tf", "iam-policies.tf", "iam-roles.tf", "main.tf", "payment-gateway-stripe-lambda.zip"]}, {"id": "9e46ef1e798d71102af44b2ba7aec27869705ed8", "msg": "Grant permission to publish SNS payment events", "date": "2019-07-19 14:58:27-04:00", "modified_files": ["iam-policies.tf", "iam-roles.tf", "main.tf", "variables.tf"]}, {"id": "3de5ba19cab275a60f3859c7ee224bb23899035a", "msg": "Broke payment-gateway-lambda into three Lambda, added API Gateway invoke permissions for each one, added Stripe secrets to variables.tf", "date": "2019-07-19 15:09:14-04:00", "modified_files": ["api-gateway.tf", "main.tf", "payment-gateway-stripe-lambda.zip", "variables.tf"]}, {"id": "c473f5af9d06938d648082473dca03d4455fa172", "msg": "Laid out /payment/stripe ANY resource along w/ CORS preflight handler, local vars for all three lambda_uris", "date": "2019-07-19 16:00:52-04:00", "modified_files": ["api-gateway.tf", "iam-roles.tf", "main.tf"]}, {"id": "00c0811e556087ee31c69e66d1e10772b19fb7b1", "msg": "Make payment provider and status user readable", "date": "2019-08-08 12:17:28-04:00", "modified_files": ["main.tf"]}, {"id": "23ff05b0e526c4932ba9a18d1ded9200f00bf525", "msg": "Attached a policy so the payment-lambda can update Users' numDapps attributes", "date": "2019-08-14 14:08:26-04:00", "modified_files": ["iam-roles.tf", "payment-gateway-stripe-lambda.zip"]}]}, {"name": "https://github.com/RootPrivileges/terragrunt-aws-modules.git", "commits": [{"id": "c39c9a849f1632827d427cd995260116887800cd", "msg": "Add cross-account Billing role", "date": "2019-08-23 10:30:00+01:00", "modified_files": ["billing.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "27d58efd23bb62e71533a99bd110848e4fe8b548", "msg": "Add AssumeRoleBilling to administrators group", "date": "2019-08-23 17:37:25+01:00", "modified_files": ["administrators.tf"]}, {"id": "025b6526a72990d63eef67de1b0145847bc03067", "msg": "Add consolidated billing alarm to organisation", "date": "2019-11-18 21:05:31+00:00", "modified_files": ["billing-alarm.tf", "variables.tf"]}, {"id": "9c84d03bde131e7f349dcd493ba5b7e55bf8ae2c", "msg": "Replace CloudWatch billing alarm with AWS Budget", "date": "2019-11-26 21:05:30+00:00", "modified_files": ["billing-alarm.tf", "budget.tf"]}, {"id": "1ee78d8228a83a42a8e099d0821ce6f32ee92dad", "msg": "Remove (expensive) Glacier transition for logs", "date": "2020-08-15 17:43:02+01:00", "modified_files": ["s3-bucket-cloudtrail.tf", "s3-bucket-audit-logs.tf"]}]}, {"name": "https://github.com/SrimaanPenugonda/terraform-payment.git", "commits": [{"id": "0db4ad4a0a7a15427392a97c502a9645de337229", "msg": "New Payment", "date": "2021-04-18 13:52:43+05:18", "modified_files": [".gitignore", "misc.xml", "modules.xml", "terraform-payment.iml", "vcs.xml", "Makefile", "README.md", "asg.tf", "dev.tfvars", "prod.tfvars", "data.tf", "dev.tfvars", "output.tf", "provider.tf", "state.tf", "vars.tf"]}, {"id": "31ac39514b682b3ceb58e3b16a12cab7247c8ae7", "msg": "New Payment", "date": "2021-04-23 23:09:06+05:18", "modified_files": ["asg.tf"]}]}, {"name": "https://github.com/pagopa/pm-infra.git", "commits": [{"id": "770f92d0c30edf8cf1804e19260f93e208c704d9", "msg": "Initial payment manager commit", "date": "2021-11-30 19:15:49+01:00", "modified_files": ["README.md", "app_gateway.tf", "app_service.tf", "backend.ini", "backend.tfvars", "terraform.tfvars", "backend.ini", "backend.tfvars", "terraform.tfvars", "main.tf", "network.tf", "security.tf", "terraform.sh", "variables.tf", "vmdb.tf"]}, {"id": "be859313c418c8b2c1c2e5cc536dc0d60c1ff284", "msg": "Refactored payment manager app service", "date": "2022-01-03 10:49:05+01:00", "modified_files": ["app_service.tf", ".terraform.lock.hcl", "README.md", "admin-panel.tf", "batch.tf", "backend.ini", "backend.tfvars", "terraform.tfvars", "logging.tf", "main.tf", "network.tf", "restapi-io.tf", "restapi.tf", "rtd.tf", "security.tf", "terraform.sh", "variables.tf", "wisp.tf", "app_gateway.tf", "backend.ini", "backend.tfvars", "terraform.tfvars", "backend.ini", "backend.tfvars", "terraform.tfvars", "main.tf", "security.tf", "terraform.sh", "variables.tf", "network.tf", "security.tf", "backend.ini", "backend.tfvars", "terraform.tfvars", "backend.ini", "backend.tfvars", "terraform.tfvars", "main.tf", "security.tf", "terraform.sh", "variables.tf", "vmdb.tf", "vmdb.tf"]}]}, {"name": "https://github.com/nhsconnect/prm-mhs-infra.git", "commits": [{"id": "f6c64d1b6ed367803a833da293e84d61573a7fd8", "msg": "[PRMT-932] Added DNS servers as part of MHS deployment\n\nThis allows to stop using expensive AWS DNS resolver.\n\nWe only need to forward the ncrs.nhs.uk to the HSCN DNS servers. It is\nnot accomplished by having 2 EC2 instances running an unbound DNS.", "date": "2020-02-07 14:56:06+00:00", "modified_files": [".gitignore", "Dojofile", "pipeline.gocd.yml", "tasks", "dev.tfvars", "dns.tf", "data.tf", "ec2-profile.tf", "ec2.tf", "output.tf", "sg.tf", "userdata.tpl", "variables.tf", "ecs.tf", "opentest.tf", "output.tf", "security-groups.tf", "ssh_keypair.tf", "test.tfvars", "ec2.tf", "ssh_keypair.tf", "variables.tf", "variables.tf", "vpc-endpoints.tf"]}]}, {"name": "https://github.com/wellcomecollection/buildkite-infrastructure.git", "commits": [{"id": "300ed87cba6912103723b03d62c9b0bf93df36ea", "msg": "Snapshot bucket (#4132)\n\n* Adds an S3 bucket for Elastic Cloud snapshots\r\n\r\nWe currently rely on Elastic Cloud to hold our snapshots for the catalogue API ES cluster.\r\n\r\nIn order to make working with Catalogue API ES data easy to do locally and to do outside of Elastic Cloud for reduced time and expense, it is useful and more arguably more reliable to hold these in an S3 bucket we have direct access to.\r\n\r\nTo complete this change we will need to make some changes to the Elastic Cloud configuration.\r\n\r\nSee: https://www.elastic.co/guide/en/cloud/current/ec-aws-custom-repository.html\r\n\r\n* add some documentation for ES snapshot storage\r\n\r\n* moved to critical stack\r\n\r\n* principals needs to be a list", "date": "2020-01-07 16:17:46+00:00", "modified_files": ["README.md", "iam.tf", "locals.tf", "outputs.tf", "s3_elasticsearch.tf", "wellcomedigitalplatform.pub", "main.tf", "outputs.tf", "variables.tf", "iam.tf", "locals.tf"]}]}, {"name": "https://github.com/ewitkop-panw/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/DMFGadmin/iam_managment.git", "commits": [{"id": "c199b7920897a116524bad08676718b4f826a5c1", "msg": "adding billing admins", "date": "2020-01-16 10:32:58-06:00", "modified_files": ["README.md", "main.tf", "main.tf", "main.tf", "variables.tf"]}, {"id": "68c72a40a1a589b65110777869644ab6aeb3c2dc", "msg": "adding billing admins", "date": "2020-01-16 11:30:31-06:00", "modified_files": ["main.tf"]}, {"id": "2a1120085aba3dcdfc46e4616063f621bd3847fc", "msg": "removed compute admin role for billing", "date": "2020-01-16 14:56:43-06:00", "modified_files": ["main.tf"]}, {"id": "8b27f2e52eaa167cd48782832c8463a893e638f4", "msg": "removed unnecessary roles for billing group", "date": "2020-01-16 15:03:20-06:00", "modified_files": ["main.tf"]}, {"id": "8968d3daac08be9dbbc65ac27fcc873bd2a16011", "msg": "testing billing iam", "date": "2020-01-28 12:23:40-06:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "c610624d3afb9e4cb4108d92b19be404118275a6", "msg": "removed billing admins", "date": "2020-01-28 13:01:04-06:00", "modified_files": ["main.tf"]}, {"id": "1da4d6bed6065494bf0588d24150b76ad4b5bef8", "msg": "updated billing module", "date": "2020-01-28 14:27:57-06:00", "modified_files": ["main.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "variables.tf"]}, {"id": "0987b041a320bf1cd95e0be29e2dd101121675cb", "msg": "syntax in billing role", "date": "2020-01-28 14:30:32-06:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/TimonB/tf-azure-example.git", "commits": [{"id": "ce89df3cebc6487146391afe9517661053229f77", "msg": "optimize costs", "date": "2022-01-24 07:54:43+01:00", "modified_files": ["main.tf"]}, {"id": "b49579fbecbe8002932fdfb86146f83efd60bfcf", "msg": "optimize costs", "date": "2022-01-24 08:49:17+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/ywarezk/academeez-iac.git", "commits": [{"id": "3a96bab387bf898fd71023961e0cd957488e357b", "msg": "decided to create dev cluster as preemptable and in warsaw to make things super cheap", "date": "2021-12-22 14:28:17+02:00", "modified_files": ["main.tf", "main.tf", "variables.tf", "variables.tf"]}, {"id": "f1383adda80c8d0960fa8153c2a82f03ce81e874", "msg": "created a super cheap cluster", "date": "2021-12-22 15:13:59+02:00", "modified_files": ["main.tf", "main.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/hmcts/ccpay-payment-api-gateway.git", "commits": [{"id": "5024990dcc7f83e97f7cfdf971fc9e6082a7d9a1", "msg": "draft commit for payhub api gateway", "date": "2018-07-17 14:27:53+01:00", "modified_files": [".gitignore", "Jenkinsfile_CNP", "Jenkinsfile_parameterized", "README.md", "main.tf", "output.tf", "api-policy.xml", "api.json", "variables.tf"]}, {"id": "94494f8cda7cb3dd57e7ab338d97705ea33a7c25", "msg": "moved to shared infra vault (ccpay-env)", "date": "2018-10-17 13:26:44+01:00", "modified_files": ["main.tf"]}, {"id": "8202f4d16aa8cf1014cdd047b1f7d846a32fce85", "msg": "PAY-1401", "date": "2018-10-30 11:37:21+00:00", "modified_files": ["prod.tfvars"]}, {"id": "04a9eb7f04eb91c1f48c1b4438ec5001fc247ccc", "msg": "Created new var to retain product name as payments", "date": "2021-04-15 16:25:32+01:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "334c18ef110a6f0e0edc34717496d5b34fe14bff", "msg": "Encoding fix (#45)\n\n* Adding Approval required\r\n\r\n* Changes to resolve TF state issue\r\n\r\n* Commented template_file\r\n\r\n* Test\r\n\r\n* Add remote backend\r\n\r\n* Add common-tags variable\r\n\r\n* Created new var to retain product name as payments\r\n\r\n* Comment TF config to create empty state file\r\n\r\n* Uncomment TF script\r\n\r\n* Fix for synatax issues\r\n\r\n* Pointing new end point for performance fix\r\n\r\n* aad-new-thumbprint-to-aat\r\n\r\nAdding new thumbprint to aat for testing\r\n\r\n* Remove character encoding\r\n\r\n* Re-instate state file reference\r\n\r\n* Add new thumprint for ITHC\r\n\r\n* Removed duplicate var\r\n\r\nCo-authored-by: AyanDuttaHMCTS <53818530+AyanDuttaHMCTS@users.noreply.github.com>\r\nCo-authored-by: Yashar Rahvar <Yasharrah909@gmail.com>\r\nCo-authored-by: krishnanuthalapati <32389208+krishnanuthalapati@users.noreply.github.com>\r\nCo-authored-by: Aravindan Rajan <aravindan.ranjan@hmcts.net>", "date": "2021-07-13 18:22:04+01:00", "modified_files": ["aat.tfvars", "ithc.tfvars", "main.tf", "api-policy.xml", "variables.tf"]}]}, {"name": "https://github.com/NimrodGolan/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/arielkru/stage-ak1.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/apnmt/aws-cluster.git", "commits": [{"id": "0ced433867207029e1304c8905d06ded5ea081c6", "msg": "add paymentservice", "date": "2022-01-26 16:38:32+01:00", "modified_files": ["paymentservice.tf"]}, {"id": "c180ae33cb3ede70592ff0b8a3c34555be5812f1", "msg": "add authentication for paymentservice", "date": "2022-03-22 18:41:03+01:00", "modified_files": ["authorizer.tf"]}, {"id": "0ac371d34c1e01954e7b29707fcbc5f7a2958c48", "msg": "fix paymentservice user permissions", "date": "2022-04-04 17:12:24+02:00", "modified_files": ["authorizer.tf"]}]}, {"name": "https://github.com/ToruMakabe/aks-bootstrap-202005.git", "commits": [{"id": "53f8190d2f8570c02b59410dde90eb1394495794", "msg": "optimize cost", "date": "2020-05-14 08:43:34+09:00", "modified_files": ["main.tf"]}, {"id": "b206121bf2619873935439e2453f24da1472b71b", "msg": "Revert \"optimize cost\"\n\nThis reverts commit 53f8190d2f8570c02b59410dde90eb1394495794.", "date": "2020-05-14 10:02:08+09:00", "modified_files": ["main.tf"]}, {"id": "c71340bb198aeb11dc66971c3624ae8afde78cfe", "msg": "optimize cost", "date": "2020-05-14 13:59:03+09:00", "modified_files": ["main.tf"]}, {"id": "540756ed4e4c5f0adff2d33bf29c9051ae3ad302", "msg": "optimze cost", "date": "2020-05-15 16:40:26+09:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/CHQA-terra/TF-sample.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/taldanzig/nginx-multistream.git", "commits": [{"id": "94e101feda4af9eef9980dc024c9d1a95afe3e6f", "msg": "easily enable / disable (to save costs)", "date": "2021-03-23 08:36:42-07:00", "modified_files": ["Makefile", "ecs.tf", "lb.tf", "r53.tf", "variables.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-gcp-instance.git", "commits": [{"id": "e88177b8ea5d4ef9f53f70ade27232de7a360800", "msg": "costs", "date": "2021-05-15 10:00:55+01:00", "modified_files": ["compare.yml", "main.yml", "pull_request.yml", ".gitignore", ".pre-commit-config.yaml", "Makefile", "module.tf", "terraform.tf", "validate.ps1", "validate.sh"]}]}, {"name": "https://github.com/jordanyoumbi/Terraform-kinesis.git", "commits": [{"id": "2997a82bfacdbfea1818abaa089a1c037a227423", "msg": "costruction d' un pipeline log vers s3 en utilisant kinesis", "date": "2019-08-22 14:00:50+00:00", "modified_files": ["TestlambdaTerraform.py", "TestlambdaTerraform.zip", "example.tf", "graph.svg", "iam_role.tf", "variable.tf", "versions.tf"]}]}, {"name": "https://github.com/ninthnails/terraform-aws-camellia.git", "commits": [{"id": "0019704e14723aaf326840ab36c594c3f514a2d4", "msg": "Specs and optional resources for cost optimization during development.", "date": "2019-11-10 11:59:13-05:00", "modified_files": ["README.md", "cluster.tf", "kafka.tf", "manager.tf", "zookeeper.tf", "image.tf", "aws-default.json", "aws-private.json"]}, {"id": "9438dcebde79c0726d69ae6a15c99b9c5c0f461c", "msg": "Stand alone cluster support, cost optimization for development", "date": "2019-11-11 19:53:03-05:00", "modified_files": ["cluster.tf", "kafka-user-data.tpl", "kafka.tf", "manager-user-data.tpl", "manager.tf", "zookeeper.tf", "main.yaml"]}]}, {"name": "https://github.com/eleven-labs/github.git", "commits": [{"id": "e6956a8ebb6fd428e7aa0c32c96beb60a32a14ce", "msg": "feat(user,team): remove billard madrieres victor", "date": "2021-05-25 21:56:30+02:00", "modified_files": ["teams.tf", "users.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-aws-elasticbeanstalk.git", "commits": [{"id": "e8801be5208bd505bc0f70380e974791b17e39df", "msg": "costs", "date": "2021-05-22 10:11:47+01:00", "modified_files": ["CODEOWNERS", "compare.yml", "master.yml", "pull_request.yml", ".markdownlint.json", "README.md", "infracost-usage.yml", "terraform.tf"]}]}, {"name": "https://github.com/maddevsio/aws-eks-base.git", "commits": [{"id": "c528b5e97d9d1b57087bd60644a885dd9b4a2294", "msg": "added vpc_s3_endpoint to reduce traffic costs", "date": "2021-01-19 04:42:15+00:00", "modified_files": ["aws-vpc.tf"]}]}, {"name": "https://github.com/alghanmi/terraform-modules.git", "commits": [{"id": "f4e8069ff11b7ca7a15ce25843b26d00fb399ade", "msg": "Support bill alerts and console user", "date": "2020-06-19 14:32:32-07:00", "modified_files": ["bill-alerts.tf", "data.tf", "main.tf", "output.tf", "variables.tf"]}, {"id": "570d3d8440ed399ed8b30bffe1fd7a2adc197771", "msg": "Remove logging due to cost", "date": "2020-10-17 13:47:50-07:00", "modified_files": ["cloudfront.tf"]}, {"id": "eab9e8474da65641c375d121623356cb902d8a3c", "msg": "Create policy for billing sns topic", "date": "2020-12-16 16:23:52-08:00", "modified_files": ["bill-alerts.tf"]}]}, {"name": "https://github.com/onaiv22/gcp-terraform-project.git", "commits": [{"id": "a70184c9b3708030585adff92bc3056982ec0c42", "msg": "initial configuration for billing", "date": "2022-01-24 19:03:05+00:00", "modified_files": [".gitignore", "billing.tf", "main.tf", "terraform.tfvars", "variables.tf"]}]}, {"name": "https://github.com/dbqatf/tf.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/andybaran/GCP-IOT-BigDataInfra.git", "commits": [{"id": "a9e8f4373dedbcd68a61e9260feacf744a4d9df3", "msg": "no billing account needed", "date": "2020-06-11 16:36:04-04:00", "modified_files": ["terraform.auto.tfvars"]}, {"id": "cacd8afbc18273e42e4027b36b3a5e9c37c04405", "msg": "removing dataflow to keep cost down while testing", "date": "2020-06-16 12:13:49-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/rackspace-infrastructure-automation/aws-terraform-ec2_autorecovery.git", "commits": [{"id": "137c1c3085bb95b74e2d5a695c3343ca25830fd3", "msg": "Fix error when creating 0 instances\n\nWhy would anyone want to create zero instances?\n\nSuppose there are templates being re-used for multiple environments, and in\na development or test environment, multiple major application roles/functions\n(let's call them \"foo\" and \"bar\") are handled by a single instance to save on\ncosts. In production, however, each major application role lives on its own\ninstance(s) for better resiliency.\n\nSince Terraform doesn't support conditional invocation of modules,\nspecifying an `instance_count` of `0` for \"foo\" and \"bar\" in dev/test\nand an `instance_count` of `1` for \"foobar\", while specifying an\n`instance_count` of `1` for \"foo\" and \"bar\", respectively, and `0` for\n\"foobar\", would permit reuse across environments and avoid a lot of\ncopy-paste that may drift.\n\n**Note:** The SSM document association portion was the only part of this\ntemplate that was currently producing errors, so it's the only one I\naddressed. This will technically still create all of the other base\nresources like roles, iam policies, etc. We can tie those to\n`instance_count` as well, if desired.", "date": "2018-10-19 12:30:40-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/lacework/terraform-gcp-audit-log.git", "commits": [{"id": "324c8a499794f6a789d583c4c460af9475171215", "msg": "feat: add folder exclusions (#49)\n\n**Breaking Changes**\r\n\r\n* Update Google provider version to 4.4.0 minimum\r\n* Change k8s_filter to true by default - This will result in cost savings for our customers since we don't currently use the GKE logs.  When k8s audit logging reaches GKE, we can re-evaluate the default setting.\r\n* Change ubla to true by default - This will put our storage bucket in compliance with CIS Benchmark 5.2\r\n* Remove the bucket logging configuration options - This check was removed from the CIS benchmarks in 1.1 since the preferred method is to use Cloud Audit Logging.  Our CIS 1.2 report reflects this change, and we should be removing the 1.0 reports from the system \"soon\"", "date": "2022-03-28 13:42:35-04:00", "modified_files": [".gitignore", "README.md", "README.md", "main.tf", "versions.tf", "main.tf", "README.md", "main.tf", "main.tf", "output.tf", "ci_tests.sh", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/EngineerBetter/scf-tutorial.git", "commits": [{"id": "93252286b87dcf6abb8400dc714bbfdd248e093f", "msg": "i need to pay more attention", "date": "2019-05-22 07:37:58+02:00", "modified_files": ["ns-record-set.tf"]}]}, {"name": "https://github.com/hazelops/terraform-aws-ecs-datadog-agent.git", "commits": [{"id": "a10df203e8892e1a868bd88d798589719a582ba6", "msg": "Use public.ecr.aws registry for the default datadog-agent image\n\nUsing public.erc.aws registry provides a better integration on the\nAWS ECS environment:\n* reduce network cost\n* better availability", "date": "2021-09-23 15:15:23+02:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/ministryofjustice/analytics-platform-ops.git", "commits": [{"id": "071584af34e20e3b3493f08b23615685d6374c4c", "msg": "Lambda function which handles GitHub organization events\n\nThis lambda function will be triggered by events in the SNS topic\n`${ENV}_github_organization_events`.\n\nBased on the [action in the GH event](https://developer.github.com/v3/activity/events/types/#organizationevent)\nwill (asynchronously) invoke the `create_user_role()` or `delete_user_role`\nlambda function which will actually perform create/remove the IAM role\nfor the user.\n\nNOTE: As the lambda functions are invoked asynchronously we don't get billed\ntwice and we don't need to add more complexity by queuing these invocations\nmanually.", "date": "2017-05-19 15:40:23+01:00", "modified_files": ["main.tf", "inputs.tf", "lambda_organization_events.tf", "organization_events.py", "outputs.tf"]}, {"id": "590672a365dc7cf14f750fd1c0ff34efdcf1182d", "msg": "Amendments to as per Andy comments (PR #62)\n\n- Using `str#encode` instead of `bytes()`\n- Renamed environment variables to be explicit about the fact\n  these ARNs belongs to lambda functions\n- Moved module documentation at the beginning of the file\n- Using `getLogger(__name__)` instead of `__package__`\n- Inline lambda functions payload instead of having it in a\n  function\n- Removed some of the tests fixtures and used pytest's parametrize\n  to remove some duplication\n\nSee: https://github.com/ministryofjustice/analytics-platform-ops/pull/62#pullrequestreview-40250908", "date": "2017-05-25 13:56:33+01:00", "modified_files": ["lambda_organization_events.tf", "organization_events.py", "conftest.py", "test_organization_events.py", "conftest.py", "test_create_user_role.py", "test_delete_user_role.py"]}, {"id": "a58ddb92c24531f22941a5af29be883b5a917dd9", "msg": "Lambda function to handle GitHub membership events\n\nHandles events coming from GitHub/membership SNS topic.\n\nThese are published when a user is added/removed to/from a team in\nGitHub:\n - If a user is added to a group, we attach the corresponding bucket policy\n   to this user's role\n - If a user is removed to a group, we detach the corresponding bucket policy\n   from this user's role\n\nThese two operations are actually performed by two independent lambda\nfunctions injected via the `LAMBDA_ATTACH_BUCKET_POLICY_ARN` and\n`LAMBDA_DETACH_BUCKET_POLICY_ARN` environment variables.\n\n**NOTE**: These lambda functions currently don't exist and I'll update the\nterraform resources later to pass the actual ARNs. This shouldn't change\nthe logic.\n\n**Limitations**\n\nSurprising GitHub webhook membership events payload don't include the user\nrole for the team where is added. And also, no events are published when\na user's role changes.\n\nThis means we don't have a way to tell if a user is just a \"member\",\n\"maintainer\" or \"owner\" in a team or when its level changes.\n\nFor simplicity we'll add the read/write policy to the user.\nWhen/if we'll have a UI to handle permissions we can add extra logic to\nattach a readonly policy when more appropriare.\n\n**Resources**\nTicket: https://trello.com/c/UZ8qooqO/116-xl-create-lambda-functions-to-consume-github-events-from-sns-queues-and-create-update-delete-aws-resources\n\"membership\" event documentation: https://developer.github.com/v3/activity/events/types/#membershipevent", "date": "2017-06-08 13:50:06+01:00", "modified_files": ["main.tf", "inputs.tf", "lambda_membership_events.tf", "membership_events.py", "conftest.py", "test_membership_events.py"]}]}, {"name": "https://github.com/CBCdev03/tf1.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/trivbuit/Scalr-Demo.git", "commits": [{"id": "773446c8f3192a447b8956f71b1ac90e7a9b8afa", "msg": "Update cost", "date": "2021-03-30 12:29:52+07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/thoughtbot/flightdeck.git", "commits": [{"id": "c784bc0a3f747b66ab7cd01f23bbbdbad3bfe705", "msg": "Disable annotations/labels in logs by default\n\nFluent Bit can add the pod annotations and labels to log output which\nmakes it possible to find and aggregate logs by labels. While this could\nbe useful, it creates extremely large log entries, which can be\nexpensive in Cloudwatch.\n\nThis removes most of the Kubernetes metadata from the log output. It\nleaves namespace, container name, and pod name, which makes it possible\nto filter by a particular application or process.", "date": "2021-09-03 13:44:32-04:00", "modified_files": ["README.md", "main.tf", "variables.tf", "README.md", "filters.yaml", "main.tf", "variables.tf", "README.md", "main.tf", "variables.tf"]}, {"id": "4671cc040f6466a455b6d200de555943037f3dac", "msg": "Break up Prometheus instances\n\nWe currently have a single Prometheus instance per cluster, which\nmonitors cluster health, application health, and service health (ie\nIstio). This Prometheus instance sends alerts to AlertManager and can\nsend metrics to an AWS Prometheus workspace for longer term metrics\nstorage and analysis. Prometheus Adapter talks to this instance for\npod autoscaling.\n\nFor a small cluster, this setup resulted in the following usage:\n\n* 10% of one vCPU\n* 600-700MiB RAM\n* 50,000 metrics ingested per scrape\n\nThis results in heavy resource usage, expensive long-term storage, and\nPrometheus instance that will require GiB of RAM at moderate scale.\n\nIn this change, the Prometheus instance is split into three:\n\n* One instance to monitor cluster and pod health (kube-prometheus-stack)\n* One instance to monitor Flightdeck and applications (flightdeck)\n* One instance to collect aggregated metrics (federated)\n\nThe kube-prometheus-stack instance is used only for monitoring and\nalerting about cluster and resource health.\n\nThe flightdeck instance is used for monitoring and alerting Flightdeck\nand (optionally) applications, as well as pod autoscaling.\n\nThe federated instance scrapes aggregated metrics from other instances.\nMetrics from this instance can be sent for long term storage.\n\nFor the same cluster, this setup requires the following usage:\n\n* 5% of one vCPU, split up among three pods\n* 600-700MiB RAM, split up among three pods\n* 90 metrics ingested per scrape\n\nThis results in lower over all cluster resource usage, now distributed\nto avoid a single point of failure and make it easier to distribute\nloads as the cluster scales.\n\nIt sends vastly fewer metrics upstream for ingestion, resulting in lower\nlong-term storage costs.\n\nIt also provides a generic instance for federation, making it possible\nto add other Prometheus instances which can then be aggregated and\ningested.", "date": "2021-09-17 16:47:00-04:00", "modified_files": ["variables.tf", "README.md", "main.tf", "variables.tf", "README.md", "main.tf", "makefile", "outputs.tf", "providers.tf.json", "variables.tf", "main.tf", "rules.yaml", "README.md", "Chart.yaml", "_helpers.tpl", "additionalscrapeconfigs-secret.yaml", "clusterrole.yaml", "clusterrolebinding.yaml", "podmonitors.yaml", "prometheus.yaml", "rules.yaml", "service.yaml", "serviceaccount.yaml", "servicemonitors.yaml", "values.yaml", "main.tf", "makefile", "outputs.tf", "providers.tf.json", "variables.tf", "istio-podmonitor.yaml", "istio-servicemonitor.yaml", "main.tf", "README.md", "federated-prometheus.yaml", "flightdeck-prometheus.yaml", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/nishantshete/bridgecrewpoc.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/john-hurringjr/test-environment.git", "commits": [{"id": "a542b5b093c3f507c3aa6b5c926f899963fcf236", "msg": "Testing billing account creation (bigquery)", "date": "2019-12-09 12:44:51-05:00", "modified_files": ["billing-account-export.tf", "variables.tf"]}, {"id": "6a39fb17014a8dc7270cd10565d86e27b653997d", "msg": "Testing billing account creation (bigquery)", "date": "2019-12-09 12:47:44-05:00", "modified_files": ["billing-account-export.tf"]}, {"id": "cb7b011fdd01062e78c3866262f8dfb9c185932e", "msg": "Testing billing account creation (bigquery)", "date": "2019-12-09 13:42:36-05:00", "modified_files": ["variables.tf"]}, {"id": "3f055eb9fa38c325fe3c8ef8347c03f204ef4589", "msg": "Started lots of changes, major change is addition of billing log export", "date": "2020-02-19 16:47:29-06:00", "modified_files": ["billing-account-export.tf", "on-prem-vpc.tf", "org-and-billing-sinks.tf", "variables.tf", "vpc-sc-on-prem-vpc.tf", "vpc-sc-shared-vpcs.tf", "vpn-on-off-file.tf"]}, {"id": "a19c20269d01b6f298abac58d4f30b0861e5f64c", "msg": "Added in pubsub sink for billing logs", "date": "2020-02-20 12:02:47-06:00", "modified_files": ["org-and-billing-sinks.tf", "variables.tf"]}, {"id": "0c29cbf04c6d472fe3b2b03d5610bde5970cdd7d", "msg": "New project, testing billing account logs", "date": "2020-02-20 15:04:16-06:00", "modified_files": ["test-projects.tf"]}, {"id": "b59276e6e653c3fcae6b6f867df5b8d6d0b89f18", "msg": "Added in billing account 2", "date": "2020-02-20 17:00:05-06:00", "modified_files": ["org-and-billing-sinks.tf", "variables.tf"]}, {"id": "8a6685ee5a2e3fc36b0237aebee083240d6c0db2", "msg": "Removing \"billing sink\"", "date": "2020-09-30 14:56:10-04:00", "modified_files": ["billing-account-export.tf", "org-iam-policies-billing-sinks.tf"]}, {"id": "9975934d0e9e2659d5cbea450b3bc771914823d8", "msg": "Testing permissions at folder level. Billing creator removed", "date": "2020-10-29 10:20:30-04:00", "modified_files": ["folderiam.tf"]}, {"id": "43468b0ab299a53d0282de23011aa78ea1433f9c", "msg": "Added billing account", "date": "2021-03-18 18:27:03-04:00", "modified_files": ["test-projects.tf"]}, {"id": "ac7072e177490ca0bcce0a2f6b7fbb11fba8a202", "msg": "Testing custom role for billing", "date": "2021-04-28 20:27:48-04:00", "modified_files": ["custom-org-role.tf", "limit-iam-binding.tf"]}, {"id": "6ec5dac09c7445a612da6367505329168c37f1f4", "msg": "Testing custom role for billing", "date": "2021-04-28 20:30:44-04:00", "modified_files": ["custom-org-role.tf"]}]}, {"name": "https://github.com/00inboxtest/terraform-google-vault.git", "commits": [{"id": "1d0b5db7f310dc6a47af3130a97e5373d9cdaddf", "msg": "feat: enable auto-healing, update to Debian 10 (#119)\n\nThis patch adds an auto-healing policy to automatically re-create the\r\nvault cluster instance if the vault server stops.  One of the nodes in\r\nthe instance group is active as per [Vault HA][ha].  The other nodes are\r\npassive and forward requests to the active node.  Two different health\r\nchecks are used because passive nodes return non-200 status codes by\r\ndefault.\r\n\r\nIn addition, this patch:\r\n\r\n * Update Vault to 1.6.0 by default\r\n * Update image to Debian 10 by default\r\n * Defaults to e2-standard-2 instance types, which are less expensive\r\n   and more performant than n1-standard-1.\r\n * Improves startup (and auto-heal recovery) time by starting the vault\r\n   service as quickly as possible in the startup-script.\r\n\r\n[ha]: https://www.vaultproject.io/docs/concepts/ha.html", "date": "2020-11-16 12:22:51-08:00", "modified_files": ["README.md", "README.md", "main.tf", "startup.tf", "config.hcl.tpl", "startup.sh.tpl", "variables.tf", "shared_instance_group_tests.rb", "default.rb", "simple.rb", "main.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/bridgecrewio/terraform-google-bridgecrew-gcp-read-only.git", "commits": [{"id": "b650c0269b85188532adbd328bc1bbdedc00a57a", "msg": "Add version to payload", "date": "2020-05-21 19:40:50+03:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/Prathimadshetty/TG.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/AlexNPavel/tectonic-vagrant-test.git", "commits": [{"id": "256ba5e3929d3bb0e1a195d93c02813a5917208c", "msg": "Bump Kubernetes/Tectonic versions (#79)\n\n* tectonic: update Nginx Ingress image\r\n\r\n* Allows IPv6 DNS resolvers and fixes other issues\r\n* Remove nginx template override config map, previously needed on AWS\r\nto enable port redirection (now uses an annotation on ingress obj)\r\n* https://github.com/kubernetes/ingress/blob/master/controllers/nginx/Changelog.md\r\n\r\n* tectonic: bump KVO/TCO\r\n\r\nChanges for TCO:\r\n  - Block upgrade for version < 1.5.2-tectonic.2.\r\n  - Remove 'rawURL' support.\r\n\r\nChanges for KVO:\r\n  - Add components mapping for 1.5.4+tectonic.1.\r\n  - Add node-agent, checkpointer and tectonic-stats-emmiter into the mapping.\r\n  - Add support for updating the entire manifest during upgrade.\r\n\r\nOther changes:\r\n  - Add 'selector' in the deployments to fix the payload so that\r\n    1.5.2-tectonic.2 can upgrade to this payload.\r\n\r\n* modules/bootkube: add kubelet client cert flags to API server\r\n\r\nNotably fixes `kubectl logs`\r\n\r\n* tectonic: bump console to v1.1.1", "date": "2017-03-20 12:45:15-07:00", "modified_files": ["config.tf", "kube-apiserver.yaml", "daemonset.yaml", "service.yaml", "ingress.yaml", "configmap.yaml", "deployment.yaml", "service.yaml", "kube-version-operator.yaml", "tectonic-channel-operator.yaml", "tectonic.sh"]}, {"id": "d3c889d73a3c8b0a48934dd6f338b87da0115b3f", "msg": "*.*: Add 'make payload'\n\nModify the 'make-update-payload.sh' to use terraform to populate the\nassets first, then generate the payload.", "date": "2017-04-27 19:28:02-07:00", "modified_files": ["Makefile", "tectonic-channel-operator.yaml", "assets.tf", "awsutil.sh", "config.tf", "make-update-payload.sh", "payload.json", "publish-payload.sh", "upload-payload.sh"]}, {"id": "f674e33023e0e32aefd18cea97449e4502994dae", "msg": "modules/update-payload/*: Add cluo into tco's payload.", "date": "2017-05-03 16:23:37-07:00", "modified_files": ["assets.tf", "make-update-payload.sh", "payload.json"]}, {"id": "f91ef619e12b790748753d9afbc79ef2d4eee7d2", "msg": "Update KVO to v1.6.4-kvo.3 (#874)\n\nUpdate KVO to v1.6.4-kvo.3\r\n\r\nAlso generate a new update-payload.", "date": "2017-05-30 12:22:35-07:00", "modified_files": ["config.tf", "kube-version-operator.yaml", "payload.json"]}, {"id": "7fd24aaf4ff09982992edcedddc5f8046fa28ba4", "msg": "update-payload: Fix \"make payload\".\n\nNeed to define the variales otherwise the `make payload` command will\nfail.\n\nA follow-up PR should move those tectonic operators into a sub-directory\nso we don't need to maintain this in the future.", "date": "2017-06-19 13:52:23-07:00", "modified_files": ["assets.tf"]}, {"id": "4e7f5f4b37b1ae7bc6a64a6863d1ff1668168776", "msg": "updater: Move operators and appversions into subdirectories.\n\nThis helps to clean up the 'make payload' scripts.", "date": "2017-06-27 12:50:47-07:00", "modified_files": ["app-version-kubernetes.yaml", "app-version-tectonic-cluster.yaml", "app-version-tectonic-etcd.yaml", "app-version-tectonic-monitoring.yaml", "cluster-config.yaml", "container-linux-update-operator.yaml", "kube-version-operator.yaml", "tectonic-channel-operator.yaml", "tectonic-etcd-operator.yaml", "tectonic-prometheus-operator.yaml", "tectonic.sh", "assets.tf", "make-update-payload.sh", "payload.json"]}, {"id": "6acbf2c17a0aa2e55b8e8142fe87d1a8b3bfae4e", "msg": "modules/update-payload: Fix appversion for tectonic-etcd.", "date": "2017-06-27 13:07:48-07:00", "modified_files": ["config.tf", "assets.tf", "assets.tf", "payload.json"]}]}, {"name": "https://github.com/hellupline/terraform-eks-cluster.git", "commits": [{"id": "2bd01358b3a30d1680074f9bbd120da3a1456450", "msg": "Switch to a public-only setup\n\nAside from being cheaper to operate due to not having a NAT gateway, \nthis should help understand the benefits and limitations of calico.", "date": "2020-03-30 16:45:26+01:00", "modified_files": ["eks-cluster.tf", "eks-worker-nodes.tf", "vpc.tf"]}]}, {"name": "https://github.com/openaustralia/infrastructure.git", "commits": [{"id": "63ee190c0ae1832bb72681e1e4b1b14a9367b4bb", "msg": "Move to more modern EBS storage - better performance, lower cost", "date": "2021-07-14 12:09:40+10:00", "modified_files": ["electionleaflets.tf", "openaustralia.tf", "righttoknow.tf"]}]}, {"name": "https://github.com/Org-leak-org/terra.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/kesavakadiyala/terraform-payment.git", "commits": [{"id": "c1dd913bd180cbe69b9bd2534b128a8910af985f", "msg": "Added User, Payment, Cart, Shipping Services", "date": "2022-03-06 13:53:20+05:18", "modified_files": ["Makefile", "dev.tfvars", "prod.tfvars", "main.tf", "provider.tf", "state.tf", "dev.tfvars", "prod.tfvars", "vars.tf"]}]}, {"name": "https://github.com/tomroffe/aws-tf-vpc.git", "commits": [{"id": "54339750767eb9a26cf3ba580ee3f2ec116c8f2c", "msg": "Update subent tags for k8s, disable vpc endpoints becuase cost. linting\n\nSigned-off-by: Tom Roffe <tom@altobyte.io>", "date": "2020-03-14 14:36:34+00:00", "modified_files": ["locals.tf", "vpc.tf"]}]}, {"name": "https://github.com/cn-terraform/terraform-aws-ecs-service-autoscaling.git", "commits": [{"id": "f335575152435fc9a381290c63e011906e0f777f", "msg": "Add infracost (#3)", "date": "2021-11-04 10:19:48+00:00", "modified_files": ["pipeline.yml", "main.tf"]}]}, {"name": "https://github.com/nadnerb/terraform-ec2-module.git", "commits": [{"id": "33521a4d295010fd62aea43de8d9ff633662fc6d", "msg": "addded costing tags", "date": "2015-10-15 10:48:46+11:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "156f55b47afc3c6ed3c7f36071ff09e77e14b604", "msg": "added costing tags", "date": "2015-10-15 10:57:42+11:00", "modified_files": ["main.tf"]}, {"id": "6a94697f87ee2064c939afb4854cb162e316cd12", "msg": "renamed cost center tag", "date": "2015-10-29 16:32:28+11:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/m22r/wagayano-infra.git", "commits": [{"id": "b374afc649b9ee195043d44554db0144ffadb684", "msg": "Attach billing policy to admin", "date": "2019-09-02 14:29:09+09:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/TrigpointingUK/terraform.git", "commits": [{"id": "4751c36e04ceb5b464b0a54cbbc344cbfe56ea35", "msg": "Cheaper retagging", "date": "2022-01-31 11:37:58+00:00", "modified_files": ["circleci.tf"]}]}, {"name": "https://github.com/shsamkit/terraform-google-hedwig-subscription.git", "commits": [{"id": "ab8808de2e078c572e9d88fdc57ff91b8e4acc36", "msg": "Remove dataflow since that pattern is prohibitively expensive (#3)", "date": "2019-06-06 11:54:58-07:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/Amberoat/didactic-octo-eureka.git", "commits": [{"id": "494706fc421a0ddda47f7d543b7e7a296c378c26", "msg": "use b2s for cheaper cost", "date": "2021-10-23 23:11:11+08:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/bphanbc/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/amitmarkovich92/terragoat-amit.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/phillhocking/aws-ubuntu-irssi.git", "commits": [{"id": "1532e0c298ec4f8d7d749a884f7c46f2a2cf53d3", "msg": "Cheap: single core/standard volume type instead of EBS", "date": "2021-08-15 01:14:21-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/mackah666/terraform-aws-sqs.git", "commits": [{"id": "6157e6469d1c87291fe1b7d0d3772f5cfb0edf9f", "msg": "fix: need to fix infracost", "date": "2021-11-15 03:27:52+00:00", "modified_files": [".tflint.hcl.old"]}, {"id": "76cf8b597436aeded903bbbfcd0b5d6e6093b82c", "msg": "fix: change the infracost path", "date": "2021-11-15 04:47:06+00:00", "modified_files": [".pre-commit-config.yaml", ".infracost-cache", "main.tf"]}]}, {"name": "https://github.com/cds-snc/cloud-based-sensor.git", "commits": [{"id": "ccd141993815d0b1f444d12bbd2bdcdd9548e20e", "msg": "feat: set satellite bucket object expire to 14 days (#118)\n\nUpdate the S3 module version so that it is possible to control if\r\ndelete markers are replicated to the destination bucket.\r\n\r\nBy doing this, and not enabling delete marker replication, it means\r\na shorter object expiration of 14 days can be set on the satellite\r\nbucket objects which will save storage costs.\r\n\r\nThe central log archive bucket will keep its 90 day object expire\r\nlifecycle rule so we'll still have the logs if needed.", "date": "2022-02-08 16:16:10-05:00", "modified_files": ["s3.tf"]}, {"id": "10bb572d477197bd3874532bfd364de1cb496d05", "msg": "feat: CloudWatch alarm for billing changes (#126)\n\nAdd a CloudWatch alarm, SNS topic and Slack notification Lambda\r\nfor estimated billing changes that are greater than a percentage\r\nchange threshold in a six hour period.\r\n\r\nNote that billing alerts must be enabled on the payer account\r\nfor the `EstimatedCharges` metric to be available in CloudWatch.", "date": "2022-02-24 11:28:29-05:00", "modified_files": ["terragrunt-apply-central.yml", "terragrunt-apply-satellite.yml", "terragrunt-plan-central.yml", "terragrunt-plan-satellite.yml", "billing_alarm.tf", "inputs.tf", "kms.tf", "sns.tf", ".terraform.lock.hcl", "terragrunt.hcl", "provider.tf", ".terraform.lock.hcl", "terragrunt.hcl"]}, {"id": "a2cfcab6e307cd722398ff0172bcfed24eb54fc4", "msg": "feat: billing anomaly detection (#128)\n\n* feat: billing anomaly detection\r\n\r\n* chore: remove unused variable", "date": "2022-03-07 11:19:46-05:00", "modified_files": ["billing_alarm.tf", "inputs.tf", "terragrunt.hcl"]}, {"id": "2ef761605e5b45e717b67a742b3a942b37774189", "msg": "fix: billing alarm resource names to skip AWS cleanup (#130)\n\nUpdate the billing alarm resources to use the expected name\r\nprefixes so they are not removed by the scratch account weekly\r\nAWS cleanup job.", "date": "2022-03-07 13:46:58-05:00", "modified_files": ["billing_alarm.tf", "kms.tf", "sns.tf"]}, {"id": "5a446d4dc050348f17d76fc56b681bd66aec4cb9", "msg": "remove ok_action from billing alarm (#131)", "date": "2022-03-07 15:08:41-05:00", "modified_files": ["billing_alarm.tf"]}, {"id": "2609946080fea2269bc5932ed18c80928e72ce82", "msg": "fix: billing alarm Slack notifications (#140)\n\nUpdate the `notify_slack` Terraform module version with\r\nthe JSON payload fix so that it works with the SRE bot\r\nwebhooks.", "date": "2022-04-25 09:08:48-04:00", "modified_files": ["sns.tf"]}, {"id": "ad9ba03731ec0520164bb23a90968f2100dca517", "msg": "Update billing alarm (#143)\n\n* Update billing alarm\r\n\r\nChanging the period to 12 hours because according to AWS:\r\n\r\n>The ML algorithm we use currently works well with dense data that exhibit seasonality and trends. In this case, since this metric is expected to have only 1 datapoint every 12 hours, this feature may not work well for this metric...(metric being 'billing' in this case)\r\n\r\nSo in light of this increasing period to 12 hours, and number of evalution periods to compare to alarm points.\r\n\r\n* Revert comparison operator", "date": "2022-05-03 14:22:34-04:00", "modified_files": ["billing_alarm.tf"]}]}, {"name": "https://github.com/sa-proj/proj-azure.git", "commits": [{"id": "baa5b2d85892a85403c5dac807c891bb1b7b6dc7", "msg": "sql license - pay as you go", "date": "2021-08-28 19:52:15+05:18", "modified_files": ["sqlserver-1.tf", "sqlserver-2.tf"]}]}, {"name": "https://github.com/emeloibmco/Schematics-Classic-Infrastructure-BareMetal.git", "commits": [{"id": "2d2b279e98ba4b58b7931fbf7f7869d5d38ac305", "msg": "Hourly Billinng Template", "date": "2020-09-03 00:17:00-05:00", "modified_files": ["README.md", "bare_metal.tf", "baremetal.JPG", "menu.JPG", "workspace.JPG", "workspace1.JPG", "provider.tf", "variables.tf"]}]}, {"name": "https://github.com/robertdebock/terraform-aws-vault.git", "commits": [{"id": "e3b6520960a88aacbf03339dc1368f680a8bee9a", "msg": "Development cheaper, deduplicate, fix and sort ami_patterns.", "date": "2022-03-03 21:11:07+01:00", "modified_files": ["locals.tf"]}, {"id": "757edca9d6fb2231ebdcf03ec611183c59eaf39b", "msg": "Cheaper bastion host and cooldown configurable.", "date": "2022-03-03 21:11:30+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/sterraform/TF-sample.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/ihcsim/aws.git", "commits": [{"id": "d5542b6d772ac096059a04c1c669d1f914943974", "msg": "SQS queue for games payload", "date": "2018-03-15 11:43:49-07:00", "modified_files": ["games-sqs.tf", "vars.tf"]}]}, {"name": "https://github.com/StatCan/terraform-kubernetes-aks-platform-daaas.git", "commits": [{"id": "8da664d84f09db83ee8244878ba5de77f34b510e", "msg": "feat(ns): Add kubecost ns", "date": "2020-04-29 15:37:36-04:00", "modified_files": ["namespace_kubecost.tf"]}]}, {"name": "https://github.com/e91e63/terraform-tekton-pipelines.git", "commits": [{"id": "432683fcf7921a699f1557e89818b3bef5dba61a", "msg": "Removing cache due to costs", "date": "2021-11-15 14:28:58-08:00", "modified_files": ["main.tf", "npm-tests-e2e.sh"]}]}, {"name": "https://github.com/jvhoof/cudalab-blue-green-azure.git", "commits": [{"id": "49ccadfd2af67ef0f7b1af0ea9d2068a59a4b859", "msg": "Added option for PAYG or BYOL via a variable", "date": "2018-08-29 10:07:51+02:00", "modified_files": ["00-general.tf", "02-cgf.tf", "03-waf.tf"]}]}, {"name": "https://github.com/weiztech/gcloud-python-cost-control.git", "commits": [{"id": "43b3c46b84b984800a6a013a93555b7bedf5c81a", "msg": "add cost control code + terraform deployment code to GCP", "date": "2021-03-27 13:05:28+07:00", "modified_files": [".gitignore", "main.py", "requirements.txt", ".terraform.lock.hcl", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/liatrio/lead-terraform.git", "commits": [{"id": "71a0250ad3aeed1da2b11734ac22c21831f3595d", "msg": "updates for cost optimization - essential vs preemptive ASGs", "date": "2019-09-10 23:54:06-07:00", "modified_files": ["certmanager.tf", "downscaler.tf", "external-dns.tf", "k8s-spot-termination-handler.tf", "kube-janitor.tf", "main.tf", "metrics.tf", "prometheus-values.tpl", "prometheus.tf", "variables.tf", "eks.tf", "essential-toleration.tpl", "lead.tf", "main.tf", "variables.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/nonjosh/terraform-dev.git", "commits": [{"id": "128a0628cb16c3a793b7f3c5db0b82d61730eb2f", "msg": "add namecheap-ddns-update (docker)", "date": "2022-04-11 17:51:21+08:00", "modified_files": [".terraform.lock.hcl", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/matihost/monorepo.git", "commits": [{"id": "6911587cf1b5b82c75f805f368d37d4a9c872eca", "msg": "billing access refactoring", "date": "2020-12-20 12:51:09+01:00", "modified_files": ["README.md", "iam-policies.tf", "iamAdmin-group.tf", "limitedAdmin-group.tf"]}]}, {"name": "https://github.com/tomowatt/blue-green-k8s.git", "commits": [{"id": "c07759b84341a8a7ca648b19653a01471da34224", "msg": "Refactor application deployment into module\n\n* Allows re-use at the cost of flexibility in the application configuration", "date": "2021-08-30 15:27:25+01:00", "modified_files": ["blue-config.tf", "blue-svc.tf", "green-config.tf", "green-deploy.tf", "green-svc.tf", "ingress.tf", "main.tf", "configmap.tf", "deployment.tf", "outputs.tf", "provider.tf", "service-account.tf", "service.tf", "variables.tf", "provider.tf", "svc-acc.tf"]}]}, {"name": "https://github.com/vignesh97/gcp-with-terraform.git", "commits": [{"id": "f7696305ca570ed33ab30f52a49dd72861103198", "msg": "removing orgid and billing id", "date": "2018-06-18 17:36:53-04:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/devopsacademyau/academy.git", "commits": [{"id": "c0981adcf3a68186db57790ef3f0e39e10fb4701", "msg": "starkmatt/c04 iac02 (#449)\n\n* Create pull_request_template.md\r\n\r\n* adding new file\r\n\r\n* Exercise 01 Tools In Use\r\n\r\n* Exercise 01 Tools In Use\r\n\r\n* Exercise 02 - Account Billing alarm\r\n\r\n* Changes to Folders / Resubmissions\r\n\r\n* exercise 03\r\n\r\n* Exercise 04\r\n\r\n* Not needed\r\n\r\n* Internal changes\r\n\r\n* Had a duplicate Academy sync'd !\r\nSilly me\r\n\r\n* Clean up\r\n\r\n* Exercise C04-IAC01\r\n\r\n* Updated exercise!\r\n\r\n* Delete ANSWER.md\r\n\r\nnot needed\r\n\r\n* Delete _ec2.tf\r\n\r\nnot needed\r\n\r\n* Delete _iam.tf\r\n\r\nnot needed\r\n\r\n* Delete _s3.tf\r\n\r\nnot needed\r\n\r\n* Delete _sg.tf\r\n\r\nnot needed\r\n\r\n* Minor chnges\r\n\r\n* Fixed EC2.tf\r\n\r\n* exercise 02\r\n\r\n* Delete README.md\r\n\r\nnot needed\r\n\r\n* Delete _backend.tf\r\n\r\nnot needed\r\n\r\n* Delete _provider.tf\r\n\r\nnot needed\r\n\r\n* Delete ec2.tf\r\n\r\nnot needed\r\n\r\n* Delete iam.tf\r\n\r\nnot needed\r\n\r\n* Delete output.txt\r\n\r\nnot needed\r\n\r\n* Delete s3.tf\r\n\r\nnot needed\r\n\r\n* Delete sg.tf\r\n\r\nnot needed\r\n\r\n* File locations\r\n\r\n* Delete README.md\r\n\r\nWrong location!\r\n\r\n* Delete _backend.tf\r\n\r\nWrong location!\r\n\r\n* Delete _provider.tf\r\n\r\nWrong location!\r\n\r\n* Delete output.tf\r\n\r\nWrong location!\r\n\r\n* Delete output.txt\r\n\r\nWrong location!\r\n\r\n* Delete variables.tf\r\n\r\nWrong location!\r\n\r\n* Delete vpc.tf\r\n\r\nWrong location!\r\n\r\n* Adding README.md back\r\n\r\n* updated vpc.tf\r\n\r\nCo-authored-by: Denis Storti Da Silva <denstorti@users.noreply.github.com>", "date": "2020-04-16 19:40:02+10:00", "modified_files": ["README.md", "README.md", "_backend.tf", "_provider.tf", "output.tf", "output.txt", "variables.tf", "vpc.tf"]}]}, {"name": "https://github.com/dbqa7/tf_s3_bucket.git", "commits": [{"id": "e9dcc211445f9e315d894e61cd147cf5acf151d9", "msg": "Enable bucket key for reducing the cost of SSE-KMS with Amazon S3 (#115)\n\nCo-authored-by: Krishna Mohan Bandi <krishna.bandi@internetfusion.co.uk>\r\nCo-authored-by: cloudpossebot <11232728+cloudpossebot@users.noreply.github.com>\r\nCo-authored-by: Yonatan Koren <me@yonatankoren.com>", "date": "2022-01-16 19:49:30+00:00", "modified_files": ["README.md", "terraform.md", "fixtures.us-east-2.tfvars", "main.tf", "variables.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/falldamagestudio/UE-Jenkins-BuildSystem.git", "commits": [{"id": "636097557e403eb1d6b6211b09e30c47e7f39466", "msg": "Reduce build nodes to 16-vCPU, delays during bootups are costly", "date": "2021-01-26 12:46:46+01:00", "modified_files": ["main.tf"]}, {"id": "ee8942b2c5d59546dd3b3be5f2cb88500d0fe1be", "msg": "kalms env uses standard hdds (minimize cost)", "date": "2021-08-12 16:38:22+02:00", "modified_files": ["terraform.tfvars", "terraform.tfvars"]}]}, {"name": "https://github.com/mtheoryx/graph-ql-cloud-demo.git", "commits": [{"id": "83f393acfdc39810b29f898ff2d8a3f247571aa6", "msg": "Get bastion working, save cost snapshot", "date": "2019-01-22 18:34:37-05:00", "modified_files": ["backend.tf", "main.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/tyagelnik/terragoat2.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-aws-cognito.git", "commits": [{"id": "e8004aa1293b04a63fe33895e81ed2b9e6d3af94", "msg": "costs", "date": "2021-05-22 11:24:15+01:00", "modified_files": ["CODEOWNERS", "compare.yml", "master.yml", "pull_request.yml", ".markdownlint.json", "README.md", "infracost-usage.yml", "terraform.tf"]}]}, {"name": "https://github.com/tesera/terraform-modules.git", "commits": [{"id": "3cd4d7b55ac2003153fd0670151ab395ae182431", "msg": "feat: update the Dynamo table to be pay per request.", "date": "2021-05-04 09:32:20-06:00", "modified_files": ["dynamodb.tf"]}]}, {"name": "https://github.com/Nercury/infra.git", "commits": [{"id": "4fe56a9426257d6c1a3d4288732b6e256b6b9d35", "msg": "Tags and less security to make it cheaper", "date": "2021-11-02 17:35:41+02:00", "modified_files": ["cert-entropy-link.tf", "db-entropy.tf", "main.tf", "variables.tf", "outputs.tf", "private-link.tf", "variables.tf", "main.tf", "variables.tf", "cluster.tf", "variables.tf", "ecr.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "network-entropy.tf", "rollout-entropy.tf", "walk.tf"]}]}, {"name": "https://github.com/echesec/github-config.git", "commits": [{"id": "e747001111ff1986d1727b8df4cebd4ae12a2bf1", "msg": "feat(repos): create payment-apps repo", "date": "2022-02-01 06:43:46+00:00", "modified_files": ["payment-app.csv", "repositories.tf"]}, {"id": "12ded26769aa7bcc546bb595eb1d9e9bef6aa7ef", "msg": "fix(payment-app): fix typo in value", "date": "2022-02-01 06:46:15+00:00", "modified_files": ["repositories.tf"]}]}, {"name": "https://github.com/solutionDrive/terraform-cross-account-role.git", "commits": [{"id": "a73c08b87dadc95e3e20e0c03cd2b387ced931ab", "msg": "Added the abillity to add multiple assume arn statements to the role policy", "date": "2018-06-27 14:27:02+02:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/broadinstitute/terraform-terra.git", "commits": [{"id": "d8b232d310b1bea61e374628632b371ca58a75c6", "msg": "copy billing sa from perf", "date": "2019-07-05 10:25:48-04:00", "modified_files": ["common.tf", "variables.tf.ctmpl"]}, {"id": "4147da443467751cadac89e8e87eb0173b3d5ef5", "msg": "comma-separated billing names", "date": "2019-08-22 16:57:04-04:00", "modified_files": ["variables.tf.ctmpl"]}]}, {"name": "https://github.com/tsub/ecs-sandbox.git", "commits": [{"id": "8501fafbba186919c9e9b55a6a3fc72b4fb80909", "msg": "chore: Cost cutting in NAT Gateway", "date": "2019-10-09 15:48:23+09:00", "modified_files": ["ecs-cluster.tf"]}]}, {"name": "https://github.com/broadinstitute/terraform-ap-modules.git", "commits": [{"id": "eba9533fb317d5a8d8f7cfa000216c0664985316", "msg": "PF-4 Enable billing api and give billing role to SA on crl-test. (#72)\n\n* Gives the crl test SA roles/billing.user on the billing account used for its project and folder. This is a restrictive role: https://cloud.google.com/billing/docs/how-to/billing-access#overview-of-cloud-billing-roles-in-cloud-iam\r\n* add a variable to enable billing user for the CRL test SA.", "date": "2020-09-10 16:07:50-04:00", "modified_files": ["README.md", "api-services.tf", "folder.tf", "outputs.tf", "service_accounts.tf", "variables.tf"]}, {"id": "d157d53df1f5efae57d658405404a4a4035e68ea", "msg": "[PF-127] Give RBS more folder level permissions and add template to enable RBS SA use an billing account (#86)\n\n* enable billing user\r\n\r\n* readne\r\n\r\n* readne\r\n\r\n* readne\r\n\r\n* setup default value\r\n\r\n* merge enable_billing with value\r\n\r\n* merge enable_billing with value\r\n\r\n* bump version", "date": "2020-10-13 17:23:19-04:00", "modified_files": ["README.md", "sa.tf", "variables.tf", "main.tf", "variables.tf"]}, {"id": "3d2e1bd3822b7f94d7223af83795a30d65eec177", "msg": "[PF-183] Enable billing api for rbs (#88)\n\n* enable billing user\r\n\r\n* readne\r\n\r\n* readne\r\n\r\n* readne\r\n\r\n* setup default value\r\n\r\n* merge enable_billing with value\r\n\r\n* merge enable_billing with value\r\n\r\n* bump version\r\n\r\n* eanble billing api\r\n\r\n* eanble billing api\r\n\r\n* eanble billing api\r\n\r\n* correct enabled", "date": "2020-10-16 15:42:24-04:00", "modified_files": ["api-services.tf", "main.tf"]}, {"id": "0ea59fe74b6c855141fa1fa94e359d4ec4cf6206", "msg": "PF-152 Give Workspace Manager SA project creation permissions & apis. (#90)\n\nWM will start creating projects for workspaces. To do this it needs\r\n- A folder to create projects within\r\n- Permissions on the folder to create/get/delete projects\r\n- Permissions on a billing account to set up billing for projects.\r\n-Enabled apis for managing projects and setting up billing for projects", "date": "2020-10-20 16:30:24-04:00", "modified_files": ["main.tf", "outputs.tf", "variables.tf", "README.md", "api-services.tf", "cloudsql.tf", "folder.tf", "outputs.tf", "sa.tf", "variables.tf"]}, {"id": "f99e61dd39838c9ac0c3c880ac1f1f7c9bcf0fea", "msg": "[PF-184]: Make folder ids and billing account as list in RBS.  (#100)\n\n* tmp\r\n\r\n* test nested for loop\r\n\r\n* test nested for loop\r\n\r\n* update readme\r\n\r\n* bump version", "date": "2020-11-02 15:33:46-05:00", "modified_files": ["README.md", "sa.tf", "variables.tf", "main.tf", "variables.tf"]}, {"id": "1f335e55d081b0ab0ba5e364f43f0e8a11abe11c", "msg": "[CA-1819] Create `billing-probe` Service Accounts for Rawls (#220)\n\nRR: https://broadworkbench.atlassian.net/browse/CA-1819\r\n* add `service_accounts` var to inject externally managed SAs into terraform\r\n* enable/disable adding rawls as a token creator on the billing-probe\r\n* bump rawls module to 0.2.0", "date": "2022-03-22 18:57:22+00:00", "modified_files": ["README.md", "sa.tf", "variables.tf", "README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/dfrappart/aksagiclab.git", "commits": [{"id": "d6589cd2ea0dcc6fb684a94aade6ece93dce3a2a", "msg": "adding helm config for kubecost", "date": "2021-09-09 09:52:29+02:00", "modified_files": ["Main.tf"]}]}, {"name": "https://github.com/silinternational/cover-terraform.git", "commits": [{"id": "89c167daf571ed728c0b7f3c9233758e1c1c0c09", "msg": "expense account and fiscal start month", "date": "2021-12-10 11:18:17-05:00", "modified_files": ["main-api.tf", "task-def-api.json", "vars.tf"]}]}, {"name": "https://github.com/tirumani98/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/d1g1k/terraform-config.git", "commits": [{"id": "4f641b162fa877aef842481631906d5bfe874781", "msg": "Drop down some staging instance sizes for great cost savings glory\n\n- 2 * c3.4xlarge + 2 * t2.medium =~ $1295/mo.\n+ 2 * c4.large + 2 * t2.micro =~ $164/mo.", "date": "2017-01-09 15:00:00-05:00", "modified_files": ["main.tf"]}, {"id": "0e2fc3ca535ca4a1fe3097b336fb145e6c73cde6", "msg": "Use a custom machine type for NAT hosts\n\nper recommendation from GCE, thereby reducing monthly costs by ~$21/host\nin production.", "date": "2018-03-14 20:49:14-04:00", "modified_files": ["main.tf"]}, {"id": "a5ae4046e87cf7efd270c83d403361c2fc017c53", "msg": "Shrinks pool sizes for org and com macstadium workers.\n\nWe've hit bottlenecks in the SAN, which can't handle too many running\nVMs at once without causing latenccy and requeue spikes. By lowering\nworker pool sizes, we prevent this and keep efficient job throughput.", "date": "2018-03-17 14:14:05-04:00", "modified_files": ["workers.tf", "workers.tf"]}]}, {"name": "https://github.com/cbergeron1/EyeAySea.git", "commits": [{"id": "4558011d4f0599d5fd7a14671e9b332d2fe92d13", "msg": "Adding billing module", "date": "2021-09-04 14:15:38-04:00", "modified_files": ["billing.tf", "provider.tf", "provider.tf", "billing.tf", "output.tf", "variables.tf", "outputs.tf", "tfe.tf"]}, {"id": "7accf3056d103f3d327b92794935348090c5a2fd", "msg": "Will it bill", "date": "2021-09-04 14:18:22-04:00", "modified_files": ["billing.tf", "variables.tf"]}, {"id": "67dc5c75bb2f5a9970e9dfa59069f47d135cc18e", "msg": "Goodbye billing", "date": "2021-09-04 14:32:49-04:00", "modified_files": ["billing.tf", "provider.tf", "billing.tf", "provider.tf", "variables.tf"]}]}, {"name": "https://github.com/Demo-tform/ch-jira-tf.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/SteveVaknin/terragoat2.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/boffbowsh/dc-terraform-provisioning.git", "commits": [{"id": "7e1b0531992b592980c232994b7248801073fcd0", "msg": "Configure VPC\n\nUses Ash\u2019s NAT instance module for a t2.nano instead of the expense of\nan AWS NAT Gateway.", "date": "2017-05-19 17:50:16+01:00", "modified_files": ["nat.tf", "vpc.tf"]}]}, {"name": "https://github.com/servicerocket/terraform-modules.git", "commits": [{"id": "a394100aa968ee383a3032e34467e26dfdf69235", "msg": "Add billing capabilities to managers.", "date": "2020-03-14 00:37:45+08:00", "modified_files": ["terraform.tf"]}]}, {"name": "https://github.com/ryhennessy/GoogleChronicleWebhook.git", "commits": [{"id": "b58872efec4b62b5836aedb5a95476c1582ab7a5", "msg": "Fully functional webhook transformer running in lambda.   The terraform deploys everything needed and outputs the url of the api gateway so it is easy to add to the Lacework webhook config.   Just need to validate the payload is the right format for Google Chronicle", "date": "2022-04-28 14:57:48-05:00", "modified_files": ["build.sh", "lambda_function.py", "requirements.txt", "main.tf", "outputs.tf", "terraform.tfvars", "variables.tf"]}]}, {"name": "https://github.com/MichaelDeCorte/TerraForm.git", "commits": [{"id": "3799ee8b9677d02254eb6d6f50f3732df4c8374e", "msg": "dynamodb support for pay per request", "date": "2019-01-17 15:08:47-05:00", "modified_files": ["dynamo.tf"]}]}, {"name": "https://github.com/doitintl/terraform-gcp-templates.git", "commits": [{"id": "e1590c0cae73c5c886d45ae4e0e1d0dcccf35271", "msg": "gcp-terraform: relocate project within top-level folder instead of organization, grant roles/billing.user IAM role to TF GSA", "date": "2020-12-30 15:05:51+01:00", "modified_files": ["iam-roles.tf", "main.tf"]}, {"id": "f3f8fdf0a5c772a802c2f2ddb02e8f7d1c8f6a96", "msg": "gcp-terraform: grant roles/billing.projectManager IAM role to TF GSA instead of roles/billing.user", "date": "2020-12-30 16:51:58+01:00", "modified_files": ["iam-roles.tf"]}, {"id": "3bf4ff26130afc7dc37b33712f140425d70e26c4", "msg": "gcp-terraform: added organization IAM roles billing.user and orgpolicy.policyAdmin to TF GSA", "date": "2021-01-08 09:32:26+01:00", "modified_files": ["iam-roles.tf"]}, {"id": "cb32a8b37b3b5a2e43f316911441666b867afe19", "msg": "grant service account export logs to sink on the billing account level", "date": "2021-01-11 18:03:28+01:00", "modified_files": ["iam-roles.tf"]}, {"id": "4b9e433744d3be56be77fb73f8f9f6d01f0c3c6d", "msg": "grant logging admin on billing account", "date": "2021-01-12 14:50:21+01:00", "modified_files": ["iam-roles.tf"]}, {"id": "4c734654842e8922bf52893e9de38eda7294a900", "msg": "grant billing account admin just for testing", "date": "2021-01-12 16:36:30+01:00", "modified_files": ["iam-roles.tf"]}, {"id": "8925286075cc844f6047263dcf1772e31d93d989", "msg": "gcp-organization: removed BQ billing export in favour of CMP cost anomaly detection, gcp-terraform/organization: use iam_member resources to allow for cross-blueprint IAM role modification state convergence", "date": "2021-01-18 13:52:59+01:00", "modified_files": ["billing.tf", "organization-security.tf", "iam-roles.tf"]}]}, {"name": "https://github.com/serokell/stakerdao-infra.git", "commits": [{"id": "225968c4fea9f08d67336dac22e2e73f60b37cd3", "msg": "[OPS-1241] Switch DynamoDB billing method for lock table to per-request", "date": "2021-06-09 12:15:42+03:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/SUSE/ha-sap-terraform-deployments.git", "commits": [{"id": "0e69a9978eae9e3432de8f16c2ca1b38033c23a7", "msg": "Add cost optimized variables to libvirt", "date": "2019-06-06 14:17:08+01:00", "modified_files": ["README.md", "main.tf", "main.tf", "variables.tf", "terraform.tfvars.example", "variables.tf"]}, {"id": "948727c5b1e87b970a7a9dee4cd67bb84d19abf8", "msg": "Add cost optimized variables to the cloud providers", "date": "2019-06-06 14:17:50+01:00", "modified_files": ["README.md", "salt_provisioner.tf", "terraform.tfvars.example", "variables.tf", "README.md", "salt_provisioner.tf", "terraform.tfvars.example", "variables.tf", "README.md", "salt_provisioner.tf", "terraform.tfvars.example", "variables.tf"]}, {"id": "9bfcc097e7844719fa501c0b705cc74569fb7207", "msg": "Set PAYG as default image for AWS and reorganize example file", "date": "2020-09-25 14:47:51+02:00", "modified_files": ["variables.tf", "variables.tf", "variables.tf", "terraform.tfvars.example", "variables.tf"]}, {"id": "4df0ea3d687555b557ebf13c181c039bd2943fee", "msg": "Set PAYG as default image for GCP and reorganize variables names and example file", "date": "2020-09-25 16:30:30+02:00", "modified_files": ["main.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "terraform.tfvars.example", "variables.tf"]}, {"id": "72b709bbe50b9d11c3553eba696a15a48ea3f035", "msg": "Redo how the Azure images data is used and set PAYG as default", "date": "2020-09-28 09:22:08+02:00", "modified_files": ["main.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "outputs.tf", "variables.tf", "terraform.tfvars.example", "variables.tf"]}, {"id": "c9e8a124c4c9dcc443a0be6ca0e6a9a0a0e21c44", "msg": "Enable IP forwarding to make the deployment with bastion and PAYG work", "date": "2021-05-05 09:56:04+02:00", "modified_files": ["main.tf", "main.tf", "main.tf"]}, {"id": "93ee12adde6ac773c76b590fe89c24df372f326b", "msg": "change default azure vm size and disk type to be cheaper", "date": "2021-09-28 17:48:45+02:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/2hog/docker-training-infra.git", "commits": [{"id": "ad262003f380ba6af6338993d863d7897e8d7e8a", "msg": "Add cost as output variable", "date": "2020-11-29 12:34:17+02:00", "modified_files": ["workshop.tf"]}]}, {"name": "https://github.com/dharapvj/workflow-testing.git", "commits": [{"id": "24fa52712f844e2b459329e28af96bc369024d25", "msg": "Minor tweaks to use single CP machine and spot instances to reduce costs. Also added role creation details for external-dns", "date": "2021-12-06 10:47:35+05:18", "modified_files": ["external-dns-role-demo.md", "external-dns.yaml", "main.tf", "terraform.tfvars"]}]}, {"name": "https://github.com/uyuni-project/sumaform.git", "commits": [{"id": "0d3a83d22f57360dec522bcf1e5dd7adb3b9f9c3", "msg": "Refactor using map variables\n\nThis allows a much simpler main.tf at the cost of some more internal\nmodule complexity.\n\nRequires upgrading Terraform and the libvirt plugin", "date": "2016-11-04 16:32:33+01:00", "modified_files": ["README_ADVANCED.md", "main.tf.libvirt.example", "README.md", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/ausmartway/gcp-playground.git", "commits": [{"id": "4676fee3828f732d296feb81be51f9602610f537", "msg": "reduce cost", "date": "2021-11-25 10:50:33+11:00", "modified_files": ["gke.tf"]}]}, {"name": "https://github.com/ken5scal/secure-brigade-terraform.git", "commits": [{"id": "f751747d53b467f72498c50deef79828c2b378be", "msg": "remove security feature from tokyo region for cost purpose", "date": "2020-04-05 20:31:58+09:00", "modified_files": ["README.md", "detective.tf", "guardduty.tf", "securityhub.tf", "sg.tf"]}]}, {"name": "https://github.com/shaynephilibert/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/implement1/devops_repository.git", "commits": [{"id": "856a4dc7d7a351bf917bd9804d451c1a8cc2413c", "msg": "created billing alarm through terraform", "date": "2021-09-16 21:22:32-04:00", "modified_files": ["billing_alarm.tf"]}]}, {"name": "https://github.com/kana-Gayatri/terraform-mutable.git", "commits": [{"id": "0369b60a9aa57ca2806c9892c8e4271f825090af", "msg": "repo for payment and catalogue\n created", "date": "2021-11-27 23:42:58+05:00", "modified_files": ["terraform-mutable.iml", "app-setup.tf", "data.tf", "ec2instance.tf", "lb.tf", "locals.tf", "route53.tf", "sg.tf", "vars.tf", "mongo-ec2.tf", "terraform-mutable.iml"]}, {"id": "a1173f2d73793c89019ee9d542486a1c0c4f4088", "msg": "repo for payment and catalogue\n created", "date": "2021-11-27 23:43:27+05:00", "modified_files": ["mysql-rds.tf"]}, {"id": "25850e5556ba011fbdb497a6ef821b7c19dc9190", "msg": "mongod script\nrepo for payment and catalogue\n created\nss", "date": "2021-11-27 23:43:27+05:00", "modified_files": [".gitignore", "misc.xml", "modules.xml", "runConfigurations.xml", "vcs.xml", "mysql-rds.tf"]}]}, {"name": "https://github.com/twaluigi/terraform-aws-bootstrap.git", "commits": [{"id": "188423b282d1eb9fc8ab1b95b93301bbe1073ade", "msg": "Initial commit\n\nSets up billing thresholds and an SNS topic where they're sent", "date": "2019-07-28 14:00:54-07:00", "modified_files": [".gitignore", "backend.tf", "billing-budgets-s3.tf", "billing-budgets.tf", "billing-main.tf", "billing-provider.tf", "terragrunt.hcl", "variables.tf"]}]}, {"name": "https://github.com/schubergphilis/terraform-aws-mcaf-vpc.git", "commits": [{"id": "6ca41e5ad697201a1d225e5d15134e547ee6ced3", "msg": "Add variable for creation of NAT Gateway(s)\n\nAdd option to not create NAT Gateways for private subnets to save costs.", "date": "2020-09-15 14:47:03+02:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/christiancastilloporras/Appsec_Webapp_simpledemo.git", "commits": [{"id": "087f2caeff6ecaa2a18ecc2f20b7313a70d2d191", "msg": "Change the SKU to a cheaper one", "date": "2021-04-30 13:10:28-05:00", "modified_files": ["JuiceShop.tf"]}]}, {"name": "https://github.com/shreeni123/devops-training-monitoring.git", "commits": [{"id": "90944271b4e8bd46e3d42ac64bc4964a33a8fdc3", "msg": "Updated server from t2 to t3\n\nDue to better performance and cost savings updating from t2 to t3.", "date": "2018-10-11 11:26:37-05:00", "modified_files": ["terraform.tfvars.example"]}]}, {"name": "https://github.com/rmaheshvarma/terraform.git", "commits": [{"id": "c866a7dd2575dd2a3f4af83f5f081a5004d0e478", "msg": "basic aws billing module", "date": "2021-11-18 08:44:58+00:00", "modified_files": [".terraform.lock.hcl", "main.tf", "budget.tf", "var.tf"]}]}, {"name": "https://github.com/covid-videoplattform/covid-videoplattform.git", "commits": [{"id": "83d8b928ecb3f271a058bb30eaa1e05ce10e0434", "msg": "reduce costs of infrastructure", "date": "2020-03-28 18:33:15+01:00", "modified_files": ["frontend.tf", "jicofo.tf", "jvb.tf", "prosody.tf", "reverse_proxy.tf"]}]}, {"name": "https://github.com/DNXLabs/terraform-aws-account-identity.git", "commits": [{"id": "6e037ce287251ae9b481680d001bc898e40d65da", "msg": "feat: Add BillingAccess IAM role (#4)", "date": "2021-09-29 01:22:48-03:00", "modified_files": ["README.md", "_outputs.tf", "iam-role-billing.tf"]}]}, {"name": "https://github.com/DuckbillGroup/onboarding.git", "commits": [{"id": "53ead40ec378fecf6f7dd7fc71065772b5d6511f", "msg": "Add access to create/modify/delete Cost & Usage Report config", "date": "2020-02-25 13:14:14-08:00", "modified_files": ["duckbill-iam-role-billing.tf"]}, {"id": "792bc38e31f40afaaf4adca749c6e129145eef63", "msg": "Rename COP role to DuckbillGroupRole-COP.", "date": "2020-03-04 14:45:25-08:00", "modified_files": ["duckbill-cfa-iam-role.tf", "duckbill-cop-iam-role.yml", "duckbill-cop-iam-role.tf"]}, {"id": "f43a6e18974be315ea359baffb7b2c9957e9b0ba", "msg": "Add s3:GetAnalyticsConfiguration to DuckbillGroupResourceDiscovery policy.", "date": "2020-05-11 10:54:17-07:00", "modified_files": ["resource-discovery-policy.json", "duckbill-iam-role.yml", "duckbill-iam-role.tf"]}, {"id": "9ce5539099d646f51d0c5b5c24c67ca47dc628ca", "msg": "Clients now setup the CUR prior to engagement so we dont need full perms\n\nFrom aws docs\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/list_awscostandusagereport.html", "date": "2020-08-06 13:54:22-04:00", "modified_files": ["billing-policy.json", "duckbill-iam-role.yml", "duckbill-iam-role.tf"]}, {"id": "761ec49b99e59e1a06c84736db447315251ce296", "msg": "Add External ID support to duckbill IAM roles\n\nFix typo in variable name\n\nEnsure proper formatting\n\nMake string\n\nTF linting", "date": "2020-11-13 15:34:54-05:00", "modified_files": ["assume-role-trust-policy.json.template", "create-resources.sh", "duckbill-iam-role.yml", "duckbill-iam-role.tf"]}]}, {"name": "https://github.com/wager/bookie.git", "commits": [{"id": "81e77c6530424fd0b32fa385f68481ad6f18b3af", "msg": "Disable requester pays on gs://wager-archive (#127)", "date": "2021-07-19 23:03:06-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/sakuffo/kodekloud_tf_scratch.git", "commits": [{"id": "4c8eb7b33534ef5d8617ac42cedd4bf9933c53bb", "msg": "test_payroll_app", "date": "2021-01-01 13:39:59-05:00", "modified_files": ["app_server.tf", "dynamodb_table.tf", "s3_bucket.tf", "variables.tf", "main.tf", "provider.tf"]}]}, {"name": "https://github.com/DNXLabs/terraform-aws-budget.git", "commits": [{"id": "406effd246be02d251d2ef069fbb508b72247d17", "msg": "New module with code from dnxlabs/terraform-aws-billing to separate budget from billing role", "date": "2020-08-19 11:40:18+10:00", "modified_files": ["lint.yml", ".gitignore", ".pre-commit-config.yaml", "LICENSE", "README.md", "_variables.tf", "budget.tf", "cf-chatbot.yml", "chatbot.tf", "hld_billing.png", "versions.tf"]}]}, {"name": "https://github.com/marceloboeira/certifications.git", "commits": [{"id": "da24f25924b6584137d7315e6eea61a31be86406", "msg": "Add CloudFront Section + Lab with Distribuction\n\nIt is disabled because of the costs, but it is easy to enable it", "date": "2020-05-17 09:25:20+02:00", "modified_files": ["README.md", "04_cloudfront.tf", "index.html", "terraform.tfstate", "04_CLOUD_FRONT.md"]}, {"id": "985612e94b1ba7d6a881c6b2fe074449f47dd45d", "msg": "Remove database and cache to avoid costs", "date": "2020-05-22 11:13:00+02:00", "modified_files": ["11_cache.tf", "11_databases.tf", "terraform.tfstate"]}, {"id": "48f4dbd21e8912511bf5b7441a2a9e207f025d8e", "msg": "Cost saving deletes\n\n- Once the course is finished I might just re-enable it all and delete\n  the state", "date": "2020-06-04 14:51:31+02:00", "modified_files": ["14_loadbalancers.tf", "terraform.tfstate"]}]}, {"name": "https://github.com/vtog/f5-aws-onboard.git", "commits": [{"id": "e23ec1a3b903e0e85134dc25fb8f34c83775625a", "msg": "cleaned up payg vs byol variables section", "date": "2019-06-20 15:05:52-05:00", "modified_files": ["terraform.tfvars"]}]}, {"name": "https://github.com/davidcallen/parkrunpointsleague.git", "commits": [{"id": "21627e4057b3446b511e4369ca366e297cfc87eb", "msg": "Add support for backbone account to be used standalone (no need for costly TGW).", "date": "2022-04-04 13:51:58+01:00", "modified_files": ["terraform.tfvars", "tgw.tf", "variables.tf", "vpc.tf"]}]}, {"name": "https://github.com/jamesjones291986/selectquote_ec2_creation.git", "commits": [{"id": "2409b47aa6ad94e5a1086ab55816936cb2b074ea", "msg": "Updating files to be more efficient", "date": "2022-05-01 00:19:13-05:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/odiosdado/terraform-test.git", "commits": [{"id": "2e6342948ec67116ab98d0f5c16c9a10f53c2109", "msg": "Added new test payload:", "date": "2021-11-28 09:03:33-06:00", "modified_files": ["main.tf"]}, {"id": "cb29620b80123631283327b0c4c3683ea8d6d1fa", "msg": "Added new test payload: new subnet", "date": "2021-11-28 09:27:09-06:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/ministryofjustice/delius-versions.git", "commits": [{"id": "3119f4e1d46957c62559e5f5f90ace822a406055", "msg": "Added delius database ami version option into parameter store.\nDeveloped with Ranbeer and Bill.\nIntial values are same as current filter, to be set later by Ranbeer.", "date": "2020-06-12 12:53:14+01:00", "modified_files": ["020-delius-core.tfvars", "020-delius-core.tf"]}]}, {"name": "https://github.com/pagopa/gitops.git", "commits": [{"id": "8c5259732d450bbea62822ae798f7d6ee62654d0", "msg": "[IOPAY-136] new project for io-pay (#22)\n\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>", "date": "2021-04-19 17:50:48+02:00", "modified_files": ["io-pay.tf", "project.tf", "provider.tf", "secrets.tf", "service_connections.tf", "time_sleep.tf"]}, {"id": "ed973da8e24dd249fc128ae6393bf771eb808689", "msg": "[#IP-49] Configure pipelines for `io-functions-app` (#24)\n\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>", "date": "2021-04-19 19:05:02+02:00", "modified_files": ["io-functions-app.tf"]}, {"id": "428e3c30983c6f8d9cb0da73234b40b4cc02dd95", "msg": "[#IO-49] Configure pipelines for `io-functions-services` (#26)\n\n* configure pipelines for io-functions-services\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-app` (#24)\r\n\r\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for (#25)\r\n\r\n* configure pipelines for io-functions-services\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>", "date": "2021-04-19 19:26:45+02:00", "modified_files": ["io-functions-services.tf"]}, {"id": "2ac0623a057681e706914f8a4888eaf7975f4a1b", "msg": "[#IP-49] Configure pipelines for `io-functions-public` (#27)\n\n* configure pipelines for io-functions-public\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-app` (#24)\r\n\r\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for (#25)\r\n\r\n* [#IO-49] Configure pipelines for `io-functions-services` (#26)\r\n\r\n* configure pipelines for io-functions-services\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-app` (#24)\r\n\r\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for (#25)\r\n\r\n* configure pipelines for io-functions-services\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for io-functions-public\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>", "date": "2021-04-19 19:33:37+02:00", "modified_files": ["io-functions-public.tf"]}, {"id": "b8c57d20558b2a82f0bdedbfbb16211b299583e7", "msg": "[#IP-49] Configure pipelines for `io-functions-assets` (#28)\n\n* configure pipelines for io-functions-assets\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-app` (#24)\r\n\r\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for (#25)\r\n\r\n* [#IO-49] Configure pipelines for `io-functions-services` (#26)\r\n\r\n* configure pipelines for io-functions-services\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-app` (#24)\r\n\r\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for (#25)\r\n\r\n* configure pipelines for io-functions-services\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-public` (#27)\r\n\r\n* configure pipelines for io-functions-public\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-app` (#24)\r\n\r\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for (#25)\r\n\r\n* [#IO-49] Configure pipelines for `io-functions-services` (#26)\r\n\r\n* configure pipelines for io-functions-services\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-49] Configure pipelines for `io-functions-app` (#24)\r\n\r\n* configure pipelines for fn-app\r\n\r\n* [IOPAY-136] new project for io-pay (#22)\r\n\r\n* [IOPAY-136] new project for io-pay\r\n\r\n* Update azure-devops/projects/io-pay-projects/service_connections.tf\r\n\r\n* Update azure-devops/projects/io-pay-projects/secrets.tf\r\n\r\n* [IOPAY-136] Delete unnecessary service connection\r\n\r\n* add azurerm_role_assignment Storage Blob Data Contributor\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Refactor io-backend (#23)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for fn-app\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for (#25)\r\n\r\n* configure pipelines for io-functions-services\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for io-functions-public\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* configure pipelines for io-functions-assets\r\n\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>", "date": "2021-04-19 19:40:52+02:00", "modified_files": ["io-functions-assets.tf"]}, {"id": "81039dcbaa0e2ee397bb0d06bdc9e7ee61ec15d1", "msg": "[IOPAY-148] Configure pipelines for io-pay-portal-fe and io-functions-pay-portal (#30)\n\n* [IOPAY-148] Add io-pay-portal-fe pipelines\r\n\r\n* [IOPAY-148] Add io-functions-pay-portal pipelines\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Add CGN functions (#32)\r\n\r\n* Add CGN functions\r\n\r\n* fix duplicate variable declaration\r\n\r\n* fix io-pay-portal-fe\r\n\r\n* [#IONFRA-69] Devops project for io-service-metadata (#31)\r\n\r\n* [#IONFRA-69] new project to run the service metadata pipeline\r\n\r\n* [#IOINFRA69] code review + role assignement to the storage accounts\r\n\r\n* [#IOINFRA69] code review + role assignement to the storage accounts\r\n\r\n* fix pr ci trigger\r\n\r\nCo-authored-by: Walter Traspadini <walter.traspadini@sorint.it>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-pay-portal-fe.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* added path_filter and double \\ for path folder\r\n\r\n* PE-46 Add backend pipelines and update frontend (#33)\r\n\r\n* PE-46 Add backend pipelines and update frontend\r\n\r\n* Minor update\r\n\r\n* Different sonarqube\r\n\r\n* Apply fix secret names\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Add storage account roles\r\n\r\n* Fix PAGOPAIT-TENANTID\r\n\r\n* Add missing ad provider and fix service_principal_uids\r\n\r\n* Comment prod storage account role for now\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/cgn-onboarding-portal-projects/cgn-onboarding-portal-frontend.tf\r\n\r\n* Add webappname vars\r\n\r\n* Renamed prod env var and commented auth due to ad tenats\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* update configuration (#35)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-157] Configure pipelines for `io-functions-commons` (#36)\r\n\r\n* add npm pacakges project\r\n\r\n* add io-functions-commons pipeline\r\n\r\n* rename project\r\n\r\n* update provider\r\n\r\n* remove unused service connection\r\n\r\n* refactor project\r\n\r\n* dedicated state storage key\r\n\r\n* add allow_override false, remove unused dependency\r\n\r\n* fix allow_override NPM_CONNECTION\r\n\r\n* rename project\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Adding io-spid-commons to gitops (#37)\r\n\r\n* add pipelines for @pagopa/ts-commons (#39)\r\n\r\n* [IOPAY-148] update io_pay_portal_api_host with prod value\r\n\r\n* [IOPAY-148] Add io-pay-portal-fe pipelines\r\n\r\n* [IOPAY-148] Add io-functions-pay-portal pipelines\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* fix io-pay-portal-fe\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-pay-portal-fe.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* added path_filter and double \\ for path folder\r\n\r\n* [IOPAY-148] update io_pay_portal_api_host with prod value\r\n\r\n* update provider, add more strict configuration\r\n\r\n* fix azurerm_role_assignment name\r\n\r\n* terraform fmt\r\n\r\n* migrate to pagopaspa devops org\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: Alessio Dore <57567806+AleDore@users.noreply.github.com>\r\nCo-authored-by: Walter Traspadini <walter.traspadini@pagopa.it>\r\nCo-authored-by: Walter Traspadini <walter.traspadini@sorint.it>\r\nCo-authored-by: pasqualedevita <>\r\nCo-authored-by: Matteo Gazzetta <matteo_gazzetta@hotmail.it>\r\nCo-authored-by: Emanuele De Cupis <emanuele.decupis@pagopa.it>", "date": "2021-04-27 20:11:34+02:00", "modified_files": ["io-functions-pay-portal.tf", "io-pay-portal-fe.tf", "io-pay.tf", "project.tf", "provider.tf"]}, {"id": "a07d0f5ae5219ebda9696978e49a6621ffe30a02", "msg": "[#IOINFRA-70] DevOps pipeline hubpa (#34)\n\n* [#IOINFRA-70] refactor hubpa project + module secrets\r\n\r\n* [#IOINFRA-70] refactor hubpa project + module secrets\r\n\r\n* [#IOINFRA-70] removed comment.\r\n\r\n* [#IOINFRA-70] new project hubpa with service connection to production\r\n\r\n* Update azure-devops/projects/hub-pa-projects/project.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/project.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/project.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/service_connections.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/service_connections.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* [#IOINFRA-70] renamed files with underscore\r\n\r\n* [#IOINFRA-70] removed block of code commented out.\r\n\r\n* PE-46 Add backend pipelines and update frontend (#33)\r\n\r\n* PE-46 Add backend pipelines and update frontend\r\n\r\n* Minor update\r\n\r\n* Different sonarqube\r\n\r\n* Apply fix secret names\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Add storage account roles\r\n\r\n* Fix PAGOPAIT-TENANTID\r\n\r\n* Add missing ad provider and fix service_principal_uids\r\n\r\n* Comment prod storage account role for now\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/cgn-onboarding-portal-projects/cgn-onboarding-portal-frontend.tf\r\n\r\n* Add webappname vars\r\n\r\n* Renamed prod env var and commented auth due to ad tenats\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* [#IONFRA-70] commented out service connection contained registry dev.\r\n\r\n* update configuration (#35)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-157] Configure pipelines for `io-functions-commons` (#36)\r\n\r\n* add npm pacakges project\r\n\r\n* add io-functions-commons pipeline\r\n\r\n* rename project\r\n\r\n* update provider\r\n\r\n* remove unused service connection\r\n\r\n* refactor project\r\n\r\n* dedicated state storage key\r\n\r\n* add allow_override false, remove unused dependency\r\n\r\n* fix allow_override NPM_CONNECTION\r\n\r\n* rename project\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Adding io-spid-commons to gitops (#37)\r\n\r\n* add pipelines for @pagopa/ts-commons (#39)\r\n\r\n* [IOPAY-148] Configure pipelines for io-pay-portal-fe and io-functions-pay-portal (#30)\r\n\r\n* [IOPAY-148] Add io-pay-portal-fe pipelines\r\n\r\n* [IOPAY-148] Add io-functions-pay-portal pipelines\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Add CGN functions (#32)\r\n\r\n* Add CGN functions\r\n\r\n* fix duplicate variable declaration\r\n\r\n* fix io-pay-portal-fe\r\n\r\n* [#IONFRA-69] Devops project for io-service-metadata (#31)\r\n\r\n* [#IONFRA-69] new project to run the service metadata pipeline\r\n\r\n* [#IOINFRA69] code review + role assignement to the storage accounts\r\n\r\n* [#IOINFRA69] code review + role assignement to the storage accounts\r\n\r\n* fix pr ci trigger\r\n\r\nCo-authored-by: Walter Traspadini <walter.traspadini@sorint.it>\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-pay-portal-fe.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* added path_filter and double \\ for path folder\r\n\r\n* PE-46 Add backend pipelines and update frontend (#33)\r\n\r\n* PE-46 Add backend pipelines and update frontend\r\n\r\n* Minor update\r\n\r\n* Different sonarqube\r\n\r\n* Apply fix secret names\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Add storage account roles\r\n\r\n* Fix PAGOPAIT-TENANTID\r\n\r\n* Add missing ad provider and fix service_principal_uids\r\n\r\n* Comment prod storage account role for now\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/cgn-onboarding-portal-projects/cgn-onboarding-portal-frontend.tf\r\n\r\n* Add webappname vars\r\n\r\n* Renamed prod env var and commented auth due to ad tenats\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* update configuration (#35)\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* [#IP-157] Configure pipelines for `io-functions-commons` (#36)\r\n\r\n* add npm pacakges project\r\n\r\n* add io-functions-commons pipeline\r\n\r\n* rename project\r\n\r\n* update provider\r\n\r\n* remove unused service connection\r\n\r\n* refactor project\r\n\r\n* dedicated state storage key\r\n\r\n* add allow_override false, remove unused dependency\r\n\r\n* fix allow_override NPM_CONNECTION\r\n\r\n* rename project\r\n\r\nCo-authored-by: pasqualedevita <>\r\n\r\n* Adding io-spid-commons to gitops (#37)\r\n\r\n* add pipelines for @pagopa/ts-commons (#39)\r\n\r\n* [IOPAY-148] update io_pay_portal_api_host with prod value\r\n\r\n* [IOPAY-148] Add io-pay-portal-fe pipelines\r\n\r\n* [IOPAY-148] Add io-functions-pay-portal pipelines\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-functions-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* fix io-pay-portal-fe\r\n\r\n* Update azure-devops/projects/io-pay-projects/io-pay-portal-fe.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* added path_filter and double \\ for path folder\r\n\r\n* [IOPAY-148] update io_pay_portal_api_host with prod value\r\n\r\n* update provider, add more strict configuration\r\n\r\n* fix azurerm_role_assignment name\r\n\r\n* terraform fmt\r\n\r\n* migrate to pagopaspa devops org\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: Alessio Dore <57567806+AleDore@users.noreply.github.com>\r\nCo-authored-by: Walter Traspadini <walter.traspadini@pagopa.it>\r\nCo-authored-by: Walter Traspadini <walter.traspadini@sorint.it>\r\nCo-authored-by: pasqualedevita <>\r\nCo-authored-by: Matteo Gazzetta <matteo_gazzetta@hotmail.it>\r\nCo-authored-by: Emanuele De Cupis <emanuele.decupis@pagopa.it>\r\n\r\n* sonar cloud config, update vars\r\n\r\n* [#IOINFRA-70] refactor hubpa project + module secrets\r\n\r\n* [#IOINFRA-70] refactor hubpa project + module secrets\r\n\r\n* [#IOINFRA-70] removed comment.\r\n\r\n* [#IOINFRA-70] new project hubpa with service connection to production\r\n\r\n* Update azure-devops/projects/hub-pa-projects/project.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/project.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/project.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/service_connections.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/hub-pa-projects/service_connections.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* [#IOINFRA-70] renamed files with underscore\r\n\r\n* [#IOINFRA-70] removed block of code commented out.\r\n\r\n* [#IONFRA-70] commented out service connection contained registry dev.\r\n\r\n* sonar cloud config, update vars\r\n\r\nCo-authored-by: Walter Traspadini <walter.traspadini@sorint.it>\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\nCo-authored-by: Matteo Gazzetta <matteo_gazzetta@hotmail.it>\r\nCo-authored-by: Emanuele De Cupis <emanuele.decupis@pagopa.it>\r\nCo-authored-by: Alessio Dore <57567806+AleDore@users.noreply.github.com>\r\nCo-authored-by: Simone infante <52280205+infantesimone@users.noreply.github.com>\r\nCo-authored-by: pasqualedevita <>", "date": "2021-04-28 20:40:35+02:00", "modified_files": ["main.tf", "outputs.tf", "variables.tf", "hub-pa-api.tf", "hub_pa_api.tf", "hub_pa_fe.tf", "project.tf", "provider.tf", "secrets.tf", "service_connections.tf"]}, {"id": "33963c84f33f352e16a951d2bc22762b1e711f70", "msg": "[IOPAY-175] update PaymentManager endpoint for prod (#42)", "date": "2021-04-30 13:10:10+02:00", "modified_files": ["io-pay.tf"]}, {"id": "990184f3ea2bb96096d72ed38fab1819ff2439de", "msg": "[#CEN-148] Create cstar azure devops project (#55)\n\n* [#CEN-148] Create cstar azure devops project\r\n\r\n* add DEV service connection\r\n\r\n* add first pipeline\r\n\r\n* add deploy pipeline\r\n\r\n* add rtd-ms-arch\r\n\r\n* add meda-bom, bpd-commons, bpd-ms-starter-parent\r\n\r\n* update template\r\n\r\n* fix sonarcloud_service_conn\r\n\r\n* fix sonarcloud_service_conn template\r\n\r\n* add fork\r\n\r\n* add variables\r\n\r\n* update kubeconfig\r\n\r\n* fix cluster_context\r\n\r\n* add bpd-ms-payment-instrument\r\n\r\nCo-authored-by: pasqualedevita <>", "date": "2021-06-16 09:12:35+02:00", "modified_files": ["bpd-commons.tf", "bpd-ms-award-period-fork.tf", "bpd-ms-award-period.tf", "bpd-ms-payment-instrument.tf", "bpd-ms-starter-parent.tf", "meda-bom.tf", "project.tf", "provider.tf", "rtd-ms-arch.tf", "secrets.tf", "service_connections.tf"]}, {"id": "619c525e7cde680000783a6c75a285343dd8108d", "msg": "[IOPAY-262] api-test pipeline for pagopa-payments-tests (#110)\n\n* [IOPAY-262] api-test pipeline for pagopa-payments-tests\r\n\r\n* [PM-169] rename pipeline name\r\n\r\n* add missing bracket\r\n\r\n* pagopa-payments-tests private repo\r\n\r\nCo-authored-by: pasqualedevita <>", "date": "2021-09-17 09:25:13+02:00", "modified_files": ["pagopa-payments-tests.tf"]}, {"id": "8ebea3a8f7cebf1d0af45bdc967e699508727e1e", "msg": "[CEN-675] Add pipelines for FA Payment Instrument microservice (#121)", "date": "2021-09-21 18:34:40+02:00", "modified_files": ["fa-ms-payment-instrument.tf"]}, {"id": "b2a9cbf571ea449d25ab8bd52e815c0e8cfc7a0e", "msg": "[IOPAY-301] add pipeline to checkout.pagopa.it certs (#151)\n\n* [IOPAY-301] add pipeline to checkout certs\r\n\r\n* support apex domain\r\n\r\nCo-authored-by: pasqualedevita <>", "date": "2021-10-12 19:03:12+02:00", "modified_files": ["tlscert-dev-dev-checkout-pagopa-it.tf", "tlscert-prod-checkout-pagopa-it.tf", "tlscert-uat-uat-checkout-pagopa-it.tf"]}, {"id": "d417b9ae04c9cbd7c3b96f428aaf0514db133be8", "msg": "[IOPAY-295] new pipeline for checkout (#149)\n\n* [IOPAY-295] new pipeline for checkout\r\n\r\n* Update azure-devops/projects/pagopa-projects/pagopa-checkout-io-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/pagopa-projects/pagopa-checkout-io-pay-portal.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Update azure-devops/projects/pagopa-projects/pagopa-checkout-io-pay.tf\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>\r\n\r\n* Refactoring to io-pay-portal-fe\r\n\r\n* add prefix pipelines\r\n\r\n* fix prefix pipeline\r\n\r\n* [IOPAY-294] add pipeline for io-functions-pay-portal\r\n\r\nCo-authored-by: Pasquale De Vita <59291437+pasqualedevita@users.noreply.github.com>", "date": "2021-10-12 19:42:34+02:00", "modified_files": ["pagopa-checkout-io-functions-pay-portal.tf", "pagopa-checkout-io-pay-portal-fe.tf", "pagopa-checkout-io-pay.tf"]}, {"id": "f5dda1021fff9d78f3c380f16d5b78dfaa557b78", "msg": "[IOPAY-206] switch test enviroment (#133)", "date": "2021-10-12 19:42:50+02:00", "modified_files": ["io-pay.tf"]}, {"id": "994804504da57306679790ec6246d53696cc71a0", "msg": "disable io-functions-pay-portal (#157)", "date": "2021-10-14 16:25:27+02:00", "modified_files": ["pagopa-checkout-io-functions-pay-portal.tf"]}, {"id": "3dd1169c7c82376eb9175c533e6e0a66bb0dc888", "msg": "[IOPAY-313] Enable pipeline for checkout function (#172)\n\n* enable pipeline for checkout function\r\n\r\n* update repo", "date": "2021-10-22 18:55:42+02:00", "modified_files": ["pagopa-checkout-io-functions-pay-portal.tf", "pagopa-functions-checkout.tf"]}, {"id": "c039be564575beadfdcbf31b7546d935a1993841", "msg": "[IOPAY-314] add IDs for recaptcha (#180)\n\n* add IDs for recaptcha\r\n\r\n* get captcha key from kv", "date": "2021-10-27 12:35:55+02:00", "modified_files": ["pagopa-checkout-io-pay-portal-fe.tf", "secrets.tf"]}, {"id": "401832e2e7f074340a1a8f1a1969c659a4317209", "msg": "[IOPAY-314] Add new host for checkout api (#183)\n\n* Add new host for checkout api\r\n\r\n* delete unused vars", "date": "2021-11-04 12:43:38+01:00", "modified_files": ["pagopa-checkout-io-pay-portal-fe.tf", "pagopa-checkout-io-pay.tf"]}, {"id": "391fba67fe8b4963e8e91e801c09679adf81049f", "msg": "[IOPAY-404] add pagopa-proxy pipeline in pagopa subscription (#218)", "date": "2021-12-30 15:19:07+01:00", "modified_files": ["pagopa-proxy.tf"]}, {"id": "5be458f2a30ef2f04d82b127a52ad1a8cd5d9896", "msg": "[IOPAY-403] add dev subscription for pagopa-proxy (#221)", "date": "2022-01-03 19:35:09+01:00", "modified_files": ["pagopa-proxy.tf"]}, {"id": "04b290e05b56d49569740bcb2bd5bd57757d030a", "msg": "[IOPAY-394] update main branch (#242)", "date": "2022-02-14 19:33:40+01:00", "modified_files": ["pagopa-proxy.tf"]}, {"id": "42ff3bb4ec8d1dd6c9856cdc4fc72b68ed6e274b", "msg": "CR for pagopa-payment-transactions-gateway (#246)", "date": "2022-03-01 10:41:43+01:00", "modified_files": ["pagopa-payment-transactions-gateway.tf"]}, {"id": "a48ccc580aeb918f123915946ad32607a21d1f16", "msg": "[IOPAY-481] Add Checkout v2 FE pipeline (#248)", "date": "2022-03-01 10:54:57+01:00", "modified_files": ["pagopa-checkout-fe.tf"]}]}, {"name": "https://github.com/mo1991-git/Terragoat-Clone.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/Cyrilleoc/M20_IAAC.git", "commits": [{"id": "cedd0ea50060931df80b4b25e254b08d550799c4", "msg": "payer module", "date": "2021-10-03 23:06:56+05:00", "modified_files": ["data.tf", "locals.tf", "output.tf", "payer-logging.tf", "payer-main.tf", "payer-res.tf", "variables.tf"]}, {"id": "d19ff4d52ddf85b0d45571730cfa93bd36e25e9f", "msg": "issue fix in payer", "date": "2021-10-19 13:34:08-04:00", "modified_files": ["iam-policies.tf", "main.tf", "data.tf", "payer-logging.tf", "variables.tf", "tenant-logging.tf", "tenant-main.tf"]}, {"id": "d3dd982207b2e879e4f06d63f45f697d22de754c", "msg": "payer account fixed", "date": "2022-02-24 00:00:19+05:00", "modified_files": ["main.tf", "payer-logging.tf", "payer-res.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/companieshouse/payments-service-stack.git", "commits": [{"id": "feeec514a28fc0e8a9a37f448442345e35b93556", "msg": "Add payments admin web repo, eric, and cidev environment", "date": "2022-01-17 15:29:37+00:00", "modified_files": ["README.md", "main.tf", "payments.admin.web.ch.gov.uk-task-definition.tmpl", "payments.admin.web.ch.gov.uk.tf", "variables.tf", "load-balancer.tf", "output.tf", "security-groups.tf", "variables.tf", "output.tf", "parameters.tf", "variables.tf", "vars", "variables.tf"]}, {"id": "1da468b124b6fce94478e5630076638349a6adce", "msg": "add some secrets and env vars for payments admin web in preparation for future development requirements requiring oauth2 integration", "date": "2022-01-21 13:54:13+00:00", "modified_files": ["main.tf", "payments-admin-web-task-definition.tmpl", "payments-admin-web.tf", "variables.tf", "vars", "variables.tf"]}, {"id": "116661948b8970c4285be78d1fbb66d43c7c99be", "msg": "Change from payments.admin.web.ch.gov.uk to payments-admin-web", "date": "2022-02-01 13:34:12+00:00", "modified_files": ["main.tf", "payments-admin-web-task-definition.tmpl", "payments-admin-web.tf", "variables.tf", "load-balancer.tf", "variables.tf"]}, {"id": "7f09d01f531e8660c5fe013fd68562853580d4d0", "msg": "Change payments-admin-web urls", "date": "2022-02-08 09:08:47+00:00", "modified_files": ["payments-admin-web-task-definition.tmpl", "payments-admin-web.tf"]}, {"id": "ca8ffd2490faedb7f31ee33066f3ca651bd9526b", "msg": "Add cookies configs for Payments Admin Web", "date": "2022-02-21 16:04:42+00:00", "modified_files": ["main.tf", "payments-admin-web-task-definition.tmpl", "payments-admin-web.tf", "variables.tf", "vars", "variables.tf"]}, {"id": "d44a8bdc83491284a210863809c31055dc53d61e", "msg": "Add OAUTH2_TOKEN_URI config item for Payments Admin Web", "date": "2022-02-23 08:59:23+00:00", "modified_files": ["main.tf", "payments-admin-web-task-definition.tmpl", "payments-admin-web.tf", "variables.tf", "vars", "variables.tf"]}, {"id": "d25f938ff77a80ab8fa0ea1ecc616407f8a6bcd9", "msg": "Add CHS url for payments-admin-web", "date": "2022-02-23 10:02:28+00:00", "modified_files": ["main.tf", "payments-admin-web-task-definition.tmpl", "payments-admin-web.tf", "variables.tf", "vars", "variables.tf"]}, {"id": "7ed6ded804f12c0aa010f07c71b8d7ab4f89fef4", "msg": "Add cache config items for Payments Admin Web", "date": "2022-02-23 15:52:37+00:00", "modified_files": ["main.tf", "payments-admin-web-task-definition.tmpl", "payments-admin-web.tf", "variables.tf", "vars", "variables.tf"]}, {"id": "67b6f2873546985c8dbffd801f221f54fb60b94f", "msg": "Add default_session_expiration for payments admin web", "date": "2022-02-23 17:18:17+00:00", "modified_files": ["main.tf", "payments-admin-web-task-definition.tmpl", "payments-admin-web.tf", "variables.tf", "vars", "variables.tf"]}, {"id": "0dd45b2aa42a496ee194d8be77237a92e59f798a", "msg": "Add Payments API URL to Payments Admin Web", "date": "2022-03-10 15:14:25+00:00", "modified_files": ["main.tf", "payments-admin-web-task-definition.tmpl", "payments-admin-web.tf", "variables.tf", "vars", "variables.tf"]}]}, {"name": "https://github.com/ministryofjustice/network-access-control-infrastructure.git", "commits": [{"id": "95c70a0a304c55adacc3ba0605dd2b9aa2730f6f", "msg": "Expire old versions of ECR images to save on costs (#75)\n\nThis will remove an image after 14 days. Images of any version can be\r\nbuilt from version control.", "date": "2021-10-26 09:25:20+01:00", "modified_files": ["cluster.tf", "ecr.tf", "ecr_nginx.tf"]}]}, {"name": "https://github.com/sinequa/SinequaForAzure.git", "commits": [{"id": "c9daffbe92513f0709ed43e8f2e1c554c605a710", "msg": "- Adds \"additional_tags\" (for our internal CostCenter)\n- Adds the capability to open HTTP on the subnet_app\n- Adds the capability to not create app gw & subnet_front\n- Cleans the \"complete_grid\" sampe\n- Adds \"complete_grid_with_app_gateway\" sample\n- Adds \"standalone_server\" sample", "date": "2021-11-01 18:23:34+01:00", "modified_files": ["S4A_Default_ARM.png", "S4A_complete_grid.png", "S4A_standalone_server.png", "README.md", "conf.tf", "variables.tf", "conf.tf", "variables.tf", "conf.tf", "variables.tf", "main.tf", "main.tf", "variables.tf", "main.tf"]}]}, {"name": "https://github.com/doitintl/tf-fundamentals-workshop-101.git", "commits": [{"id": "982162035b9a72414ac25b4a10dea313486fb65e", "msg": "refactor: minor improvements in userdata payload handling of lab-03", "date": "2021-12-15 18:02:27+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/mesoform/example-ecat-deployment-code.git", "commits": [{"id": "935fded5fb2f39528d08de3cde14c4d7387e4242", "msg": "Add billing_id variable", "date": "2019-11-22 15:27:23+02:00", "modified_files": ["project.tf"]}]}, {"name": "https://github.com/oleg3790/LambdaS3Processor.git", "commits": [{"id": "81d723aad676bf0a3541355c535838a702215ba0", "msg": "Build payload", "date": "2021-09-16 22:58:43-05:00", "modified_files": [".gitignore", "README.md", "build-payload.sh", "main.tf"]}]}, {"name": "https://github.com/kensanni/scratch-pay-test.git", "commits": [{"id": "9b7a4fb403dc1af1894ef0dcfe49d2f3ae601f79", "msg": "complete technical assessment for scratch pay", "date": "2021-05-19 01:58:49-07:00", "modified_files": [".gitignore", "README.md", "default.yaml", "Chart.yaml", "Deployment.yaml", "Service.yaml", ".babelrc", ".dockerignore", ".env.example", ".eslintrc.js", "Dockerfile", "docker-compose.yml", "entrypoint.sh", "package.json", "dev.js", "index.js", "user.js", "connection.js", "data.csv", "pool.js", "queries.js", "query.js", "index.js", "index.js", "server.js", "apis.tf", "cluster.tf", "iam.tf", "variables.tf", "vpc.tf", "main.tf", "provider.tf", "variables.tf"]}]}, {"name": "https://github.com/offensive-terraform/terraform-aws-lambda-function-credential-exfiltration.git", "commits": [{"id": "5ab24ddacf6db13be0e17815f604ab5a83b32d65", "msg": "Update payload path", "date": "2020-09-07 21:10:49-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/bhfsystem/fogg.git", "commits": [{"id": "81e606a72e7c2e06c2f6d9c204086157aa82eac3", "msg": "use the cheapest ebs disk sc1", "date": "2017-02-01 13:53:17-08:00", "modified_files": ["main.tf"]}, {"id": "2f48211c01edd4b6d46716d2102b1effcaffbcd3", "msg": "Revert \"use the cheapest ebs disk sc1\"\n\nThis reverts commit 81e606a72e7c2e06c2f6d9c204086157aa82eac3.", "date": "2017-02-01 13:57:11-08:00", "modified_files": ["main.tf"]}, {"id": "7cc487f270d553f819fea0cf96e872c374979305", "msg": "use cheap ebs for root", "date": "2017-02-01 16:17:44-08:00", "modified_files": ["main.tf"]}, {"id": "fcc03d854077347ff622ab1982cb6c2c91a24bc8", "msg": "Revert \"use cheap ebs for root\"\n\nThis reverts commit 7cc487f270d553f819fea0cf96e872c374979305.", "date": "2017-02-01 16:36:54-08:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/cisagov/cool-assessment-terraform.git", "commits": [{"id": "206d0cbbe3c5979a395edc655349274b20dc2a28", "msg": "Use more efficient for_each clause\r\n\r\nThanks @user for the suggestion!\n\nCo-authored-by: Shane Frasier <jeremy.frasier@trio.dhs.gov>", "date": "2020-11-05 11:23:22-05:00", "modified_files": ["debiandesktop_sg_rules.tf", "pentestportal_sg_rules.tf"]}, {"id": "3138943ab4d15cc256d322e1128862ef11383c73", "msg": "Upgrade all volume types to gp3\n\ngp3 is 20% cheaper, and the baseline configuration offers better\nperformance than gp2 for volumes smaller than 2TB.  It also allows the\nvolume size and IOPS to be configured separately, whereas the two are\nintertwined with gp2.", "date": "2021-10-26 12:26:24-04:00", "modified_files": ["assessorportal_ec2.tf", "debiandesktop_ec2.tf", "teamserver_ec2.tf", "gophish_ec2.tf", "guacamole_ec2.tf", "kali_ec2.tf", "nessus_ec2.tf", "pentestportal_ec2.tf", "samba_ec2.tf", "teamserver_ec2.tf", "terraformer_ec2.tf"]}]}, {"name": "https://github.com/tw-staka/gcp-projects.git", "commits": [{"id": "042ed7a5f66ae780100c7d2c5207e2e5fd060a20", "msg": "Update Billing Account ID", "date": "2019-04-01 16:40:21+11:00", "modified_files": ["README.md", "staging.tfvars"]}, {"id": "543c7d5de2a79dedc55b8e4a6b17ece3164c7f09", "msg": "Changed the billing id from Paul's account to Charles (shared with team) account", "date": "2019-04-04 13:20:38+11:00", "modified_files": ["staging.tfvars"]}, {"id": "90f7c3705a63997ba49ace962392b26b18c59bfb", "msg": "remove billing account var", "date": "2019-05-23 14:41:02+10:00", "modified_files": ["staging.tfvars"]}]}, {"name": "https://github.com/jpaldeano/terraform-gcp-sandbox-with-billing-listener.git", "commits": [{"id": "e4596963e5f11356b3f2f349a28154b73aab0e5d", "msg": "creating billing account linked to new project and set up budget linked to pubsub-topic", "date": "2020-12-31 16:23:26+00:00", "modified_files": ["project.tf", "variables.tf"]}, {"id": "f945e8e15e130ab8aeaed039ef852d2ef1fdf30b", "msg": "successfully created cloud function subscribing from budget billing topic", "date": "2021-01-03 00:27:05+00:00", "modified_files": ["code.zip", "project.tf", "function.go"]}, {"id": "e5b5577a455c3376b640a520cf4c90226daa00c3", "msg": "cloud function being able to disable project billing", "date": "2021-01-03 23:26:44+00:00", "modified_files": ["code.zip", "project.tf", "function.go", "go.mod", "variables.tf"]}]}, {"name": "https://github.com/sawyers/ec2-dev-env.git", "commits": [{"id": "f0bbb7e656d0f9785f1cc7cead6b420e1862f4df", "msg": "Allow easy deploy/tear down of dev agent\n\nTo avoid costs of long lived instances I made this to let me apply / destroy\nagents as needed along with updating my ssh config\n\nThis should let me have a custom on demand box as needed.", "date": "2020-12-31 15:10:06-08:00", "modified_files": [".terraform.lock.hcl", "README.md", "assumerolepolicy.json", "devpolicy.json", "ec2_vscode.tf", "provision.sh", "update_ssh.sh"]}]}, {"name": "https://github.com/mixpix3ls/terraformchip-app.git", "commits": [{"id": "24008072203f7cd22738c5a9dec016f395573a87", "msg": "Change bastion host size to trigger cost estimation", "date": "2020-05-21 12:23:18-05:00", "modified_files": ["main.tf"]}, {"id": "20be3fd2c0275d7aeb698adf35c3d79bcba5d2d5", "msg": "Change Drupal host to be r4.16xlarge to test out Cost Estimation", "date": "2020-05-21 12:49:06-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/cycloid-community-catalog/stack-prometheus.git", "commits": [{"id": "0fdec1c2a6ec14e7ace03ed3ca3afcca0adac177", "msg": "terraform: add tags_volumes\n\nSet tags on prometheus volume to give more info and billing", "date": "2019-01-21 11:10:45+01:00", "modified_files": ["prometheus.tf"]}]}, {"name": "https://github.com/memes/terraform-google-f5-bigip.git", "commits": [{"id": "312bcf9c6d311b50545930aa8895a3daeab690d0", "msg": "Refactor: default DO payload support\n - Add a sub-module that creates bare-bones DO payloads\n   with self-ips, routes, etc on internal/external interfaces", "date": "2020-12-07 10:20:23-08:00", "modified_files": [".talismanrc", "README.md", "main.tf", "variables.tf", "main.tf", "README.md", "do_replace_filter.jq", "main.tf", "outputs.tf", "README.md", "do.json", "variables.tf", "README.md", "declarativeOnboarding.sh", "main.tf", "cloud_config.yml", "do.json", "startup_script.sh", "variables.tf"]}, {"id": "bb0beda0d56908bcecd0d79bb0bf89e0206cde4b", "msg": "DO: automated DO payloads only touch interfaces/routes/etc if > 1 NIC", "date": "2020-12-07 14:30:42-08:00", "modified_files": ["main.tf", "README.md", "main.tf", "do.json", "variables.tf"]}]}, {"name": "https://github.com/gravicore/terraform-aws-account.git", "commits": [{"id": "363f25d776e67feaf8ebc6bf21df7c98771b784c", "msg": "Added billing, AppSync and VPC flow logging policies", "date": "2018-08-02 22:39:14-06:00", "modified_files": ["iam.tf", "iam-appsync.tf", "iam-billing-full-access.tf", "iam-billing-view-access.tf", "iam-logging.tf"]}, {"id": "9f9c71009229a43ea8d0146262665ce7e90b30f5", "msg": "Adding billing IAM roles/groups", "date": "2018-08-24 11:55:15-06:00", "modified_files": ["main.tf", "iam-billing-full-access.tf", "iam-billing-view-access.tf", "iam-logging.tf", "locals.tf", "variables.tf"]}]}, {"name": "https://github.com/reireias/gcp-terraform.git", "commits": [{"id": "81e4a4d1a0942895a1eeb24b6191ed7557bee622", "msg": "add billing BigQuery dataset", "date": "2019-06-14 23:55:51+09:00", "modified_files": [".gitignore", "README.md", "backend.tf", "bigquery.tf", "main.tf"]}, {"id": "567ed20d6ce5223412493a0c0a1630962112ea0f", "msg": "remove billing dataset", "date": "2020-02-18 22:20:29+09:00", "modified_files": ["bigquery.tf", "storage.tf"]}, {"id": "0c73acb67d5cdbc0422318a28079a27b43a33797", "msg": "add billing bucket", "date": "2020-02-18 23:25:08+09:00", "modified_files": ["storage.tf"]}, {"id": "e6484128a260d32b4f41f553dd9f0df3917fd6dc", "msg": "add service account for billing bucket access", "date": "2020-03-11 22:55:33+09:00", "modified_files": ["iam.tf", "project.tf"]}]}, {"name": "https://github.com/mikeh-hmh/Bridgecrew.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/rubiog74/IAC2.git", "commits": [{"id": "a55841593ca677774d26c6194d33afa7cb451a14", "msg": "renamed payload droplets to phishing", "date": "2019-01-25 16:20:26+00:00", "modified_files": ["dns.tf", "finalize.sh", "firewalls.tf", "outputs.tf", "phishing-rdr.tf", "phishing.tf"]}, {"id": "9902e2229b1f0f31e5be1e3680d2cfc705591103", "msg": "added back in payload and payload-rdr configs", "date": "2019-01-25 16:37:06+00:00", "modified_files": ["payload-rdr.tf", "payload.tf"]}, {"id": "0d96784ebda12f861048c7dda266e563a3cf4201", "msg": "printing out payload and its redirector IPs", "date": "2019-01-26 16:05:59+00:00", "modified_files": ["outputs.tf"]}, {"id": "6b73b59093e1214c01a4161a3438b82dcd5ee734", "msg": "printing out payload and its redirector IPs", "date": "2019-01-26 16:06:14+00:00", "modified_files": ["outputs.tf"]}]}, {"name": "https://github.com/gordonmurray/terraform_aws_vpc.git", "commits": [{"id": "4d3fe2fa864e6f576b745e31567e8caf1302a819", "msg": "Add Infracost estimate", "date": "2022-04-06 20:36:46+01:00", "modified_files": ["README.md", "variables.tf"]}]}, {"name": "https://github.com/archi-jusi/s3_cost_overview_serverless.git", "commits": [{"id": "9e4ef03d6064a9b9320560e51872fa76c4017254", "msg": "testing terraform cost and report", "date": "2021-03-02 17:05:26+01:00", "modified_files": [".terraform.lock.hcl", "main.tf", "output.tf", "terraform.tfvars", "variable.tf", "main.tf", "output.tf", "variable.tf", ".terraform.lock.hcl", "main.tf", "output.tf", "terraform.tfvars", "variable.tf"]}]}, {"name": "https://github.com/cloud-gov/cg-provision.git", "commits": [{"id": "308d17f0d40e7ddb57060a111b55a592a6aed87c", "msg": "Manage billing buckets and permissions.", "date": "2017-05-09 16:49:51-04:00", "modified_files": ["policy.json", "policy.tf", "variables.tf", "outputs.tf", "policy.json", "user.tf", "variables.tf", "stack.tf", "variables.tf", "outputs.tf", "stack.tf"]}, {"id": "4e1a06dfe82902c09a51a89d4cfda4349273efd3", "msg": "Clean up unused billing config.", "date": "2017-05-10 10:28:15-04:00", "modified_files": ["stack.tf", "variables.tf"]}, {"id": "eb49e5d136b5aa6b5caa72c5fb5809b91cc70e5b", "msg": "fixed JSON payload. (#623)\n\nSigned-off-by: Mike Lloyd <mike.lloyd@gsa.gov>", "date": "2019-11-13 16:29:54-07:00", "modified_files": ["domains_broker.tf"]}, {"id": "68495863977973e0a0cee0f8b0692d86c1e612cb", "msg": "add payer account access to read S3 bucket tagging", "date": "2020-05-14 11:56:59-07:00", "modified_files": ["pipeline.yml", "cross_account_iam.tf", "variables.tf"]}]}, {"name": "https://github.com/pknell/cloud-formation-daily-test.git", "commits": [{"id": "0fc322d4f3e3360bb7d814be57c12cf7a87c6028", "msg": "adding Lambda payload, and adding Rule Targets to the Terraform template", "date": "2018-06-18 17:00:05-05:00", "modified_files": ["start-stop-environment.tf", "start_environment_lambda_payload.zip", "stop_environment_lambda_payload.zip"]}]}, {"name": "https://github.com/stanleyuan/terrafrom_practice.git", "commits": [{"id": "1b8c49280f326012b59ce2c3fca221a08ea4a7b6", "msg": "Add s3 bucket with depends_on\n\nAmazon Simple Storage Service is storage for the Internet. It is designed to make web-scale computing easier for developers.\n\nAmazon S3 has a simple web services interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. It gives any developer access to the same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses to run its own global network of web sites. The service aims to maximize benefits of scale and to pass those benefits on to developers.", "date": "2019-05-14 00:06:09+08:00", "modified_files": ["example.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-azurerm-vnet.git", "commits": [{"id": "c9db5b4a3ba76a8e41a64848c6bd56044fc7755c", "msg": "costs", "date": "2021-05-17 19:04:29+01:00", "modified_files": ["compare.yml", "master.yml", "pull_request.yml", "Makefile", "terraform.tf"]}]}, {"name": "https://github.com/Young-ook/terraform-aws-sagemaker.git", "commits": [{"id": "df4c2102d59c5cae88c9ed30489b2d00bc75aafd", "msg": "fix(s3): intelligent-tiering archive opt-out option (#34)\n\n* fix(s3): intelligent-tiering archive opt-out option\r\n\r\n* docs(s3): intelligent-tiering archive blog\r\n\r\n* feat(s3): random petname for s3 bucket name\r\n\r\n* docs(s3): lifecycle rule screenshot\r\n\r\n* docs(s3): storage cost optimization whitepaper", "date": "2022-02-01 14:58:01+09:00", "modified_files": ["README.md", "default.auto.tfvars", "fixture.tc1.tfvars", "fixture.tc3.tfvars", "fixture.tc4.tfvars", "main.tf", "variables.tf", "s3-lifecycle-rules-intelligent-tiering.png", "README.md", "default.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/sshankar/cloud-gaming.git", "commits": [{"id": "9fb53628b242aa46f0f3f53c0ce5a97a2331e1e4", "msg": "Notify via callback (follows IFTTT webhook payload schema) on EC2 start, terminate and spot expiry events", "date": "2019-02-07 21:17:51-05:00", "modified_files": ["notify.py", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/alphagov/govuk-infrastructure.git", "commits": [{"id": "8475fbe51281a76757f7046c6c591056db182286", "msg": "Enable envoy access logs for all apps\n\nAs described in the AWS docs on AppMesh \"Observability\":\n\nhttps://docs.aws.amazon.com/app-mesh/latest/userguide/observability.html\n\n> When you send Envoy access logs to /dev/stdout, they are mixed in with\n> the Envoy container logs. You can export them to a log storage and\n> processing service like CloudWatch Logs using standard Docker log\n> drivers such as awslogs. For more information, see Using the awslogs Log\n> Driver in the Amazon ECS Developer Guide. To export only the Envoy\n> access logs (and ignore the other Envoy container logs), you can set the\n> ENVOY_LOG_LEVEL to off. For more information, see Access logging in the\n> Envoy documentation.\n\nIt's possible that this approach would get expensive at\nproduction-levels of traffic. I think it's worth doing for now though,\nas it might help use troubleshoot issues while we're developing.", "date": "2020-11-23 15:54:14+00:00", "modified_files": ["appmesh.tf"]}, {"id": "cfa1091e895f381d80380ff43f82ec36d592def1", "msg": "Pin content store apps to bill-content-schemas\n\nThis image (see corresponding content store branch) contains\ncontent schemas.", "date": "2020-11-24 17:49:23+00:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "65365daa2fd26a8b20945a30a032608fa245e502", "msg": "Add a simple AWS billing dashboard\n\nThis is possible now that we've signed in to the root account and\nenabled IAM users to view billing information :tada:.\n\nThis will hopefully give us a slightly easier-to-access view of our\nbilling (compared to having to sign in to AWS and look in\ncost-explorer).\n\nIt's a bit na\u00efve - CloudWatch's EstimatedCharges metric just increases\nthroughout the month and then resets. Might be nice to try to measure\nthe gradient, so we can see the rate we're spending at. But this\nis good enough for now.\n\nOne interesting thing the graphs show is that the cost of the `test`\nenvironment is still dominated by EC2 and RDS, even though we have quite\na bit of ECS stuff in there now. Not very scientific, but still.\n\nTested locally with docker-compose.", "date": "2020-12-09 12:16:46+00:00", "modified_files": ["billing.tf", "system_metrics.tf"]}, {"id": "60aa3dee933bbf3e15321943cfa8dae018634a72", "msg": "Enable apps to ship statsd metrics\n\nThis security group rule will permit Statsd to receive\nmetrics from any ECS Service created in the app module.\n\nThis also adds a security group which will be added to every\nvirtual service (ECS Service) in the service mesh (App Mesh).\nThis security group will be useful since we expect to have\nmultiple services that we wish most/all apps in ECS to send\nrequests to (statsd, prometheus) so this should reduce the\nnumber of groups/rules we need to create.\n\nCo-Authored-By: Bill Franklin <william.franklin@digital.cabinet-office.gov.uk>", "date": "2021-01-05 16:28:22+00:00", "modified_files": ["main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "security_group_rules.tf", "security_groups.tf"]}, {"id": "60643dc6f73039c6f055dca538a6f950928c98e1", "msg": "Add ECS Grafana\n\nAs part of the [Observability\nepic](https://trello.com/c/tCpSuGiD/306-epic-observability),\nwe spin up a Grafana instance in ECS to monitor GOV.UK ECS apps\nand other components of the new platform e.g. billing.\n\n1. Grafana spinned up in new cluster Monitoring to seperate concerns\n2. Grafana is accessed via GitHub auth\n3. Configuration of Grafana dashboards is via Terraform\n\n1. Grafana accessible via VPN at https://grafana-ecs.test.govuk.digital\n\nProcess is documented in [here](docs/applying-terraform.md#monitoring)\n\n1. Subsequent apply of the terraform config for internal Grafana\nconfiguration fails, workaround is documented in the deployment process.\nNeed to find way to persist grafana config\n2. Deployment of the monitoring stack via Concourse\n\nRef:\n1. [trello card](https://trello.com/c/RzaURJi5/323-set-up-a-grafana-in-ecs)", "date": "2020-12-23 16:45:49+00:00", "modified_files": ["README.md", "docker-compose.yml", "versions.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "versions.tf", "main.tf", "outputs.tf", "variables.tf", "common.tfvars", "applying-terraform.md", "main.tf", "appmesh.tf", "cloudmap.tf", "main.tf", "variables.tf", "main.tf", "main.tf", "outputs.tf", "variables.tf", "billing.tf", "main.tf", "system_metrics.tf", "variables.tf", "README.md", "ecs_cluster.tf", "grafana.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "security_groups.tf", "variables.tf", "main.tf", "variables.tf"]}, {"id": "6d6eb498cfe7fe448037ff2519103cd596192d71", "msg": "Fix Shared Redis Cluster hostname\n\nThe Redis cluster hostname includes the subdomain test.govuk-internal.digital\ntwice.\n\nBefore:\n\nredis://bill-redis.test.govuk-internal.digital.bill.test.govuk-internal.digital:6379\n\nAfter:\n\nredis://redis.bill.test.govuk-internal.digital:6379", "date": "2021-03-16 12:36:45+00:00", "modified_files": ["app_publisher.tf", "app_publishing_api.tf", "app_signon.tf", "app_static.tf", "defaults.tf", "outputs.tf", "shared_redis_cluster.tf", "variables.tf", "infrastructure.tfvars", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "c44fa19941d1da042828f990f894ad680498d88b", "msg": "Make external_app_domain workspace-aware\n\nThis ensures that the app URLs provided to other apps\nare accurate for the workspace. E.g. publisher in the\nbill workspace will now redirect to signon.bill.etc\nrather than signon.ecs.etc", "date": "2021-03-16 13:31:16+00:00", "modified_files": ["app_publisher.tf", "app_signon.tf", "defaults.tf", "outputs.tf", "main.tf"]}, {"id": "50a02292416b6d222666b38f3146f803867cad5e", "msg": "Make Smokey workspace-aware\n\nThis ensures that the smoke tests are run for the correct\nworkspace.\n\nCurrently it is possible for a workspace to run smoke\ntests for a different workspace.\n\nSmoke tests currently have a single task definition\nfamily called 'smokey' unlike other task definition\nfamilies such as 'frontend-bill' or 'publisher-ecs'.\n\nAs you can see, each pipeline will update the smoke\ntests with variables such as GOVUK_APP_DOMAIN - a\nworkspace-aware domain such as bill.test. However,\nsince the family is not workspace-safe, the smoke\ntests will simply run the tests for the workspace\nthat last update the smokey task definition.\n\nThis resolves the described problem by creating a\nsmokey task family for each workspace.", "date": "2021-05-24 13:36:41+01:00", "modified_files": ["deploy.yml", "smokey.tf"]}, {"id": "1e588a004172338404c487e679df5d503f0cab48", "msg": "Reduce external-dns's polling interval and enable watches.\n\nThe idea here is to reduce the QPS to Route53, since Route53 has a hard\nlimit of 5 QPS. The watches should be comparatively cheap as long as we\ndon't create an unreasonable number of Ingresses+Services (and we'd\nalmost certainly hit other scaling limits first anyway).\n\nSee https://github.com/kubernetes-sigs/external-dns/blob/1b57fd7/docs/tutorials/aws.md#throttling\nand https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-requests-route-53", "date": "2021-12-03 15:57:58+00:00", "modified_files": ["external_dns.tf"]}, {"id": "a51a3bfcd73fd55ecd43aa36ce3f266f0cefc2dc", "msg": "Give the EKS environment its own frontend memcache.\n\nWe can't share the Frontend memcache with the EC2 environments, because\nFrontend uses it to cache rendered HTML which contains links to Rails\nassets. My mistake \ud83e\udd26\n\nAlso:\n\n- Tweak the config for the shared Redis while we're there; it's very\n  similar to the memcache one so let's make the two consistent.\n- Remove the defaults for instance types and added those vars to the\n  per-environment `.tfvars`, to make it less likely that we'll forget to\n  set them appropriately when adding staging and prod.\n- Hardcode the standard ports for Redis and memcached; we'd never want\n  to run them on nonstandard ports so on balance it's cleaner to get rid\n  of the module variable and save on interface clutter.\n- Use a slightly smaller and cheaper instance type for Redis.\n- Use provider default tags to simplify tagging the Redis cluster and\n  associated resources. Saves the repeated boilerplate merge on every\n  tagged resource.\n\nTested: applied successfully in the test account. Clusters/instances\nshow up healthy in the AWS web console.", "date": "2021-12-08 18:27:11+00:00", "modified_files": ["frontend_memcache.tf", "main.tf", "outputs.tf", "security.tf", "shared_redis.tf", "variables.tf", "common.tfvars", "common.tfvars"]}, {"id": "03315970c38ee843bf9a257a53212004098368a8", "msg": "Add OAUTH for Prometheus and Alert Manager\n\nAdd OAUTH secret that the ingress of Prometheus and Alert-Manager\nwill use to control access to these 2 apps which do not support\nin-built authentication.\n\nRef:\n1. [trello card](https://trello.com/c/XiOPhFt5/813-add-oidc-auth-to-prometheus-alertmanager-loadbalancers)\n\nCo-authored-by: Bill Franklin <william.franklin@digital.cabinet-office.gov.uk>", "date": "2022-02-08 15:12:44+00:00", "modified_files": ["prerequisite-secrets.md", "dex.tf", "kube_prometheus_stack.tf"]}, {"id": "ee2b2286a02d49c7e9992d0a39ce950583e16bb7", "msg": "Add k8s resources to Argo Workflows components\n\nThere are 3 types of Argo Workflows components: controller, server\nand executor where k8s resources can be set. They seem to have\ntheir default values removed from the [Helm chart](https://github.com/argoproj/argo-helm/blob/master/charts/argo-workflows/values.yaml)\n\nThe values are added back and were obtained from [here](https://argoproj.github.io/argo-workflows/cost-optimisation/)\n\nRef:\n1. [trello card](https://trello.com/c/54xe0QEk/892-add-resource-limits-to-workflow-and-job-pods)", "date": "2022-04-13 10:30:28+01:00", "modified_files": ["argo.tf"]}]}, {"name": "https://github.com/companieshouse/ceu-terraform.git", "commits": [{"id": "8733c7f4d1b395d6a8e236d0106cfae56d4ded06", "msg": "Removing SNS and alarm actions from Development account as unnecessary cost", "date": "2022-02-22 11:54:49+00:00", "modified_files": ["alb-internal.tf", "asg_frontend.tf", "sns.tf"]}]}, {"name": "https://github.com/gedejong/infra.git", "commits": [{"id": "df7d6a56fb9c390574c45500fbae61dbba0044d8", "msg": "Don't enforce guardduty (too expensive)", "date": "2021-03-29 20:57:03+02:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/v3nd3774/AWSEMRInferencePipelinePOC.git", "commits": [{"id": "75771876ca81699edfb4bb1afa202d6426abae1e", "msg": "got terraform to start planning emr cluster, need to analyze expected cost and actually turn on and log in to notebook on cluster now", "date": "2020-02-16 12:46:25-06:00", "modified_files": ["bootstrap-emr.sh", "bootstrap-data.tf", "emr.tf", "log-data.tf", "source-data.tf", "variables.tf", "vpc.tf"]}]}, {"name": "https://github.com/slalom/dataops-infra.git", "commits": [{"id": "ab8e462781992ee942e51ffb2b12f9bb67ec018f", "msg": "MS Teams Notification Support (#142)\n\n* fix lambda name uniqueness\r\n* note 64-char limit in `name_prefix` docs\r\n* unified lambda fn with detailed payload\r\n* explicit null value for step function\r\n* remove deprecated provider syntax", "date": "2020-11-25 01:18:00-08:00", "modified_files": ["README.md", "variables.tf", "variables.tf", "README.md", "variables.tf", "README.md", "variables.tf", "README.md", "variables.tf", "README.md", "variables.tf", "README.md", "lambda.tf", "variables.tf", "README.md", "variables.tf", "README.md", "variables.tf", "README.md", "variables.tf", "README.md", "variables.tf", "README.md", "variables.tf", "README.md", "cloudwatch.tf", "lambda-notify.tf", "requirements.txt", "webhook_notify.py", "main.tf", "step-functions.tf", "variables.tf", "README.md", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "README.md", "variables.tf", "README.md", "variables.tf", "README.md", "variables.tf", "README.md", "variables.tf", "README.md", "iam.tf", "main.tf", "schedule.tf", "variables.tf", "README.md", "variables.tf", "README.md", "variables.tf", "README.md", "main.tf", "python-zip.tf", "variables.tf", "README.md", "variables.tf", "README.md", "variables.tf", "README.md", "variables.tf", "README.md", "iam.tf", "schedule.tf", "variables.tf", "README.md", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "variables.tf", "00_environment.tf", "00_environment.tf", "00_environment.tf", "02_singer-taps.tf", "covid-19.rules.txt", "00_environment.tf", "infra-config.yml", "00_environment.tf", "00_environment.tf", "00_environment.tf", "00_environment.tf", "00_environment.tf", "00_environment.tf", "00_environment.tf", "00_environment.tf", "00_environment.tf"]}]}, {"name": "https://github.com/cloud-geek/AWS-Cloud-Architect-master.git", "commits": [{"id": "a662717d80209735e93b6b8e537f21b53c06b469", "msg": "Added project 2 files\n\nDesign, Provision and Monitor AWS Infrastructure at Scale\r\nIn this project, you will plan, design, provision, and monitor infrastructure in AWS using industry-standard and open source tools. You will practice the skills you have learned throughout the course to optimize infrastructure for cost and performance. You will also use Terraform to provision and configure AWS services in a global configuration.", "date": "2020-07-06 00:38:09+02:00", "modified_files": ["README.md", "Udacity_Diagram_1.pdf", "Udacity_Diagram_2.pdf", "Increased_Cost Estimate.csv", "Initial_Cost_Estimate.csv", "Readme.md.txt", "Reduced_Cost_Estimate.csv", "UdacityCloudTrailLog.csv", "udacity_password_policy.png", "CloudWatch_alarm.png", "2_Resources_Deleted.png", "6_Resources_Created.png", "Terraform_1_1.png", "Terraform_1_2.png", "main.tf", "Resources_Created.png", "Resources_Destroyed.png", "Terraform_2_1.png", "Terraform_2_2.png", "Terraform_2_3.png", "Terraform_destroyed.png", "greet_lambda.py", "lambda.zip", "main.tf", "outputs.tf", "variables.tf", "Terraform_destroyed.png"]}]}, {"name": "https://github.com/David-Nettleship/cloudfolio_iac.git", "commits": [{"id": "1e99269728bf648468a74bc6db813168557b124f", "msg": "Change billing method of dynamodb tables", "date": "2021-12-02 20:40:18+00:00", "modified_files": ["cloudfolio-data.tf"]}]}, {"name": "https://github.com/AndreasSko/infrastructure.git", "commits": [{"id": "e7c56ae03560224a4d40370ce812f05662cee20b", "msg": "Increase size of server to CPX11\n\nWe are low on storage for some situation. So instead\nof adding 20GB, we can just increase the size, pay\na few cents more a month and benefit from another\nvCPU :thumbsup:", "date": "2021-06-29 10:57:44+02:00", "modified_files": ["hetzner.tf"]}]}, {"name": "https://github.com/cliffano/feedpaper.git", "commits": [{"id": "d13218e98814d7ac3bc65fc862c0119123f44d68", "msg": "Use one dynamodb table to reduce cost.", "date": "2015-11-22 11:19:23+11:00", "modified_files": ["infrastructure.tf"]}]}, {"name": "https://github.com/AdamBriers/GCPPFPLOCAL.git", "commits": [{"id": "9341cf4fe12213355c1805326049e99217db903c", "msg": "Adds billing and org info into the env tfvars", "date": "2021-01-08 12:57:28+00:00", "modified_files": ["dev.tfvars", "infrastructure.tfvars", "prd.tfvars", "rnd.tfvars", "secops.tfvars"]}]}, {"name": "https://github.com/daveyb/gcp-qwiklab.git", "commits": [{"id": "4924fde8938a3145e95c3275e4c562b3281f1d5b", "msg": "add bigquery billing data", "date": "2019-09-25 15:42:43-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/FXinnovation/fx-terraform-module-aws-cost-optimization.git", "commits": [{"id": "fbd3ef1db985dd1d9bc286b0137065916cd3cfe0", "msg": "refactor: simplifies condition for enable_cost_optimization", "date": "2020-08-17 11:37:28-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/HumanCellAtlas/metrics.git", "commits": [{"id": "b3f065755bb3a12fb6dfa8b23e33c0d02499ca90", "msg": "Add tags for cost tracking\n\nFixes https://github.com/HumanCellAtlas/metrics/issues/8", "date": "2019-07-31 17:18:24-07:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/HarsheshShah08/HS-Terraform.git", "commits": [{"id": "e0d0f044c54ebf491c122664d03e0cfe5d2b0823", "msg": "Public networked created and private network has been masked to save the cost", "date": "2020-06-03 10:17:02+01:00", "modified_files": ["provider.tf", "terraform.tfstate", "terraform.tfstate.backup", "vars.tf"]}]}, {"name": "https://github.com/hmrc/platsec-ci-terraform.git", "commits": [{"id": "a6c686f22e47ef50c311a0135ea0ae96babf52ef", "msg": "auto generate dummy_lambda_payload.zip file", "date": "2021-06-16 10:48:55+01:00", "modified_files": [".gitignore", ".terraform.lock.hcl", "dummy_lambda_payload.zip", "main.tf"]}]}, {"name": "https://github.com/Daylightfire/Azure.git", "commits": [{"id": "d7deb8a8298bc9a9ee86bc98912cd8e425346e65", "msg": "Started on new POC in PAYG", "date": "2019-07-09 23:42:47+01:00", "modified_files": [".gitignore", "main.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/akerl/aws-account.git", "commits": [{"id": "91967d4089ad9580ceae62f7845581935c892455", "msg": "add billing alarm", "date": "2016-09-13 22:16:30-04:00", "modified_files": ["LICENSE", "README.md", "billing.tf"]}, {"id": "934c7ee823ff50be5dba88e04509dadc729bbf9c", "msg": "update billing threshold", "date": "2016-09-26 00:05:02-04:00", "modified_files": ["billing.tf", "terraform.tfstate", "terraform.tfstate.backup"]}, {"id": "3bf73856ca6f0bd7ee8299899acc8fc682f71a3d", "msg": "update billing threshold", "date": "2016-11-01 14:19:21-07:00", "modified_files": ["billing.tf"]}, {"id": "9fcff4b82a2ad4d0ed24656243da51f767f2968a", "msg": "bump billing alarm timer", "date": "2018-02-26 23:43:18-05:00", "modified_files": ["billing.tf"]}, {"id": "93bbe396526eae9260461add03f2389aca6a6c67", "msg": "update billing threshold", "date": "2018-03-12 22:43:21-04:00", "modified_files": ["billing.tf", "terraform.tfstate", "terraform.tfstate.backup"]}, {"id": "1ae9e1ae701a6b43b6da91694a69a1f8b184e7c2", "msg": "actually set billing email", "date": "2019-08-05 10:00:14+00:00", "modified_files": ["billing.tf", "main.tf"]}]}, {"name": "https://github.com/phan-t/terraform-consul-master.git", "commits": [{"id": "50101dc07a4edab7bf97619e88f7371370f2351b", "msg": "feat: Add payments-queue external service", "date": "2021-11-28 22:41:53+11:00", "modified_files": ["consul.tf"]}]}, {"name": "https://github.com/wurde/terraform-aws-web-app.git", "commits": [{"id": "f23de36ebabd8e98a2c47ed555d8ec3b78ac63a7", "msg": "add price_class to control CloudFront costs", "date": "2020-10-04 13:56:51-05:00", "modified_files": ["README.md", "cloudfront.tf", "variables.tf"]}]}, {"name": "https://github.com/tjololo/elastic-cloud.git", "commits": [{"id": "931e5653163cc163d6450a47a4d80db57540946a", "msg": "test setup minimal cluster (#5)\n\n* test setup minimal cluster\r\n\r\n* test infracost", "date": "2022-01-13 08:49:13+01:00", "modified_files": ["terraform.yaml", "elastic.tf"]}]}, {"name": "https://github.com/concourse/hush-house.git", "commits": [{"id": "5c0207db8f2573f07e7f5fc4936a6140c08f0b1f", "msg": "Starts moving towards new cluster w/ metrics segregation\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-01-21 07:59:41-05:00", "modified_files": [".gitignore", "Makefile", ".helmignore", "Chart.yaml", "requirements.yaml", "NOTES.txt", "_helpers.tpl", "deployment.yaml", "ingress.yaml", "service.yaml", "test-connection.yaml", "values.yaml", "bootstrap.sh", "concourse.json", "postgres.json", "values.yaml", "main.tf", "outputs.tf", "variables.tf", "backend.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "gcp.tf", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "daf7c8ee42d02de96f5ae30a93a38046d2b6ecb0", "msg": "Make use of non local disk; adds gcp-key make target\n\nWith the current version of the chart that we use, local ssds can't\nreally be used given that we can't make use of PVCs for local storage,\nso, in this commit we go back to using a `pd-ssd` that is big enough for\nour workloads.\n\nThis commit also includes a `gcp-key` make target that grabs the gcp key\nfrom lpass.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-02-22 08:13:26-05:00", "modified_files": ["Makefile", "main.tf"]}, {"id": "2a93618e0daf4dd12933ba9fed3d9d11cffee5bf", "msg": "hh: make use of local storage; adds provisionar bootstraping\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-03-03 09:40:39-05:00", "modified_files": [".gitmodules", "bootstrap-tiller.sh", "local-provisioner-values.yaml", "local-provisioner.sh", "sig-storage-local-static-provisioner", "ssd-storage-class.sh", "requirements.lock", "requirements.yaml", "values.yaml", "bootstrap-k8s-secrets.sh", "main.tf", "main.tf"]}, {"id": "d638a98e12d64693e7713442af22ae1b0e58ee1e", "msg": "tf: remove autoscaling; hh: bump garden net pool; metrics: upgd panels\n\n- given that we can't autoscale with the local SSDs that we've been\nusing, removed that completely for now.\n\n- updated the panels that relate to network metrics to use bits instead\nof bytes in the data rate panels;\n\n- increased the garden network pool and max number of containers to play\nwith the idea of running a bunch of containers per host to explore\nwhat can happen there.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-03-04 13:32:43-05:00", "modified_files": ["values.yaml", "concourse.json", "main.tf", "main.tf"]}, {"id": "ce975c9fe4e22a1c3cd055b8afe12e1cdec42c6a", "msg": "hh: move out of local ssds and preemptible machines; updates pools\n\nThis commit:\n- removes the use of preemptible instances\n  - jobs that had to run for a very long time and have multiple steps\n  being run across different workers would make the whole build fail\n  when a single worker goes away, making our use of preemptible\n  instances hard.\n- removes the use of local ssds\n  - given that a pod that uses a pv provisioned by a local provisioner\n  can only get scheduled again against that particular node (and in our\n  use case, we expect to have VMs coming and going), that makes it a\n  no-no.\n- creates a `generic` pool for non-worker workloads (like metrics, web\n  ...). This way we can not rely on the default pool that gke\n  automatically creates for us.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-03-08 08:39:30-05:00", "modified_files": ["values.yaml", "values.yaml", "main.tf", "main.tf"]}, {"id": "913e8659ccf11342781f0cf69668f910933579e7", "msg": "Add bootstrapping section to README, re-bootstrap, remove internal db ip\n\n- we were missing a bootstrapping section that detailed the process of\n  getting the cluster from nothing to a fully formed one;\n- `terraform/main.tf` was using the `-test` suffix in some resources\n  like the CloudSQL and the k8s cluster, so I got rid of them all and\n  re-bootstrapped the whole thing without those suffixes;\n- using internal connections for CloudSQL end up being too complicated\n  in terms of allowing the connections to happen using the beta\n  \"internal svcs connection\" feature from GCP (see [1]).\n\n[1]: https://issuetracker.google.com/issues/123276199\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-03-19 22:20:58-04:00", "modified_files": ["README.md", "bootstrap-tiller.sh", "values.yaml", "outputs.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "main.tf", "variables.tf", "gcp.tf", "main.tf", "outputs.tf"]}, {"id": "c65f50767d6c301159487e51fbc99de919fa4ba7", "msg": "add creation of certificates for the db\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-03-20 07:30:15-04:00", "modified_files": ["main.tf", "outputs.tf", "outputs.tf"]}, {"id": "150efa0962ba61761ff0974bc7b979452e46f3fb", "msg": "add `all` whitelisting for cloudsql; use 5.0 instead of rc (hh)\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-03-20 07:46:54-04:00", "modified_files": ["values.yaml", "main.tf", "main.tf"]}, {"id": "79d145e62c4ffb88d48452422f95427f62dcc375", "msg": "update load-balancer ips; exposes addresses again (tf)\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-03-20 08:02:25-04:00", "modified_files": ["values.yaml", "values.yaml", "outputs.tf", "outputs.tf"]}, {"id": "3ccce7d20b131504f3557e8652c2b8a750bbeeb0", "msg": "switch machine types to ubuntu; add nodeselector for metrics\n\nWe've been seeing some weird CPU utilizations when strabo workers kick\nin, this is an attempt to compare that to Ubuntu machines instead of the\nCOS that we were using.\n\nRegarding `nodeSelector`, this is to make sure that we don't have\n`prometheus` or `grafana` pods getting into worker VMs.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-04-26 08:43:55-04:00", "modified_files": ["values.yaml", "values.yaml", "main.tf", "main.tf"]}, {"id": "7735302c7db173edfe1c109213a119cf5993f3a9", "msg": "iaas: remove `hush-house.concourse-ci.org` A record\n\nPreviously, `hush-house.concourse-ci.org` was a record that we kept\nunder `concourse-ci.org`. Having moved to `pivotal.io`, we don't need to\nmaintain that anymore.\n\nAs we needed to maintain the reserved IP address that was created\nbefore, the migration was performed with a `terraform state mv` before.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-05-02 16:07:52-04:00", "modified_files": ["main.tf", "outputs.tf"]}, {"id": "3d1da46e3fb8bbe6598c24212e5e8327e6cf4ed2", "msg": "iaas: add descriptions and update deprecated fields\n\ncloses #44\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-05-03 11:10:36-04:00", "modified_files": ["main.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf", "gcp.tf", "main.tf", "outputs.tf", "variables.tf"]}, {"id": "5626d317f90484906f932d03768cc696dce26058", "msg": "bump local storage provisioner; update workers-1 node_count\n\nThere were new commits to the local storage provisionar submodule, and\nwe had the autoscale triggered for `worker-1`, so, by keeping that up to\ndate, we don't have surprises when performing terraform ops.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-05-12 08:34:31-04:00", "modified_files": ["sig-storage-local-static-provisioner", "main.tf"]}, {"id": "53e6725d7d59bdbdd9297c45c450ebd2eb2614de", "msg": "iaas: go back to COS workers\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-05-15 08:25:38-04:00", "modified_files": ["main.tf"]}, {"id": "85a0fdcf6d75b077f2c63c834dd0fd88a60a87ed", "msg": "Parameterize disk size for the database\n\nSigned-off-by: Taylor Silva <tsilva@pivotal.io>\nCo-authored-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-06-06 14:36:54-04:00", "modified_files": ["main.tf", "variables.tf", "main.tf"]}, {"id": "b0a00a85e0c72ea63d504bb2fd79eaa36c7e7207", "msg": "update modules to be terraform 0.12.3-ready\n\nit seems like either some of the breaking changes that 0.12 introduced\nor changes to the plugins (google_*) used affected us. This commit\naddresses such problems.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-07-14 09:21:16-04:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "c7d70a997d62fd43d18004b793878baf3496d26f", "msg": "iaas: add a `workers-2` to test out rootless\n\nFrom https://github.com/moby/buildkit/issues/879, it seems like GKE's\ncontainer-optimized instances introduce trouble for running\nrootless containers - adding an ubuntu pool to test it out.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-07-14 09:28:18-04:00", "modified_files": ["main.tf"]}, {"id": "bacab02928d1879bc3912dabf8a85c57cdcde198", "msg": "move to single worker node-pool\n\nthis commit changes our distribution of concourse workers in a way to\nhave more web nodes that are half the size (vertically) than before, as\nwe've never been really fully utilizing their resources anyway.\n\nit moves us from having 2 worker node pools of vertically large\nmachines, to a single pool with more nodes that are half the size that\nthey previously were (16vcpu 32GBram 1TBdisk --> 8vcpu 16GBram\n750GBdisk).\n\nthe reasoning for not performing a \"divide by 2\" on `disk` is that\nthat's a resource that's still very highly utilized mostly in terms of\nIOPS, but eventually, in terms of space too.\n\nto achieve that, the `cluster` terraform module was updated to use a map\nof node pools (rather than a list) so that we can update the set of\npools without needing to manually perform terraform surgery.\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-11-03 17:05:55-05:00", "modified_files": ["values.yaml", "Chart.yaml", "README.md", "requirements.lock", "requirements.yaml", "values.yaml", "Chart.yaml", "README.md", "requirements.lock", "requirements.yaml", "values.yaml", "main.tf", "variables.tf", "main.tf"]}, {"id": "d462342e1a043fd8706de98f84ca92978534b7dc", "msg": "terraform/deployments: add ci-pr workers\n\nthis commit is intended to allow the [`prs` pipeline] to co-exist with\n`nci` in the `hush-house` gke cluster.\n\nit does so by:\n\n- adding a node pool to the cluster (`ci-workers-pr`) whose size is the\n  same as we had previously in our BOSH deployment\n- adding a deployment (`ci-pr`) that puts workers in such node pool.\n\nAs such deployment is supposed to run untrusted workloads, we needed a\nway of restricting the network access that this deployment could have in\norder to avoid lateral movements in the internal net (in the case of our\nBOSH environment, we had a totally different network - in k8s, we'd need\nto be in a separate cluster if we wanted to go w/ the same approach of\ndifferent nets).\n\nThis led us to enabling the enforcement of network policies in the\ncluster, and creating a policy for `ci-pr` that would target the pods\ndelpoyed by it, effectively blocking internal connectivity to anything\nwe didn't want (i.e., anything that's not ci's TSA).\n\nps.: these changes have already been applied.\n\n[`prs` pipeline]: https://nci.concourse-ci.org/teams/main/pipelines/prs\n\nSigned-off-by: Denise Yu <dyu@pivotal.io>\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>", "date": "2019-11-22 08:46:41-05:00", "modified_files": ["Chart.yaml", "README.md", "requirements.lock", "requirements.yaml", "NOTES.txt", "network-policy.yaml", "values.yaml", "main.tf", "main.tf"]}, {"id": "df05a3fb2c8be8f993c77fbc0f5600d1d852c108", "msg": "increase max_node_count for workers-3 pool to 25\n\nSigned-off-by: Ciro S. Costa <cscosta@pivotal.io>\nCo-authored-by: Krishna Mannem <kmannem@pivotal.io>", "date": "2019-11-27 16:01:11-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/Liquid-Reply/finops-webinar.git", "commits": [{"id": "f202df649dba74344abad6aa478ebcbaadadc2d4", "msg": "Add infracost", "date": "2021-08-23 10:32:27+02:00", "modified_files": [".gitlab-ci.yml", "README.md", "main.tf", "outputs.tf", "test_outputs.tf", "variables.tf"]}, {"id": "a2b104abce6d87fb6258145f40ca9983c9d75e80", "msg": "Add basic Github workflow (#1)\n\n* Add basic terraform workflow\r\n\r\n* Change tf directory to infracost\r\n\r\n* Change tf directory to infracost\r\n\r\n* Add tf-remote state\r\n\r\n* Remove aws provider\r\n\r\n* Change google provider version\r\n\r\n* Change default terraform values\r\n\r\n* Change project id\r\n\r\n* Change names of workflows", "date": "2022-02-10 20:42:05+01:00", "modified_files": ["terraform_apply.yml", "terraform_destroy.yml", "backend.tf", "main.tf", "terraform.tfvars"]}]}, {"name": "https://github.com/claranet/terraform-signalfx-integrations.git", "commits": [{"id": "922d1937ee9dcd07a01e6e7ca8848ee78d31b01b", "msg": "Disable aws cost optimizer by default", "date": "2020-06-04 16:04:02+02:00", "modified_files": ["README.md", "policies.tf", "variables.tf"]}]}, {"name": "https://github.com/zbmowrey/cloud-admin.git", "commits": [{"id": "738d187f603e5a52e6c6338abcd6096e22e819a0", "msg": "Initial Commit\n\nSets up the infrastructure for Organizations, OUs, SCPs, and cost & usage reporting.", "date": "2021-11-22 12:04:57-05:00", "modified_files": [".gitignore", ".terraform.lock.hcl", "README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/poseidon/typhoon.git", "commits": [{"id": "6c5a1964aadbb3d23a1c6c6b99cf8c44b763b21f", "msg": "Change kube-apiserver port from 443 to 6443\n\n* Adjust firewall rules, security groups, cloud load balancers,\nand generated kubeconfig's\n* Facilitates some future simplifications and cost reductions\n* Bare-Metal users who exposed kube-apiserver on a WAN via their\nrouter or load balancer will need to adjust its configuration.\nThis is uncommon, most apiserver are on LAN and/or behind VPN\nso no routing infrastructure is configured with the port number", "date": "2018-06-18 21:57:58-07:00", "modified_files": ["CHANGES.md", "apiserver.tf", "bootkube.tf", "security.tf", "bootkube.tf", "security.tf", "bootkube.tf", "bootkube.tf", "bootkube.tf", "network.tf", "bootkube.tf", "network.tf", "ingress.md", "bootkube.tf", "bootkube.tf"]}, {"id": "316f06df06a8c7660020babc5df96d1dea468f13", "msg": "Combine NLBs to use one NLB per cluster\n\n* Simplify clusters to come with a single NLB\n* Listen for apiserver traffic on port 6443 and forward\nto controllers (with healthy apiserver)\n* Listen for ingress traffic on ports 80/443 and forward\nto workers (with healthy ingress controller)\n* Reduce cost of default clusters by 1 NLB ($18.14/month)\n* Keep using CNAME records to the `ingress_dns_name` NLB and\nthe nginx-ingress addon for Ingress (up to a few million RPS)\n* Users with heavy traffic (many million RPS) can create their\nown separate NLB(s) for Ingress and use the new output worker\ntarget groups\n* Fix issue where additional worker pools come with an\nextraneous network load balancer", "date": "2018-06-18 22:56:32-07:00", "modified_files": ["CHANGES.md", "nlb.tf", "outputs.tf", "ingress.tf", "outputs.tf", "nlb.tf", "outputs.tf", "ingress.tf", "outputs.tf"]}, {"id": "0c4d59db87b67d7c7a0a0f54677961a01ed8fbe4", "msg": "Use global HTTP/TCP proxy load balancing for Ingress on GCP\n\n* Switch Ingress from regional network load balancers to global\nHTTP/TCP Proxy load balancing\n* Reduce cost by ~$19/month per cluster. Google bills the first 5\nglobal and regional forwarding rules separately. Typhoon clusters now\nuse 3 global and 0 regional forwarding rules.\n* Worker pools no longer include an extraneous load balancer. Remove\nworker module's `ingress_static_ip` output.\n* Add `ingress_static_ipv4` output variable\n* Add `worker_instance_group` output to allow custom global load\nbalancing\n* Deprecate `controllers_ipv4_public` module output\n* Deprecate `ingress_static_ip` module output. Use `ingress_static_ipv4`", "date": "2018-05-06 23:21:53-07:00", "modified_files": ["CHANGES.md", "ingress.tf", "network.tf", "outputs.tf", "ingress.tf", "outputs.tf", "workers.tf", "ingress.tf", "network.tf", "outputs.tf", "ingress.tf", "outputs.tf", "workers.tf"]}, {"id": "f2f4deb8bb44988eeb0b64b919e51fb556aef4fb", "msg": "Change AWS default type from t2.small to t3.small\n\n* T3 is the next generation general purpose burstable\ninstance type. Compared with t2.small, the t3.small is\ncheaper, has 2 vCPU (instead of 1) and provides 5 Gbps\nof pod-to-pod bandwidth (instead of 1 Gbps)", "date": "2018-12-18 12:29:27-08:00", "modified_files": ["CHANGES.md", "variables.tf", "variables.tf", "aws.md", "aws.md", "performance.md"]}, {"id": "aaa8e0261a01a62fa4a343788b3df20b9e93ee38", "msg": "Add Google Cloud worker instances to a target pool\n\n* Background: A managed instance group of workers is used in backend\nservices for global load balancing (HTTP/HTTPS Ingress) and output\nfor custom global load balancing use cases\n* Add worker instances to a target pool load balancing TCP/UDP\napplications (NodePort or proxied). Output as `worker_target_pool`\n* Health check for workers with a healthy Ingress controller. Forward\nrules (regional) to target pools don't support different external and\ninternal ports so choosing nodes with Ingress allows proxying as a\nworkaround\n* A target pool is a logical grouping only. It doesn't add costs to\nclusters or worker pools", "date": "2019-03-30 15:12:55-07:00", "modified_files": ["CHANGES.md", "network.tf", "outputs.tf", "outputs.tf", "target_pool.tf", "workers.tf"]}, {"id": "5303e32e38650c89d10f9dd057aef7613d9ea678", "msg": "Change DO worker_type default from s-1vcpu-1gb to s-1vcpu-2gb\n\n* On DigitalOcean, `s-1vcpu-1gb` worker nodes have 1GB of RAM, which\nis too small as a default, even for most cost constrained developers", "date": "2019-06-01 13:49:56-07:00", "modified_files": ["CHANGES.md", "variables.tf", "digital-ocean.md"]}, {"id": "4a7083d94a6e199091f248f669516109fdbffb47", "msg": "Change Azure default controller_type and worker_type\n\n* Change default controller_type to Standard_B2s. A B2s is cheaper\nby $17/month and provides 2 vCPU, 4GB RAM (vs 1 vCPU, 3.5GB RAM)\n* Change default worker_type to Standard_DS1_v2. F1 was the previous\ngeneration. The DS1_v2 is newer, similar cost, more memory, and still\nsupports Low Priority mode, if desired", "date": "2019-09-09 22:24:10-07:00", "modified_files": ["CHANGES.md", "variables.tf"]}, {"id": "85252dec6ed7f0b24517089150ec89bf32b45fb2", "msg": "Switch FCOS workers to official Fedora CoreOS AMIs\n\n* Fix worker nodes to use official Fedora CoreOS AMIs,\ninstead of the older Poseidon built AMIs (now removed).\nThis should have been part of #1038, but was missed in\ncode review\n* Poseidon build AMIs have been deleted (so I don't have\nto keep paying to host them for people)", "date": "2021-12-07 15:19:08-08:00", "modified_files": ["ami.tf", "ami.tf"]}]}, {"name": "https://github.com/Saikiran-Alagatham/ansible.git", "commits": [{"id": "a2a1df571240f0b802d5ffc944dd90fdd24bce13", "msg": "cheap-worker to  instaces", "date": "2021-10-14 05:35:30+00:00", "modified_files": ["ec2.tf"]}]}, {"name": "https://github.com/geoschem/gc-cloud-infrastructure.git", "commits": [{"id": "3ab33196d8b4063c33a261b3f637b1fe3ae8b4df", "msg": "Improve error reporting and modularize common functions (#7)\n\n* added alarm for billing costs\r\n\r\n* added config variable to specify whether to use spot or on demand queue for benchmark step function\r\n\r\n* added optional config variable to skip run dir creation and to set time period (only for GCC currently)\r\n\r\n* fixed bug where OutputDir was being deleted before simulation run\r\n\r\n* add 1Day option for GCHP\r\n\r\n* added trap for non zero exit codes\r\n\r\n* added get-repo.sh utility to benchmarking\r\n\r\n* create set-config.sh setting for updating simulation settings\r\n\r\n* created get-input-data.sh to download the data from s3\r\n\r\n* small updates\r\n\r\n* improved error reporting\r\n\r\n* added service user for github", "date": "2022-01-04 11:17:50-05:00", "modified_files": [".gitignore", "Dockerfile", "README.md", "createRunDirGCClassic.sh", "createRunDirGCHP.sh", "runGCClassic.sh", "runGCHP.sh", "get-input-data.sh", "get-repo.sh", "set-config.sh", "test.sh", "modules.json", "main.tf", "batch-module.tf", "outputs.tf", "variables.tf", "benchmarks-module.tf", "variables.tf", "cloudwatch-alarms.tf", "variables.tf", "outputs.tf", "sns.tf", "variables.tf", "cloud-benchmarks.json"]}, {"id": "ca751ba8410d8d2a0eb3579012ae319c95e3aef6", "msg": "Additional improvements to dockerfiles and terraform scripts (#8)\n\n* added alarm for billing costs\r\n\r\n* added config variable to specify whether to use spot or on demand queue for benchmark step function\r\n\r\n* added optional config variable to skip run dir creation and to set time period (only for GCC currently)\r\n\r\n* fixed bug where OutputDir was being deleted before simulation run\r\n\r\n* add 1Day option for GCHP\r\n\r\n* added trap for non zero exit codes\r\n\r\n* added get-repo.sh utility to benchmarking\r\n\r\n* create set-config.sh setting for updating simulation settings\r\n\r\n* created get-input-data.sh to download the data from s3\r\n\r\n* small updates\r\n\r\n* improved error reporting\r\n\r\n* added service user for github\r\n\r\n* added email notifications and improved error handling for benchmarks\r\n\r\n* updated spot instance allocation strategy to use capacity instead of price\r\n\r\n* added gettext dependency in dockerfile", "date": "2022-01-06 09:32:30-05:00", "modified_files": ["Dockerfile", "README.md", "gchp_source.env", "get-repo.sh", "main.tf", "batch-module.tf", "variables.tf", "benchmarks-module.tf", "variables.tf", "role.tf", "cloud-benchmarks.json"]}, {"id": "a118f58e35a132101e4d7a4afd68cb242e734507", "msg": "removed ec2_key_pair frin batch_benchmark_artifacts; set billing alert for all environments", "date": "2022-01-19 09:05:44-08:00", "modified_files": ["main.tf"]}, {"id": "9bf8fd33a1498fb09b5e33f36796a9c71e0cbd05", "msg": "update access policy for sns topic to allow cloudwatch to publish messages (for billing alarm)", "date": "2022-04-29 10:11:34-04:00", "modified_files": ["sns.tf"]}]}, {"name": "https://github.com/peemblis/hashicat-gcp.git", "commits": [{"id": "7f770a9da028ce2a5e7621f8a9a17ec1c3ed5236", "msg": "Added the billable label", "date": "2021-04-05 17:42:33+00:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/vinnie357/vin-lab-iac.git", "commits": [{"id": "883579831ac8e166b260c70c7e591d007b136f8d", "msg": "gcp work\n- gce bigip byol/payg\n- GDM startup scripts\n- start ATC scripts\n- vpc networks\n- fw rules\n- gcloud cli container", "date": "2020-01-07 18:06:07-05:00", "modified_files": ["dockerfile", "makefile", "readme.md", "readme.md", "afm.tf", "cluster.json", "onboard.tpl", "scca.json", "startup.tpl", "variables.tf", "bigip.md", "gcp.tf", "variables.tf", "variables.tf", "vinlab.tf"]}]}, {"name": "https://github.com/cycloid-community-catalog/stack-magento.git", "commits": [{"id": "3b1afa53758f940e769d26547261b7ddbb23a625", "msg": "terraform: add tags on volume\n\nMore details for billing and debug", "date": "2019-01-21 11:03:24+01:00", "modified_files": ["front.tf"]}]}, {"name": "https://github.com/lzysh/terraform-google-project.git", "commits": [{"id": "feb475ebff5cbc3f08b88d9acd1589b2b0bf75ae", "msg": "Add DATA_WRITE to audit log config (#54)\n\n* Don't run infracost workflow if user is dependabot\r\n\r\n* Update GCP inspec", "date": "2022-04-16 10:26:11-04:00", "modified_files": ["infracost.yml", ".pre-commit-config.yaml", "README.md", "SECURITY.md", "main.tf", "inspec.yml"]}]}, {"name": "https://github.com/Vadim-Sedletsky/Terragoat-test.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/rremer/terraform-minecraft.git", "commits": [{"id": "bac050d515cd6991e17cd1a34197d84982f5931d", "msg": "Gcp (#1)\n\n* switch to google cloud (cheaper and more performant)\r\n* break aptdaemon dep out of compute provisioner into its own module\r\n* rm ntp module, since minecraft server complains about time changes and does not require perfect time\r\n* setup acls for ssh from generated public nat ip of provisioner\r\n* assert/generate public rsa key from private on provisioning\r\n* deploy with persistent volume", "date": "2018-03-08 17:23:34-08:00", "modified_files": [".gitignore", "ami.tf", "main.tf", "variables.tf", "configure-backup.sh", "iam-policy.json.tpl", "main.tf", "outputs.tf", "provision.sh", "s3-backup.sh", "variables.tf", "compute-variables.tf", "compute.tf", "connection-variables.tf", "connection.tf", "global-variables.tf", "configure-lvm.sh", "main.tf", "outputs.tf", "provision.sh", "variables.tf", "block-until-dependents.sh", "config.cfg.tmpl", "server.properties.tmpl", "connection-variables.tf", "generate-config-json.sh", "generate-properties.sh", "generate-server-properties.sh", "install-minecraft.sh", "main.tf", "minecraft-backup-variables.tf", "minecraft-server-variables.tf", "minecraft-variables.tf", "module-variables.tf", "outputs.tf", "provision.sh", "variables.tf", "network.tf", "configure-ntp.sh", "main.tf", "provision.sh", "variables.tf", "provider-variables.tf", "provider.tf", "ssh.tf", "storage.tf", "terraform.tfstate"]}]}, {"name": "https://github.com/fernandoruaro/HIPAA.tf.git", "commits": [{"id": "c7503f8a28a3ff4c5788a75b13dc0b56ae25f073", "msg": "Adding billing mode", "date": "2019-04-02 23:10:02-03:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "29773e6b4e37e6c3dfa3da37a4c2b188be0c5205", "msg": "Adding billing mode", "date": "2019-04-02 23:19:26-03:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/dstine/sms-notifier.git", "commits": [{"id": "7aaaf705fb7f545122e640f95205140db6f8ccea", "msg": "cost allocation tags", "date": "2019-12-01 11:15:22-05:00", "modified_files": ["deploytime.tf", "runtime.tf"]}]}, {"name": "https://github.com/SimplifyMyCloud/GCP-InfrastructureState.git", "commits": [{"id": "680c1771b0040e4c309ee187ec4bf0efec57ba47", "msg": "billing account", "date": "2022-04-18 16:13:40-07:00", "modified_files": ["gcp_projects_log_warehouse.tf"]}]}, {"name": "https://github.com/marcelo-luizz/infracost.git", "commits": [{"id": "6026a0e4c8f53c9fafb88548a6d8eabe979ec1bb", "msg": "ading workflow to infracost", "date": "2022-02-19 16:05:26-03:00", "modified_files": ["terraform-apply.yaml", "backend.tf", "ec2.tf", "provider.tf", "variables.tf"]}]}, {"name": "https://github.com/geneontology/noctua_app_stack.git", "commits": [{"id": "63243bbf6cd1dda66e0a7c75a3c7db8e3cf1f0bd", "msg": "Solr (#2)\n\n* added support for simplified solr service and and standalone amigo\r\nadded support for docker push\r\n\r\n* support for cloning specific branches\r\n\r\n* aws terraform code\r\n\r\n* adding google cloud terraform\r\n\r\n* using correct docker image name for minerva\r\n\r\n* ignore terraform files and dirs\r\n\r\n* fixed vars.yaml\r\n\r\n* adding default for docker_hub_user\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* adding documentation for aws\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* deleted old readme file\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* changed location of aws credentials\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* testing cost estimation\r\n\r\n* testing cost estimation\r\n\r\n* testing cost estimation 2\r\n\r\n* testing cost estimation 3\r\n\r\n* testing cost estimation 4\r\n\r\n* testing cost estimation 5\r\n\r\n* testing cost estimation 6\r\n\r\n* testing cost estimation 7\r\n\r\n* Update main.tf\r\n\r\n* Update main.tf\r\n\r\n* using golr first ast it builds fast\r\n\r\n* need to create three docherhub repos\r\n\r\n* adding conda\r\n\r\n* securing golr\r\n\r\n* securing golr\r\n\r\n* fixing variable host for golr\r\n\r\n* fixed url for miniconda\r\n\r\n* adding docker related vars", "date": "2021-03-08 11:03:33-08:00", "modified_files": [".gitignore", "README.md", "allowed-terraform-version.sentinel", "main.tf", "outputs.tf", "provider.tf", "securit_groups.tf", "ssh_key.tf", "terraform.tvars", "vars.tf", "vpc.tf", "build_images.yaml", "bare-metal.yml", "docker-vars.yaml", "Dockerfile.golr", "Dockerfile.minerva", "AWS_README.md", "main.tf", "outputs.tf", "provider.tf", "vars.tf", "less-than-100-month.sentinel", "push_images.yaml", "sentinel.hcl", "stage.yaml", "docker-compose-amigo.yaml", "docker-compose-golr.yaml", "httpd-vhosts-amigo.conf", "httpd-vhosts-golr.conf", "startup.yaml", "vars.yaml"]}]}, {"name": "https://github.com/armchairlinguist/terraform-random.git", "commits": [{"id": "f2266528141b95d0256d52c95fc636192ba4d669", "msg": "add billing code for testing sentinel", "date": "2018-06-14 13:46:38-07:00", "modified_files": ["main.tf"]}, {"id": "c75c07a28a614e5b1be6bcb28ff83caf84dcb7ea", "msg": "remove random billing code test", "date": "2018-07-17 16:11:22-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/grimoire-ca/root.tf.git", "commits": [{"id": "7dc51b5edd98b9f4ada7a745ca56ba6dc3799662", "msg": "Start expiring old state versions.\n\nIt's a small cost saving, but it adds up.", "date": "2019-01-17 22:47:26-05:00", "modified_files": [".gitignore", "root.tf", "terraform.tfstate"]}]}, {"name": "https://github.com/dwp/dataworks-aws-ingestion-ecs-cluster.git", "commits": [{"id": "bb9a18992041c0cc69ad70d7660236ed13293229", "msg": "source costcode from bootstrap common tags instead of variable (#4)\n\nSigned-off-by: danhill <danhill@digital.uc.dwp.gov.uk>", "date": "2020-11-25 13:47:20+00:00", "modified_files": ["terraform.tf.j2", "variables.tf"]}, {"id": "72607933f07ca0655c0c925d68d015c0f1c4b70a", "msg": "Create environment jobs and add internet proxy access (#2)\n\n* Create environment jobs\r\n\r\n* Rename pipeline in aviator file\r\n\r\n* Include costcode var\r\n\r\n* Vars file in wrong folder\r\n\r\n* Add SG rule for Proxy access\r\n\r\n* Allow access to internet proxy\r\n\r\n* Update sg rules to allow us to talk to acm\r\n\r\n* Remove phony\r\n\r\nCo-authored-by: mark matthews <markmatthews@digital.uc.dwp.gov.uk>", "date": "2020-11-27 15:54:54+00:00", "modified_files": ["Makefile", "aviator.yml", "groups.yml", "integration.yml", "preprod.yml", "production.yml", "qa.yml", "meta.yml", "vars.yml", "ecs.tf", "locals.tf", "network.tf", "outputs.tf", "security_groups.tf"]}]}, {"name": "https://github.com/miiingle/infrastructure.git", "commits": [{"id": "3210c2185c0a554fa8b5aed45e7daa2c861954ce", "msg": "oops, too expensive", "date": "2021-02-20 06:41:56+08:00", "modified_files": ["ci_codebuild.tf"]}]}, {"name": "https://github.com/HarshitDawar55/Terraform-Multiple-Integrations.git", "commits": [{"id": "8b075896526b4f004f1cfddbab295ba51ebf5066", "msg": "Made EIP and Nat Gateway code more efficient!", "date": "2020-07-16 18:20:10+05:18", "modified_files": ["Private-Public-VPC.tf"]}]}, {"name": "https://github.com/SteveVaknin/unique-terragoat-12.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/chapas/tf-az-kubernetes.git", "commits": [{"id": "bcc6e190b8f8a12b590089fb755c4f552f179ad0", "msg": "updated template to help reduce cost with default settings", "date": "2020-02-29 12:26:09+00:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/nagpach/terraform-example-aws-vpc.git", "commits": [{"id": "35d26fd046185ae079e09fa6435c41ae685e679e", "msg": "Disable NAT gateways for now.  We don't need them and they cost $$$", "date": "2017-02-15 15:20:06-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/exekube/exekube.git", "commits": [{"id": "050bc0a6bcaeb6c29c699c86f6a0498179be2c4e", "msg": "Fix vault-ca domain name and add payload.json for a successful vault init", "date": "2018-01-20 11:20:06+02:00", "modified_files": ["docker-compose.yaml", "README.md", "inputs.tfvars", "payload.json"]}]}, {"name": "https://github.com/masatomo-ito2/hashicat.git", "commits": [{"id": "81dc1d3f98034672d5f62f440f2cc3abc58ce2a2", "msg": "fixed cost", "date": "2020-12-09 15:45:28+09:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/pelias/terraform-elasticsearch.git", "commits": [{"id": "21c1827f4507eae217d43d99ad8cb1bbb1337e21", "msg": "Use r4.xlarge instead of r3.xlarge\n\nCheaper and with much faster network access!", "date": "2017-08-13 12:11:02-04:00", "modified_files": ["variables.tf"]}, {"id": "fbdc8731ef8ee8ef4933f0f935ee10df51f6b6cc", "msg": "feat(elasticsearch): Support disk watermark settings\n\nThese settings configure how much available disk Elasticsearch will\nallow itself to use before taking preventative action such as:\n- preventing new replica shards from loading on a given node\n- making the cluster read only\n\nFor Elasticsearch clusters where there is data being written and index\nsizes are constantly in flux, it makes sense to have high safety margins\nof free disk space.\n\nOn the other hand, for clusters initialized from a snapshot that won't\never change, it's most efficient to allow using all available disk\nspace.\n\nThese settings allow tuning the cluster to fit any usecase along that\nspectrum.\n\nSee https://www.elastic.co/guide/en/elasticsearch/reference/current/disk-allocator.html", "date": "2019-05-14 10:47:51-04:00", "modified_files": ["cloud_init.tf", "load_snapshot.sh.tpl", "variables.tf"]}, {"id": "8454c8ee25e821abde10b73a2fec691269e41822", "msg": "Update default variable values for cluster sizing\n\nIt's gotten cheaper and easier to run a full planet cluster!", "date": "2019-08-09 10:33:01-04:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/graymeta/terraform12-aws-platform.git", "commits": [{"id": "e14fcb4b487859e626d27899bab2d6bbaeae54b4", "msg": "shared usage module\n\nused to share the customer usage bucket with us so that we can pull the usage reports to bill them.", "date": "2020-08-21 13:58:49-06:00", "modified_files": ["main.tf", "policy-usage.json.tpl", "variables.tf"]}]}, {"name": "https://github.com/pagopa/azurerm.git", "commits": [{"id": "f68f5cbdac38020f5a9ae12e9e8fd773993de156", "msg": "[IOPAY-293] add static web configuration for storage account (#96)\n\n* [IOPAY-293] add conditional static web configuration for storage account\r\n\r\n* add cert inptu for custom domain\r\n\r\n* Fix cert for custom domain", "date": "2021-10-13 16:42:57+02:00", "modified_files": ["main.tf", "variables.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/5toCode/github-terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/ironpeakservices/infrastructure.git", "commits": [{"id": "2ca24fa9114b5b4389768d5ab93c1e6d99bb287c", "msg": "feat(scaleway): switch to cheaper DEV1-M instance", "date": "2020-02-27 15:33:56+01:00", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/scirner22/provenance-infra.git", "commits": [{"id": "599aa2776677bcf05ebf5f6377a2eb82f5d2220c", "msg": "Scale back nodes to cut costs.", "date": "2021-06-07 11:20:45-04:00", "modified_files": ["asg.tf", "sec_group.tf"]}]}, {"name": "https://github.com/HPE-sekimoto/sentinel_mock.git", "commits": [{"id": "ca715e3314511990c62037922b842404dc618ebf", "msg": "Updated billing_account variable", "date": "2021-05-27 09:51:04+09:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/slavayssiere/components-on-aws.git", "commits": [{"id": "fdc612e4cdbe282f1b75a07fd14c8aceaa9c67f7", "msg": "add billing sns alert", "date": "2019-11-13 12:53:55+01:00", "modified_files": ["destroy.py", "calico-company.yaml", "calico.yaml", "cilium-company.yaml", "cilium.yaml", "test-base.yaml", "web-app.yaml", "billing.tf", "functions.py", "main.tf"]}, {"id": "3c0947b3df71480d8f5377f9fa108cc77a246fed", "msg": "add billing email adress", "date": "2019-11-13 13:03:45+01:00", "modified_files": ["calico-company.yaml", "calico.yaml", "cilium-company.yaml", "cilium.yaml", "test-base.yaml", "web-app.yaml", "billing.tf", "email-sns-stack.json.tpl", "functions.py", "main.tf"]}]}, {"name": "https://github.com/acham1/smorgasbord.git", "commits": [{"id": "2f52b9596a3c52b5a550be10e56971c9b61e38ce", "msg": "Enable billing for smorgasbord project", "date": "2019-06-18 12:57:04-07:00", "modified_files": ["main.tf", "projects.tf"]}]}, {"name": "https://github.com/ministryofjustice/aws-root-account.git", "commits": [{"id": "ffae9debd433cdf47555e799b8d044a1831a1a55", "msg": "Grant P&A finance business partner access\n\nJulie is our finance business partner, and needs access to Cost Explorer\net al. This grants her that.", "date": "2021-01-15 14:45:56+00:00", "modified_files": ["iam-users.tf"]}, {"id": "d7413afc52e6167899bf7f82c9b5aa1bcc165ecf", "msg": "Bring Cost and Usage report configuration into Terraform management", "date": "2021-03-04 16:48:36+00:00", "modified_files": ["cost-and-usage.tf"]}, {"id": "bc7e204a0da64995ea3c2ea81ca8c3f5facdf602", "msg": "Add BrianKing to billing users", "date": "2021-06-11 14:57:56+01:00", "modified_files": [".terraform.lock.hcl", "iam-users.tf"]}, {"id": "34b1726345d04081a28a2d43924ec19cb11a2434", "msg": "Add Billing permissions for Modernisation Platform team to do cost analysis", "date": "2021-10-29 11:04:28+01:00", "modified_files": ["sso-admin-account-assignments.tf", "sso-admin-permission-sets.tf"]}, {"id": "5beefaa37d924dda33fbdd86ba75f3fda436b933", "msg": "Cost Explorer: give YJAF read-only access", "date": "2021-11-10 19:59:51+00:00", "modified_files": ["iam-policies.tf", "iam-roles.tf"]}, {"id": "6107f2da222de2f9556594230c7992b5241a2d00", "msg": "Give OPG Management access to Cost Explorer", "date": "2022-03-03 14:37:49+00:00", "modified_files": ["iam-roles.tf"]}, {"id": "c78fb4ab5bf49919963380f3b5db75d02375f077", "msg": "Move Cost and Usage reports to management-account", "date": "2022-03-31 22:52:34+01:00", "modified_files": ["cost-and-usage-reports.tf", "cost-and-usage.tf"]}]}, {"name": "https://github.com/appbricks/cloud-inceptor.git", "commits": [{"id": "782a0a3c30cf83bcaeacc942789ccc903576fe8a", "msg": "allow configuring node without eip or fixed domains allowing for a minimal low-cost setup", "date": "2022-04-13 10:29:34-04:00", "modified_files": ["main.tf", "vars.tf", "bastion.tf", "certs.tf", "__inputs.tf", "__outputs.tf", "bastion.tf", "config.tf", "dns.tf", "jumpbox.tf", "network.tf"]}]}, {"name": "https://github.com/glenngillen/terraform-demo-cost-estimation.git", "commits": [{"id": "f29cf1138d21a2eba8aaccec3185e461cb8675bd", "msg": "So expensive.", "date": "2019-09-05 08:36:34+10:00", "modified_files": ["aws-instances.tf"]}, {"id": "dfc9a7ea4a62b6e6c14e09b2f08c7fb5c63ca711", "msg": "Very expensive!", "date": "2019-11-19 09:20:26+11:00", "modified_files": ["aws-instances.tf"]}]}, {"name": "https://github.com/cisagov/freeipa-server-tf-module.git", "commits": [{"id": "99fd319a72d25441acf36fd2c167a875e9028935", "msg": "Upgrade the root volume type to gp3\n\ngp3 is 20% cheaper, and the baseline configuration offers better\nperformance than gp2 for volumes smaller than 2TB.  It also allows the\nvolume size and IOPS to be configured separately, whereas the two are\nintertwined with gp2.", "date": "2021-10-26 16:29:13-04:00", "modified_files": ["ec2.tf"]}]}, {"name": "https://github.com/Terraform-Projects/aws-terraform.git", "commits": [{"id": "c82a19d98673c1aeeb1fa26afb983acbfbea272f", "msg": "Add ec2 cost optimination using tags", "date": "2018-10-31 11:55:59+05:18", "modified_files": ["lambda.js", "main.tf", "variables.tf"]}, {"id": "5f0c515e6b145f244be7ef2492d9a700de5743e8", "msg": "Refactored ec2-cost-optimization-using-tags lambda", "date": "2018-11-16 18:56:15+05:18", "modified_files": ["lambda.js", "main.tf", "variables.tf"]}, {"id": "65f7112ea071383a397ab3bd34491c35d9265dd9", "msg": "Refactored config-rules and changed ec2-cost-optimization-using-tags to ec2-tags-checker", "date": "2018-11-20 12:48:58+05:18", "modified_files": ["instance_tags.js", "lambda.tf", "security_groups.js", "utills.js", "variables.tf", "lambda.js", "lambda.js", "utils.js", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/millbj92/terraform-aws-route53-acm-domain-registration.git", "commits": [{"id": "3c2db824f851ca4414f7da1d49688ea8aa34b8f2", "msg": "strimmed excess variables, better tagging, more efficient", "date": "2021-09-23 03:28:08-04:00", "modified_files": ["README.md", "main.tf", "outputs.tf", "variables.tf", "main.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/skyscrapers/terraform-state.git", "commits": [{"id": "cd7e70e19c78a5f5d254d846f4abc62104d5583b", "msg": "Switch dynamodb table to PAY_PER_REQUEST per skyscrapers/engineering#223", "date": "2019-09-13 11:58:25+02:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/abessiari/noctua_app_stack.git", "commits": [{"id": "63243bbf6cd1dda66e0a7c75a3c7db8e3cf1f0bd", "msg": "Solr (#2)\n\n* added support for simplified solr service and and standalone amigo\r\nadded support for docker push\r\n\r\n* support for cloning specific branches\r\n\r\n* aws terraform code\r\n\r\n* adding google cloud terraform\r\n\r\n* using correct docker image name for minerva\r\n\r\n* ignore terraform files and dirs\r\n\r\n* fixed vars.yaml\r\n\r\n* adding default for docker_hub_user\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* adding documentation for aws\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* deleted old readme file\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* changed location of aws credentials\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update AWS_README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* testing cost estimation\r\n\r\n* testing cost estimation\r\n\r\n* testing cost estimation 2\r\n\r\n* testing cost estimation 3\r\n\r\n* testing cost estimation 4\r\n\r\n* testing cost estimation 5\r\n\r\n* testing cost estimation 6\r\n\r\n* testing cost estimation 7\r\n\r\n* Update main.tf\r\n\r\n* Update main.tf\r\n\r\n* using golr first ast it builds fast\r\n\r\n* need to create three docherhub repos\r\n\r\n* adding conda\r\n\r\n* securing golr\r\n\r\n* securing golr\r\n\r\n* fixing variable host for golr\r\n\r\n* fixed url for miniconda\r\n\r\n* adding docker related vars", "date": "2021-03-08 11:03:33-08:00", "modified_files": [".gitignore", "README.md", "allowed-terraform-version.sentinel", "main.tf", "outputs.tf", "provider.tf", "securit_groups.tf", "ssh_key.tf", "terraform.tvars", "vars.tf", "vpc.tf", "build_images.yaml", "bare-metal.yml", "docker-vars.yaml", "Dockerfile.golr", "Dockerfile.minerva", "AWS_README.md", "main.tf", "outputs.tf", "provider.tf", "vars.tf", "less-than-100-month.sentinel", "push_images.yaml", "sentinel.hcl", "stage.yaml", "docker-compose-amigo.yaml", "docker-compose-golr.yaml", "httpd-vhosts-amigo.conf", "httpd-vhosts-golr.conf", "startup.yaml", "vars.yaml"]}]}, {"name": "https://github.com/mtranter/ghost-terraform.git", "commits": [{"id": "e4dfe88dab3333b97fe8eaa70a495829af5a50f6", "msg": "Fix expensive cloudfront", "date": "2018-01-21 19:57:09-08:00", "modified_files": ["cloudfront.tf"]}]}, {"name": "https://github.com/firehawkvfx/firehawk-prototype-deprecated.git", "commits": [{"id": "894fb1d80c7a3953b7a51d7acd5e9b942faced8f", "msg": "added ability to sleep nat gateway to save cost when idle", "date": "2019-01-14 09:26:47+10:00", "modified_files": ["main.tf", "main.tf"]}]}, {"name": "https://github.com/macaco-maluco/macaco-maluco-infra.git", "commits": [{"id": "3a537c3f7ebcbf20f1331375ffa684bbb92d09f6", "msg": "Assign a floating IP so that we can recreate machines while maintaining the same public IP \ud83c\udf40\n\nFor more information: https://cloud.digitalocean.com/support/suggestions?query=Floating+IPs+cost", "date": "2016-03-14 21:56:44+01:00", "modified_files": ["definition.tf", "terraform.tfstate", "terraform.tfstate.backup"]}]}, {"name": "https://github.com/pxc-smart-business/savannah.git", "commits": [{"id": "54b40eb1ae8763b13ecde14a2e04779342208cef", "msg": "use cheaper instances for permament peer", "date": "2017-08-21 17:55:07+02:00", "modified_files": ["hosts.tf"]}]}, {"name": "https://github.com/patheard/aws-fastapi-lambda.git", "commits": [{"id": "e39b0c5ca322f2974f9814b7c29e7235c03f0903", "msg": "feat: switch \"Billing\" tag to use common variable", "date": "2021-07-30 14:40:38+00:00", "modified_files": ["common_variables.tf", "env_vars.hcl", "terragrunt.hcl", "api-gateway.tf", "cloudwatch.tf", "lambda.tf", "cloudwatch.tf", "vpc.tf"]}]}, {"name": "https://github.com/CHQAnew/teraform.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/Xin00163/terraform.git", "commits": [{"id": "f69ce3812180a20bbda69ff1432a1cd36342bc3b", "msg": "Removed ALB for cost and time taken to build/destroy", "date": "2018-12-10 12:31:58+00:00", "modified_files": ["fargate.tf", "outputs.tf"]}]}, {"name": "https://github.com/sachinar/commerce-infrastructure.git", "commits": [{"id": "48fd1cc6cb4b22dc88cb09e7e7113d289f41f604", "msg": "<DEVOPS-73> Payment namespace", "date": "2021-09-29 20:58:19+05:18", "modified_files": ["variables.tfvars", "variables.tfvars", "variables.tfvars"]}, {"id": "5a85b2721b44f20e18de8f3e6f02c743148a7b20", "msg": "<DEVOPS-73> Payment namespace", "date": "2021-09-29 21:02:09+05:18", "modified_files": ["variables.tfvars"]}, {"id": "6e2ae31dff1b3bd4ecbadfb58b62c2bf1e0ffb09", "msg": "<DEVOPS-73> Payment DB", "date": "2021-09-29 21:17:08+05:18", "modified_files": ["variables.tfvars", "variables.tfvars", "variables.tfvars", "postgres.tf", "variables.tf"]}, {"id": "5163f1faf4e62a03d034d23200ecb1da80f82e2e", "msg": "<DEVOPS-73> Payment namespace", "date": "2021-09-29 21:21:08+05:18", "modified_files": ["postgres.tf", "variables.tf"]}, {"id": "8ff2d40857d4799e23c368a86ed284bdd8d0a579", "msg": "<DEVOPS-105> Created service account for payment", "date": "2021-10-27 12:33:33+05:18", "modified_files": ["payment_sa.tf", "variables.tf"]}, {"id": "46980a7ab93f949323d654a04110b32f7671fe72", "msg": "<DEVOPS-105> Created service account for payment", "date": "2021-10-27 13:11:50+05:18", "modified_files": ["variables.tf"]}]}, {"name": "https://github.com/ONSdigital/eq-author-terraform-dynamodb.git", "commits": [{"id": "40eb651a50d0dfd5cf047ef62c8a6259c1c66e02", "msg": "Set billing_mode to PAY_PER_REQUEST", "date": "2018-12-10 16:38:49+00:00", "modified_files": ["aws.tf", "eq_session.tf", "global_vars.tf", "questionnaire_state.tf", "submitted_responses.tf", "used_jti_claim.tf"]}]}, {"name": "https://github.com/terraform-google-modules/terraform-google-vault.git", "commits": [{"id": "1d0b5db7f310dc6a47af3130a97e5373d9cdaddf", "msg": "feat: enable auto-healing, update to Debian 10 (#119)\n\nThis patch adds an auto-healing policy to automatically re-create the\r\nvault cluster instance if the vault server stops.  One of the nodes in\r\nthe instance group is active as per [Vault HA][ha].  The other nodes are\r\npassive and forward requests to the active node.  Two different health\r\nchecks are used because passive nodes return non-200 status codes by\r\ndefault.\r\n\r\nIn addition, this patch:\r\n\r\n * Update Vault to 1.6.0 by default\r\n * Update image to Debian 10 by default\r\n * Defaults to e2-standard-2 instance types, which are less expensive\r\n   and more performant than n1-standard-1.\r\n * Improves startup (and auto-heal recovery) time by starting the vault\r\n   service as quickly as possible in the startup-script.\r\n\r\n[ha]: https://www.vaultproject.io/docs/concepts/ha.html", "date": "2020-11-16 12:22:51-08:00", "modified_files": ["README.md", "README.md", "main.tf", "startup.tf", "config.hcl.tpl", "startup.sh.tpl", "variables.tf", "shared_instance_group_tests.rb", "default.rb", "simple.rb", "main.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/appsembler/tfmodules.git", "commits": [{"id": "1be042825bed22277d3f5a3b671507e82ef99a12", "msg": "set correct billing account default", "date": "2019-05-02 14:26:06+01:00", "modified_files": ["README.md", "variables.tf"]}]}, {"name": "https://github.com/pkhuntia/aztfmod.git", "commits": [{"id": "1cf9f9e9e1ee2aeb4126ae1dc165d769d05eacf1", "msg": "Add module subscription_billing_role_assignments", "date": "2021-03-23 01:24:15+00:00", "modified_files": ["landingzone.tf", "variables.tf", "billing_role_assignment.tf", "billing_role_assignment.tf", "billing_role_assignment.sh", "variables.tf", "variables.tf", "subscriptions.tf", "variables.tf"]}, {"id": "7f8056129d67d587e5c193d17d9fbef3240083de", "msg": "Update billing role assignment", "date": "2021-04-06 12:49:01+00:00", "modified_files": ["billing_role_assignment.tf"]}, {"id": "33e29ee4fec412042a3efcf9fac36d4bc9e3a73b", "msg": "Add variable subscription_billing_role_assignments", "date": "2021-05-20 07:55:05+00:00", "modified_files": ["variables.tf", "README.md"]}, {"id": "ae13ab4b3138965fcfc00a79e451776296fae5d9", "msg": "Update billing role assignment", "date": "2021-06-05 06:59:43+00:00", "modified_files": ["billing_role_assignment.tf"]}]}, {"name": "https://github.com/bortolo/Three-tier-app-infrastructure.git", "commits": [{"id": "316179eeaaba01499ac86fa7027f004708daf9ee", "msg": "New custom policies for billing and EC2", "date": "2020-10-31 10:24:32+01:00", "modified_files": ["EC2_t2micro.json", "self_manage_vmfa.json", "main.tf"]}]}, {"name": "https://github.com/TheSentimentalists/SentimentalistsApp-Infrastructure.git", "commits": [{"id": "eb5ebf5ceed4121f5262153a24e19379b74e55a4", "msg": "Add stage and payload variable", "date": "2020-10-10 19:08:09+01:00", "modified_files": ["deploy.yml", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/Mahesh3602/GrafanaBillingDashboard.git", "commits": [{"id": "792fe8a6c679bbe1e570be75484da4e694f183f9", "msg": "grafana billing dashboard", "date": "2022-03-07 14:53:14+01:00", "modified_files": [".gitignore", "cfn-athena.tf", "provider.tf", "AWSBillingReport.tf", "provider.tf", "s3-bucket-aws.tf", "Grafana-service.tf", "grafana-iam.tf", "grafana-assume-policy.json", "grafana-policy.json", "provider.tf", "apigateway.tf", "copy.py", "lambda-assume-policy.json", "lambda-policy.json", "lambda-iam.tf", "lambda.tf", "copy.zip", "provider.tf", "commnds.txt"]}]}, {"name": "https://github.com/biptec/terraform-aws-lambda.git", "commits": [{"id": "2b09f9258b785e8c5b061a6bbd795f259ba2a11f", "msg": "Allow using existing IAM entities (#74)\n\n* + Added `role_arn` variable indicating a friendly name of existing IAM\r\n  role that will be used for the Lambda function. If set, the module\r\n  will not create any IAM entities and fully relies on caller to provide\r\n  correct IAM role and its policies. Using the variable allows the\r\n  module to leverage an existing IAM role - for example, when an account\r\n  has centralized set of IAM entities, or when deploying same function\r\n  across multiple AWS region to avoid the module attempting to create\r\n  duplicate IAM entities.\r\n\r\n* `modules/lambda`: Applied recommendations from code review\r\n - Renamed `role_name` varaible to `existing_role_arn` - it now accepts\r\n   ARN of an existing IAM role. Sunsequently `aws_iam_role` datasource\r\n   has been replaced with `aws_arn` one, which is more efficient\r\n - Removed unnecessary `null_resource`, native `depends_on` works fine\r\n   for resources with `count=0`\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-authored-by: Yevgeniy Brikman <brikis98@users.noreply.github.com>\r\n\r\n* * `modules/lambda`: Formatting fixes\r\n\r\n* * `modules/lambda`: Formatting fixes using newer Terraform version\r\n  (0.15.x)\r\n\r\nCo-authored-by: Yevgeniy Brikman <brikis98@users.noreply.github.com>", "date": "2021-08-11 15:34:31+03:00", "modified_files": ["main.tf", "outputs.tf", "vars.tf"]}]}, {"name": "https://github.com/rgl/terraform-libvirt-ansible-windows-example.git", "commits": [{"id": "842e9241512dc3ba3b5b67cca98af075634898da", "msg": "switch to the more efficient psrp ansible connection plugin", "date": "2021-04-26 10:34:25+01:00", "modified_files": ["README.md", "main.tf"]}]}, {"name": "https://github.com/skyhiker/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/lowflying/OVPN---TF.git", "commits": [{"id": "be1245d8634025277ba79a4155ee88d7eaffcdfb", "msg": "- Updated Ubuntu to 16.04\n- Instance type is not t3.nano (cheaper)\n- terraform fmt\n- Modifications to userdata.sh to adhere to new Ubuntu version, DNS\nchanges, and handling of apt upgrade without CLI.", "date": "2019-04-19 13:00:22-04:00", "modified_files": ["ec2.tf", "main.tf", "sg.tf", "terraform.tfvars", "userdata.sh", "variables.tf"]}, {"id": "4bc861c153b65a2d7c0d5f3fac30ab72b0fc6942", "msg": "Updated VM size to B2s to reduce cost\n\nUpdated from A0 to B2s to reduce cost", "date": "2020-12-13 08:31:09+08:00", "modified_files": ["instance.tf"]}]}, {"name": "https://github.com/jeffawang/infrastructure.git", "commits": [{"id": "9f610811aea8c523332e9dccad9bb0800b70691e", "msg": "remove nat gateway (too damn expensive)", "date": "2017-03-23 21:18:18-07:00", "modified_files": ["infra.tf"]}]}, {"name": "https://github.com/lancekuo/terraform-docker-swarm.git", "commits": [{"id": "3d6f016a0064b49fa830866790ea73c748b3b3d2", "msg": "Added volume_tags into aws_instance for a better cost and budget perspective view.\n\nClosed #7", "date": "2018-10-06 14:39:19-04:00", "modified_files": ["instance-bastion.tf", "instance-manager.tf", "instance-node.tf"]}]}, {"name": "https://github.com/emolinca/ed2terraform-aws-elastic-beanstalk-environment.git", "commits": [{"id": "c7f97299d3d323c2c6c258e06d823f27db855ffb", "msg": "Allow setting elb_scheme for choosing internal or public LB (#72)\n\n* elb_scheme = \"internal\" or \"public\"\r\n\r\n* terraform fmt\r\n\r\n* default ELBScheme to \"\"\r\n\r\nCo-Authored-By: CGreenPayTM <42248651+CGreenPayTM@users.noreply.github.com>\r\n\r\n* Description for ELBScheme\r\n\r\nCo-Authored-By: CGreenPayTM <42248651+CGreenPayTM@users.noreply.github.com>\r\n\r\n* remake docs\r\n\r\n* default elb_scheme to public\r\n\r\n* docs\r\n\r\n* contrib", "date": "2019-01-24 13:32:45-05:00", "modified_files": ["README.md", "README.yaml", "terraform.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/tomoconnor/cheap-ass-vpn.git", "commits": [{"id": "659dd8a34701684f7c574ce35bc37ad9f70d56e1", "msg": "Cheap-Ass VPN initial", "date": "2022-02-08 10:01:26+00:00", "modified_files": ["README.md", "aws_data.tf", "aws_eip.tf", "aws_provider.tf", "aws_security_group.tf", "data_aws_key_pair.tf", "data_vpc.tf", "locals.tf", "module_ec2_instance.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/TalkingFox/SignalWs.git", "commits": [{"id": "935d9d683608b4d8a97ef6ccc2c8ab7c14eec0d0", "msg": "reduce read/write capacity to 1 for min cost.\nChange list to map.", "date": "2019-02-16 21:19:40-06:00", "modified_files": ["data.tf"]}]}, {"name": "https://github.com/steliospaps/spike-simple-full-stack.git", "commits": [{"id": "829222cb0a238b84be1d669e8c76245c250c691d", "msg": "added logging, payload works but the content type is json", "date": "2020-04-20 22:21:13+01:00", "modified_files": ["README.md", "app_frontend.tf"]}]}, {"name": "https://github.com/cloudposse/terraform-aws-elastic-beanstalk-environment.git", "commits": [{"id": "c7f97299d3d323c2c6c258e06d823f27db855ffb", "msg": "Allow setting elb_scheme for choosing internal or public LB (#72)\n\n* elb_scheme = \"internal\" or \"public\"\r\n\r\n* terraform fmt\r\n\r\n* default ELBScheme to \"\"\r\n\r\nCo-Authored-By: CGreenPayTM <42248651+CGreenPayTM@users.noreply.github.com>\r\n\r\n* Description for ELBScheme\r\n\r\nCo-Authored-By: CGreenPayTM <42248651+CGreenPayTM@users.noreply.github.com>\r\n\r\n* remake docs\r\n\r\n* default elb_scheme to public\r\n\r\n* docs\r\n\r\n* contrib", "date": "2019-01-24 13:32:45-05:00", "modified_files": ["README.md", "README.yaml", "terraform.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/EtchUK/Etch.OrchardCore.SiteBoilerplate.git", "commits": [{"id": "cc3460b79e8811df25a34a10c34c2a0ad2b6280f", "msg": "Update terraform script DB edition\n\nUpdate the terraform script to set the DB edition to 'Standard' and the\nobjective name to 'S0' to prevent expensive databases being created by\ndefault. Projects can scale this up as required by changing their script\nmanually.", "date": "2019-10-14 10:06:56+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/robertdebock/git-terraform-demo.git", "commits": [{"id": "5638b1a044215292a5e3fa405b6a0567c6b35436", "msg": "Medium is expensive and not required.", "date": "2021-04-12 13:18:05+02:00", "modified_files": ["README.md", "input.auto.tfvars"]}, {"id": "686374095321975d851932a77b139d627f50c7d5", "msg": "Cheaper is better.", "date": "2021-04-12 14:00:40+02:00", "modified_files": ["input.auto.tfvars"]}]}, {"name": "https://github.com/pawantanay/google-project.git", "commits": [{"id": "39891d950433a683da2c75b4187728f9af1c5441", "msg": "Fix typo, rename billing acount and services variables", "date": "2019-05-15 08:19:09+02:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}, {"id": "6c93392a5ff6bc45a36eba689d44980ce5f0baf8", "msg": "Grant billing user permission during testing", "date": "2019-11-19 00:37:17+00:00", "modified_files": ["iam.tf"]}, {"id": "1b4954a704fc03d5109b5615f7cfef824ff7211a", "msg": "enable google billing budget apis in parent project", "date": "2020-01-06 16:22:29-08:00", "modified_files": ["main.tf"]}, {"id": "f580cae362e7bd01e9b52ff6fb329c19ccebc3da", "msg": "give test user billing admin to billing account to create budgets", "date": "2020-01-07 14:00:42-08:00", "modified_files": ["iam.tf"]}, {"id": "bc9891a7b6f3b576ca7cf7ddeb23022efa000a4c", "msg": "enable pubsub for setup project for billing test", "date": "2020-01-08 12:51:10-08:00", "modified_files": ["main.tf"]}, {"id": "64461a22b225960357ef866bdef8c1d2693733f7", "msg": "fix: billing budget tests (#594)", "date": "2021-06-10 23:40:05-05:00", "modified_files": ["outputs.tf", "budget.rb", "inspec.yml"]}, {"id": "b6d7bf1af2062e557b3fb2c883879554e10d7702", "msg": "fix: billing_budget resource should use GA provider (#626)\n\nCo-authored-by: Morgante Pell <morgantep@google.com>", "date": "2021-10-13 16:17:46-05:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/GSA/datagov-infrastructure-live.git", "commits": [{"id": "2297ed540721d1d9e82d42936bede560d2bf319b", "msg": "Update docs, prevent_destroy (#140)\n\n* Update docs\r\n\r\n- Remove mentions of datagov-infrastructure-modules, they are now part of this\r\n  repository.\r\n- Update mentions of iam, they were moved to datagov-iam.\r\n- Replace CircleCI with GH actions.\r\n- Update CI/CD setup secrets.\r\n- Remove references to dynamic Ansible inventory, we've been using a static\r\n  inventory for a while.\r\n- Include a note about reviewing the terraform plan as part of peer review.\r\n\r\n* Add prevent_destroy on databases\r\n\r\nProvisioning databases for most applications are a costly manual task. Prevent\r\ndestroy through Terraform.", "date": "2021-03-30 15:04:26-07:00", "modified_files": ["README.md", "rds.tf"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-gcp-staticip.git", "commits": [{"id": "ff7bb46157a4234adc52ae9bc6c13d75e5255bd0", "msg": "cost", "date": "2021-05-15 08:30:22+01:00", "modified_files": ["compare.yml", "master.yml", "pull_request.yml", ".markdownlint.json", "terraform.tf"]}]}, {"name": "https://github.com/JacobTLeBlanc/PortfolioTF.git", "commits": [{"id": "68c7bfb39a40f2783cfdae9ab5206c6747b8e7f3", "msg": "Removed route53 for costs reasons", "date": "2022-02-19 16:22:10-04:00", "modified_files": ["route53.tf"]}, {"id": "2101bfb979fe101aa4f4ab8855f4c283d6f1d5e3", "msg": "Revert \"Removed route53 for costs reasons\"\n\nThis reverts commit 68c7bfb39a40f2783cfdae9ab5206c6747b8e7f3.", "date": "2022-02-19 16:59:14-04:00", "modified_files": ["route53.tf"]}]}, {"name": "https://github.com/CMSgov/bluebutton-ansible-playbooks-data.git", "commits": [{"id": "8f5813f0f3a6f07a3255c53ba0e4261f49a1ea19", "msg": "Fix bucket policy, dynamodb resource billing, remove static id's", "date": "2019-08-07 13:58:21-07:00", "modified_files": ["backend.tf", "main.tf", "main.tf", "main.tf", "main.tf", "main.tf", "main.tf", "main.tf", "main.tf", "main.tf"]}]}, {"name": "https://github.com/DNXLabs/terraform-aws-billing.git", "commits": [{"id": "ac5ac9b496f860372df445023397af93ca22b202", "msg": "feature: Add variable for budget notification type\n\n- \"ACTUAL\" type is recommended as The Forecast\noption is not available for Daily Budgets\n\nhttps://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/budgets-create.html", "date": "2021-01-04 15:32:50+11:00", "modified_files": ["_variables.tf", "budget.tf"]}]}, {"name": "https://github.com/schibsted/aws-cost-monitoring.git", "commits": [{"id": "3c5c49ee6dad5c438056e2866719726f776a1cc6", "msg": "fix: changed cost types to only use amortized.\n\nBREAKING CHANGES\n\nThis change will cause your costs to be different due to the usage of\namortized prices, and lack of support and taxes.", "date": "2021-03-19 18:54:27+01:00", "modified_files": ["main.tf", "outputs.tf"]}]}, {"name": "https://github.com/Test-tf/TF-sample.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/gigonzalezs/lambda01.git", "commits": [{"id": "a6e55161d8f62790b729c302ee3028e10942b99d", "msg": "log payload type", "date": "2020-04-14 15:35:41-03:00", "modified_files": ["lambda.tf", "main.tf", "providers.tf", "sqs.tf", "AllShiftsBusyFunction.kt"]}]}, {"name": "https://github.com/nicolomaioli/terraform-lambda-poc.git", "commits": [{"id": "f707489f1f0fd202c0b25f754a2229c94af362e4", "msg": "First payload", "date": "2021-02-04 23:24:34+00:00", "modified_files": [".gitignore", ".terraform.lock.hcl", "Dockerfile", "README.md", "lambda.tf", ".eslintrc.json", "index.js", "package-lock.json", "package.json", "plan.o", "terraform.tf"]}]}, {"name": "https://github.com/VEBERArnaudAWS/tf-api_granturismo_world.git", "commits": [{"id": "68be555ab56ea43309e068f7d0cc14d83d1a2775", "msg": "feat(dynamodb): switch to pay per request billing", "date": "2019-02-08 15:30:27+01:00", "modified_files": ["dynamodb_car.tf", "dynamodb_championship.tf", "dynamodb_manufacturer.tf", "dynamodb_race.tf", "dynamodb_track.tf"]}]}, {"name": "https://github.com/Powerberm/terraform.git", "commits": [{"id": "c4997d504c55a2fca444844def4d8f7a7534b18c", "msg": "Add a terraform-project-creation file via upload\n\nThis file contains project creation, make billing to the project, put the project to the defined folder or organization, IAM assign a member role as a owner, and enable compute engine API along with several Google APIs.", "date": "2022-02-03 12:25:26+07:00", "modified_files": ["terraform-project-creation-maperm.tf"]}, {"id": "ea793902879f1bb5588c507599050c1ae43f5b92", "msg": "Add a terraform-project-creation file via upload\n\nThis file contains project creation, make billing to the project, put the project to the defined folder or organization, IAM assign a member role as a owner, and enable compute engine API along with several Google APIs.", "date": "2022-02-03 13:27:51+07:00", "modified_files": ["terraform-gcpproject-creation.tf"]}]}, {"name": "https://github.com/mederrata/terraform-aws-video-transcoding.git", "commits": [{"id": "9f60cdcffa69864488b933837c0d7caa2b962450", "msg": "terraform plan\n\nTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\n  + create\n\nTerraform will perform the following actions:\n\n  # aws_s3_bucket.source_bucket will be created\n  + resource \"aws_s3_bucket\" \"source_bucket\" {\n      + acceleration_status         = (known after apply)\n      + acl                         = \"private\"\n      + arn                         = (known after apply)\n      + bucket                      = (known after apply)\n      + bucket_domain_name          = (known after apply)\n      + bucket_regional_domain_name = (known after apply)\n      + force_destroy               = false\n      + hosted_zone_id              = (known after apply)\n      + id                          = (known after apply)\n      + region                      = (known after apply)\n      + request_payer               = (known after apply)\n      + tags                        = {\n          + \"Name\" = \"ExampleAppServerInstance\"\n        }\n      + tags_all                    = {\n          + \"Name\" = \"ExampleAppServerInstance\"\n        }\n      + website_domain              = (known after apply)\n      + website_endpoint            = (known after apply)\n\n      + versioning {\n          + enabled    = (known after apply)\n          + mfa_delete = (known after apply)\n        }\n    }\n\nPlan: 1 to add, 0 to change, 0 to destroy.", "date": "2021-07-23 22:14:21-07:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}, {"id": "8b9834087ecaa6c826c2170baa5aee4719cc9e89", "msg": "Profile (#3)\n\n* Added possibility of a non default aws credentials\r\n\r\n\u279c  terraform-aws-video-transcoding git:(profile) \u2717 terraform destroy\r\naws_s3_bucket.output_bucket: Refreshing state... [id=bucket-src-dummy]\r\naws_s3_bucket.input_bucket: Refreshing state... [id=bucket-in-dummy]\r\n\u2577\r\n\u2502 Error: error reading S3 Bucket (bucket-in-dummy): Forbidden: Forbidden\r\n\u2502 \tstatus code: 403, request id: 83Y3B2S4T76F90B2, host id: srH6BO5D4oRKGDj9a1x2dclUaLKEBXnutZCMS8+3vGQC+UDXKppizS45fyvpEVRVa0GLTFdEafE=\r\n\u2502\r\n\u2502   with aws_s3_bucket.input_bucket,\r\n\u2502   on main.tf line 17, in resource \"aws_s3_bucket\" \"input_bucket\":\r\n\u2502   17: resource \"aws_s3_bucket\" \"input_bucket\" {\r\n\u2502\r\n\u2575\r\n\u2577\r\n\u2502 Error: error reading S3 Bucket (bucket-src-dummy): Forbidden: Forbidden\r\n\u2502 \tstatus code: 403, request id: 83YCJ4TP3QQ7J47V, host id: ntTLxh6KSWm1kFnOYt3MBuHet/ePA9Mw0dxlzrwg+0cU7I2GB803DXxSACnQ+h7u84FsVRiIvvU=\r\n\u2502\r\n\u2502   with aws_s3_bucket.output_bucket,\r\n\u2502   on main.tf line 26, in resource \"aws_s3_bucket\" \"output_bucket\":\r\n\u2502   26: resource \"aws_s3_bucket\" \"output_bucket\" {\r\n\u2502\r\n\u2575\r\n\u279c\r\n\r\nterraform destroy -var 'aws_profile=admin'\r\naws_s3_bucket.output_bucket: Refreshing state... [id=bucket-src-dummy]\r\naws_s3_bucket.input_bucket: Refreshing state... [id=bucket-in-dummy]\r\n\r\nTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\r\n  - destroy\r\n\r\nTerraform will perform the following actions:\r\n\r\n  # aws_s3_bucket.input_bucket will be destroyed\r\n  - resource \"aws_s3_bucket\" \"input_bucket\" {\r\n      - acl                         = \"private\" -> null\r\n      - arn                         = \"arn:aws:s3:::bucket-in-dummy\" -> null\r\n      - bucket                      = \"bucket-in-dummy\" -> null\r\n      - bucket_domain_name          = \"bucket-in-dummy.s3.amazonaws.com\" -> null\r\n      - bucket_regional_domain_name = \"bucket-in-dummy.s3.us-west-2.amazonaws.com\" -> null\r\n      - force_destroy               = false -> null\r\n      - hosted_zone_id              = \"Z3BJ6K6RIION7M\" -> null\r\n      - id                          = \"bucket-in-dummy\" -> null\r\n      - region                      = \"us-west-2\" -> null\r\n      - request_payer               = \"BucketOwner\" -> null\r\n      - tags                        = {\r\n          - \"Name\" = \"ExampleAppServerInstance\"\r\n        } -> null\r\n      - tags_all                    = {\r\n          - \"Name\" = \"ExampleAppServerInstance\"\r\n        } -> null\r\n\r\n      - versioning {\r\n          - enabled    = false -> null\r\n          - mfa_delete = false -> null\r\n        }\r\n    }\r\n\r\n  # aws_s3_bucket.output_bucket will be destroyed\r\n  - resource \"aws_s3_bucket\" \"output_bucket\" {\r\n      - acl                         = \"private\" -> null\r\n      - arn                         = \"arn:aws:s3:::bucket-src-dummy\" -> null\r\n      - bucket                      = \"bucket-src-dummy\" -> null\r\n      - bucket_domain_name          = \"bucket-src-dummy.s3.amazonaws.com\" -> null\r\n      - bucket_regional_domain_name = \"bucket-src-dummy.s3.us-west-2.amazonaws.com\" -> null\r\n      - force_destroy               = false -> null\r\n      - hosted_zone_id              = \"Z3BJ6K6RIION7M\" -> null\r\n      - id                          = \"bucket-src-dummy\" -> null\r\n      - region                      = \"us-west-2\" -> null\r\n      - request_payer               = \"BucketOwner\" -> null\r\n      - tags                        = {\r\n          - \"Name\" = \"ExampleAppServerInstance\"\r\n        } -> null\r\n      - tags_all                    = {\r\n          - \"Name\" = \"ExampleAppServerInstance\"\r\n        } -> null\r\n\r\n      - versioning {\r\n          - enabled    = false -> null\r\n          - mfa_delete = false -> null\r\n        }\r\n    }\r\n\r\nPlan: 0 to add, 0 to change, 2 to destroy.\r\n\r\nDo you really want to destroy all resources?\r\n  Terraform will destroy all your managed infrastructure, as shown above.\r\n  There is no undo. Only 'yes' will be accepted to confirm.\r\n\r\n  Enter a value: yes\r\n\r\naws_s3_bucket.input_bucket: Destroying... [id=bucket-in-dummy]\r\naws_s3_bucket.output_bucket: Destroying... [id=bucket-src-dummy]\r\naws_s3_bucket.output_bucket: Destruction complete after 0s\r\naws_s3_bucket.input_bucket: Destruction complete after 0s\r\n\r\n* Added basic information on how to run", "date": "2021-07-23 23:03:29-07:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}, {"id": "06aef3009e2f78dfddd423619ea5453decfc36d3", "msg": "Added serverside AES256 (#4)\n\nKMS not supported\r\n\r\nterraform plan\r\n\r\nTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\r\n  + create\r\n\r\nTerraform will perform the following actions:\r\n\r\n  # aws_s3_bucket.input_bucket will be created\r\n  + resource \"aws_s3_bucket\" \"input_bucket\" {\r\n      + acceleration_status         = (known after apply)\r\n      + acl                         = \"private\"\r\n      + arn                         = (known after apply)\r\n      + bucket                      = (known after apply)\r\n      + bucket_domain_name          = (known after apply)\r\n      + bucket_regional_domain_name = (known after apply)\r\n      + force_destroy               = false\r\n      + hosted_zone_id              = (known after apply)\r\n      + id                          = (known after apply)\r\n      + region                      = (known after apply)\r\n      + request_payer               = (known after apply)\r\n      + tags                        = {\r\n          + \"Name\" = \"ExampleAppServerInstance\"\r\n        }\r\n      + tags_all                    = {\r\n          + \"Name\" = \"ExampleAppServerInstance\"\r\n        }\r\n      + website_domain              = (known after apply)\r\n      + website_endpoint            = (known after apply)\r\n\r\n      + server_side_encryption_configuration {\r\n          + rule {\r\n              + apply_server_side_encryption_by_default {\r\n                  + sse_algorithm = \"AES256\"\r\n                }\r\n            }\r\n        }\r\n\r\n      + versioning {\r\n          + enabled    = (known after apply)\r\n          + mfa_delete = (known after apply)\r\n        }\r\n    }", "date": "2021-07-23 23:12:34-07:00", "modified_files": ["main.tf"]}, {"id": "6217cb0fcced7507a41d96733fc35e2506d2de08", "msg": "terraform plan -var 'transcoding_input_bucket=in-src' -var 'transcoding_output_bucket=in-dst' (#6)\n\nTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\r\n  + create\r\n\r\nTerraform will perform the following actions:\r\n\r\n   aws_iam_role.terraform_transcoding_role will be created\r\n  + resource \"aws_iam_role\" \"terraform_transcoding_role\" {\r\n      + arn                   = (known after apply)\r\n      + assume_role_policy    = (known after apply)\r\n      + create_date           = (known after apply)\r\n      + force_detach_policies = false\r\n      + id                    = (known after apply)\r\n      + managed_policy_arns   = (known after apply)\r\n      + max_session_duration  = 3600\r\n      + name                  = \"terraform_transcoding_role\"\r\n      + path                  = \"/\"\r\n      + tags_all              = {\r\n          + \"Anisible\"  = \"false\"\r\n          + \"Terraform\" = \"true\"\r\n        }\r\n      + unique_id             = (known after apply)\r\n\r\n      + inline_policy {\r\n          + name   = (known after apply)\r\n          + policy = (known after apply)\r\n        }\r\n    }\r\n\r\n   aws_lambda_function.video_transcoding_lambda will be created\r\n  + resource \"aws_lambda_function\" \"video_transcoding_lambda\" {\r\n      + arn                            = (known after apply)\r\n      + filename                       = \"lambda_function_payload.zip\"\r\n      + function_name                  = \"terraform-video-transcoding-lambda\"\r\n      + handler                        = \"index.test\"\r\n      + id                             = (known after apply)\r\n      + invoke_arn                     = (known after apply)\r\n      + last_modified                  = (known after apply)\r\n      + memory_size                    = 2240\r\n      + package_type                   = \"Zip\"\r\n      + publish                        = false\r\n      + qualified_arn                  = (known after apply)\r\n      + reserved_concurrent_executions = -1\r\n      + role                           = (known after apply)\r\n      + runtime                        = \"python3.8\"\r\n      + signing_job_arn                = (known after apply)\r\n      + signing_profile_version_arn    = (known after apply)\r\n      + source_code_hash               = (known after apply)\r\n      + source_code_size               = (known after apply)\r\n      + tags_all                       = {\r\n          + \"Anisible\"  = \"false\"\r\n          + \"Terraform\" = \"true\"\r\n        }\r\n      + timeout                        = 3\r\n      + version                        = (known after apply)\r\n\r\n      + environment {\r\n          + variables = {\r\n              + \"foo\" = \"bar\"\r\n            }\r\n        }\r\n\r\n      + tracing_config {\r\n          + mode = (known after apply)\r\n        }\r\n    }\r\n\r\n   aws_lambda_layer_version.ffmpeg_install will be created\r\n  + resource \"aws_lambda_layer_version\" \"ffmpeg_install\" {\r\n      + arn                         = (known after apply)\r\n      + compatible_runtimes         = [\r\n          + \"python3.8\",\r\n        ]\r\n      + created_date                = (known after apply)\r\n      + id                          = (known after apply)\r\n      + layer_arn                   = (known after apply)\r\n      + layer_name                  = \"ffmpeg_install\"\r\n      + signing_job_arn             = (known after apply)\r\n      + signing_profile_version_arn = (known after apply)\r\n      + source_code_hash            = (known after apply)\r\n      + source_code_size            = (known after apply)\r\n      + version                     = (known after apply)\r\n    }\r\n\r\n   aws_s3_bucket.input_bucket will be created\r\n  + resource \"aws_s3_bucket\" \"input_bucket\" {\r\n      + acceleration_status         = (known after apply)\r\n      + acl                         = \"private\"\r\n      + arn                         = (known after apply)\r\n      + bucket                      = \"mederrata-src\"\r\n      + bucket_domain_name          = (known after apply)\r\n      + bucket_regional_domain_name = (known after apply)\r\n      + force_destroy               = false\r\n      + hosted_zone_id              = (known after apply)\r\n      + id                          = (known after apply)\r\n      + region                      = (known after apply)\r\n      + request_payer               = (known after apply)\r\n      + tags                        = {\r\n          + \"Name\" = \"terraform-video-transcoding\"\r\n        }\r\n      + tags_all                    = {\r\n          + \"Anisible\"  = \"false\"\r\n          + \"Name\"      = \"terraform-video-transcoding\"\r\n          + \"Terraform\" = \"true\"\r\n        }\r\n      + website_domain              = (known after apply)\r\n      + website_endpoint            = (known after apply)\r\n\r\n      + server_side_encryption_configuration {\r\n          + rule {\r\n              + apply_server_side_encryption_by_default {\r\n                  + sse_algorithm = \"AES256\"\r\n                }\r\n            }\r\n        }\r\n\r\n      + versioning {\r\n          + enabled    = (known after apply)\r\n          + mfa_delete = (known after apply)\r\n        }\r\n    }\r\n\r\n   aws_s3_bucket.output_bucket will be created\r\n  + resource \"aws_s3_bucket\" \"output_bucket\" {\r\n      + acceleration_status         = (known after apply)\r\n      + acl                         = \"private\"\r\n      + arn                         = (known after apply)\r\n      + bucket                      = \"mederrata-dst\"\r\n      + bucket_domain_name          = (known after apply)\r\n      + bucket_regional_domain_name = (known after apply)\r\n      + force_destroy               = false\r\n      + hosted_zone_id              = (known after apply)\r\n      + id                          = (known after apply)\r\n      + region                      = (known after apply)\r\n      + request_payer               = (known after apply)\r\n      + tags                        = {\r\n          + \"Name\" = \"terraform-video-transcoding\"\r\n        }\r\n      + tags_all                    = {\r\n          + \"Anisible\"  = \"false\"\r\n          + \"Name\"      = \"terraform-video-transcoding\"\r\n          + \"Terraform\" = \"true\"\r\n        }\r\n      + website_domain              = (known after apply)\r\n      + website_endpoint            = (known after apply)\r\n\r\n      + server_side_encryption_configuration {\r\n          + rule {\r\n              + apply_server_side_encryption_by_default {\r\n                  + sse_algorithm = \"AES256\"\r\n                }\r\n            }\r\n        }\r\n\r\n      + versioning {\r\n          + enabled    = (known after apply)\r\n          + mfa_delete = (known after apply)\r\n        }\r\n    }\r\n\r\n   aws_s3_bucket_notification.input_bucket_notification will be created\r\n  + resource \"aws_s3_bucket_notification\" \"input_bucket_notification\" {\r\n      + bucket = (known after apply)\r\n      + id     = (known after apply)\r\n\r\n      + topic {\r\n          + events        = [\r\n              + \"s3:ObjectCreated:*\",\r\n            ]\r\n          + filter_suffix = \".log\"\r\n          + id            = (known after apply)\r\n          + topic_arn     = (known after apply)\r\n        }\r\n    }\r\n\r\n   aws_sns_topic.input_topic will be created\r\n  + resource \"aws_sns_topic\" \"input_topic\" {\r\n      + arn                         = (known after apply)\r\n      + content_based_deduplication = false\r\n      + fifo_topic                  = false\r\n      + id                          = (known after apply)\r\n      + name                        = \"terraform-s3-video-transcoding-topic\"\r\n      + name_prefix                 = (known after apply)\r\n      + owner                       = (known after apply)\r\n      + policy                      = (known after apply)\r\n      + tags_all                    = {\r\n          + \"Anisible\"  = \"false\"\r\n          + \"Terraform\" = \"true\"\r\n        }\r\n    }", "date": "2021-07-28 07:54:39-07:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/chrismatteson/vault-lambda.git", "commits": [{"id": "470c2e350c1b754487b13f5c3b014aeee6cedb36", "msg": "added tagging to all resources for cost tracking", "date": "2019-02-28 14:41:01-08:00", "modified_files": ["main.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/grahamgilbert/terraform-repo.git", "commits": [{"id": "08ff1d9788127d4fb9aa6616e22ed0b4ed406106", "msg": "Man this is expensive", "date": "2020-12-29 22:25:31-08:00", "modified_files": ["dns.tf", "grahamgilbert_com_www.tf"]}]}, {"name": "https://github.com/nationalarchives/ds-tf-sns-topic.git", "commits": [{"id": "97963c9aa3c8515ba553c96e2d1b644defee73f2", "msg": "Add encryption key + fix cost_centre code", "date": "2021-05-11 16:10:21+01:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/MrzvUz/Terraform.git", "commits": [{"id": "e1fe5209270dd98250e2ece80c900608e39f2f96", "msg": "Separated and dispayed ip and port", "date": "2021-06-09 23:16:22+00:00", "modified_files": ["outputs.tf"]}]}, {"name": "https://github.com/stephengrier/my-infra.git", "commits": [{"id": "e5742d6f4f93dd432c9d8d0a31493d43c45aaff1", "msg": "Add NAT instances to ecs module\n\nThe ecs module creates NAT gateways for the ECS hosts to use for\negressing out to the internet. However, NAT gateways are rediculously\nexpensive. The solution is to use NAT instances instead, which are EC2\ninstances configured to act as NAT boxes. Because they are just EC2\ninstances we can use spot pricing to massively reduce the cost.\n\nTo be resilient we need a NAT instance in each availability zone. To\nensure this is the case we need an ASG in each AZ which maintains\nexactly one spot instance. We also create an ENI for each NAT instance,\nwhich will persist as spot instances come and go and provide a static ID\nwhich can be used in routing tables.", "date": "2019-11-12 23:48:46+00:00", "modified_files": ["iam.tf", "nat_instances.tf", "routing.tf", "security_groups.tf"]}]}, {"name": "https://github.com/eyaliyahu/terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/kiwicom/terraform-google-storage-bucket.git", "commits": [{"id": "930c55ab622459b0a767241f7427a3b081f169c0", "msg": "feat(labels): add billing labels", "date": "2021-11-10 13:55:23+01:00", "modified_files": ["interface.tf", "main.tf"]}, {"id": "1dcf35ae3ced750d04bf9829fbdf9c3d11a23c2b", "msg": "feat(labels): add billing labels", "date": "2021-11-10 14:22:38+01:00", "modified_files": ["main.tf"]}, {"id": "1f8cea1e820fc33513e3cd2a6aac901269ba7c35", "msg": "feat(labels): add billing labels", "date": "2021-11-10 14:41:03+01:00", "modified_files": ["interface.tf"]}, {"id": "f2a82f3ac0fc4cabf4f166ff4910fc00b1f9e23d", "msg": "feat(labels): add billing labels", "date": "2021-11-10 15:05:47+01:00", "modified_files": ["main.tf"]}, {"id": "7a3389dc2d37641bab3a535650bd316b5cce7d79", "msg": "feat(labels): add billing labels", "date": "2021-11-10 16:33:45+01:00", "modified_files": ["main.tf"]}, {"id": "8dbd9fd8520bba5d5ca57521a963465b02fa6a38", "msg": "feat(labels): add billing labels", "date": "2021-11-11 09:20:16+01:00", "modified_files": ["main.tf"]}, {"id": "62bafe9702bb0558b20f680e22f8ef7d76b7fc17", "msg": "feat(labels): add billing labels", "date": "2021-11-11 09:26:55+01:00", "modified_files": ["main.tf"]}, {"id": "c3a36f5cc9fa15aeaab2589ca87c4e6eb04989ed", "msg": "feat(labels): add billing labels", "date": "2021-11-11 09:31:01+01:00", "modified_files": ["main.tf"]}, {"id": "031b02e5ec137b30f0a5181b6871febdeeec1668", "msg": "feat(labels): add billing labels", "date": "2021-11-11 09:45:31+01:00", "modified_files": ["main.tf"]}, {"id": "3c4e2b6590c178503ba7bfae76fbb4c6ab7db366", "msg": "feat(labels): add billing labels", "date": "2021-11-11 10:10:39+01:00", "modified_files": ["main.tf"]}, {"id": "e44ea2dae84cc2ef71aad73b9cfb287445602933", "msg": "feat(labels): add billing labels", "date": "2021-11-11 10:21:18+01:00", "modified_files": ["main.tf"]}, {"id": "08b031d2969431f30137dca507ed033a743db9d7", "msg": "feat(labels): add billing labels", "date": "2021-11-11 13:18:36+01:00", "modified_files": ["main.tf"]}, {"id": "86bd1f181e69ae4686510a6ce5915d39f3a9f645", "msg": "feat(labels): add billing labels", "date": "2021-11-11 13:19:47+01:00", "modified_files": ["main.tf"]}, {"id": "a5e3cf35dfc77671d914503727fb53cc9e465bb2", "msg": "feat(labels): add billing labels", "date": "2021-11-11 13:20:20+01:00", "modified_files": ["main.tf"]}, {"id": "fffa5c840943eb08f6bdaedeecaa6e29c266c997", "msg": "feat(labels): add billing labels", "date": "2021-11-11 13:23:16+01:00", "modified_files": ["main.tf"]}, {"id": "a270cfc046c6428e2710125fae7f47e5d281ef7e", "msg": "feat(labels): add billing labels", "date": "2021-11-11 14:57:32+01:00", "modified_files": ["main.tf"]}, {"id": "a5968b58a4393ac9b4ae5eb4101db758790f8266", "msg": "feat(labels): add billing labels", "date": "2021-11-11 15:09:54+01:00", "modified_files": ["main.tf"]}, {"id": "40391977615b8f7ec26f6537687b484fca9ba8dc", "msg": "feat(labels): add billing labels", "date": "2021-11-11 15:22:55+01:00", "modified_files": ["main.tf"]}, {"id": "a6ad6a8eb7d58c079fe2e5dc34b5ebf4cb868380", "msg": "feat(labels): add billing labels", "date": "2021-11-11 15:41:01+01:00", "modified_files": ["main.tf"]}, {"id": "254ea281c104e728f516ba22e7017e6339766f57", "msg": "feat(labels): add billing labels", "date": "2021-11-11 16:09:52+01:00", "modified_files": ["main.tf"]}, {"id": "115dbe7e912371ffad73baa74d84ec89ebeecdc0", "msg": "feat(labels): add billing labels", "date": "2021-11-12 10:43:57+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/rancher/quickstart.git", "commits": [{"id": "90944271b4e8bd46e3d42ac64bc4964a33a8fdc3", "msg": "Updated server from t2 to t3\n\nDue to better performance and cost savings updating from t2 to t3.", "date": "2018-10-11 11:26:37-05:00", "modified_files": ["terraform.tfvars.example"]}]}, {"name": "https://github.com/mozilla/terraform-modules.git", "commits": [{"id": "d517fc8b1ba09d1925d8c1e23ec86bfff6da1d80", "msg": "add cloudbilling to default GCP project enabled services", "date": "2022-02-01 16:48:35-05:00", "modified_files": ["locals.tf"]}]}, {"name": "https://github.com/sureshpackiam/tfexample.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/jaleen/ccfr-shared-infrastructure.git", "commits": [{"id": "1170a7811d68856107a164c3337e9f44d7f2b4a3", "msg": "PAY-1353 - fees shared app service plan", "date": "2018-10-04 11:42:11+01:00", "modified_files": ["asp.tf", "main.tf", "variables.tf"]}, {"id": "4ba0c46d65e2488b9cf06902560d3e9cfcf56dc4", "msg": "Revert \"PAY-1353 - fees shared app service plan\"", "date": "2018-10-08 12:15:51+01:00", "modified_files": ["asp.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/livelink/terraform-kubernetes-baggage.git", "commits": [{"id": "c07c1ff33f313d45180c572dfe51e97d6070b042", "msg": "Bring this into terraform 0.12 and make it work for costco", "date": "2019-10-08 11:58:52+01:00", "modified_files": ["baggage_config.tf", "dns.tf", "docker_secret.tf", "ingress.tf", "ip.tf", "main.tf", "memcached.tf", "namespace.tf", "output.tf", "service.tf", "ssl.tf", "stateful_set.tf", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/shsamkit/terraform-google-hedwig-alerts.git", "commits": [{"id": "ab8808de2e078c572e9d88fdc57ff91b8e4acc36", "msg": "Remove dataflow since that pattern is prohibitively expensive (#3)", "date": "2019-06-06 11:54:58-07:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/bignellrp/azurehubandspoke.git", "commits": [{"id": "876cb93f0672b73fcba1b74bbc80010c8d384c5a", "msg": "Update hub-vnet.tf\n\nChanged Cisco to payg", "date": "2019-05-13 19:31:53+01:00", "modified_files": ["hub-vnet.tf"]}]}, {"name": "https://github.com/r-teller/ReadMe.git", "commits": [{"id": "6cdcd774f8914632e817b3801dcb0c45d1f62dd0", "msg": "adding support to detect if project, org_id and/or billing is required", "date": "2021-02-28 20:32:57-08:00", "modified_files": ["gcp.md", "main.tf", "main.tf", "output.tf"]}]}, {"name": "https://github.com/ministryofjustice/cloud-platform-terraform-monitoring.git", "commits": [{"id": "87401ba23af26d379d8132cc09fd7cd212773ba1", "msg": "cheaper storage for test clusters (#114)\n\n* cheaper storage for test clusters", "date": "2022-01-10 15:34:26+00:00", "modified_files": ["README.md", "cloudwatch-exporter.tf", "ecr-exporter.tf", "locals.tf", "prometheus.tf", "prometheus-operator-eks.yaml.tpl", "thanos.tf", "variables.tf"]}]}, {"name": "https://github.com/DNXLabs/terraform-aws-billing-role.git", "commits": [{"id": "2af9d3adc00e4b4716aaa76ee071c9621748a001", "msg": "Initial commit; Module that creates billing role in master account", "date": "2019-08-20 18:28:07+10:00", "modified_files": ["_variables.tf", "iam-role-billing.tf"]}, {"id": "d12086910d30a32c42a151939f93792ac2115cd2", "msg": "Adding a unique identifier to the billing role since to prevent mixing with other attachments", "date": "2019-11-13 15:12:42+11:00", "modified_files": ["iam-role-billing.tf"]}, {"id": "cedba3f9e87540bb5165ca8f6883f648fdffd9bd", "msg": "Fixing billing attachment", "date": "2019-11-13 15:20:03+11:00", "modified_files": ["iam-role-billing.tf"]}]}, {"name": "https://github.com/Ezeebube5/aws-cloud-architect-p2.git", "commits": [{"id": "70ae9a6aeef885f24cde73228e0242ee10f4ca89", "msg": "feat: makde corrections to udacity 1 & 2 diagrams, initial and reduced cost estimates and terraform", "date": "2020-08-05 02:02:31+01:00", "modified_files": ["main.tf", "Initial_Cost_Estimate.csv", "Reduced_Cost_Estimate.csv", "Udacity_Diagram_1_updated_2.pdf", "Udacity_Diagram_2_updated.pdf"]}]}, {"name": "https://github.com/QuiNovas/terraform-aws-s3-remote-state-backend.git", "commits": [{"id": "8968cc7910126c0aac07db5287a87207d58cea01", "msg": "table billingmode set to pay per use", "date": "2020-07-20 20:46:14+05:18", "modified_files": ["dynamodb.tf"]}]}, {"name": "https://github.com/DNXLabs/terraform-aws-account.git", "commits": [{"id": "1cbb4f0923067f00571ebdd46e42c6a21ef0ab19", "msg": "Ignoring iam_user_access_to_billing as it might not exist on imported accounts", "date": "2020-05-07 14:49:17+10:00", "modified_files": ["account.tf"]}]}, {"name": "https://github.com/colinwilson/terraform-hcloud.git", "commits": [{"id": "a7e58ce293a44386c56ff4683e58e5c735782166", "msg": "remove floating IP config on OS (unnecessary with alternative FIP controller - https://github.com/costela/hcloud-ip-floater)", "date": "2020-06-15 17:56:38+01:00", "modified_files": ["main.tf", "ubuntu-18.04.yaml", "ubuntu-20.04.yaml"]}]}, {"name": "https://github.com/oracle-terraform-modules/terraform-oci-oke.git", "commits": [{"id": "c8a4fb6ce93da19d7de47269b930181e1d613c92", "msg": "Fixed incorrect K8s version in terraform.tfvars.example (#204)\n\nSigned-off-by: noel_dcosta <noel.dcosta@oracle.com>", "date": "2020-08-21 13:41:47+05:18", "modified_files": ["terraform.tfvars.example"]}, {"id": "1832f41f74a45cbcb64f9656f15941167ada6267", "msg": "Allow public ingress from anywhere to ports 80 and 443 (#205)\n\n* Allow public ingress from anywhere to ports 80 and 443\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>\r\n\r\n* Support to specify custom list of destination ports for public LB security list\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>\r\n\r\n* updated docs for public_lb_ports\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>\r\n\r\n* Updated order of variables\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>\r\n\r\n* Set variable type for public_lb_ports\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>\r\n\r\n* Updated terraform options doc\r\n\r\nSigned-off-by: Noel Dcosta <noel.dcosta@oracle.com>", "date": "2020-09-04 14:48:11+05:18", "modified_files": ["configuration.adoc", "terraformoptions.adoc", "main.tf", "security.tf", "variables.tf", "terraform.tfvars.example", "variables.tf"]}]}, {"name": "https://github.com/sasidharkollimarla/terraform.git", "commits": [{"id": "87d2fc1f203860095dc632c536d1820176941419", "msg": "Shoul;d execute cost capping policy", "date": "2020-03-03 21:34:50+05:18", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/all-of-us/workbench-terraform-modules.git", "commits": [{"id": "8f8db85d06599845aa69e6566c6f9a8b01d4ba02", "msg": "[risk=low][RW-6137] Update billing buffer, user, and workspace count metrics for multi-tier (#25)\n\n* billing_buffer_project_count_3, user_count_3, workspace_count_4\r\n* Add legendTemplate to Operations - Workspace\r\n* Add Access Tier to legendTemplate", "date": "2021-04-14 16:53:10-04:00", "modified_files": ["too_few_projects.json", "custom_gauge_metrics.json", "operations.json", "main.tf", "billing_buffer_project_count_3.json", "user_count_3.json", "workspace_count_4.json"]}]}, {"name": "https://github.com/maxjahn/terraform-oci-azure-adb.git", "commits": [{"id": "e2295fe41d430f42795605b6356e69b393625999", "msg": "Changed ExpressRoute tier to Local to avoid cost for egress traffic", "date": "2020-03-19 10:41:46+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/TheOnly-Co/core-infrastructure.git", "commits": [{"id": "75bffec50fdd5f5717a838b1b997cce7a407bc55", "msg": "com out cost-alert", "date": "2020-06-10 14:24:08-07:00", "modified_files": ["erc.tf"]}]}, {"name": "https://github.com/ministryofjustice/cloud-platform-terraform-rds-instance.git", "commits": [{"id": "d7cc62e2ca1c47e7ade35266a2c35711835fd03a", "msg": "Add namespace tag\n\nThis is to support the AWS cost reporter, so that we can breakdown AWS\nresource costs per namespace.", "date": "2020-09-30 14:44:57+01:00", "modified_files": ["rds.tf", "main.tf", "rds.tmpl", "variables.tf"]}]}, {"name": "https://github.com/mulecode/terraform.git", "commits": [{"id": "b2c836a6d97599c2a9259f5a1772d07989c97079", "msg": "Update lambda integration to payload defaults 2.0", "date": "2020-12-03 15:08:32+00:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "8c958f99d73092597f1aafdedb4c3bef5b8a7d81", "msg": "Fix payload_format_version variable", "date": "2020-12-03 16:18:25+00:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/GROG/terraform-aws-s3-state-storage.git", "commits": [{"id": "bf5978438ae819da75444a36645495c8ccbdaa0b", "msg": "Switch to PAY_PER_REQUEST billing for the table", "date": "2021-04-09 15:33:36+02:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/cyrus-mc/tf-module-eks.git", "commits": [{"id": "a50c976d6204f17b5078534c5b8ddc5df5465fcf", "msg": "Merged in per_az_asg (pull request #29)\n\nfeature: per availability zone autoScalingGroup\n\nApproved-by: Matt Ceroni <matthew.ceroni@dat.com>\nApproved-by: Billy Fisher II <billy.fisher@dat.com>\nApproved-by: Tim Fagergren <tim.fagergren@dat.com>", "date": "2020-09-22 20:00:50+00:00", "modified_files": ["main.tf", "variables.tf"]}, {"id": "1abcd1e0a9ef1d880cf8ccd3df7bd82a702def12", "msg": "Merged in fix_subnet_tagging (pull request #32)\n\nfix: use aws_ec2_tag resource to tag subnet\n\nApproved-by: Mike Mars <mike.mars@dat.com>\nApproved-by: Billy Fisher II <billy.fisher@dat.com>\nApproved-by: Matt Ceroni <matthew.ceroni@dat.com>", "date": "2020-10-28 20:10:02+00:00", "modified_files": ["main.tf", "tag_subnets.sh"]}, {"id": "945e261402de7322eb3a86230814a080c8cc7f40", "msg": "DEVOPS-2695 : conditional IAM role creation based on provided module inputs (#1)\n\n* DEVOPS-2695 Ensure that test.tfplan is provided back to the host\u2019s test directory for faster updates to test/expected.tfplan (e.g. IDE diff support); `./run-test.sh` yields `All tests passed!`!\r\n\r\n* added eks cluster role arn variable and some logic for regions\r\n\r\n* added count logic in aws_iam_role\r\n\r\n* commenting out previous commit\r\n\r\n* adding var.eks_cluster_role_arn back in to troubleshoot\r\n\r\n* cluster_AmazonEKSClusterPolicy --> 0\r\n\r\n* DEVOPS-2695 Added new eks_worker_role_arn to key the count off of in us-east-2 (i.e. expecting 0 count).\r\n\r\n* use count.index on references to count controlled cluster role\r\n\r\n* sanity check by hardcoding count on a policy attachment resource to 0\r\n\r\n* sanity check by reverting hardcoded count\r\n\r\n* added count index for aws_iam_worker\r\n\r\n* adding count index to policy attachment\r\n\r\n* fixing bug in count index\r\n\r\n* fixing count bug (hopefully)\r\n\r\n* added counts for workers that didn't already have it\r\n\r\n* adding more count indexs\r\n\r\n* removing count index for kiam\r\n\r\n* revert counts on worker role resources\r\n\r\n* revert counts on worker role resources\r\n\r\n* fixed index counts to 0 for eks worker role arn\r\n\r\n* add back in counts on worker role resources\r\n\r\n* add back in counts on worker role resources\r\n\r\n* add back in counts on worker role resources\r\n\r\n* add back in counts on worker role resources\r\n\r\n* add back in counts on worker role resources\r\n\r\n* add back in counts on worker role resources\r\n\r\n* fix update_worker_aws_auth on 488\r\n\r\n* removed count from template file\r\n\r\n* moving the space\r\n\r\n* added count to aws_iam_instance_profile, removed logic\r\n\r\n* reverting last change\r\n\r\n* added the index back because i fat fingered an input\r\n\r\n* Use name format to populate launch configuration IAM instance profile field\r\n\r\n* Cleanup WIP comment blocks\r\n\r\nCo-authored-by: billyf <billy.fisher@dat.com>\r\nCo-authored-by: Josh Malone <joshm@c02fp2r0md6p.tcore.com>\r\nCo-authored-by: joshm <josh.malone@dat.com>\r\nCo-authored-by: Mike Mars <mike.mars@dat.com>\r\nCo-authored-by: Colin McCoy <colin.mccoy@dat.com>", "date": "2021-09-17 13:48:07-07:00", "modified_files": [".gitignore", "Dockerfile", "main.tf", "run-test.sh", "expected.tfplan", "variables.tf"]}]}, {"name": "https://github.com/zendesopan1992/terraform-sopan.git", "commits": [{"id": "c82a19d98673c1aeeb1fa26afb983acbfbea272f", "msg": "Add ec2 cost optimination using tags", "date": "2018-10-31 11:55:59+05:18", "modified_files": ["lambda.js", "main.tf", "variables.tf"]}, {"id": "5f0c515e6b145f244be7ef2492d9a700de5743e8", "msg": "Refactored ec2-cost-optimization-using-tags lambda", "date": "2018-11-16 18:56:15+05:18", "modified_files": ["lambda.js", "main.tf", "variables.tf"]}, {"id": "65f7112ea071383a397ab3bd34491c35d9265dd9", "msg": "Refactored config-rules and changed ec2-cost-optimization-using-tags to ec2-tags-checker", "date": "2018-11-20 12:48:58+05:18", "modified_files": ["instance_tags.js", "lambda.tf", "security_groups.js", "utills.js", "variables.tf", "lambda.js", "lambda.js", "utils.js", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/mahakamcloud/single-iface-libvirt-domain.git", "commits": [{"id": "000e932c7e86eacb14d5b560e197b33b530689d3", "msg": "Fix curl payload\n\nCo-authored-by: Himani Agrawal <himani93@gmail.com>", "date": "2019-04-30 16:48:41+05:18", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/atorrescogollo/terraform-workspaces.git", "commits": [{"id": "e538f2eb3d00cee77d58ead168ee38003e4b5fcc", "msg": "Disable consolidated billing and create ops account", "date": "2022-03-13 22:05:19+01:00", "modified_files": ["config.auto.tfvars.sample", "locals.tf", "organization.tf", "variables.tf"]}]}, {"name": "https://github.com/codequest-eu/terraform-modules.git", "commits": [{"id": "ffe23d4c2cd78035bef0dfb261701e7ed8dd588d", "msg": "fix(meta): unnecessary lock table capacity, which bumped the cost a lot", "date": "2019-11-29 14:48:47+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/futurice/terraform-examples.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/GoogleCloudPlatform/terraform-google-secure-cicd.git", "commits": [{"id": "e3fed5985cc915ff737c2ea0401832f06a51b6b3", "msg": "cloudbilling API enable", "date": "2021-11-22 13:23:12-06:00", "modified_files": ["main.tf"]}, {"id": "a2d76330846a69b8c72ba626dac88c15668ec7bb", "msg": "cloud billing API", "date": "2021-11-22 15:02:42-06:00", "modified_files": ["main.tf"]}, {"id": "7bb18ad4615af24cd31ca6aba62a3f3865286972", "msg": "billing user role", "date": "2021-11-23 13:16:09-06:00", "modified_files": ["iam.tf"]}, {"id": "228ce5c4919f17703afb9e5dec82e4fd08756c59", "msg": "reconfig billing IAM", "date": "2021-11-23 13:36:48-06:00", "modified_files": ["iam.tf"]}]}, {"name": "https://github.com/dgorbov/terraform-s3-backend-setup.git", "commits": [{"id": "81f82740760a357a86b3a77f9ed400624edcb218", "msg": "DynamoDB costs optimisation", "date": "2020-01-17 08:55:48+03:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/shazChaudhry/terraform-aws-privateLink.git", "commits": [{"id": "a88f7370d1ffc9981702362f2b3c1e58980b3390", "msg": "Added key-pay and updated readme", "date": "2019-07-30 00:17:51+01:00", "modified_files": ["README.md", "Vagrantfile", "asg.tf", "key-pair.tf", "variables.tf", "vpce_endpoint.tf"]}]}, {"name": "https://github.com/tresvitae/tf_eks_simpleweb.git", "commits": [{"id": "200e62726a588acf05f58a1087d71eb1b98f4e0a", "msg": "Decrease costs", "date": "2021-12-03 14:49:34+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/smerck/blog.git", "commits": [{"id": "3e543412b6680057ffb10b0fbba777ccb3205882", "msg": "feat: adding terraform configurations for blog (#8)\n\n* feat: adding terraform configurations for blog\r\n\r\nPreviously, terraform was used to create a k8s cluster and run the blog on it. This PR switches the blog to run as a digital ocean app rather than on a dedicated kubernetes cluster for cost reasons.\r\n\r\n- Adding terraform for DO App as a module\r\n- Adding terraform for updating/deploy the do app module\r\n- Adding DNS records for @user and @user email aliases\r\n- Output & variables for the associated modules & infrastructure.", "date": "2022-04-12 17:33:21-04:00", "modified_files": ["deployment.yaml", "ingress.yaml", "service.yaml", ".terraform.lock.hcl", "blog.tf", "dns.tf", "main.tf", "app.tf", "output.tf", "variables.tf", "output.tf"]}]}, {"name": "https://github.com/rpnegro/diamond-dogs.git", "commits": [{"id": "d9fc3ff53447c5fbbc702d3549167fd59e855367", "msg": "adding new tag billing code", "date": "2022-02-09 11:56:10-05:00", "modified_files": ["terraform.auto.tfvars"]}]}, {"name": "https://github.com/skyscrapr/terraform-cloudability-modules.git", "commits": [{"id": "3797a9ece15347419721579a2d4fe68c9e0a4f4f", "msg": "added costcenter", "date": "2021-09-23 17:17:52+12:00", "modified_files": ["business_mapping_tag_compliance.tf"]}, {"id": "b40bf197e08fdb6d3dca1f4ad9788611adcb2320", "msg": "added costcenter", "date": "2021-09-23 17:18:28+12:00", "modified_files": ["business_mapping_tag_compliance.tf"]}, {"id": "5e608b9d23f5871fe1c913559eb2c75bb1c92eb9", "msg": "added costcenters", "date": "2021-09-23 17:35:10+12:00", "modified_files": ["business_mapping_tag_compliance.tf"]}, {"id": "6b52e91ac32af39d8eb9e964b5cfac40ecf78659", "msg": "updated costcenters", "date": "2021-09-23 17:38:45+12:00", "modified_files": ["business_mapping_tag_compliance.tf"]}, {"id": "889e840ee6f1599ee80b6ad6dd6f4808db497fdf", "msg": "removed costcenter9", "date": "2021-09-23 19:32:31+12:00", "modified_files": ["business_mapping_tag_compliance.tf"]}]}, {"name": "https://github.com/AnalysisByDesign/abd-cloud.git", "commits": [{"id": "50c96dd99f04083d8a2f0d432ad2b0b3c291d3b9", "msg": "Remove admin elb, asg, etc due to cost", "date": "2019-08-21 20:58:42+01:00", "modified_files": ["alb.tf", "autoscaling-group.tf", "launch-template.tf", "route53-regular.tf", "variables.tf"]}, {"id": "7becc8405224e13e2052e1534f6d1f2cbf25eb57", "msg": "Revert \"Remove admin elb, asg, etc due to cost\"\n\nThis reverts commit 50c96dd99f04083d8a2f0d432ad2b0b3c291d3b9.", "date": "2019-09-05 21:23:50+01:00", "modified_files": ["alb.tf", "autoscaling-group.tf", "launch-template.tf", "route53-regular.tf", "variables.tf"]}]}, {"name": "https://github.com/jeje-barbershop/circle.git", "commits": [{"id": "26cc5295c2bb9d8756e450712e0f5f75af440c4a", "msg": "Update default dev env sizes\n\nPick slightly less expensive instance sizes", "date": "2020-01-13 13:15:58-05:00", "modified_files": ["terraform.tfvars-dev.template"]}]}, {"name": "https://github.com/JamesWoolfenden/terraform-aws-security-alerts.git", "commits": [{"id": "50ea1b3ea1bb9867308124d668c3dbd0557031a4", "msg": "message and payload", "date": "2021-08-19 16:35:41+01:00", "modified_files": ["README.md", "aws_kms_key.alarms.tf", "aws_lambda_function.email.tf", "aws_sns_topic.trail-unauthorised.tf", "handler.py.tmpl", "message.sample.md", "variables.tf"]}]}, {"name": "https://github.com/hmcts/cnp-module-api-mgmt-product.git", "commits": [{"id": "0871923e274a13106ae8239f5113d42700e41c11", "msg": "add output id of azurerm_api_management_product\n\nAdded additional id reference, product_id is used in some places:\r\nhttps://github.com/search?p=2&q=org%3Ahmcts+product_id&type=Code\r\n\r\nid needed for this to reference module rather than additional data\r\nhttps://github.com/hmcts/ccpay-refunds-app/blob/demo/infrastructure/refund_lists.tf#L79", "date": "2022-03-21 09:38:57+00:00", "modified_files": ["output.tf"]}]}, {"name": "https://github.com/miend/rlt-test.git", "commits": [{"id": "ad71247c2d4e986815412ecf0963a0c9282f466f", "msg": "Terraform config for a very basic Kubernetes cluster deployment. Node pool size is 1 for cost savings, but in the future should be a higher number/should be multi-regional.", "date": "2020-07-22 02:57:12-05:00", "modified_files": ["main.tf", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/naftulikay/titan.git", "commits": [{"id": "a0ea4fd84a409fe4ee853effa9f309a005b0efc1", "msg": "Optional NAT\n\nThis feature allows users to disable NAT gateway creation,\ntypically for cost-savings or fully-private networks.\n\nI have tested this by hand in with NAT enabled and disabled by\ncreating an instance in the DMZ, shelling to it, reaching the\ninternet, then creating an instance in the admin layer, shelling\nto it, and validating that it can (nat_enabled=true) or cannot\n(nat_enabled=false) reach the internet.", "date": "2021-10-18 15:45:29-07:00", "modified_files": ["Makefile", "main.tf", "outputs.tf", "main.tf", "o.network.tf", "v.network.tf", "outputs.tf", "main.tf", "o.network.tf", "v.network.tf", "outputs.tf", "o.nat.tf", "r.routing.tf", "v.nat.tf", "outputs.tf", "o.nat.tf", "r.layers.tf", "r.nat.tf", "r.routing.tf", "v.nat.tf"]}]}, {"name": "https://github.com/cds-snc/covid-alert-metrics-terraform.git", "commits": [{"id": "cd1e76c03ef332c50491282c5462685a76b5bf77", "msg": "feat: alarms for metric traffic problems (#80)\n\nAdds two alarms related to the iOS metrics to staging incident.\r\n1. Catch 4xx errors which can be generated by a bad metrics payload.\r\n2. Catch traffic fluctuations from the expected daily norm.\r\n\r\nHighest 4xx spike in past 6 weeks was 1,470, so went with double for the \r\nthreshold.  The goal of the alarm is to catch a case where all phones are \r\ncausing 4xx errors, either from an app or server configuration problem.", "date": "2021-06-03 11:05:35-04:00", "modified_files": ["api_gateway.tf", "inputs.tf", ".terraform.lock.hcl", "terragrunt.hcl", ".terraform.lock.hcl", "terragrunt.hcl"]}, {"id": "821ddeabdd95bff77917a9a8e6eaff5f5a274fa3", "msg": "feat: increase API gateway 5xx alarm threshold (#126)\n\nThere is a new traffic app metrics traffic pattern that is causing a\r\nspike of save-metrics API gateway requests at midnight EST.\r\n\r\nThis is exceeding the `save-metrics` Lambda account max concurrency\r\nand causing AWS to throttle Lambda invocations, which returns a\r\n500 error to the phone.\r\n\r\nSince phones will attempt to re-submitted failed metrics payloads\r\nthis means no metrics data is being lost.", "date": "2021-06-28 14:39:53-04:00", "modified_files": ["cloudwatch.tf", "terragrunt.hcl"]}, {"id": "319b7bd1f5f33d5ae172e11cfaef1b48db88770e", "msg": "feat: body size restriction waf rule excluded (#211)\n\nThis is required due to the metrics payload growing to a size that exceeds this WAF rule that verifies that the request body size is at most 10,240 bytes.", "date": "2021-09-21 09:42:10-04:00", "modified_files": ["waf.tf"]}, {"id": "c3bd4d186ff9cfe46fdc7fa2fa617a06db850957", "msg": "feat: process metrics in chunks (#216)\n\n* feat: process metrics in chunks\r\n\r\nThis will ensure payloads never exceed the dynamodb row limit\r\n\r\n* chore: formatting\r\n\r\n* chore: code cleanup\r\n\r\n* feat: bug fixes and more tests\r\n\r\n* refactor: replace recursion with pre-calculating chunk size\r\n\r\n* refactor: drop payloads that can't be split\r\n\r\n* fix: handle dynamodb promise when processing split payloads", "date": "2021-09-23 13:43:02-04:00", "modified_files": ["lambda-tests.yml", "create_metrics.tf", "inputs.tf", "create_metric.js", "create_metric.test.js", "test_payload_large.json", "test_payload_large_single.json", "test_payload_small.json", "terragrunt.hcl"]}, {"id": "f7ff462b02f3d10714b2369c88a5434c3887fd65", "msg": "feat: reduce s3 lifecycle and more debugs for large payloads (#231)", "date": "2021-09-29 11:32:57-04:00", "modified_files": ["inputs.tf", "s3.tf", "create_metric.js", "terragrunt.hcl", "create_metric.js", "terragrunt.hcl"]}, {"id": "e7216c45485414191863ddd5da0c72a3996cf0a3", "msg": "feat: block large payloads and adjust split threshold to match (#241)\n\n* feat: block large payloads and adjust split threshold to match\r\n\r\n* chore: change response code to number\r\n\r\n* feat: bump aws provider to 3.63.0 to use new waf rule statement\r\n\r\n* chore: increase thresholds so that lambda processing time stays low", "date": "2021-11-01 11:16:33-04:00", "modified_files": ["waf.tf", ".terraform.lock.hcl", ".terraform.lock.hcl", "terragrunt.hcl", ".terraform.lock.hcl", ".terraform.lock.hcl", ".terraform.lock.hcl", "terragrunt.hcl", ".terraform.lock.hcl", ".terraform.lock.hcl", ".terraform.lock.hcl", ".terraform.lock.hcl", ".terraform.lock.hcl", ".terraform.lock.hcl", ".terraform.lock.hcl"]}]}, {"name": "https://github.com/bjacobel/terraform.git", "commits": [{"id": "27738267ad6467f453f998419eca4b870b824faa", "msg": "Prevent T3 Unlimited from chewing up my bill", "date": "2019-04-09 19:17:35-04:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/plus3it/terraform-aws-tardigrade-s3-bucket.git", "commits": [{"id": "22cf784a82f194f9c5827e63fbcb73eb227b1ec1", "msg": "Restricts payer configuration so only Requester is valid value\n\nThe AWS API for this action is a bit odd. The S3 default is BucketOwner,\nand there is no \"Delete\" action for the configuration. When terraform\ndestroys this resource, it restores the S3 default configuration. If the\nuser has specified the S3 default of BucketOwner, when terraform goes\nto destroy the resource, it sometimes generates a 404 saying the config\ncannot be found. But since the S3 default is BucketOwner, we can simply\nprevent the user from specifying that value in the first place, so we\nnever run into that edge case.", "date": "2022-04-25 14:03:12-07:00", "modified_files": ["main.tf", "variables.tf"]}]}, {"name": "https://github.com/figurate/bedrock.git", "commits": [{"id": "bffc023eeff075ef281b1fd261897f4c7216b354", "msg": "Update default instance for more cost-effective choice", "date": "2019-01-30 19:04:57+11:00", "modified_files": ["vars.tf"]}]}, {"name": "https://github.com/cbChgit/tf.git", "commits": [{"id": "803640f6e77857520f69700ccc27c772ee7564e4", "msg": "Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24", "date": "2020-04-12 01:05:01+02:00", "modified_files": ["README.md", "README.md", "main.tf"]}]}, {"name": "https://github.com/ExpediaDotCom/haystack.git", "commits": [{"id": "5e8b6f6b88db49a0508ea670d71070c92cfdbaca", "msg": "changed variable names and moved es inside vpc to prevent egress cost", "date": "2018-01-18 15:50:07+05:18", "modified_files": ["main.tf", "main.tf", "main.tf", "variables.tf", "variables.tf", "haystack-index-store-es-policy", "main.tf", "main.tf", "outputs.tf", "variables.tf", "variables.tf", "main.tf", "main.tf", "variables.tf", "variables.tf", "main.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "variables.tf", "main.tf", "main.tf", "variables.tf", "variables.tf"]}]}, {"name": "https://github.com/peopleware/terraform-ppwcode-modules.git", "commits": [{"id": "3d0873e3c5cbacb246a1fc93ab457738db0cb0b5", "msg": "Use billing type PAY_PER_REQUEST for DynamoDB lock table", "date": "2019-02-18 17:00:58+01:00", "modified_files": ["lock.tf"]}, {"id": "bd6f77c1c8ce9855e4f4acc278bc2b2159e7e6c8", "msg": "add billing-view policy", "date": "2020-01-09 10:01:02+01:00", "modified_files": ["outputs.I.tf", "view-billing.tf"]}]}, {"name": "https://github.com/00inboxtest/terraform-example-foundation.git", "commits": [{"id": "735837b7e959cc33f35a7d1b3ac25ffb5202a5e5", "msg": "fix: add biling account viewer permissions to billing-data-users group (#105)", "date": "2020-07-23 03:19:52-03:00", "modified_files": ["iam.tf"]}, {"id": "6c13d3383700fddfa8ef4dd35e6fa66d3b449431", "msg": "add billing.admin role to terraform SA and remove budget from projects in 0-bootstrap. (#205)", "date": "2020-08-05 15:59:04-03:00", "modified_files": ["README.md", "main.tf", "variables.tf"]}, {"id": "a18b2036531d9529778d6a0e6b6c9583a0ec76a2", "msg": "feat: Add permissions for SFB recommended groups (#446)\n\n* Added group and firecall permissions\r\n\r\naccording to SFB on orgnization level.\r\n\r\n* 1-org README.md updated with new variables\r\n\r\n* Corrected permissions for firewall billing admin user\r\n\r\n* Corrected permissions for firewall billing admin user\r\n\r\n* Variable description and comments updates\r\n\r\n* Added group and firecall permissions\r\n\r\naccording to SFB on orgnization level.\r\n\r\n* 1-org README.md updated with new variables\r\n\r\n* Corrected permissions for firewall billing admin user\r\n\r\n* Corrected permissions for firewall billing admin user\r\n\r\n* Variable description and comments updates", "date": "2021-07-14 16:29:41+02:00", "modified_files": ["README.md", "iam.tf", "variables.tf"]}]}, {"name": "https://github.com/jonpulsifer/terraform-modules.git", "commits": [{"id": "59321f61cc9f6483f0c9290a94a721f06ddc8113", "msg": "upgrade terraform\n\nSigned-off-by: Jonathan Pulsifer <jonathan@moonpay.com>", "date": "2021-11-15 14:37:10-04:00", "modified_files": ["validate.yml", "versions.tf", "versions.tf", "versions.tf", "versions.tf", "versions.tf"]}, {"id": "21fa1854ea6b956c81893b0dc72534e9d6d0abdc", "msg": "fix validations\n\nSigned-off-by: Jonathan Pulsifer <jonathan@moonpay.com>", "date": "2021-11-15 14:56:01-04:00", "modified_files": [".terraform.lock.hcl", "iam.tf", ".terraform.lock.hcl", "iam.tf", ".terraform.lock.hcl", ".terraform.lock.hcl", ".terraform.lock.hcl", "cluster.tf", "kms.tf", ".terraform.lock.hcl", "nodepool.tf", "variables.tf"]}]}, {"name": "https://github.com/AErmie/Terraform-Real-World-Edition.git", "commits": [{"id": "fd402c94604aef534f6b4bfb00d8af1ecd6f2a3e", "msg": "Updated to TF1.0 and added InfraCost Usage", "date": "2021-06-16 09:42:54-04:00", "modified_files": [".terraform.lock.hcl", "infracost-usage.yml", "outputs.tf", "provider.tf"]}]}, {"name": "https://github.com/mmm/gcp-managed-projects.git", "commits": [{"id": "efe5fd4e6baa64dc4b9bb69b6d7dcae2cfcc0a68", "msg": "update IAM notes for the billing org", "date": "2019-06-04 14:12:21-06:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/guyeisenkot/MMANI_terragoat.git", "commits": [{"id": "0097bf218d99023ee6a5e543162c8daa4fcf33e8", "msg": "Re-add payload + BE azure configuration", "date": "2020-06-18 09:20:39+03:00", "modified_files": ["lambda_function_payload.zip", "provider.tf"]}]}, {"name": "https://github.com/dillykumar/aws-codepipeline-terraform-cicd-pipeline.git", "commits": [{"id": "9b6f5063dad0869b3ff53c87e5b578dd4746ddd7", "msg": "Adding Infracost", "date": "2021-10-22 14:37:52-04:00", "modified_files": ["codebuild.tf", "codepipeline.tf", "usage.md"]}]}, {"name": "https://github.com/singaporewaketools/iaac.git", "commits": [{"id": "197502b1ac4bab77b9ab017b755c4d75ddaa218b", "msg": "Add billing alerts", "date": "2020-01-07 16:05:31+08:00", "modified_files": ["README.md", ".gitignore", ".envrc", "terragrunt.hcl", "common_vars.yaml", "terragrunt.hcl", ".gitignore", "README.md", "README.md", "README.md", "README.md", "billing.tf", "dns.tf", "main.tf", "outputs.tf", "providers.tf", "variables.tf"]}, {"id": "cebf7f883b1325a4db1c0e7b3cd0d6684a7c41b0", "msg": "Fix billing alert subscriptions", "date": "2020-01-09 12:14:24+08:00", "modified_files": ["README.md", "billing.tf", "variables.tf"]}]}, {"name": "https://github.com/sbogacz/terraform-aws-state-backend.git", "commits": [{"id": "174486319f3b956807d56e5433880f9978884f93", "msg": "use DynamoDB On Demand billing for the lock table to save on cost", "date": "2019-05-06 13:42:21-06:00", "modified_files": ["main.tf", "outputs.tf", "variables.tf"]}]}, {"name": "https://github.com/nationalarchives/tdr-grafana.git", "commits": [{"id": "213ea410b9a2146cc804213dedeacdff4f07a74a", "msg": "Move to Jenkins VPC\n\nJenkins VPC already available in the TDR management account.\n\nAdding Grafana to existing VPC means no need to create new VPC with additional cost involved", "date": "2020-09-22 11:23:02+01:00", "modified_files": ["flowlogs.tf", "outputs.tf", "security.tf", "subnets.tf", "variables.tf", "vpc.tf", "root.tf", "root_data.tf", "root_locals.tf", "root_variables.tf"]}]}, {"name": "https://github.com/plug8apps/terraform-aws-elastic-beanstalk-environment.git", "commits": [{"id": "c7f97299d3d323c2c6c258e06d823f27db855ffb", "msg": "Allow setting elb_scheme for choosing internal or public LB (#72)\n\n* elb_scheme = \"internal\" or \"public\"\r\n\r\n* terraform fmt\r\n\r\n* default ELBScheme to \"\"\r\n\r\nCo-Authored-By: CGreenPayTM <42248651+CGreenPayTM@users.noreply.github.com>\r\n\r\n* Description for ELBScheme\r\n\r\nCo-Authored-By: CGreenPayTM <42248651+CGreenPayTM@users.noreply.github.com>\r\n\r\n* remake docs\r\n\r\n* default elb_scheme to public\r\n\r\n* docs\r\n\r\n* contrib", "date": "2019-01-24 13:32:45-05:00", "modified_files": ["README.md", "README.yaml", "terraform.md", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/offensive-terraform/terraform-aws-ec2-kali-linux.git", "commits": [{"id": "a0123926fdad14a9aa6868b48fe7adfbac5619af", "msg": "Update payload path", "date": "2020-09-27 00:50:32-07:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/ryte/INF-tf-datadog.git", "commits": [{"id": "b691fbc5f85854323c6b42f9564f24f3f41707bb", "msg": "Add cost-allocation tags", "date": "2021-01-11 17:29:43+01:00", "modified_files": ["README.md", "main.tf", "variables.tf", "versions.tf"]}]}, {"name": "https://github.com/wsierakowski/woj-infra-tf.git", "commits": [{"id": "f79e2a6da67fadb8c313133ec2f12581061ce698", "msg": "adding cost center tag", "date": "2020-11-25 10:03:50+00:00", "modified_files": [".gitignore", "main.tf"]}]}, {"name": "https://github.com/maxjahn/terraform-oci-azure-latency-shootout.git", "commits": [{"id": "18d66386af22cd43f5d2ad941c2ec2ed29db0b24", "msg": "Changed ExpressRoute tier to Local to avoid cost for egress traffic", "date": "2020-03-19 10:42:52+01:00", "modified_files": ["main.tf"]}]}, {"name": "https://github.com/Repliika/terraAWS.git", "commits": [{"id": "28990105274ae0cf1cee0986f633a086979569a4", "msg": "Add files via upload\n\nTF Var file examples for 3 departments, HR, Billing and Admin.\r\nWith this you can input your own IP ranges.\r\nCreates VPC with your department (HR), environment (prod), and profile (HR) used with AWS credentials.", "date": "2022-01-05 09:33:08-05:00", "modified_files": ["ADMIN.terraform.tfvars", "BIL.terraform.tfvars", "HR.terraform.tfvars"]}]}, {"name": "https://github.com/terraform-aws-modules/terraform-aws-datadog-forwarders.git", "commits": [{"id": "dd5d4e6c82ba9142fe730d4ce9ff39ede2ae4c08", "msg": "fix: fix trailing comma format for encrypted keys payload", "date": "2020-12-14 13:00:01-05:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "5f05d1b6188eb0b428175bbf879d5a35ff157eb6", "msg": "fix: remove spaces around colon for `kmsEncryptedKeys` payload", "date": "2020-12-14 13:09:22-05:00", "modified_files": ["main.tf", "main.tf"]}, {"id": "1e09c0cf57ac52dcd26a7e9b6d0d555816cc5b96", "msg": "fix: wrap kms encrypted payload values in double quotes", "date": "2020-12-14 13:31:26-05:00", "modified_files": ["main.tf", "main.tf"]}]}, {"name": "https://github.com/giuseppeborgese/terraform-locking-s3-state.git", "commits": [{"id": "6b4e59e8b844417dc5c247bdef1b0adb8e2e7028", "msg": "PAY_PER_REQUEST model", "date": "2019-07-17 17:21:50+02:00", "modified_files": ["remote.tf"]}]}, {"name": "https://github.com/fairbanksio/tf-iac-apps.git", "commits": [{"id": "2aa0817279cadeaaef5d9842c248769768a1c192", "msg": "Add PayPal-Sandbox-Dashboard", "date": "2020-09-12 17:21:56-05:00", "modified_files": ["resources.tf", "variables.tf"]}, {"id": "0c0b3fd28a20f05d9c3c6f95a0bedd529232af7d", "msg": "Prepare PayPal IPN", "date": "2020-10-11 11:51:38-07:00", "modified_files": ["variables.tf", "main.tf", "variables.tf"]}, {"id": "3b81e8562a713a7eb2f73d58bfe3da3074025156", "msg": "Remove PayPal-Sandbox-Dashboard for migration", "date": "2021-06-28 23:35:58-05:00", "modified_files": ["data.tf", "main.tf", "variables.tf", "versions.tf", "main.tf"]}]}, {"name": "https://github.com/diego-alves/terraform-aws-container-service.git", "commits": [{"id": "552b4b97f3fe0d655f5c5c0a4a5f1284d10a368b", "msg": "Service costumization", "date": "2021-04-05 16:18:23-03:00", "modified_files": ["main.tf", "main.tf", "variables.tf"]}]}, {"name": "https://github.com/blinqas/terraform-azurerm-caf-blinq.git", "commits": [{"id": "1cf9f9e9e1ee2aeb4126ae1dc165d769d05eacf1", "msg": "Add module subscription_billing_role_assignments", "date": "2021-03-23 01:24:15+00:00", "modified_files": ["landingzone.tf", "variables.tf", "billing_role_assignment.tf", "billing_role_assignment.tf", "billing_role_assignment.sh", "variables.tf", "variables.tf", "subscriptions.tf", "variables.tf"]}, {"id": "7f8056129d67d587e5c193d17d9fbef3240083de", "msg": "Update billing role assignment", "date": "2021-04-06 12:49:01+00:00", "modified_files": ["billing_role_assignment.tf"]}, {"id": "33e29ee4fec412042a3efcf9fac36d4bc9e3a73b", "msg": "Add variable subscription_billing_role_assignments", "date": "2021-05-20 07:55:05+00:00", "modified_files": ["variables.tf", "README.md"]}, {"id": "ae13ab4b3138965fcfc00a79e451776296fae5d9", "msg": "Update billing role assignment", "date": "2021-06-05 06:59:43+00:00", "modified_files": ["billing_role_assignment.tf"]}, {"id": "d7613899129ce56b3c08287d40f7dae1730471c8", "msg": "Add support for alias and billing_scope_id for MCA", "date": "2021-10-01 05:44:51+00:00", "modified_files": ["subscriptions.tf"]}]}, {"name": "https://github.com/smabubakkar/AzureTest.git", "commits": [{"id": "6c5a1964aadbb3d23a1c6c6b99cf8c44b763b21f", "msg": "Change kube-apiserver port from 443 to 6443\n\n* Adjust firewall rules, security groups, cloud load balancers,\nand generated kubeconfig's\n* Facilitates some future simplifications and cost reductions\n* Bare-Metal users who exposed kube-apiserver on a WAN via their\nrouter or load balancer will need to adjust its configuration.\nThis is uncommon, most apiserver are on LAN and/or behind VPN\nso no routing infrastructure is configured with the port number", "date": "2018-06-18 21:57:58-07:00", "modified_files": ["CHANGES.md", "apiserver.tf", "bootkube.tf", "security.tf", "bootkube.tf", "security.tf", "bootkube.tf", "bootkube.tf", "bootkube.tf", "network.tf", "bootkube.tf", "network.tf", "ingress.md", "bootkube.tf", "bootkube.tf"]}, {"id": "316f06df06a8c7660020babc5df96d1dea468f13", "msg": "Combine NLBs to use one NLB per cluster\n\n* Simplify clusters to come with a single NLB\n* Listen for apiserver traffic on port 6443 and forward\nto controllers (with healthy apiserver)\n* Listen for ingress traffic on ports 80/443 and forward\nto workers (with healthy ingress controller)\n* Reduce cost of default clusters by 1 NLB ($18.14/month)\n* Keep using CNAME records to the `ingress_dns_name` NLB and\nthe nginx-ingress addon for Ingress (up to a few million RPS)\n* Users with heavy traffic (many million RPS) can create their\nown separate NLB(s) for Ingress and use the new output worker\ntarget groups\n* Fix issue where additional worker pools come with an\nextraneous network load balancer", "date": "2018-06-18 22:56:32-07:00", "modified_files": ["CHANGES.md", "nlb.tf", "outputs.tf", "ingress.tf", "outputs.tf", "nlb.tf", "outputs.tf", "ingress.tf", "outputs.tf"]}, {"id": "0c4d59db87b67d7c7a0a0f54677961a01ed8fbe4", "msg": "Use global HTTP/TCP proxy load balancing for Ingress on GCP\n\n* Switch Ingress from regional network load balancers to global\nHTTP/TCP Proxy load balancing\n* Reduce cost by ~$19/month per cluster. Google bills the first 5\nglobal and regional forwarding rules separately. Typhoon clusters now\nuse 3 global and 0 regional forwarding rules.\n* Worker pools no longer include an extraneous load balancer. Remove\nworker module's `ingress_static_ip` output.\n* Add `ingress_static_ipv4` output variable\n* Add `worker_instance_group` output to allow custom global load\nbalancing\n* Deprecate `controllers_ipv4_public` module output\n* Deprecate `ingress_static_ip` module output. Use `ingress_static_ipv4`", "date": "2018-05-06 23:21:53-07:00", "modified_files": ["CHANGES.md", "ingress.tf", "network.tf", "outputs.tf", "ingress.tf", "outputs.tf", "workers.tf", "ingress.tf", "network.tf", "outputs.tf", "ingress.tf", "outputs.tf", "workers.tf"]}, {"id": "f2f4deb8bb44988eeb0b64b919e51fb556aef4fb", "msg": "Change AWS default type from t2.small to t3.small\n\n* T3 is the next generation general purpose burstable\ninstance type. Compared with t2.small, the t3.small is\ncheaper, has 2 vCPU (instead of 1) and provides 5 Gbps\nof pod-to-pod bandwidth (instead of 1 Gbps)", "date": "2018-12-18 12:29:27-08:00", "modified_files": ["CHANGES.md", "variables.tf", "variables.tf", "aws.md", "aws.md", "performance.md"]}, {"id": "aaa8e0261a01a62fa4a343788b3df20b9e93ee38", "msg": "Add Google Cloud worker instances to a target pool\n\n* Background: A managed instance group of workers is used in backend\nservices for global load balancing (HTTP/HTTPS Ingress) and output\nfor custom global load balancing use cases\n* Add worker instances to a target pool load balancing TCP/UDP\napplications (NodePort or proxied). Output as `worker_target_pool`\n* Health check for workers with a healthy Ingress controller. Forward\nrules (regional) to target pools don't support different external and\ninternal ports so choosing nodes with Ingress allows proxying as a\nworkaround\n* A target pool is a logical grouping only. It doesn't add costs to\nclusters or worker pools", "date": "2019-03-30 15:12:55-07:00", "modified_files": ["CHANGES.md", "network.tf", "outputs.tf", "outputs.tf", "target_pool.tf", "workers.tf"]}, {"id": "5303e32e38650c89d10f9dd057aef7613d9ea678", "msg": "Change DO worker_type default from s-1vcpu-1gb to s-1vcpu-2gb\n\n* On DigitalOcean, `s-1vcpu-1gb` worker nodes have 1GB of RAM, which\nis too small as a default, even for most cost constrained developers", "date": "2019-06-01 13:49:56-07:00", "modified_files": ["CHANGES.md", "variables.tf", "digital-ocean.md"]}, {"id": "4a7083d94a6e199091f248f669516109fdbffb47", "msg": "Change Azure default controller_type and worker_type\n\n* Change default controller_type to Standard_B2s. A B2s is cheaper\nby $17/month and provides 2 vCPU, 4GB RAM (vs 1 vCPU, 3.5GB RAM)\n* Change default worker_type to Standard_DS1_v2. F1 was the previous\ngeneration. The DS1_v2 is newer, similar cost, more memory, and still\nsupports Low Priority mode, if desired", "date": "2019-09-09 22:24:10-07:00", "modified_files": ["CHANGES.md", "variables.tf"]}]}]}